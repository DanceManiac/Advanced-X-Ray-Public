#include "common.h"
#include "rainbow_draw.h"
#include "night_vision.h"

struct         v2p
{
	float4	factor	: COLOR0;        // for SM3 - factor.rgb - tonemap-prescaled
	float3	tc0		: TEXCOORD0;
	float3	tc1		: TEXCOORD1;
	float4  sv    	: SV_Position;
};
struct        _out
{
	float4	low		: SV_Target0;
	float4	high	: SV_Target1;
	
};


TextureCube	s_sky0	:register(t0);
TextureCube	s_sky1	:register(t1);

//////////////////////////////////////////////////////////////////////////////////////////
// Pixel
_out main( v2p I )
{
//        float3         	s0  	= texCUBE        (s_sky0,I.tc0);
//        float3         	s1      = texCUBE        (s_sky1,I.tc1);
	float3	s0		= s_sky0.Sample( smp_rtlinear, I.tc0 );
	float3	s1		= s_sky1.Sample( smp_rtlinear, I.tc1 );
	float3	sky		= I.factor*lerp( s0, s1, I.factor.w );
			sky		*= 0.33f;

	// final tone-mapping
	_out			o;

	o.low        	=		sky.xyzz;
	o.high        	=		o.low/def_hdr;
	
	float2 texturecoord = I.sv.xy / screen_res.xy;
	float2 texturecoord_2 = I.sv.xy / screen_res.xy;

float diff_green_red = L_sun_color.g - L_sun_color.r;
float diff_green_blue = L_sun_color.g - L_sun_color.b;
float amount = (diff_green_red-RB_GREENREDDIFF)+(diff_green_blue-RB_GREENBLUEDIFF);
#ifdef WINTER_MODE
	if (I.tc0.z >= RB_VIEWANGLE.x && I.tc0.z <= RB_VIEWANGLE.y && I.tc0.y >= RB_VIEWANGLE.z && I.tc0.y <= RB_VIEWANGLE.w && amount > 0 && u_weather.w > 0)
	{	
		float sun_intensity = saturate((L_sun_color.r + L_sun_color.g + L_sun_color.b)*RB_SUNFACTOR/3);
		bool white = false;
		o.low += draw_rainbow(I.tc0.xy, RB_POSITION, 1, true, white) * amount * RB_COF;
	}
#endif //WINTER_MODE

	return        	o;
}