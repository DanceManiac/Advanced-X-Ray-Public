class "opt_gameplay" (CUIWindow)

function opt_gameplay:__init() super()
end

function opt_gameplay:__finalize()

end

function opt_gameplay:InitControls(x, y, xml, handler)
	local ctl
	local _st

	self.scroll_g = xml:InitScrollView("tab_gameplay:scroll_g", self)

	self:SetWndPos(vector2():set(x,y))
	self:SetWndSize(vector2():set(738,416))
	self:SetAutoDelete(true)

	_st = xml:InitStatic("tab_gameplay:templ_item", 		nil)
	xml:InitStatic("tab_gameplay:cap_difficulty",			_st)
	xml:InitComboBox("tab_gameplay:list_difficulty",		_st)
	self.scroll_g:AddWindow(_st, true)

	_st = xml:InitStatic("tab_gameplay:templ_item", 		nil)
	xml:InitStatic("tab_gameplay:cap_crosshair_type",		_st)
	xml:InitComboBox("tab_gameplay:list_crosshair_type",		_st)
	self.scroll_g:AddWindow(_st, true)

	_st = xml:InitStatic("tab_gameplay:templ_item", 		nil)
	xml:InitStatic("tab_gameplay:cap_quick_saves_count",		_st)
	xml:InitTrackBar("tab_gameplay:track_quick_saves_count",	_st)
	self.scroll_g:AddWindow(_st, true)
	
	_st = xml:InitStatic("tab_gameplay:templ_item", 		nil)
	xml:InitStatic("tab_gameplay:cap_check_tips",   		_st)
	xml:InitCheck("tab_gameplay:check_tips",			_st)
	self.scroll_g:AddWindow(_st, true)

	_st = xml:InitStatic("tab_gameplay:templ_item", 		nil)
	xml:InitStatic("tab_gameplay:cap_check_crosshair",		_st)
	xml:InitCheck("tab_gameplay:check_crosshair",			_st)
	self.scroll_g:AddWindow(_st, true)
	
	_st = xml:InitStatic("tab_gameplay:templ_item", 		nil)
	xml:InitStatic("tab_gameplay:cap_check_dyn_crosshair",		_st)
	xml:InitCheck("tab_gameplay:check_dyn_crosshair",		_st)
	self.scroll_g:AddWindow(_st, true)

	_st = xml:InitStatic("tab_gameplay:templ_item", 		nil)
	xml:InitStatic("tab_gameplay:cap_check_show_weapon",		_st)
	xml:InitCheck("tab_gameplay:check_show_weapon",			_st)
	self.scroll_g:AddWindow(_st, true)
	
	_st = xml:InitStatic("tab_gameplay:templ_item", 		nil)
	xml:InitStatic("tab_gameplay:cap_check_dist",			_st)
	xml:InitCheck("tab_gameplay:check_dist",			_st)
	self.scroll_g:AddWindow(_st, true)
	
	_st = xml:InitStatic("tab_gameplay:templ_item", 		nil)
	xml:InitStatic("tab_gameplay:cap_check_important_save",		_st)
	xml:InitCheck("tab_gameplay:check_important_save",		_st)
	self.scroll_g:AddWindow(_st, true)
	
	_st = xml:InitStatic("tab_gameplay:templ_item", 		nil)
	xml:InitStatic("tab_gameplay:cap_check_crouch_toggle",		_st)
	xml:InitCheck("tab_gameplay:check_crouch_toggle",		_st)
	self.scroll_g:AddWindow(_st, true)
	
	_st = xml:InitStatic("tab_gameplay:templ_item", 		nil)
	xml:InitStatic("tab_gameplay:cap_check_hud_draw",		_st)
	xml:InitCheck("tab_gameplay:check_hud_draw",			_st)
	self.scroll_g:AddWindow(_st, true)
	
	_st = xml:InitStatic("tab_gameplay:templ_item", 		nil)
	xml:InitStatic("tab_gameplay:cap_hud_collision",		_st)
	xml:InitCheck("tab_gameplay:check_hud_collision",		_st)
	self.scroll_g:AddWindow(_st, true)
	
	_st = xml:InitStatic("tab_gameplay:templ_item", 		nil)
	xml:InitStatic("tab_gameplay:cap_corpse_collision",		_st)
	xml:InitCheck("tab_gameplay:check_corpse_collision",	_st)
	self.scroll_g:AddWindow(_st, true)
	
	_st = xml:InitStatic("tab_gameplay:templ_item", 		nil)
	xml:InitStatic("tab_gameplay:cap_walk_inertion",		_st)
	xml:InitCheck("tab_gameplay:check_walk_inertion",		_st)
	self.scroll_g:AddWindow(_st, true)
	
	_st = xml:InitStatic("tab_gameplay:templ_item", 		nil)
	xml:InitStatic("tab_gameplay:cap_loading_stages",		_st)
	xml:InitCheck("tab_gameplay:check_loading_stages",		_st)
	self.scroll_g:AddWindow(_st, true)

	--[[_st = xml:InitStatic("tab_gameplay:templ_item", 		nil)
	xml:InitStatic("tab_gameplay:cap_keypress_on_start",		_st)
	xml:InitCheck("tab_gameplay:check_keypress_on_start",		_st)
	self.scroll_g:AddWindow(_st, true)]]--
end
