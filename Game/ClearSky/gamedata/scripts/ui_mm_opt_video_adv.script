class "opt_video_adv" (CUIWindow)

function opt_video_adv:__init() super()
end

function opt_video_adv:__finalize()
end

--[[
r1		= 0
r2a		= 1
r2		= 2
r2.5	= 3
r3		= 4
r4		= 5
]]

-- R1 only
function only_1_mode(ctrl, _id, _ssample_trb_val, _ssample_cb_val)
	local bEnabled	= _id==0
	ctrl:Enable		(bEnabled)
end

--R1 && R2a
function only_12_mode(ctrl, _id, _ssample_trb_val, _ssample_cb_val)
	local bEnabled	= _id<=1
	ctrl:Enable		(bEnabled)
end

-- >=R2a
function only_2a_and_more_mode(ctrl, _id, _ssample_trb_val, _ssample_cb_val)
	local bEnabled	= _id>=1
	ctrl:Enable		(bEnabled)
end

-- >=R2
function only_2_and_more_mode(ctrl, _id, _ssample_trb_val, _ssample_cb_val)
	local bEnabled	= _id>=2
	ctrl:Enable		(bEnabled)
end

-- >=R2.5
function only_25_and_more_mode(ctrl, _id, _ssample_trb_val, _ssample_cb_val)
	local bEnabled	= _id>=3
	ctrl:Enable		(bEnabled)
end

-- >=R3
function only_3_and_more_mode(ctrl, _id, _ssample_trb_val, _ssample_cb_val)
	local bEnabled	= _id>=4
	ctrl:Enable		(bEnabled)
end

-- >=R4
function only_4_and_more_mode(ctrl, _id, _ssample_trb_val, _ssample_cb_val)
	local bEnabled	= _id>=5
	ctrl:Enable		(bEnabled)
end

function only_r3_and_r3msaa_more_than_zero(ctrl, _id, _ssample_trb_val, _ssample_cb_val)
	local bEnabled	= (_id>=4) and (_ssample_cb_val>0)
	
	
	ctrl:Enable		(bEnabled)
end

function only_3_and_more_mode_visible(ctrl, _id, _ssample_trb_val, _ssample_cb_val)
	local bEnabled	= _id>=4
	ctrl:Enable		(bEnabled)
	ctrl:Show		(bEnabled)
end

function only_3_and_more_mode_invisible(ctrl, _id, _ssample_trb_val, _ssample_cb_val)
	local bEnabled	= _id<4
	ctrl:Enable		(bEnabled)
	ctrl:Show		(bEnabled)
end

function supersample_more_than_1(ctrl, _id, _ssample_trb_val, _ssample_cb_val)
	local bEnabled	= _ssample_trb_val>1
	ctrl:Enable		(bEnabled)
end

function dx_level_ge_655361(ctrl, _id, _ssample_trb_val, _ssample_cb_val)
	local bEnabled	= render_get_dx_level()>=655361
	ctrl:Enable		(bEnabled)
end

function get_screen_space_shaders_status(ctrl, _id, _ssample_trb_val, _ssample_cb_val)
	local bEnabled	= (get_console():get_bool("r4_screen_space_shaders") and _id>=4)
	ctrl:Enable		(bEnabled)
end

function get_enchanted_shaders_status(ctrl, _id, _ssample_trb_val, _ssample_cb_val)
	local bEnabled	= (get_console():get_bool("r4_enchanted_shaders") and _id>=4)
	ctrl:Enable		(bEnabled)
end

function opt_video_adv:InitControls(x, y, xml, handler)
	local ctl

	self:SetWndPos(vector2():set(x,y))
	self:SetWndSize(vector2():set(738,416))
	
	self:SetAutoDelete							(true)
	
	self.bk			= xml:InitFrame				("frame_videoadv", self)
	self.scroll_v	= xml:InitScrollView		("video_adv:scroll_v", self)

	local _st		= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_vis_dist",				_st)
	xml:InitTrackBar							("video_adv:track_vis_dist",			_st)

	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_geometry_lod",			_st)
	xml:InitTrackBar							("video_adv:track_geometry_lod",		_st)


	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_texture_lod",			_st)
	xml:InitTrackBar							("video_adv:track_texture_lod",			_st)
	
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_aniso",					_st)
	xml:InitTrackBar							("video_adv:track_aniso",				_st)
	
--    
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_ssample",				_st)
	ctl				= xml:InitTrackBar			("video_adv:track_ssample",				_st)
	handler.ss_trb	= ctl
	handler:Register(ctl, "trb_ssample")
	handler.m_preconditions[ctl]				= only_3_and_more_mode_invisible

	ctl				= xml:InitComboBox			("video_adv:combo_ssample",				_st)
	handler.ss_cb	= ctl
	handler:Register(ctl, "cb_ssample")
	handler.m_preconditions[ctl]				= only_3_and_more_mode_visible
          
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_detail_density",		_st)
	xml:InitTrackBar							("video_adv:track_detail_density",		_st)
	
--Дальность отрисовки травы
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_detail_radius", _st)
	xml:InitTrackBar("video_adv:track_detail_radius", _st)

--Высота травы	
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_detail_scale", _st)
	xml:InitTrackBar("video_adv:track_detail_scale", _st)
	
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_r2_sun",				_st)
	ctl			= xml:InitCheck					("video_adv:check_r2_sun",				_st)
	handler.m_preconditions[ctl]		= only_2_and_more_mode
	
--Коллизия травы
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_detail_collision",		_st)
	ctl			= xml:InitCheck					("video_adv:check_detail_collision",	_st)
	handler.m_preconditions[ctl]		= only_3_and_more_mode
	
--Статическое солнце
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_r2_static_sun",			_st)
	ctl			= xml:InitCheck					("video_adv:check_r2_static_sun",		_st)
	handler.m_preconditions[ctl]		= only_2_and_more_mode

--// Опции SSS и ES: Начало

--Screen Space Shaders
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_screen_space_shaders",			_st)
	ctl			= xml:InitCheck					("video_adv:check_screen_space_shaders",		_st)
	handler.m_preconditions[ctl]		= only_3_and_more_mode

--SSS Sky Debanding
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_sss_sky_debanding",			_st)
	ctl			= xml:InitCheck					("video_adv:check_sss_sky_debanding",		_st)
	handler.m_preconditions[ctl]		= get_screen_space_shaders_status

--SSS Flora Fix
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_sss_flora_fix",			_st)
	ctl			= xml:InitCheck					("video_adv:check_sss_flora_fix",		_st)
	handler.m_preconditions[ctl]		= get_screen_space_shaders_status

--SSS Fog
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_sss_fog",			_st)
	ctl			= xml:InitCheck					("video_adv:check_sss_fog",		_st)
	handler.m_preconditions[ctl]		= get_screen_space_shaders_status

--SSS Indirect Light
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_sss_indirect_light",			_st)
	ctl			= xml:InitCheck					("video_adv:check_sss_indirect_light",		_st)
	handler.m_preconditions[ctl]		= get_screen_space_shaders_status

--Enchanted Shaders
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_enchanted_shaders",			_st)
	ctl			= xml:InitCheck					("video_adv:check_enchanted_shaders",		_st)
	handler.m_preconditions[ctl]		= only_3_and_more_mode
	
--Псевдо PBR
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_es_pseudo_pbr",			_st)
	ctl			= xml:InitCheck					("video_adv:check_es_pseudo_pbr",		_st)
	handler.m_preconditions[ctl]		= get_enchanted_shaders_status
	
--// Опции SSS и ES: Конец

--Рендеринг бликов
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_flares", _st)
	ctl = xml:InitComboBox("video_adv:combo_flares", _st)
	handler.combo_smap_size = ctl
	handler.m_preconditions[ctl]		= only_2_and_more_mode
	
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_light_distance",		_st)
	ctl				= xml:InitTrackBar			("video_adv:track_light_distance",		_st)
	handler.m_preconditions[ctl]		= only_2a_and_more_mode

	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_particles_distance",	_st)
	ctl				= xml:InitTrackBar			("video_adv:track_particles_distance",	_st)
	handler.m_preconditions[ctl]		= only_2a_and_more_mode
	
--Размер карты теней
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_smap_size", _st)
	ctl = xml:InitComboBox("video_adv:combo_smap_size", _st)
	handler.combo_smap_size = ctl
	handler.m_preconditions[ctl]		= only_2_and_more_mode
	
--Тень от ГГ
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_actor_shadow", _st)
	ctl = xml:InitCheck("video_adv:check_actor_shadow", _st)
	
--Тень от травы
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_sun_details", _st)
	ctl = xml:InitCheck("video_adv:check_sun_details", _st)
	handler.m_preconditions[ctl]		= only_2_and_more_mode
	
--Дальность тени от травы
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_grass_shadow_distance", _st)
	ctl = xml:InitTrackBar("video_adv:track_grass_shadow_distance", _st)
	handler.track_mblur = ctl
	handler.m_preconditions[ctl]		= only_3_and_more_mode

	_st											= xml:InitStatic						("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_npc_torch",				_st)
	xml:InitCheck								("video_adv:check_npc_torch",			_st)

-- r1_no_detail_textures	r1 only
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_r1_no_detail_textures",	_st)
	ctl			= xml:InitCheck					("video_adv:check_r1_no_detail_textures",_st)
	handler.m_preconditions[ctl]		= only_1_mode

-- Использовать бампы
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_r2_use_bump",	_st)
	ctl			= xml:InitCheck					("video_adv:check_r2_use_bump",_st)
	handler.m_preconditions[ctl]		= only_2_and_more_mode

-- r2_detail_bump			=>r2
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_r2_detail_bump",	_st)
	ctl			= xml:InitCheck					("video_adv:check_r2_detail_bump",_st)
	handler.m_preconditions[ctl]		= only_2_and_more_mode

-- r2_steep_parallax		>r2
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_r2_steep_parallax",	_st)
	ctl			= xml:InitCheck					("video_adv:check_r2_steep_parallax",_st)
	handler.m_preconditions[ctl]		= only_25_and_more_mode

	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_r2_sun_quality",	_st)
	ctl			= xml:InitComboBox				("video_adv:list_r2_sun_quality",_st)
	handler.m_preconditions[ctl]		= only_25_and_more_mode
	
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_sun_shafts",			_st)
	ctl				= xml:InitComboBox			("video_adv:combo_sun_shafts",			_st)
	handler.m_preconditions[ctl]		= only_25_and_more_mode
	
--Режим солнечных лучей
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_sunshafts_mode", _st)
	ctl = xml:InitComboBox("video_adv:combo_sunshafts_mode", _st)
	handler.combo_sunshafts_mode = ctl
	handler.m_preconditions[ctl]		= only_25_and_more_mode

	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_ssao_mode",					_st)
	ctl				= xml:InitComboBox			("video_adv:combo_ssao_mode",				_st)
	handler.m_preconditions[ctl]		= only_25_and_more_mode
	
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_ssao",					_st)
	ctl				= xml:InitComboBox			("video_adv:combo_ssao",				_st)
	handler.m_preconditions[ctl]		= only_25_and_more_mode

--Отражения от воды
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_ssr_quality", _st)
	ctl = xml:InitComboBox("video_adv:combo_ssr_quality", _st)
	handler.combo_ssr_quality = ctl
	handler.m_preconditions[ctl]		= only_3_and_more_mode
	
--Дальность отражений
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_reflections_distance", _st)
	ctl = xml:InitTrackBar("video_adv:track_reflections_distance", _st)
	handler.track_reflections_distance = ctl
	handler.m_preconditions[ctl]		= only_3_and_more_mode

--Дальность намокания
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_dynamic_wet_surfaces_far", _st)
	ctl = xml:InitTrackBar("video_adv:track_dynamic_wet_surfaces_far", _st)
	handler.track_reflections_distance = ctl
	handler.m_preconditions[ctl]		= only_3_and_more_mode
	
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_soft_water",			_st)
	ctl				= xml:InitCheck				("video_adv:check_soft_water",			_st)
	handler.m_preconditions[ctl]		= only_25_and_more_mode

	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_soft_particles",		_st)
	ctl				= xml:InitCheck				("video_adv:check_soft_particles",		_st)
	handler.m_preconditions[ctl]		= only_25_and_more_mode

	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_dof",					_st)
	ctl				= xml:InitCheck				("video_adv:check_dof",					_st)
	handler.m_preconditions[ctl]		= only_25_and_more_mode

	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_volumetric_light",		_st)
	ctl				= xml:InitCheck				("video_adv:check_volumetric_light",	_st)
	handler.m_preconditions[ctl]		= only_25_and_more_mode

-- r3_dynamic_wet_surfaces	>r25
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_r3_dynamic_wet_surfaces",	_st)
	ctl			= xml:InitCheck					("video_adv:check_r3_dynamic_wet_surfaces",_st)
	handler.m_preconditions[ctl]				= only_3_and_more_mode
	
-- r3_volumetric_smoke		>r25
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_r3_volumetric_smoke",	_st)
	ctl			= xml:InitCheck					("video_adv:check_r3_volumetric_smoke",_st)
	handler.m_preconditions[ctl]				= only_3_and_more_mode
	

	--[[_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_r3_msaa_alphatest",	_st)
	ctl			= xml:InitComboBox				("video_adv:combo_r3_msaa_alphatest",_st)
	handler.m_preconditions[ctl]				= only_r3_and_r3msaa_more_than_zero
	handler.r3_msaa_alphatest					= ctl]]--
	
	--[[_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_r3_msaa_opt",	_st)
	ctl			= xml:InitCheck					("video_adv:check_r3_msaa_opt",_st)
	handler.m_preconditions[ctl]				= dx_level_ge_655361
	handler.chk_r3_msaa_opt						= ctl
	handler:Register							(ctl, "check_r3_msaa_opt")	]]--


	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_vsync",					_st)
	xml:InitCheck								("video_adv:check_vsync",				_st)
	
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_60hz",					_st)
	xml:InitCheck								("video_adv:check_60hz",				_st)
	
--Тип низинного тумана
	_st				= xml:InitStatic			("video_adv:templ_item",				self.scroll_v)
	xml:InitStatic								("video_adv:cap_r3_lowland_fog_type",	_st)
	ctl				= xml:InitComboBox			("video_adv:combo_r3_lowland_fog_type",	_st)
	handler.m_preconditions[ctl]				= only_3_and_more_mode
	
--3D прицелы
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_3d_scopes_enable", _st)
	ctl = xml:InitCheck("video_adv:check_3d_scopes_enable", _st)

--3D КПК
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_3d_pda_enable", _st)
	ctl = xml:InitCheck("video_adv:check_3d_pda_enable", _st)

--Блудмарки на дин. объектах
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_bloodmarks_on_skeleton", _st)
	ctl = xml:InitCheck("video_adv:check_bloodmarks_on_skeleton", _st)

--Эффект Raindrops	
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_raindrops", _st)
	ctl = xml:InitCheck("video_adv:check_raindrops", _st)
	handler.m_preconditions[ctl]				= only_2_and_more_mode

--Виньетка	
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_vignette_effect", _st)
	ctl = xml:InitCheck("video_adv:check_vignette_effect", _st)
	handler.m_preconditions[ctl]				= only_2_and_more_mode
	
--Хроматическая аберрация
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_chromatic_aberration", _st)
	ctl = xml:InitCheck("video_adv:check_chromatic_aberration", _st)
	handler.m_preconditions[ctl]				= only_3_and_more_mode
	
--Зернистость
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_film_grain", _st)
	ctl = xml:InitCheck("video_adv:check_film_grain", _st)
	handler.m_preconditions[ctl]				= only_3_and_more_mode

--Динамический hud масок	
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_hud_mask", _st)
	ctl = xml:InitCheck("video_adv:check_hud_mask", _st)
	handler.m_preconditions[ctl]				= only_2_and_more_mode
	
--Динамические эффекты HUD	
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_hud_dyn_effects", _st)
	ctl = xml:InitCheck("video_adv:check_hud_dyn_effects", _st)
	handler.m_preconditions[ctl]				= only_2_and_more_mode

--Шейдерный ПНВ	
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_shader_nvg", _st)
	ctl = xml:InitCheck("video_adv:check_shader_nvg", _st)
	handler.m_preconditions[ctl]		= only_3_and_more_mode

--Тип сглаживания
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_r2_aa_mode", _st)
	ctl = xml:InitComboBox("video_adv:combo_r2_aa_mode", _st)
	handler.combo_r2_aa_mode = ctl
	handler.m_preconditions[ctl]		= only_2_and_more_mode

--Motion Blur	
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_mblur_enable", _st)
	ctl = xml:InitCheck("video_adv:check_mblur_enable", _st)
	handler.m_preconditions[ctl]		= only_2_and_more_mode

--Интенсивность Motion Blur
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_mblur", _st)
	ctl = xml:InitTrackBar("video_adv:track_mblur", _st)
	handler.track_mblur = ctl
	handler.m_preconditions[ctl]		= only_2_and_more_mode

--Cam FOV
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_fov", _st)
	ctl = xml:InitTrackBar("video_adv:track_fov", _st)

--HUD FOV
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_hud_fov", _st)
	ctl = xml:InitTrackBar("video_adv:track_hud_fov", _st)
	
--Оптимизация статической геометрии	
	--[[_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_optimize_static_geom", _st)
	xml:InitTrackBar("video_adv:track_optimize_static_geom", _st)]]--
	
--Оптимизация динамической геометрии	
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_optimize_dynamic_geom", _st)
	xml:InitTrackBar("video_adv:track_optimize_dynamic_geom", _st)
	
--Оптимизация теневых карт	
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_optimize_shadow_geom", _st)
	ctl = xml:InitCheck("video_adv:check_optimize_shadow_geom", _st)

--Многопоточная загрузка текстур	
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_mt_textures_load", _st)
	ctl = xml:InitCheck("video_adv:check_mt_textures_load", _st)

--Цветокоррекция: Интенсивность красного
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_color_r", _st)
	ctl = xml:InitTrackBar("video_adv:track_color_r", _st)

--Цветокоррекция: Интенсивность зелёного
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_color_g", _st)
	ctl = xml:InitTrackBar("video_adv:track_color_g", _st)

--Цветокоррекция: Интенсивность синего
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_color_b", _st)
	ctl = xml:InitTrackBar("video_adv:track_color_b", _st)

--Цветокоррекция: Цветовая насыщенность
	_st = xml:InitStatic("video_adv:templ_item", self.scroll_v)
	xml:InitStatic("video_adv:cap_saturation", _st)
	ctl = xml:InitTrackBar("video_adv:track_cap_saturation", _st)

	btn		= xml:Init3tButton					("video_adv:btn_to_simply",	self)	
	handler:Register							(btn, "btn_simply_graphic")	
end
