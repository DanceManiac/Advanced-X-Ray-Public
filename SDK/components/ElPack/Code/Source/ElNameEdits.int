{====================================================}
{                                                    }
{   EldoS Visual Components                          }
{                                                    }
{   Copyright (c) 1998-2001, EldoS                   }
{                                                    }
{====================================================}
{$include elpack2.inc}
{$ifdef ELPACK_SINGLECOMP}
{$I ElPack.inc}
{$else}
{$ifdef LINUX}
{$I ../ElPack.inc}
{$else}
{$I ..\ElPack.inc}
{$endif}
{$endif}

{$R ElNameEdits.res}

(*

Version History

04/02/2002

  OnChange is called now after the dialog is executed and the user presses ok in the dialog

03/28/2002

  Added an option to show open OR save dialog in FileNameEdit

03/03/2002

  DirExists failed on empty DirName parameter. Fixed.

01/18/2002

  ButtonWidth and ButtonNumGlyphs properties made visible

01/01/2002

  Fixed some problems with painting borders when focus is moved

12/27/2001

  It's possible to set custom glyphs to buttons now.

12/16/2001

  When TElFolderNameEdit was placed to the form other than main, main form
  was activated after showing folder dialog. Fixed.


12/12/2001

  Fixed work with empty strings (spoiled in 3.02)

10/12/2001

   Now ElFilenameEdit correctly processes strings with parameters

*)

unit ElNameEdits;

interface

uses SysUtils,
     ElPopBtn,
     ElTools,
     ElFolderDlg,
     Classes,
     ElShellUtils,
     ElBtnEdit,
     Forms,
     CommDlg,
{$ifdef VCL_6_USED}
Types,
{$endif}
     Dialogs;

type

     TElFolderNameEdit = class(TCustomElButtonEdit)
     private
       FileDlg : TElFolderDialog;
       function GetOptions: TBrowseForFolderOptions;
       function GetTitle: string;
       procedure SetOptions(Value: TBrowseForFolderOptions);
       procedure SetTitle(const Value: string);
       procedure SetRootFolder(Value: TShellFolders);
       function GetRootFolder: TShellFolders;
     protected
       FDialogTitle: string;
       procedure BtnClick(Sender : TObject);
       procedure CreateHandle; override;
       procedure Loaded; override;
     public
       constructor Create(AOwner : TComponent); override;
       destructor Destroy; override;
     published
       property Options: TBrowseForFolderOptions read GetOptions write SetOptions;
       property Title: string read GetTitle write SetTitle;
       property RootFolder: TShellFolders read GetRootFolder write SetRootFolder;
       property DialogTitle: string read FDialogTitle write FDialogTitle;

       property TopMargin;
       property LeftMargin;
       property RightMargin;
       property BorderSides;
       property MaxLength;
       property Transparent;
       property HandleDialogKeys;
       property HideSelection;
       property LineBorderActiveColor;
       property LineBorderInactiveColor;
       {$ifdef ELPACK_COMPLETE}
       property ImageForm;
       {$endif}

       property OnMouseEnter;
       property OnMouseLeave;
       property OnResize;
       property OnChange;
       property OnSelectionChange;

       property Text;

       // inherited
       property Flat;
       property ActiveBorderType;
       property InactiveBorderType;
       property UseBackground;
       property Alignment;
       property AutoSelect;
       property Multiline;

       property Background;
       property ButtonClickSound;
       property ButtonDownSound;
       property ButtonUpSound;
   {$IFDEF USE_SOUND_MAP}
       property ButtonSoundMap;
   {$ENDIF}
       property ButtonColor;
       property ButtonFlat;
       property ButtonHint;
       property ButtonShortcut;
       property ButtonGlyph;
       property ButtonIcon;
       property ButtonUseIcon;
       property ButtonNumGlyphs; 
       property ButtonWidth;

       property AltButtonCaption;
       property AltButtonClickSound;
       property AltButtonDownSound;
       property AltButtonUpSound;
   {$IFDEF USE_SOUND_MAP}
       property AltButtonSoundMap;
   {$ENDIF}
       property AltButtonDown;
       property AltButtonEnabled;
       property AltButtonFlat;
       property AltButtonGlyph;
       property AltButtonHint;
       property AltButtonIcon;
       property AltButtonUseIcon;
       property AltButtonNumGlyphs;
       property AltButtonPopupPlace;
       property AltButtonPosition;
       property AltButtonPullDownMenu;
       property AltButtonShortcut;
       property AltButtonVisible;
       property AltButtonWidth;
       property OnAltButtonClick;

       // VCL properties
       property AutoSize;
       property BorderStyle;
       property Ctl3D;
       property ParentCtl3D;
       property Enabled;
       property TabStop default True;
       property TabOrder;
       property PopupMenu;
       property Color;
       property ParentColor;
       property Align;
       property Font;
       property ParentFont;
       property ParentShowHint;
       property ShowHint;
       property Visible;
       property ReadOnly;

       property OnEnter;
       property OnExit;
       property OnClick;
       property OnDblClick;
       property OnKeyDown;
       property OnKeyPress;
       property OnKeyUp;
       property OnStartDrag;
       property OnDragDrop;
       property OnDragOver;
       {$IFDEF VCL_4_USED}
       property OnEndDock;
       {$ENDIF}
       property OnEndDrag;
       property OnMouseDown;
       property OnMouseMove;
       property OnMouseUp;
   {$IFDEF VCL_4_USED}
       property OnStartDock;
   {$ENDIF}

   {$IFDEF VCL_4_USED}
       property Anchors;
       property Constraints;
       property DockOrientation;
       property Floating;
       property DoubleBuffered;
       property DragKind;
   {$ENDIF}
     end;

     TElFileDialogType = (fdtOpen, fdtSave);

     TElFileNameEdit = class(TCustomElButtonEdit)
     private
       FileDlg : TOpenDialog;
       function GetFilterIndex: Integer;
       procedure SetHistoryList(Value: TStrings);
       procedure SetInitialDir(const Value: string);
       function GetDefaultExt: string;
       procedure SetDefaultExt(const Value: string);
       function GetFiles: TStrings;
       function GetHistoryList: TStrings;
       function GetInitialDir: string;
       function GetOptions: TOpenOptions;
       procedure SetOptions(Value: TOpenOptions);
       procedure SetFilterIndex(Value: Integer);
       function GetTitle: string;
       procedure SetTitle(const Value: string);
       function GetFilter: string;
       procedure SetFilter(const Value: string);
     protected
       FDialogTitle: string;
       FDialogType: TElFileDialogType;
       procedure BtnClick(Sender : TObject);
       procedure CreateHandle; override;
       procedure Loaded; override;
     public
       constructor Create(AOwner : TComponent); override;
       destructor Destroy; override;
       property Files: TStrings read GetFiles;
       property HistoryList: TStrings read GetHistoryList write SetHistoryList;
     published
       property DefaultExt: string read GetDefaultExt write SetDefaultExt;
       property Filter: string read GetFilter write SetFilter;
       property FilterIndex: Integer read GetFilterIndex write SetFilterIndex default
           1;
       property InitialDir: string read GetInitialDir write SetInitialDir;
       property Options: TOpenOptions read GetOptions write SetOptions
         default [ofHideReadOnly{$ifdef VCL_4_USED}, ofEnableSizing{$endif}];
       property Title: string read GetTitle write SetTitle;
       property DialogTitle: string read FDialogTitle write FDialogTitle;
       property DialogType: TElFileDialogType read FDialogType write FDialogType;

       property TopMargin;
       property LeftMargin;
       property RightMargin;
       property BorderSides;
       property MaxLength;
       property Transparent;
       property HandleDialogKeys;
       property HideSelection;
       property LineBorderActiveColor;
       property LineBorderInactiveColor;
       {$ifdef ELPACK_COMPLETE}
       property ImageForm;
       {$endif}

       property OnMouseEnter;
       property OnMouseLeave;
       property OnResize;
       property OnChange;
       property OnSelectionChange;
       property Text;

       // inherited
       property Flat;
       property ActiveBorderType;
       property InactiveBorderType;
       property UseBackground;
       property Alignment;
       property AutoSelect;
       property Multiline;

       property Background;
       property ButtonClickSound;
       property ButtonDownSound;
       property ButtonUpSound;
   {$IFDEF USE_SOUND_MAP}
       property ButtonSoundMap;
   {$ENDIF}
       property ButtonColor;
       property ButtonFlat;
       property ButtonHint;
       property ButtonShortcut;
       property ButtonGlyph;
       property ButtonIcon;
       property ButtonUseIcon;
       property ButtonNumGlyphs; 
       property ButtonWidth;

       property AltButtonCaption;
       property AltButtonClickSound;
       property AltButtonDownSound;
       property AltButtonUpSound;
   {$IFDEF USE_SOUND_MAP}
       property AltButtonSoundMap;
   {$ENDIF}
       property AltButtonDown;
       property AltButtonEnabled;
       property AltButtonFlat;
       property AltButtonGlyph;
       property AltButtonHint;
       property AltButtonIcon;
       property AltButtonNumGlyphs;
       property AltButtonPopupPlace;
       property AltButtonPosition;
       property AltButtonPullDownMenu;
       property AltButtonShortcut;
       property AltButtonUseIcon;
       property AltButtonVisible;
       property AltButtonWidth;
       property OnAltButtonClick;

       // VCL properties
       property AutoSize;
       property BorderStyle;
       property Ctl3D;
       property ParentCtl3D;
       property Enabled;
       property TabStop default True;
       property TabOrder;
       property PopupMenu;
       property Color;
       property ParentColor;
       property Align;
       property Font;
       property ParentFont;
       property ParentShowHint;
       property ShowHint;
       property Visible;
       property ReadOnly;

       property OnEnter;
       property OnExit;
       property OnClick;
       property OnDblClick;
       property OnKeyDown;
       property OnKeyPress;
       property OnKeyUp;
       property OnStartDrag;
       property OnDragDrop;
       property OnDragOver;
       {$IFDEF VCL_4_USED}
       property OnEndDock;
       {$ENDIF}
       property OnEndDrag;
       property OnMouseDown;
       property OnMouseMove;
       property OnMouseUp;
   {$IFDEF VCL_4_USED}
       property OnStartDock;
   {$ENDIF}

   {$IFDEF VCL_4_USED}
       property Anchors;
       property Constraints;
       property DockOrientation;
       property Floating;
       property DoubleBuffered;
       property DragKind;
   {$ENDIF}
     end;

implementation
end.
