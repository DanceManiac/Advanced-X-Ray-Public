
{====================================================}
{                                                    }
{   EldoS Visual Components                          }
{                                                    }
{   Copyright (c) 1998-2001, EldoS                   }
{                                                    }
{====================================================}

(*

Version History

12/16/2000

  Precise property added to ElTimerPool. Now when Precise is false, regular 
  timer is used to track timer ticks. 

*)
{$include elpack2.inc}
{$ifdef ELPACK_SINGLECOMP}
{$I ElPack.inc}
{$else}
{$ifdef LINUX}
{$I ../ElPack.inc}
{$else}
{$I ..\ElPack.inc}
{$endif}
{$endif}

unit ElTimers;

interface

uses
  Windows, Messages, Classes;

type
  {:
  }
  TCustomElTimer = class (TObject)
  private
    FEnabled: Boolean;
    FInterval: Cardinal;
    FOneTime: Boolean;
    FOnTimer: TNotifyEvent;
    FTag: Integer;
    procedure SetInterval(const Value: Cardinal);
  protected
    procedure DoTick; virtual;
    procedure DoTimer; virtual;
    procedure SetEnabled(const Value: Boolean); virtual;
    property Enabled: Boolean read FEnabled write SetEnabled;
    property Interval: Cardinal read FInterval write SetInterval default 1000;
    property OneTime: Boolean read FOneTime write FOneTime;
    property OnTimer: TNotifyEvent read FOnTimer write FOnTimer;
    property Tag: Integer read FTag write FTag;
  public
    constructor Create; virtual;
  end;

  {:
  }
  TElTimer = class (TCustomElTimer)
  private
    FTimerID: Integer;
    FWnd: HWND;
    procedure WndProc(var Msg: TMessage);
  protected
    procedure SetEnabled(const Value: boolean); override;
  public
    constructor Create; override;
    destructor Destroy; override;
    property Enabled;
    property Interval;
    property OneTime;
    property OnTimer;
    property Tag;
  end;

  TElTimerPool = class;
  TElTimerPoolItem = class;

  {:
  }
  TElPoolTimer = class (TCustomElTimer)
  private
    FElapsed: Cardinal;
    FOwner: TElTimerPoolItem;
  protected
    procedure SetEnabled(const Value: boolean); override;
  public
    procedure Tick(TickCount : integer);
    property Elapsed: Cardinal read FElapsed write FElapsed;
    property Enabled;
    property Interval;
    property OneTime;
    property OnTimer;
    property Owner: TElTimerPoolItem read FOwner;
    property Tag;
  end;

  {:
  }
  TElTimerPoolItem = class (TCollectionItem)
  private
    FTimer: TElPoolTimer;
    FOnTimer: TNotifyEvent;
    function GetEnabled: Boolean;
    function GetInterval: Cardinal;
    function GetOneTime: Boolean;
    function GetOnTimer: TNotifyEvent;
    function GetTag: Integer;
    procedure SetEnabled(const Value: Boolean);
    procedure SetInterval(const Value: Cardinal);
    procedure SetOneTime(const Value: Boolean);
    procedure SetOnTimer(const Value: TNotifyEvent);
    procedure SetTag(const Value: Integer);

  public
    constructor Create(Collection: TCollection); override;
    destructor Destroy; override;
    procedure Assign(Source: TPersistent); override;
    property Timer: TElPoolTimer read FTimer;
  published
    property Enabled: Boolean read GetEnabled write SetEnabled;
    property Interval: Cardinal read GetInterval write SetInterval default 1000;
    property OneTime: Boolean read GetOneTime write SetOneTime;
    property OnTimer: TNotifyEvent read GetOnTimer write SetOnTimer;
    property Tag: Integer read GetTag write SetTag;
  end;

  {:
  }
  TElTimerPoolItems = class (TCollection)
  private
    FOwner: TElTimerPool;
    function GetItem(Index: integer): TElTimerPoolItem;
    procedure SetItem(Index: integer; const Value: TElTimerPoolItem);
  protected
    {$ifndef D_2}
    function GetOwner: TPersistent; override;
    {$endif}
    procedure Update(Item: TCollectionItem); override;
  public
    constructor Create(AOwner: TElTimerPool);
    function Add: TElTimerPoolItem;
    property Items[Index: integer]: TElTimerPoolItem read GetItem write SetItem;
        default;
  end;

  {:
  }
  TElTimerPool = class (TComponent)
  private
    FEnableCount : integer;
    FItems: TElTimerPoolItems;
    FTimerID: Integer;
    FLastTick: DWORD;
    FPrecise : boolean;
    FWnd: HWND;
    procedure SetItems(Value: TElTimerPoolItems);
    procedure WndProc(var Msg: TMessage);
  protected
    procedure SetPrecise(newValue : boolean); virtual;
    procedure EnableTimer(Enable: boolean); virtual;
    procedure Loaded; override;
  public
    constructor Create(AOwner: TComponent); override;
    destructor Destroy; override;
    procedure Tick(TickCount : integer);
  published
    property Items   : TElTimerPoolItems read FItems write SetItems;
    property Precise : boolean read FPrecise write SetPrecise;
  end;

implementation
end.
