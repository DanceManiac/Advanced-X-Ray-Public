{====================================================}
{                                                    }
{   EldoS Visual Components                          }
{                                                    }
{   Copyright (c) 1998-2001, EldoS                   }
{                                                    }
{====================================================}

{$include elpack2.inc}
{$ifdef ELPACK_SINGLECOMP}
{$I ElPack.inc}
{$else}
{$ifdef LINUX}
{$I ../ElPack.inc}
{$else}
{$I ..\ElPack.inc}
{$endif}
{$endif}

unit ElList;

interface

uses ElContBase, Classes;

Const AlignMem    =   $100; // Align at 256 bytes;

type
  TElListSortCompare = function(Item1,
                                Item2: Pointer;
                                Cargo: Pointer): Integer;

  TElListSortCompareEx = function(Item1,
                                  Item2: Pointer;
                                  Cargo: Pointer): Integer of object;


  TElListDeleteEvent = procedure (Sender: TObject; Item: Pointer) of object;

  {:
  }
  TElList = class (TPersistent)
  protected
    FAutoClearObjects: Boolean;
    FCapacity: Integer;
    FCount: Integer;
    FList: PPointerList;
    FOnDelete: TElListDeleteEvent;
    class procedure Error(const Msg: string; Data: Integer);
    function Get(Index: Integer): Pointer; virtual;
    procedure Grow; virtual;
    procedure Put(Index: Integer; Item: Pointer); virtual;
    procedure SetCapacity(NewCapacity: Integer);
    procedure SetCount(NewCount: Integer);
    procedure IntDelete(Index: Integer);
    procedure TriggerDeleteEvent(Item: Pointer); virtual;
  public
    constructor Create;
    destructor Destroy; override;
    function FastGet(Index: Integer): Pointer;
    function Add(Item: Pointer): Integer;
    procedure Assign(Source : TPersistent); override;
    procedure Clear; virtual;
    procedure Delete(Index: Integer); virtual;
    procedure DeleteRange(StartIndex, EndIndex: Integer); virtual;
    procedure Exchange(Index1, Index2: Integer);
    function Expand: TElList;
    function First: Pointer;
    function IndexOf(Item: Pointer): Integer;
    function IndexOfBack(StartIndex: integer; Item: Pointer): Integer;
    function IndexOfFrom(StartIndex: integer; Item: Pointer): Integer;
    procedure Insert(Index: Integer; Item: Pointer);
    function Last: Pointer;
    procedure Move(CurIndex, NewIndex: Integer);
    procedure MoveRange(CurStart, CurEnd, NewStart: integer);
    procedure Pack;
    function Remove(Item: Pointer): Integer;
    procedure Sort(Compare: TElListSortCompare; Cargo: Pointer);
    procedure SortC(Compare: TElListSortCompareEx; Cargo: Pointer);
    property AutoClearObjects: Boolean read FAutoClearObjects write
        FAutoClearObjects;
    property Capacity: Integer read FCapacity write SetCapacity;
    property Count: Integer read FCount write SetCount;
    property Items[Index: Integer]: Pointer read Get write Put; default;
    property List: PPointerList read FList;
    property OnDelete: TElListDeleteEvent read FOnDelete write FOnDelete;
  end;

implementation
end.
