{====================================================}
{                                                    }
{   EldoS Visual Components                          }
{                                                    }
{   Copyright (c) 1998-2001, EldoS                   }
{                                                    }
{====================================================}

{$include elpack2.inc}
{$ifdef ELPACK_SINGLECOMP}
{$I ElPack.inc}
{$else}
{$ifdef LINUX}
{$I ../ElPack.inc}
{$else}
{$I ..\ElPack.inc}
{$endif}
{$endif}

unit ElHook;

interface

uses
{$ifndef CLX_USED}
    Forms,
    Messages,
    Controls,
{$else}
    QControls,
{$endif}
{$ifdef VCL_6_USED}
Types,
{$endif}
    Classes;

type
  TElHookEvent = procedure(Sender : TObject; var Msg : TMessage; var Handled : boolean) of object;

type
  TElHook = class(TComponent)
  private
    FDesignActive : Boolean;
    FOnBeforeProcess : TElHookEvent;
    FOnAfterProcess : TElHookEvent;
    FActive : Boolean;
{$IFDEF OLD_EL_HOOK}
    FControl : TWinControl;
    procedure SetControl(newValue : TWinControl);
{$ELSE}
    FControl : TControl;
    procedure SetControl(newValue : TControl);
{$ENDIF}
    procedure SetActive(newValue : Boolean);
    procedure SetDesignActive(newValue : Boolean);
  protected
    procedure Notification(AComponent : TComponent; Operation : TOperation); override;
    procedure TriggerBeforeProcessEvent(var Msg : TMessage; var Handled : boolean); virtual;
    procedure TriggerAfterProcessEvent(var Msg : TMessage; var Handled : boolean); virtual;
  public
    procedure HookControl(AControl : TWinControl);
    destructor Destroy; override;
  published
    property Active : Boolean read FActive write SetActive;
    property DesignActive : Boolean read FDesignActive write SetDesignActive;
{$IFDEF OLD_EL_HOOK}
    property Control : TWinControl read FControl write SetControl;
{$ELSE}
    property Control : TControl read FControl write SetControl;
{$ENDIF}
    property OnBeforeProcess : TElHookEvent read FOnBeforeProcess write FOnBeforeProcess;
    property OnAfterProcess : TElHookEvent read FOnAfterProcess write FOnAfterProcess;
  end;

implementation
end.
