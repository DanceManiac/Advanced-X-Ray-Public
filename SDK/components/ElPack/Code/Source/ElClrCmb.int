{====================================================}
{                                                    }
{   EldoS Visual Components                          }
{                                                    }
{   Copyright (c) 1998-2001, EldoS                   }
{                                                    }
{====================================================}
{$include elpack2.inc}
{$ifdef ELPACK_SINGLECOMP}
{$I ElPack.inc}
{$else}
{$ifdef LINUX}
{$I ../ElPack.inc}
{$else}
{$I ..\ElPack.inc}
{$endif}
{$endif}

{

Version History
  
03/06/2002

  Added unicode hint

12/28/2201

  It was possible to select clNone color only on second attempt. Fixed.

12/02/2001

  Added OnAddMoreColors event
  Fixed painting in Windows XP with styles disabled

11/05/2001

  Improved alignment of the text

10/24/2001

  ! Now OnChange event is fired ONLY when the user changes this color. 

10/12/2001

  Options were not taken into account when combo was loaded. Fixed 

07/24/2001

  Control has been completely rewritten.  

}

unit ElClrCmb;

interface

uses
  Windows,
  Messages,
  SysUtils,
  Forms,
  Classes,
  Graphics,
  Controls,
  ExtCtrls,
  Dialogs,
  StdCtrls,
{$ifdef VCL_6_USED}
Types,
{$endif}
  ElStrUtils,
  ElTools,
  ElTmSchema,
  ElUxTheme,
  ElACtrls;

type

  TColorComboOption = (ccoNoColor, cco4BitColors, ccoSystemColors, ccoCustomChoice, ccoShowNames);
  TColorComboOptions = set of TColorComboOption;

  TTranslateColorNameEvent = procedure(Sender : TObject; Color : TColor; var ColorName : string) of object;
  TColorComboAddMoreColorsEvent = procedure(Sender : TObject; Items : TStrings) of object;

  TElColorCombo = class(TElAdvancedComboBox)
  private
    //internally used
    FDown : Boolean;
    FMouseInControl : boolean;
    //storage for properties
    FDialogOptions : TColorDialogOptions;
    FSelectedColor : TColor;
    FOptions: TColorComboOptions;
    FOnTranslateColorName: TTranslateColorNameEvent;
    FOnAddMoreColors: TColorComboAddMoreColorsEvent;
    FDummyInt   : integer;
    FDummyBool  : boolean;
    FDummyStyle : TComboBoxStyle;
    FInDialog: Boolean;

    //msg handlers
    procedure CMMouseEnter(var Message : TMessage); message CM_MOUSEENTER;
    procedure CMMouseLeave(var Message : TMessage); message CM_MOUSELEAVE;
    procedure CMFontChanged(var Message: TMessage); message CM_FONTCHANGED;
    procedure SetOptions(Value: TColorComboOptions);
  protected
    procedure SetSelectedColor(aColor : TColor);
    procedure CreateWnd; override;
    {$ifndef CLX_USED}
    procedure DrawItem(Index: Integer; Rect: TRect; State: TOwnerDrawState); override;
    {$else}
    function DrawItem(Index: Integer; Rect: TRect; State: TOwnerDrawState): Boolean; override;
    {$endif}
    procedure FillItems;
    procedure Change; override;
    procedure TriggerTranslateColorName(Color : TColor; var ColorName : string); virtual;
    procedure Loaded; override;
    procedure DoAddMoreColors(Items : TStrings); virtual;
  public
    constructor Create(AOwner : TComponent); override;
    destructor Destroy; override;
  published
    property Items      : integer read FDummyInt;
    property ItemHeight : integer read FDummyInt write FDummyInt;
    property ItemIndex  : integer read FDummyInt write FDummyInt;
    property Style      : TComboBoxStyle read FDummyStyle write FDummyStyle;
    property Transparent : boolean read FDummyBool write FDummyBool;

    property Options: TColorComboOptions read FOptions write SetOptions;
    property DialogOptions : TColorDialogOptions read FDialogOptions write FDialogOptions default [cdFullOpen];
    property SelectedColor : TColor read FSelectedColor write SetSelectedColor;
    property OnTranslateColorName: TTranslateColorNameEvent read FOnTranslateColorName
                                                            write FOnTranslateColorName;

    property Enabled;
    property Width;
    property Height;
    property TabStop;
    property TabOrder;
    property ParentShowHint;
    property ShowHint;

    property OnClick;
    property OnKeyDown;
    property OnKeyUp;
    property OnMouseDown;
    property OnMouseMove;
    property OnMouseUp;
    property OnEnter;
    property OnExit;
{$IFDEF VCL_4_USED}
    property Anchors;
    property Action;
    property Constraints;
    property DockOrientation;
    property Floating;
    property DragKind;
    property OnAddMoreColors: TColorComboAddMoreColorsEvent read FOnAddMoreColors 
        write FOnAddMoreColors;
{$ENDIF}
  end;

implementation
end.
