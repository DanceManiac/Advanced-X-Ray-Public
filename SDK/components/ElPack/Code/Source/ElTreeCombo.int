{====================================================}
{                                                    }
{   EldoS Visual Components                          }
{                                                    }
{   Copyright (c) 1998-2001, EldoS                   }
{                                                    }
{====================================================}

(*

Version History

04/02/2002

  Fixed the problem when drop-down tree didn't appear in responce to the first click

02/26/2002

  Fixed WM_CHAR handling to correctly pass incremental search  
  The combobox fialed to drop down for some reason. Fixed.

12/19/2001

  Fixed problems with positioning the owner form when TreeCombo is dropped on NT 4.

07/15/2001

  Added recent properties and events of ElTree

03/14/2001

  Types used by event handlers defined inside unit. 

*)
{$include elpack2.inc}
{$ifdef ELPACK_SINGLECOMP}
{$I ElPack.inc}
{$else}
{$ifdef LINUX}
{$I ../ElPack.inc}
{$else}
{$I ..\ElPack.inc}
{$endif}
{$endif}

unit ElTreeCombo;

interface

uses
  Windows,
  SysUtils,
  Messages,
  Classes,
  Graphics,
  Controls,
  Forms,
  Dialogs,
  Menus,
  StdCtrls,
  ExtCtrls,
  ElDragDrop,
  {$ifdef HAS_HTML_RENDER}
  HTMLRender,
  {$endif}
  ElTree,
  ElHeader,
  ElList,
  ElTmSchema,
  ElUxTheme,
  ActiveX,
{$ifdef VCL_6_USED}
Types,
{$endif}
  ElImgLst,
  ElTools,
  ElPopBtn,
  ElVCLUtils,
  ElStrUtils,
  ElBtnEdit,
  ElScrollBar,
  ElIni;

{$ifndef BUILDER_USED}

type
  TElHeaderSection = ElHeader.TElHeaderSection;
  TCustomElHeader = ElHeader.TCustomElHeader;
  TElFieldType = ElHeader.TElFieldType;
  TElScrollBarPart = ElScrollBar.TElScrollBarPart;
  TElCellStyle = ElTree.TElCellStyle;
  TElTreeItem = ElTree.TElTreeItem;
  TCustomElTree = ElTree.TCustomElTree;
{$endif}

{$ifdef ELTREE_USE_OLE_DRAGDROP}
{$IFNDEF VER90}
{$IFNDEF LITE}
{$ifndef BUILDER_USED}
  TDragType = ElDragDrop.TDragType;
  IDataObject = ActiveX.IDataObject;
  IDropSource = ActiveX.IDropSource;
  TDragTypes = ElDragDrop.TDragTypes;
  TOleDragObject = ElDragDrop.TOleDragObject;
{$endif}
{$ENDIF}
{$ENDIF}
{$endif}

type
  TElComboDropEvent = procedure(Sender : TObject; Dropped : boolean) of object;

  TElTreeCombo = class;

  TDropdownElTree = class(TCustomElTree)
  private
    FOwner : TElTreeCombo;
    procedure WMMouseActivate(var Msg: TMessage); message WM_MOUSEACTIVATE;
  protected
    procedure CreateParams(var Params: TCreateParams); override;
    procedure WMNCHitTest(var Msg : TWMNCHitTest); message WM_NCHITTEST;
    procedure WMExitSizeMove(var Message: TMessage); message WM_EXITSIZEMOVE;
    procedure WMEnterSizeMove(var Message: TMessage); message WM_ENTERSIZEMOVE;
    procedure WMNCCalcSize(var Message : TWMNCCalcSize); message WM_NCCALCSIZE;
    procedure WMNCPaint(var Message: TMessage); message WM_NCPAINT;
    procedure UpdateScrollBars; override;
    procedure WMSetFocus(var Message: TMessage); message WM_SETFOCUS;
  public
    function CanFocus: Boolean;override;
  end;

  TElTreeCombo = class(TCustomElButtonEdit)
  private
    FOnEditRequest : TEditRequestEvent;
    FOnTreeKeyDown : TKeyEvent;
    FOnTreeKeyPress : TKeyPressEvent;
    FOnTreeKeyUp : TKeyEvent;
    FOnTreeMouseDown : TMouseEvent;
    FOnTreeMouseMove : TMouseMoveEvent;
    FOnTreeMouseUp : TMouseEvent;
    FAutoProcessSelection : Boolean;
    FOnNewTextSelection : TNotifyEvent;
    FDropWidth : Integer;
    FDropHeight : Integer;
    FOnValidateCombo_FTree : TValidateComboEvent;
    FOnCellStyleLoad_FTree : TCellStyleSaveEvent;
    FOnCellStyleSave_FTree : TCellStyleSaveEvent;
    FOnComboEditShow_FTree : TComboEditShowEvent;
    FOnHeaderLookup_FTree : TElHeaderLookupEvent;
    FOnHeaderLookupDone_FTree : TElHeaderLookupDoneEvent;
    FOnHeaderResize_FTree : TNotifyEvent;
    FOnHeaderSectionAutoSize_FTree: TColumnNotifyEvent;
    FOnHeaderSectionCollapse_FTree : THeaderSectionEvent;
    FOnHeaderSectionExpand_FTree : THeaderSectionEvent;
    FOnHeaderSectionFilterCall_FTree: TColumnNotifyEvent;
    FOnHorzScrollDrawPart_FTree: TElScrollDrawPartEvent;
    FOnHorzScrollHintNeeded_FTree: TElScrollHintNeededEvent;
    FOnHotTrack_FTree : THotTrackEvent;
    FOnItemLoad_FTree : TItemSaveEvent;
    FOnItemPicDraw2_FTree : TOnPicDrawEvent;
    FOnItemSave_FTree : TItemSaveEvent;
    FOnItemSelectedChange_FTree : TItemSelChangeEvent;
{$IFDEF ELTREE_USE_OLE_DRAGDROP}
{$IFNDEF B_3}
{$IFNDEF VER90}
    FOnOleDragFinish_FTree : TOleDragFinishEvent;
    FOnOleDragStart_FTree : TOleDragStartEvent;
    FOnOleTargetDrag_FTree : TTargetDragEvent;
    FOnOleTargetDrop_FTree : TTargetDropEvent;
{$ENDIF}
{$ENDIF}
{$ENDIF}
    FOnResize_FTree: TNotifyEvent;
    FOnScroll_FTree: ElTree.TElScrollEvent;
    FOnTryEdit_FTree : TTryEditEvent;
    FOnValidateInplaceEdit_FTree : TOnValidateEvent;
    FOnVertScrollDrawPart_FTree: TElScrollDrawPartEvent;
    FOnVertScrollHintNeeded_FTree: TElScrollHintNeededEvent;
    //FEdit : TEdit;
    FSaveCursor,
    FSaveCursor1 : TCursor;
    FReadOnly : Boolean;
    FDropped : Boolean;
    FOnDrop : TElComboDropEvent;
    FTree : TDropdownElTree;
    FSelection : TElTreeItem;
    FSelectionList : TElList;
    IgnoreFocus : boolean;
    IgnoreDrop  : boolean;
    FMouseDown  : boolean;
    FSaveCapture: HWND;
    { Exposed Events: }
    FOnCompareItems : TOnCompareItems;
    FOnHeaderColumnClick : TColumnNotifyEvent;
    FOnHeaderColumnDraw : TElSectionRedrawEvent;
    FOnHeaderColumnMove : TElColumnMoveEvent;
    FOnHeaderColumnResize : TColumnNotifyEvent;
    FOnItemChange : TOnItemChangeEvent;
    FOnItemCollapse : TOnItemExpandEvent;
    FOnItemCollapsing : TOnItemExpanding;
    FOnItemDeletion : TOnItemExpandEvent;
    FOnItemDraw : TOnItemDrawEvent;
    FOnItemExpand : TOnItemExpandEvent;
    FOnItemExpanding : TOnItemExpanding;
    FOnItemFocused : TNotifyEvent;
    FOnItemPicDraw : TOnPicDrawEvent;
    FOnShowLineHint : TOnShowHintEvent;
    FOnStartDrag_FTree : TStartDragEvent;
    procedure ProcessSelect;
    function GetSelection : TElTreeItem;
    procedure SetSelection(newValue : TElTreeItem);
    function GetSelectionList : TElList;
    { Inherited properties' Read/Write methods: }
    procedure SetAutoLineHeight_FTree(newValue : Boolean);
    function GetAutoLineHeight_FTree : Boolean;
    procedure SetBkColor_FTree(newValue : TColor);
    function GetBkColor_FTree : TColor;
    procedure SetChangeStateImage_FTree(newValue : Boolean);
    function GetChangeStateImage_FTree : Boolean;
    procedure SetCtl3D_FTree(newValue : Boolean);
    function GetCtl3D_FTree : Boolean;
    procedure SetCursor(newValue : TCursor);
    function GetCursor : TCursor;
    procedure SetDraggableSections(newValue : Boolean);
    function GetDraggableSections : Boolean;
    procedure SetFont_FTree(newValue : TFont);
    function GetFont_FTree : TFont;
    procedure SetHeaderHotTrack_FTree(newValue : Boolean);
    function GetHeaderHotTrack_FTree : Boolean;
    procedure SetHeaderImages_FTree(newValue : TImageList);
    function GetHeaderImages_FTree : TImageList;
    procedure SetHeaderSections_FTree(newValue : TElHeaderSections);
    function GetHeaderSections_FTree : TElHeaderSections;
    procedure SetHideHintOnMove_FTree(newValue : Boolean);
    function GetHideHintOnMove_FTree : Boolean;
    procedure SetHideHintOnTimer_FTree(newValue : Boolean);
    function GetHideHintOnTimer_FTree : Boolean;
    procedure SetHideHorzScrollBar_FTree(newValue : Boolean);
    function GetHideHorzScrollBar_FTree : Boolean;
    procedure SetHideVertScrollBar_FTree(newValue : Boolean);
    function GetHideVertScrollBar_FTree : Boolean;
    procedure SetHorizontalLines_FTree(newValue : Boolean);
    function GetHorizontalLines_FTree : Boolean;
    procedure SetImages_FTree(newValue : TImageList);
    function GetImages_FTree : TImageList;
    procedure SetItems_FTree(newValue : TElTreeItems);
    function GetItems_FTree : TElTreeItems;
    procedure SetLineHintMode(newValue : THintModes);
    function GetLineHintMode : THintModes;
    procedure SetMainTreeColumn(newValue : Integer);
    function GetMainTreeColumn : Integer;
    procedure SetMultiSelect(newValue : Boolean);
    function GetMultiSelect : Boolean;
    procedure SetOwnerDrawByColumn(newValue : Boolean);
    function GetOwnerDrawByColumn : Boolean;
    procedure SetOwnerDrawMask(newValue : string);
    function GetOwnerDrawMask : string;
    procedure SetParentCtl3D(newValue : Boolean);
    function GetParentCtl3D : Boolean;
    procedure SetParentFont(newValue : Boolean);
    function GetParentFont : Boolean;
    procedure SetParentShowHint(newValue : Boolean);
    function GetParentShowHint : Boolean;
    procedure SetRowSelect(newValue : Boolean);
    function GetRowSelect : Boolean;
    procedure SetScrollTracking(newValue : Boolean);
    function GetScrollTracking : Boolean;
    procedure SetSelectionMode(newValue : TSTSelModes);
    function GetSelectionMode : TSTSelModes;
    procedure SetShowButtons(newValue : Boolean);
    function GetShowButtons : Boolean;
    procedure SetShowColumns(newValue : Boolean);
    function GetShowColumns : Boolean;
    procedure SetShowHint(newValue : Boolean);
    function GetShowHint : Boolean;
    procedure SetShowImages(newValue : Boolean);
    function GetShowImages : Boolean;
    procedure SetShowLines(newValue : Boolean);
    function GetShowLines : Boolean;
    procedure SetShowRoot(newValue : Boolean);
    function GetShowRoot : Boolean;
    procedure SetSortDir(newValue : TSortDirs);
    function GetSortDir : TSortDirs;
    procedure SetSortMode(newValue : TSortModes);
    function GetSortMode : TSortModes;
    procedure SetSortSection(newValue : Integer);
    function GetSortSection : Integer;
    procedure SetSortType(newValue : TSortTypes);
    function GetSortType : TSortTypes;
    procedure SetTextColor(newValue : TColor);
    function GetTextColor : TColor;
    procedure SetTracking(newValue : Boolean);
    function GetTracking : Boolean;
    procedure SetVerticalLines(newValue : Boolean);
    function GetVerticalLines : Boolean;
    procedure ButtonClick(Sender : TObject);
    procedure CompareItemsTransfer(Sender : TObject; Item1 : TElTreeItem; Item2 : TElTreeItem; var res : Integer); { TOnCompareItems }
    procedure ClickHandler(Sender : TObject); { TNotifyEvent }
    procedure DblClickHandler(Sender : TObject); { TNotifyEvent }
    procedure HeaderColumnClickTransfer(Sender : TObject; SectionIndex : Integer); { TColumnNotifyEvent }
    procedure HeaderColumnDrawTransfer(Sender : TCustomElHeader; Canvas : TCanvas; Section : TElHeaderSection; R : TRect; Pressed : Boolean); { TElSectionRedrawEvent }
    procedure HeaderColumnMoveTransfer(Sender : TCustomElTree; Section : TElHeaderSection; OldPos : Integer; NewPos : Integer); { TElColumnMoveEvent }
    procedure HeaderColumnResizeTransfer(Sender : TObject; SectionIndex : Integer); { TColumnNotifyEvent }
    procedure ItemChangeTransfer(Sender : TObject; Item : TElTreeItem; ItemChangeMode : TItemChangeMode); { TOnItemChangeEvent }
    procedure ItemCollapseTransfer(Sender : TObject; Item : TElTreeItem); { TOnItemExpandEvent }
    procedure ItemCollapsingTransfer(Sender : TObject; Item : TElTreeItem; var CanProcess : Boolean); { TOnItemExpanding }
    procedure ItemDeletionTransfer(Sender : TObject; Item : TElTreeItem); { TOnItemExpandEvent }
    procedure ItemDrawTransfer(Sender : TObject; Item : TElTreeItem; Surface : TCanvas; R : TRect; SectionIndex : Integer); { TOnItemDrawEvent }
    procedure ItemExpandTransfer(Sender : TObject; Item : TElTreeItem); { TOnItemExpandEvent }
    procedure ItemExpandingTransfer(Sender : TObject; Item : TElTreeItem; var CanProcess : Boolean); { TOnItemExpanding }
    procedure ItemFocusedTransfer(Sender : TObject); { TNotifyEvent }
    procedure ItemPicDrawTransfer(Sender : TObject; Item : TElTreeItem; var ImageIndex : Integer); { TOnPicDrawEvent }
    procedure KeyDownHandler(Sender : TObject; var Key : Word; Shift : TShiftState); { TKeyEvent }
    procedure ShowLineHintTransfer(Sender : TObject; Item : TElTreeItem; Section : TElHeaderSection; var Text : TElFString; HintWindow : THintWindow; MousePos : TPoint; var DoShowHint : Boolean); { TOnShowHintEvent }
    procedure TreeResizeTransfer(Sender: TObject);
    procedure ScrollTransfer(Sender: TObject; ScrollBarKind: TScrollBarKind; ScrollCode: integer);
    procedure SetDropped(newValue : Boolean);
    procedure SetLineHeight_FTree(newValue : Integer);
    function GetLineHeight_FTree : Integer;
    //function GetTextHeight: Integer;
    function GetReadOnly : Boolean;
    procedure SetReadOnly(newValue : Boolean);
    procedure CMEnter(var Msg : TCMEnter); message CM_ENTER;
    procedure CMExit(var Msg : TCMExit); message CM_EXIT;
    procedure SetAlwaysKeepSelection_FTree(newValue : Boolean);
    function GetAlwaysKeepSelection_FTree : Boolean;
    procedure SetAutoExpand_FTree(newValue : Boolean);
    function GetAutoExpand_FTree : Boolean;
    procedure SetAutoLookup_FTree(newValue : Boolean);
    function GetAutoLookup_FTree : Boolean;
    procedure SetBarStyle_FTree(newValue : Boolean);
    function GetBarStyle_FTree : Boolean;
    procedure SetCustomPlusMinus_FTree(newValue : Boolean);
    function GetCustomPlusMinus_FTree : Boolean;
    procedure SetDeselectChildrenOnCollapse_FTree(newValue : Boolean);
    function GetDeselectChildrenOnCollapse_FTree : Boolean;
    procedure SetTreeDragImageMode(newValue : TDragImgMode);
    function GetTreeDragImageMode : TDragImgMode;
    procedure SetTreeDrawFocusRect(newValue : Boolean);
    function GetTreeDrawFocusRect : Boolean;
    procedure SetTreeFullRowSelect(newValue : Boolean);
    function GetTreeFullRowSelect : Boolean;
    procedure SetTreeImages2(newValue : TImageList);
    function GetTreeImages2 : TImageList;
    procedure SetMinusPicture_FTree(newValue : TBitmap);
    function GetMinusPicture_FTree : TBitmap;
    procedure SetPlusPicture_FTree(newValue : TBitmap);
    function GetPlusPicture_FTree : TBitmap;
    procedure SetShowCheckboxes_FTree(newValue : Boolean);
    function GetShowCheckboxes_FTree : Boolean;
    procedure SetStickyHeaderSections_FTree(newValue : Boolean);
    function GetStickyHeaderSections_FTree : Boolean;
    {$ifdef SUPPORT_STORAGE}
    procedure SetStoragePath_FTree(newValue : string);
    function GetStoragePath_FTree : string;
    {$endif}
    procedure CellStyleLoad_FTreeTransfer(Sender : TObject; Stream : TStream; Style : TElCellStyle); { TCellStyleSaveEvent }
    procedure CellStyleSave_FTreeTransfer(Sender : TObject; Stream : TStream; Style : TElCellStyle); { TCellStyleSaveEvent }
    procedure ComboEditShow_FTreeTransfer(Sender : TObject; Item : TElTreeItem; Section : TElHeaderSection; Combobox : TComboBox); { TComboEditShowEvent }
    procedure HeaderLookup_FTreeTransfer(Sender : TObject; Section : TElHeaderSection; var Text : string); { TElHeaderLookupEvent }
    procedure HeaderLookupDone_FTreeTransfer(Sender : TObject; Section : TElHeaderSection; Text : string; Accepted : Boolean); { TElHeaderLookupDoneEvent }
    procedure HeaderResize_FTreeTransfer(Sender : TObject); { TNotifyEvent }
    procedure HeaderSectionAutoSize_FTreeTransfer(Sender: TObject; SectionIndex: integer);
    procedure HeaderSectionCollapse_FTreeTransfer(Sender : TObject; Section : TElHeaderSection); { THeaderSectionEvent }
    procedure HeaderSectionExpand_FTreeTransfer(Sender : TObject; Section : TElHeaderSection); { THeaderSectionEvent }
    procedure HeaderSectionFilterCall_FTreeTransfer(Sender: TObject; SectionIndex: integer);
    procedure HorzScrollDrawPart_FTreeTransfer(Sender : TObject; Canvas : TCanvas;
      R : TRect; Part : TElScrollBarPart; Enabled, Focused, Pressed : boolean;
      var DefaultDraw : boolean);
    procedure HorzScrollHintNeeded_FTreeTransfer(Sender : TObject; TrackPosition : integer; var Hint : TElFString);
    procedure HotTrack_FTreeTransfer(Sender : TObject; OldItem : TElTreeItem; NewItem : TElTreeItem); { THotTrackEvent }
    procedure ItemLoad_FTreeTransfer(Sender : TObject; Stream : TStream; Item : TElTreeItem); { TItemSaveEvent }
    procedure ItemPicDraw2_FTreeTransfer(Sender : TObject; Item : TElTreeItem; var ImageIndex : Integer); { TOnPicDrawEvent }
    procedure ItemSave_FTreeTransfer(Sender : TObject; Stream : TStream; Item : TElTreeItem); { TItemSaveEvent }
    procedure ItemSelectedChange_FTreeTransfer(Sender : TObject; Item : TElTreeItem); { TItemSelChangeEvent }
{$IFDEF ELTREE_USE_OLE_DRAGDROP}
{$IFNDEF B_3}
{$IFNDEF VER90}
    procedure OleDragFinish_FTreeTransfer(Sender : TObject; dwEffect : TDragType; Result : HRESULT); { TOleDragFinishEvent }
    procedure OleDragStart_FTreeTransfer(Sender : TObject; var dataObj : IDataObject; var dropSource : IDropSource; var dwOKEffects : TDragTypes); { TOleDragStartEvent }
    procedure OleTargetDrag_FTreeTransfer(Sender : TObject; State : TDragState; Source : TOleDragObject; Shift : TShiftState; X : Integer; Y : Integer; var DragType : TDragType); { TTargetDragEvent }
    procedure OleTargetDrop_FTreeTransfer(Sender : TObject; Source : TOleDragObject; Shift : TShiftState; X : Integer; Y : Integer; var DragType : TDragType); { TTargetDropEvent }
{$ENDIF}
{$ENDIF}
{$ENDIF}

{$ifdef VER3_EDITORS}
    procedure TryEdit_FTreeTransfer(Sender : TObject; Item : TElTreeItem; SectionIndex : integer; var CellType : TElFieldType; var CanEdit : Boolean);
{$else}
    procedure TryEdit_FTreeTransfer(Sender : TObject; Item : TElTreeItem; Section : TElHeaderSection; var CellType : TElFieldType; var CanEdit : Boolean);
{$endif}
    procedure ValidateCombo_FTreeTransfer(Sender : TObject; Item : TElTreeItem; Section : TElHeaderSection; Combo : TComboBox; var Accept : Boolean); { TValidateComboEvent }
    procedure ValidateInplaceEdit_FTreeTransfer(Sender : TObject; Item : TElTreeItem; Section : TElHeaderSection; var Text : string; var Accept : Boolean); { TOnValidateEvent }
    procedure VertScrollDrawPart_FTreeTransfer(Sender : TObject; Canvas : TCanvas;
      R : TRect; Part : TElScrollBarPart; Enabled, Focused, Pressed : boolean;
      var DefaultDraw : boolean);
    procedure VertScrollHintNeeded_FTreeTransfer(Sender : TObject; TrackPosition : integer; var Hint : TElFString);
    procedure PrepareSelection;
    procedure SetDropWidth(newValue : Integer);
    procedure SetDropHeight(newValue : Integer);
    procedure SetPathSeparator(newValue : Char);
    function GetPathSeparator : Char;
    function GetDrawFocusRect_FTree : Boolean;
    procedure SetFilteredVisibility_FTree(newValue : Boolean);
    function GetFilteredVisibility_FTree : Boolean;
    procedure SetRightAlignedText_FTree(newValue : Boolean);
    function GetRightAlignedText_FTree : Boolean;
    procedure SetRightAlignedTree_FTree(newValue : Boolean);
    function GetRightAlignedTree_FTree : Boolean;
    procedure SetCheckBoxGlyph_FTree(newValue : TBitmap);
    function GetCheckBoxGlyph_FTree : TBitmap;
    procedure SetCustomCheckboxes_FTree(newValue : Boolean);
    function GetCustomCheckboxes_FTree : Boolean;
    procedure SetRadioButtonGlyph_FTree(newValue : TBitmap);
    function GetRadioButtonGlyph_FTree : TBitmap;
    procedure SetUnderlineTracked_FTree(newValue : Boolean);
    function GetUnderlineTracked_FTree : Boolean;
    procedure SetDoInplaceEdit(newValue : Boolean);
    function GetDoInplaceEdit : Boolean;
    procedure TreeKeyDownTransfer(Sender : TObject; var Key : Word; Shift : TShiftState); { TKeyEvent }
    procedure TreeKeyPressTransfer(Sender : TObject; var Key : Char); { TKeyPressEvent }
    procedure TreeKeyUpTransfer(Sender : TObject; var Key : Word; Shift : TShiftState); { TKeyEvent }
    procedure TreeMouseDownTransfer(Sender : TObject; Button : TMouseButton; Shift : TShiftState; X : Integer; Y : Integer); { TMouseEvent }
    procedure TreeMouseMoveTransfer(Sender : TObject; Shift : TShiftState; X : Integer; Y : Integer); { TMouseMoveEvent }
    procedure TreeMouseUpTransfer(Sender : TObject; Button : TMouseButton; Shift : TShiftState; X : Integer; Y : Integer); { TMouseEvent }
    procedure SetShowRootButtons(newValue : Boolean);
    function GetShowRootButtons : Boolean;
    procedure EditRequestTransfer(Sender : TObject; Item : TElTreeItem; Section : TElHeaderSection); { TEditRequestEvent }
    procedure SetTreeFlat(newValue : Boolean);
    function GetTreeFlat : Boolean;
    procedure SetTreeHeaderActiveFilterColor(newValue : TColor);
    function GetTreeHeaderActiveFilterColor : TColor;
    procedure SetTreeHeaderFilterColor(newValue : TColor);
    function GetTreeHeaderFilterColor : TColor;
    procedure SetTreeHeaderFlat(newValue : Boolean);
    function GetTreeHeaderFlat : Boolean;
    procedure SetAutoResizeColumns(newValue : Boolean);
    function GetAutoResizeColumns : Boolean;
    procedure SetTreeBackground(newValue : TBitmap);
    function GetTreeBackground : TBitmap;
    procedure SetTreeBackgroundType(newValue : TElBkGndType);
    function GetTreeBackgroundType : TElBkGndType;
    procedure SetFlatFocusedScrollbars(newValue : Boolean);
    function GetFlatFocusedScrollbars : Boolean;
    procedure SetGradientEndColor(newValue : TColor);
    function GetGradientEndColor : TColor;
    procedure SetGradientStartColor(newValue : TColor);
    function GetGradientStartColor : TColor;
    procedure SetGradientSteps(newValue : Integer);
    function GetGradientSteps : Integer;
    procedure SetHorzScrollBarStyles(newValue : TElScrollBarStyles);
    function GetHorzScrollBarStyles : TElScrollBarStyles;
    procedure SetVertScrollBarStyles(newValue : TElScrollBarStyles);
    function GetVertScrollBarStyles : TElScrollBarStyles;
    function GetForcedScrollBars: TScrollStyle;
    procedure SetForcedScrollBars(const Value: TScrollStyle);
    function GetFocusedSelectColor_Tree: TColor;
    procedure SetFocusedSelectColor_Tree(const Value: TColor);
    function GetTreeHeaderHeight: integer;
    procedure SetTreeHeaderHeight(const Value: integer);
    function GetHeaderInvertSortArrows_FTree: boolean;
    procedure SetHeaderInvertSortArrows_FTree(const Value: boolean);
    function GetLeftPosition_FTree: integer;
    procedure SetLeftPosition_FTree(const Value: integer);
    function GetLinesColor_FTree: TColor;
    function GetLinesStyle_FTree: TPenStyle;
    procedure SetLinesColor_FTree(const Value: TColor);
    procedure SetLinesStyle_FTree(const Value: TPenStyle);
    function GetLockHeaderHeight_FTree: boolean;
    procedure SetLockHeaderHeight_FTree(const Value: boolean);
    function GetMoveColumnOnDrag_FTree: boolean;
    function GetMoveFocusOnCollapse_FTree: boolean;
    procedure SetMoveColumnOnDrag_FTree(const Value: boolean);
    procedure SetMoveFocusOnCollapse_FTree(const Value: boolean);
    function GetNoBlendSelected: boolean;
    procedure SetNoBlendSelected(const Value: boolean);
    function GetScrollBackground: boolean;
    procedure SetScrollBackground(const Value: boolean);
    function GetSelectColumn: integer;
    procedure SetSelectColumn(const Value: integer);
    procedure StartDrag_FTreeTransfer(Sender: TObject;
      var DragObject: TDragObject);
    function GetTreeActiveBorderType: TElFlatBorderType;
    function GetTreeInactiveBorderType: TElFlatBorderType;
    procedure SetTreeActiveBorderType(const Value: TElFlatBorderType);
    procedure SetTreeInactiveBorderType(const Value: TElFlatBorderType);
    procedure SetStorage_FTree(newValue : TElIniFile);
    function  GetStorage_FTree : TElIniFile;
    function GetAlwaysKeepFocus: Boolean;
    procedure SetAlwaysKeepFocus(Value: Boolean);
    function GetAdjustMultilineHeight: Boolean;
    procedure SetAdjustMultilineHeight(Value: Boolean);
    procedure SetBarStyleVerticalLines(Value: Boolean);
    function GetBarStyleVerticalLines: Boolean;
    function GetChangeDelay: Integer;
    procedure SetChangeDelay(Value: Integer);
    function GetHorzDivLinesColor: TColor;
    procedure SetHorzDivLinesColor(Value: TColor);
    function GetDragTrgDrawMode: TDragTargetDraw;
    procedure SetDragTrgDrawMode(Value: TDragTargetDraw);
    function GetDragExpandDelay: Integer;
    procedure SetDragExpandDelay(Value: Integer);
    function GetDragRectAcceptColor: TColor;
    procedure SetDragRectAcceptColor(Value: TColor);
    function GetDragRectDenyColor: TColor;
    procedure SetDragRectDenyColor(Value: TColor);
    function GetExpandOnDragOver: Boolean;
    procedure SetExpandOnDragOver(Value: Boolean);
    function GetFocusedSelectTextColor: TColor;
    procedure SetFocusedSelectTextColor(Value: TColor);
    function GetHeaderColor: TColor;
    procedure SetHeaderColor(Value: TColor);
    function GetHeaderWrapCaptions: Boolean;
    procedure SetHeaderWrapCaptions(Value: Boolean);
    function GetHideFocusRect: Boolean;
    procedure SetHideFocusRect(Value: Boolean);
    function GetHideSelectColor: TColor;
    procedure SetHideSelectColor(Value: TColor);
    function GetHideSelectTextColor: TColor;
    procedure SetHideSelectTextColor(Value: TColor);
    function GetHideSelection: Boolean;
    procedure SetHideSelection(Value: Boolean);
    function GetIncrementalSearch: Boolean;
    procedure SetIncrementalSearch(Value: Boolean);
    function GetItemIndent: Integer;
    procedure SetItemIndent(Value: Integer);
    function GetLineHintColor: TColor;
    procedure SetLineHintColor(Value: TColor);
    function GetLineHintTimeout: Integer;
    procedure SetLineHintTimeout(Value: Integer);
    function GetLineHintType: TLineHintType;
    procedure SetLineHintType(Value: TLineHintType);
    function GetPlusMinusTransparent: Boolean;
    procedure SetPlusMinusTransparent(Value: Boolean);
    function GetRightClickSelect: Boolean;
    procedure SetRightClickSelect(Value: Boolean);
    function GetRowHotTrack: Boolean;
    procedure SetRowHotTrack(Value: Boolean);
    function GetScrollbarOpposite: Boolean;
    procedure SetScrollbarOpposite(Value: Boolean);
    function GetTrackColor: TColor;
    procedure SetTrackColor(Value: TColor);
    function GetUseCustomScrollBars: Boolean;
    procedure SetUseCustomScrollBars(Value: Boolean);
    function GetVerticalLinesLong: Boolean;
    procedure SetVerticalLinesLong(Value: Boolean);
    function GetUseSystemHintColors: Boolean;
    procedure SetUseSystemHintColors(Value: Boolean);
    function GetOnHeaderSectionMeasure: TMeasureSectionEVent;
    procedure SetOnHeaderSectionMeasure(Value: TMeasureSectionEVent);
    function GetOnApplyVisFilter: TApplyVisFilterEvent;
    procedure SetOnApplyVisFilter(Value: TApplyVisFilterEvent);
    function GetOnAfterSelectionChange: TNotifyEvent;
    procedure SetOnAfterSelectionChange(Value: TNotifyEvent);
    function GetOnItemChecked: TOnItemCheckedEvent;
    procedure SetOnItemChecked(Value: TOnItemCheckedEvent);
    function GetOnSortBegin: TNotifyEvent;
    procedure SetOnSortBegin(Value: TNotifyEvent);
    function GetOnSortEnd: TNotifyEvent;
    procedure SetOnSortEnd(Value: TNotifyEvent);
    {$ifdef HAS_HTML_RENDER}
    function GetOnHTMLImageNeeded: TElHTMLImageNeededEvent;
    procedure SetOnHTMLImageNeeded(Value: TElHTMLImageNeededEvent);
    {$endif}
    function GetStripedOddColor: TColor;
    procedure SetStripedOddColor(Value: TColor);
    function GetStripedEvenColor: TColor;
    procedure SetStripedEvenColor(Value: TColor);
    function GetStripedItems: Boolean;
    procedure SetStripedItems(Value: Boolean);

    procedure WMChar(var Message: TMessage); message WM_CHAR;
    procedure WMKeyDown(var Message: TMessage); message WM_KEYDOWN;
    procedure WMKeyUp(var Message: TMessage); message WM_KEYUP;
    procedure WMSysKeyDown(var Message: TMessage); message WM_SYSKEYDOWN;
    procedure WMSysKeyUp(var Message: TMessage); message WM_SYSKEYUP;
    procedure WMGetDlgCode(var Message: TWMGetDlgCode); message WM_GETDLGCODE;
  protected
    { Protected declarations }
    FCloseOnClick: Boolean;
    FSizeableTree: Boolean;
    FAdjustDropDownPos: Boolean;
    procedure TriggerDropEvent(Dropped : boolean); virtual;
    procedure KeyPress(var Key : Char); override;
    procedure TriggerNewTextSelectionEvent; virtual;
    procedure KeyDown(var Key : Word; Shift : TShiftState); override;
    procedure MouseDown(Button : TMouseButton; Shift : TShiftState; X, Y : Integer); override;
    function GetHintType: TElHintType;
    procedure SetHintType(Value: TElHintType);
    procedure WMActivateApp(var Msg : TWMActivateApp); message WM_ACTIVATEAPP;
    procedure WMKillFocus(var Msg: TMessage); message WM_KILLFOCUS;
    procedure CNCommand(var Message: TWMCommand); message CN_COMMAND;
    procedure WMLButtonUp(var Message: TWMLButtonUp); message WM_LBUTTONUP;
    procedure WMMButtonDblClk(var Message: TWMMButtonDblClk); message 
        WM_LBUTTONDBLCLK;
    procedure EMSetReadOnly(var Msg : TMessage); message EM_SETREADONLY;
    procedure WMLButtonDown(var Message: TWMLButtonDown); message WM_LBUTTONDOWN;
    procedure WMContextMenu(var Message: TMessage); message WM_CONTEXTMENU;
    procedure WMSetFocus(var Msg: TMessage); message WM_SETFOCUS;
    procedure WMMouseMove(var Message: TMessage); message WM_MOUSEMOVE;
    procedure WMCancelMode(var Message: TMessage); message WM_CANCELMODE;
    function GetVertDivLinesColor: TColor;
    procedure SetVertDivLinesColor(Value: TColor);
    procedure CMCancelMode(var Msg: TCMCancelMode); message CM_CANCELMODE;
    function GetHeaderSections: TElHeaderSections;
    procedure SetHeaderSections(Value: TElHeaderSections);
    function GetHeaderImages: TImageList;
    procedure SetHeaderImages(Value: TImageList);
    function GetMultiSelectLevel: Integer;
    procedure SetMultiSelectLevel(Value: Integer);
    function GetDragScrollInterval: Integer;
    procedure SetDragScrollInterval(Value: Integer);
    function GetMouseFrameSelect: Boolean;
    procedure SetMouseFrameSelect(Value: Boolean);
    function CreateTree: TCustomElTree; virtual;
    function GetShowLeafButton: Boolean;
    procedure SetShowLeafButton(Value: Boolean);
    function GetLeafPicture: TBitmap;
    procedure SetLeafPicture(Value: TBitmap);
    //function GetExplorerEditMode: Boolean;
    // procedure SetExplorerEditMode(Value: Boolean);
    function GetHeaderFont: TFont;
    procedure SetHeaderFont(Value: TFont);
    function GetHeaderUseTreeFont: Boolean;
    procedure SetHeaderUseTreeFont(Value: Boolean);
    procedure SetSizeableTree(Value: Boolean);
    procedure SetUseXPThemes(const Value : boolean); override;
    procedure Loaded; override;
    function IsButtonWidthStored: Boolean;
    property OnApplyVisFilter: TApplyVisFilterEvent read GetOnApplyVisFilter write
        SetOnApplyVisFilter;
  public
    { Public declarations }
    constructor Create(AOwner : TComponent); override;
    destructor Destroy; override;
    procedure Assign(Source : TPersistent); override;
    function GetTree : TElTree;

    property SelectionList : TElList read GetSelectionList; { Public }
    property Dropped : Boolean read FDropped write SetDropped; { Public }
    property Selection : TElTreeItem read GetSelection write SetSelection; { Published }
  published
    property ButtonWidth stored IsButtonWidthStored;

    property TopMargin;
    property LeftMargin;
    property RightMargin;
    property AutoSize;
    property RTLContent;
    property BorderSides;
    property PasswordChar;
    property MaxLength;
    property Transparent;
    property WantTabs;
    property HandleDialogKeys;
    property HideSelection;
    property TabSpaces;
    {$ifdef ELPACK_COMPLETE}
    property ImageForm;
    {$endif}
    property WordWrap;

    property OnMouseEnter;
    property OnMouseLeave;
    property OnResize;
    property OnChange;
    property OnSelectionChange;

    property ActiveBorderType;
    property ButtonFlat;
    property ButtonColor;
    property Flat;
    property InactiveBorderType;
    property LineBorderActiveColor;
    property LineBorderInactiveColor;

    property Align;
    property Color;
    property Ctl3D;
    property Cursor;
    property DragCursor;
    property DragMode;
    property Enabled;
    property Font;
    property ParentColor;
    property ParentCtl3D;
    property ParentFont;
    property ParentShowHint;
    property PopupMenu;
    property ShowHint;
    property Text;
    property TabStop;
    property TabOrder;
    property Visible;

    { Exposed subcomponent properties: }
    property AutoLineHeight : Boolean read GetAutoLineHeight_FTree write SetAutoLineHeight_FTree;
    property TreeBkColor : TColor read GetBkColor_FTree write SetBkColor_FTree;
    property TreeChangeStateImage : Boolean read GetChangeStateImage_FTree write SetChangeStateImage_FTree;
    property TreeCtl3D : Boolean read GetCtl3D_FTree write SetCtl3D_FTree;
    property TreeCursor : TCursor read GetCursor write SetCursor;
    property DraggableSections : Boolean read GetDraggableSections write SetDraggableSections;
    property TreeFocusedSelectColor: TColor read GetFocusedSelectColor_Tree write SetFocusedSelectColor_Tree;
    property TreeFont : TFont read GetFont_FTree write SetFont_FTree;
    property TreeHeaderHotTrack : Boolean read GetHeaderHotTrack_FTree write SetHeaderHotTrack_FTree;
    property TreeHeaderImages : TImageList read GetHeaderImages_FTree write SetHeaderImages_FTree;
    property TreeHeaderInvertSortArrows: boolean read GetHeaderInvertSortArrows_FTree write SetHeaderInvertSortArrows_FTree;
    property TreeHeaderSections : TElHeaderSections read GetHeaderSections_FTree write SetHeaderSections_FTree;
    property TreeHideHintOnMove : Boolean read GetHideHintOnMove_FTree write SetHideHintOnMove_FTree;
    property TreeHideHintOnTimer : Boolean read GetHideHintOnTimer_FTree write SetHideHintOnTimer_FTree;
    property TreeHideHorzScrollBar : Boolean read GetHideHorzScrollBar_FTree write SetHideHorzScrollBar_FTree;
    property TreeHideVertScrollBar : Boolean read GetHideVertScrollBar_FTree write SetHideVertScrollBar_FTree;
    property TreeHorizontalLines : Boolean read GetHorizontalLines_FTree write SetHorizontalLines_FTree;
    property TreeLeftPosition: integer read GetLeftPosition_FTree write SetLeftPosition_FTree;
    property Images : TImageList read GetImages_FTree write SetImages_FTree;
    property Images2 : TImageList read GetTreeImages2 write SetTreeImages2;
    property Items : TElTreeItems read GetItems_FTree write SetItems_FTree;
    property LineHintMode : THintModes read GetLineHintMode write SetLineHintMode;
    property MainTreeColumn : Integer read GetMainTreeColumn write SetMainTreeColumn;
    property MultiSelect : Boolean read GetMultiSelect write SetMultiSelect;
    property NoBlendSelected: boolean read GetNoBlendSelected write SetNoBlendSelected;
    property OwnerDrawByColumn : Boolean read GetOwnerDrawByColumn write SetOwnerDrawByColumn;
    property OwnerDrawMask : string read GetOwnerDrawMask write SetOwnerDrawMask;
    property TreeParentCtl3D : Boolean read GetParentCtl3D write SetParentCtl3D;
    property TreeParentFont : Boolean read GetParentFont write SetParentFont;
    property TreeParentShowHint : Boolean read GetParentShowHint write SetParentShowHint;
    property TreeScrollBackground: boolean read GetScrollBackground write SetScrollBackground;
    property RowSelect : Boolean read GetRowSelect write SetRowSelect;
    property ScrollTracking : Boolean read GetScrollTracking write SetScrollTracking;
    property SelectColumn: integer read GetSelectColumn write SetSelectColumn;
    property SelectionMode : TSTSelModes read GetSelectionMode write SetSelectionMode;
    property ShowButtons : Boolean read GetShowButtons write SetShowButtons;
    property ShowColumns : Boolean read GetShowColumns write SetShowColumns;
    property TreeShowHint : Boolean read GetShowHint write SetShowHint;
    property ShowImages : Boolean read GetShowImages write SetShowImages;
    property ShowLines : Boolean read GetShowLines write SetShowLines;
    property ShowRoot : Boolean read GetShowRoot write SetShowRoot;
    property SortDir : TSortDirs read GetSortDir write SetSortDir;
    property SortMode : TSortModes read GetSortMode write SetSortMode;
    property SortSection : Integer read GetSortSection write SetSortSection;
    property SortType : TSortTypes read GetSortType write SetSortType;
    property TextColor : TColor read GetTextColor write SetTextColor;
    property Tracking : Boolean read GetTracking write SetTracking;
    property VerticalLines : Boolean read GetVerticalLines write SetVerticalLines;
    property AlwaysKeepSelection : Boolean read GetAlwaysKeepSelection_FTree write SetAlwaysKeepSelection_FTree;
    
    property AutoExpand : Boolean read GetAutoExpand_FTree write SetAutoExpand_FTree;
    property AutoLookup : Boolean read GetAutoLookup_FTree write SetAutoLookup_FTree;
    property BarStyle : Boolean read GetBarStyle_FTree write SetBarStyle_FTree;
    property CustomPlusMinus : Boolean read GetCustomPlusMinus_FTree write SetCustomPlusMinus_FTree;
    property DeselectChildrenOnCollapse : Boolean read GetDeselectChildrenOnCollapse_FTree write SetDeselectChildrenOnCollapse_FTree;
    property DragImageMode : TDragImgMode read GetTreeDragImageMode write SetTreeDragImageMode;
    property DrawFocusRect : Boolean read GetTreeDrawFocusRect write SetTreeDrawFocusRect;
    property ForcedScrollBars: TScrollStyle read GetForcedScrollBars write SetForcedScrollBars;
    property FullRowSelect : Boolean read GetTreeFullRowSelect write SetTreeFullRowSelect;
    property MinusPicture : TBitmap read GetMinusPicture_FTree write SetMinusPicture_FTree;
    property MoveColumnOnDrag: boolean read GetMoveColumnOnDrag_FTree write SetMoveColumnOnDrag_FTree;
    property MoveFocusOnCollapse: boolean read GetMoveFocusOnCollapse_FTree write SetMoveFocusOnCollapse_FTree;
    property PlusPicture : TBitmap read GetPlusPicture_FTree write SetPlusPicture_FTree;
    property ShowCheckboxes : Boolean read GetShowCheckboxes_FTree write SetShowCheckboxes_FTree;
    property StickyHeaderSections : Boolean read GetStickyHeaderSections_FTree write SetStickyHeaderSections_FTree;
    property Storage : TElIniFile read GetStorage_FTree write SetStorage_FTree;
    {$ifdef SUPPORT_STORAGE}
    property StoragePath : string read GetStoragePath_FTree write SetStoragePath_FTree;
    {$endif}
    property DropWidth : Integer read FDropWidth write SetDropWidth;
    property DropHeight : Integer read FDropHeight write SetDropHeight;

    property LineHeight : Integer read GetLineHeight_FTree write SetLineHeight_FTree;
    property LinesColor: TColor read GetLinesColor_FTree write SetLinesColor_FTree;
    property LinesStyle: TPenStyle read GetLinesStyle_FTree write SetLinesStyle_FTree;
    property LockHeaderHeight: boolean read GetLockHeaderHeight_FTree write SetLockHeaderHeight_FTree;
    property ReadOnly : Boolean read GetReadOnly write SetReadOnly default False; { Published }
    property PathSeparator : Char read GetPathSeparator write SetPathSeparator;
    property FilteredVisibility : Boolean read GetFilteredVisibility_FTree write SetFilteredVisibility_FTree;
    property RightAlignedText : Boolean read GetRightAlignedText_FTree write SetRightAlignedText_FTree;
    property RightAlignedTree : Boolean read GetRightAlignedTree_FTree write SetRightAlignedTree_FTree;

    { Inherited events: }
    property OnClick;
    property OnDblClick;
    property OnDragDrop;
    property OnDragOver;
    property OnEndDrag;
    property OnEnter;
    property OnExit;
    property OnKeyDown;
    property OnKeyPress;
    property OnKeyUp;
    property OnMouseDown;
    property OnMouseMove;
    property OnMouseUp;
    { Exposed subcomponent events: }
    property OnCompareItems : TOnCompareItems read FOnCompareItems write FOnCompareItems;
    property OnHeaderColumnClick : TColumnNotifyEvent read FOnHeaderColumnClick write FOnHeaderColumnClick;
    property OnHeaderColumnDraw : TElSectionRedrawEvent read FOnHeaderColumnDraw write FOnHeaderColumnDraw;
    property OnHeaderColumnMove : TElColumnMoveEvent read FOnHeaderColumnMove write FOnHeaderColumnMove;
    property OnHeaderColumnResize : TColumnNotifyEvent read FOnHeaderColumnResize write FOnHeaderColumnResize;
    property OnItemChange : TOnItemChangeEvent read FOnItemChange write FOnItemChange;
    property OnItemCollapse : TOnItemExpandEvent read FOnItemCollapse write FOnItemCollapse;
    property OnItemCollapsing : TOnItemExpanding read FOnItemCollapsing write FOnItemCollapsing;
    property OnItemDeletion : TOnItemExpandEvent read FOnItemDeletion write FOnItemDeletion;
    property OnItemDraw : TOnItemDrawEvent read FOnItemDraw write FOnItemDraw;
    property OnItemExpand : TOnItemExpandEvent read FOnItemExpand write FOnItemExpand;
    property OnItemExpanding : TOnItemExpanding read FOnItemExpanding write FOnItemExpanding;
    property OnItemFocused : TNotifyEvent read FOnItemFocused write FOnItemFocused;
    property OnItemPicDraw : TOnPicDrawEvent read FOnItemPicDraw write FOnItemPicDraw;
    property OnScroll: ElTree.TElScrollEvent read FOnScroll_FTree write FOnScroll_FTree;
    property OnShowLineHint : TOnShowHintEvent read FOnShowLineHint write FOnShowLineHint;
    property OnTreeResize: TNotifyEvent read FOnResize_FTree write FOnResize_FTree;


    property OnCellStyleLoad : TCellStyleSaveEvent read FOnCellStyleLoad_FTree write FOnCellStyleLoad_FTree;
    property OnCellStyleSave : TCellStyleSaveEvent read FOnCellStyleSave_FTree write FOnCellStyleSave_FTree;
    property OnComboEditShow : TComboEditShowEvent read FOnComboEditShow_FTree write FOnComboEditShow_FTree;
    property OnHeaderLookup : TElHeaderLookupEvent read FOnHeaderLookup_FTree write FOnHeaderLookup_FTree;
    property OnHeaderLookupDone : TElHeaderLookupDoneEvent read FOnHeaderLookupDone_FTree write FOnHeaderLookupDone_FTree;
    property OnHeaderResize : TNotifyEvent read FOnHeaderResize_FTree write FOnHeaderResize_FTree;
    property OnHeaderSectionAutoSize: TColumnNotifyEvent read FOnHeaderSectionAutoSize_FTree write FOnHeaderSectionAutoSize_FTree;
    property OnHeaderSectionCollapse : THeaderSectionEvent read FOnHeaderSectionCollapse_FTree write FOnHeaderSectionCollapse_FTree;
    property OnHeaderSectionExpand : THeaderSectionEvent read FOnHeaderSectionExpand_FTree write FOnHeaderSectionExpand_FTree;
    property OnHeaderSectionFilterCall: TColumnNotifyEvent read FOnHeaderSectionFilterCall_FTree write FOnHeaderSectionFilterCall_FTree;
    property OnHorzScrollDrawPart: TElScrollDrawPartEvent read FOnHorzScrollDrawPart_FTree write FOnHorzScrollDrawPart_FTree;
    property OnHorzScrollHintNeeded: TElScrollHintNeededEvent read FOnHorzScrollHintNeeded_FTree write FOnHorzScrollHintNeeded_FTree;
    property OnHotTrack : THotTrackEvent read FOnHotTrack_FTree write FOnHotTrack_FTree;
    property OnItemLoad : TItemSaveEvent read FOnItemLoad_FTree write FOnItemLoad_FTree;
    property OnItemPicDraw2 : TOnPicDrawEvent read FOnItemPicDraw2_FTree write FOnItemPicDraw2_FTree;
    property OnItemSave : TItemSaveEvent read FOnItemSave_FTree write FOnItemSave_FTree;
    property OnItemSelectedChange : TItemSelChangeEvent read FOnItemSelectedChange_FTree write FOnItemSelectedChange_FTree;
{$IFDEF ELTREE_USE_OLE_DRAGDROP}
{$IFNDEF B_3}
{$IFNDEF VER90}
    property OnOleDragFinish : TOleDragFinishEvent read FOnOleDragFinish_FTree write FOnOleDragFinish_FTree;
    property OnOleDragStart : TOleDragStartEvent read FOnOleDragStart_FTree write FOnOleDragStart_FTree;
    property OnOleTargetDrag : TTargetDragEvent read FOnOleTargetDrag_FTree write FOnOleTargetDrag_FTree;
    property OnOleTargetDrop : TTargetDropEvent read FOnOleTargetDrop_FTree write FOnOleTargetDrop_FTree;
{$ENDIF}
{$ENDIF}
{$ENDIF}
    property OnTryEdit : TTryEditEvent read FOnTryEdit_FTree write FOnTryEdit_FTree;
    property OnValidateCombo : TValidateComboEvent read FOnValidateCombo_FTree write FOnValidateCombo_FTree;
    property OnValidateInplaceEdit : TOnValidateEvent read FOnValidateInplaceEdit_FTree write FOnValidateInplaceEdit_FTree;
    property OnVertScrollDrawPart: TElScrollDrawPartEvent read FOnVertScrollDrawPart_FTree write FOnVertScrollDrawPart_FTree;
    property OnVertScrollHintNeeded: TElScrollHintNeededEvent read FOnVertScrollHintNeeded_FTree write FOnVertScrollHintNeeded_FTree;
    property OnNewTextSelection : TNotifyEvent read FOnNewTextSelection write FOnNewTextSelection;
    property OnTreeKeyDown : TKeyEvent read FOnTreeKeyDown write FOnTreeKeyDown;
    property OnTreeKeyPress : TKeyPressEvent read FOnTreeKeyPress write FOnTreeKeyPress;
    property OnTreeKeyUp : TKeyEvent read FOnTreeKeyUp write FOnTreeKeyUp;
    property OnTreeMouseDown : TMouseEvent read FOnTreeMouseDown write FOnTreeMouseDown;
    property OnTreeMouseMove : TMouseMoveEvent read FOnTreeMouseMove write FOnTreeMouseMove;
    property OnTreeMouseUp : TMouseEvent read FOnTreeMouseUp write FOnTreeMouseUp;

    property OnDrop : TElComboDropEvent read FOnDrop write FOnDrop;

{$IFDEF VCL_4_USED}
    property Anchors;
    property Action;
    property Constraints;
    property DockOrientation;
    property Floating;
    property BevelKind;
    property DoubleBuffered;
    property DragKind;
{$ENDIF}
    property CheckBoxGlyph : TBitmap read GetCheckBoxGlyph_FTree write SetCheckBoxGlyph_FTree;
    property CustomCheckboxes : Boolean read GetCustomCheckboxes_FTree write SetCustomCheckboxes_FTree;
    property RadioButtonGlyph : TBitmap read GetRadioButtonGlyph_FTree write SetRadioButtonGlyph_FTree;
    property UnderlineTracked : Boolean read GetUnderlineTracked_FTree write SetUnderlineTracked_FTree;
    property AutoProcessSelection : Boolean read FAutoProcessSelection write FAutoProcessSelection default true; { Published }
    property DoInplaceEdit : Boolean read GetDoInplaceEdit write SetDoInplaceEdit;
    property ShowRootButtons : Boolean read GetShowRootButtons write SetShowRootButtons;
    property OnEditRequest : TEditRequestEvent read FOnEditRequest write FOnEditRequest;
    property TreeActiveBorderType: TElFlatBorderType read GetTreeActiveBorderType write SetTreeActiveBorderType;
    property TreeFlat : Boolean read GetTreeFlat write SetTreeFlat;
    property TreeHeaderActiveFilterColor : TColor read GetTreeHeaderActiveFilterColor write SetTreeHeaderActiveFilterColor;
    property TreeHeaderFilterColor : TColor read GetTreeHeaderFilterColor write SetTreeHeaderFilterColor;
    property TreeHeaderFlat : Boolean read GetTreeHeaderFlat write SetTreeHeaderFlat;
    property TreeHeaderHeight: integer read GetTreeHeaderHeight write SetTreeHeaderHeight;
    property TreeInactiveBorderType: TElFlatBorderType read GetTreeInactiveBorderType write SetTreeInactiveBorderType;
    property AutoResizeColumns : Boolean read GetAutoResizeColumns write SetAutoResizeColumns;
    property TreeBackground : TBitmap read GetTreeBackground write SetTreeBackground;
    property TreeBackgroundType : TElBkGndType read GetTreeBackgroundType write SetTreeBackgroundType;
    property FlatFocusedScrollbars : Boolean read GetFlatFocusedScrollbars write SetFlatFocusedScrollbars;
    property GradientEndColor : TColor read GetGradientEndColor write SetGradientEndColor;
    property GradientStartColor : TColor read GetGradientStartColor write SetGradientStartColor;
    property GradientSteps : Integer read GetGradientSteps write SetGradientSteps;
    property HorzScrollBarStyles : TElScrollBarStyles read GetHorzScrollBarStyles write SetHorzScrollBarStyles;
    property VertScrollBarStyles : TElScrollBarStyles read GetVertScrollBarStyles write SetVertScrollBarStyles;
    property AlwaysKeepFocus: Boolean read GetAlwaysKeepFocus write 
        SetAlwaysKeepFocus;
    property AdjustMultilineHeight: Boolean read GetAdjustMultilineHeight write
        SetAdjustMultilineHeight;
    property BarStyleVerticalLines: Boolean read GetBarStyleVerticalLines write
        SetBarStyleVerticalLines;
    property ChangeDelay: Integer read GetChangeDelay write SetChangeDelay;
    property HorzDivLinesColor: TColor read GetHorzDivLinesColor write
        SetHorzDivLinesColor;
    property DragTrgDrawMode: TDragTargetDraw read GetDragTrgDrawMode write
        SetDragTrgDrawMode;
    property DragExpandDelay: Integer read GetDragExpandDelay write 
        SetDragExpandDelay;
    property DragRectAcceptColor: TColor read GetDragRectAcceptColor write 
        SetDragRectAcceptColor;
    property DragRectDenyColor: TColor read GetDragRectDenyColor write 
        SetDragRectDenyColor;
    property ExpandOnDragOver: Boolean read GetExpandOnDragOver write 
        SetExpandOnDragOver;
    property FocusedSelectTextColor: TColor read GetFocusedSelectTextColor write 
        SetFocusedSelectTextColor;
    property HeaderColor: TColor read GetHeaderColor write SetHeaderColor;
    property HeaderWrapCaptions: Boolean read GetHeaderWrapCaptions write 
        SetHeaderWrapCaptions;
    property HideFocusRect: Boolean read GetHideFocusRect write SetHideFocusRect;
    property HideSelectColor: TColor read GetHideSelectColor write 
        SetHideSelectColor;
    property HideSelectTextColor: TColor read GetHideSelectTextColor write 
        SetHideSelectTextColor;
    property TreeHideSelection: Boolean read GetHideSelection write SetHideSelection;
    property IncrementalSearch: Boolean read GetIncrementalSearch write 
        SetIncrementalSearch;
    property ItemIndent: Integer read GetItemIndent write SetItemIndent;
    property LineHintColor: TColor read GetLineHintColor write SetLineHintColor;
    property LineHintTimeout: Integer read GetLineHintTimeout write 
        SetLineHintTimeout;
    property LineHintType: TLineHintType read GetLineHintType write SetLineHintType;
    property PlusMinusTransparent: Boolean read GetPlusMinusTransparent write 
        SetPlusMinusTransparent;
    property RightClickSelect: Boolean read GetRightClickSelect write 
        SetRightClickSelect;
    property RowHotTrack: Boolean read GetRowHotTrack write SetRowHotTrack;
    property ScrollbarOpposite: Boolean read GetScrollbarOpposite write 
        SetScrollbarOpposite;
    property TrackColor: TColor read GetTrackColor write SetTrackColor;
    property UseCustomScrollBars: Boolean read GetUseCustomScrollBars write 
        SetUseCustomScrollBars;
    property VerticalLinesLong: Boolean read GetVerticalLinesLong write 
        SetVerticalLinesLong;
    property UseSystemHintColors: Boolean read GetUseSystemHintColors write 
        SetUseSystemHintColors;
    property OnHeaderSectionMeasure: TMeasureSectionEVent read
        GetOnHeaderSectionMeasure write SetOnHeaderSectionMeasure;
    property OnAfterSelectionChange: TNotifyEvent read GetOnAfterSelectionChange 
        write SetOnAfterSelectionChange;
    property OnItemChecked: TOnItemCheckedEvent read GetOnItemChecked write
        SetOnItemChecked;
    property OnSortBegin: TNotifyEvent read GetOnSortBegin write SetOnSortBegin;
    property OnSortEnd: TNotifyEvent read GetOnSortEnd write SetOnSortEnd;
    {$ifdef HAS_HTML_RENDER}
    property OnHTMLImageNeeded: TElHTMLImageNeededEvent read GetOnHTMLImageNeeded
        write SetOnHTMLImageNeeded;
    {$endif}
    property StripedOddColor: TColor read GetStripedOddColor write
        SetStripedOddColor;
    property StripedEvenColor: TColor read GetStripedEvenColor write
        SetStripedEvenColor;
    property StripedItems: Boolean read GetStripedItems write SetStripedItems;
    property HintType: TElHintType read GetHintType write SetHintType;
    property VertDivLinesColor: TColor read GetVertDivLinesColor write
        SetVertDivLinesColor;
    property CloseOnClick: Boolean read FCloseOnClick write FCloseOnClick default
        false;
    property SizeableTree: Boolean read FSizeableTree write SetSizeableTree default
        true;
    property HeaderSections: TElHeaderSections read GetHeaderSections write
        SetHeaderSections;
    property HeaderImages: TImageList read GetHeaderImages write SetHeaderImages;
    property MultiSelectLevel: Integer read GetMultiSelectLevel write
        SetMultiSelectLevel;
    property DragScrollInterval: Integer read GetDragScrollInterval write
        SetDragScrollInterval;
    property MouseFrameSelect: Boolean read GetMouseFrameSelect write
        SetMouseFrameSelect;
    property ShowLeafButton: Boolean read GetShowLeafButton write SetShowLeafButton;
    property LeafPicture: TBitmap read GetLeafPicture write SetLeafPicture;
    //property ExplorerEditMode: Boolean read GetExplorerEditMode write
    //     SetExplorerEditMode;
    property HeaderFont: TFont read GetHeaderFont write SetHeaderFont;
    property HeaderUseTreeFont: Boolean read GetHeaderUseTreeFont write 
        SetHeaderUseTreeFont;
    property AdjustDropDownPos: Boolean read FAdjustDropDownPos write 
        FAdjustDropDownPos default true;
  end; { TElTreeCombo }

implementation
end.
