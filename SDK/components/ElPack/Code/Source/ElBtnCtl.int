{====================================================}
{                                                    }
{   EldoS Visual Components                          }
{                                                    }
{   Copyright (c) 1998-2001, EldoS                   }
{                                                    }
{====================================================}

{$include elpack2.inc}
{$ifdef ELPACK_SINGLECOMP}
{$I ElPack.inc}
{$else}
{$ifdef LINUX}
{$I ../ElPack.inc}
{$else}
{$I ..\ElPack.inc}
{$endif}
{$endif}

(*

Version History
  
03/06/2002

  Added unicode hint

07/26/2001

  Added Unicode support

05/27/2001 (c) Akzhan Abdulin

    Fixed Color property design-time storing issue (clWindow not stored)

*)

unit ElBtnCtl;

interface

uses
{$ifndef CLX_USED}
  Controls,
  Messages,
  Windows,
  Graphics,
{$ifdef VCL_6_USED}
Types,
{$endif}
  Forms,
{$else}
  QTypes,
  QControls,
  QGraphics,
  Qt,
  QForms,
{$endif}
  ElVCLUtils,
  ElStrUtils,
  ElXPThemedControl,
  ElTools,
  Classes
{$IFDEF VCL_4_USED}
{$ifndef CLX_USED}
  , ActnList
{$else}
  , QActnList
{$endif}  
{$ENDIF}
  ;

type
  TElButtonControl = class(TElXPThemedControl)
  private
    function IsCaptionStored: Boolean;
    {$ifndef CLX_USED}
    procedure CMDialogChar(var Message : TCMDialogChar); message CM_DIALOGCHAR;
    {$endif}
  protected
    FTransparent  : boolean;
    FTextDrawType : TElTextDrawType;
    F2000DrawFocus: boolean;
    F2000DrawAccel: boolean;
{$ifndef CLX_USED}
    procedure WMMove(var Msg : TWMMove); message WM_MOVE;
{$endif}
    procedure SetTextDrawType(newValue : TElTextDrawType);
  protected
    ClicksDisabled : boolean;
    FCaption: TElFString;
    {$ifdef ELPACK_UNICODE}
    FHint: WideString;
    {$endif}

    {$ifndef CLX_USED}
    FMoneyFlat: Boolean;
    FMoneyFlatActiveColor: TColor;
    FMoneyFlatInactiveColor: TColor;
    FMoneyFlatDownColor: TColor;
    {$endif}
    {$ifndef MSWINDOWS}
    procedure Changed; virtual;
    {$endif}
    function GetChecked : Boolean; virtual; abstract;
    procedure SetChecked(newValue : Boolean); virtual; abstract;
    {$ifndef CLX_USED}
    procedure WndProc(var Message : TMessage); override;
    {$endif}
    procedure SetTransparent(newValue : Boolean); virtual;
{$IFDEF VCL_4_USED}
    function GetActionLinkClass : TControlActionLinkClass; override;
    procedure ActionChange(Sender : TObject; CheckDefaults : Boolean); override;
{$ENDIF}
    property Checked : Boolean read GetChecked write SetChecked default false; { Protected }
    property Transparent : boolean read FTransparent write SetTransparent default false;
    property TextDrawType : TElTextDrawType read FTextDrawType write SetTextDrawType default tdtNormal; { Published }
    {$ifndef CLX_USED}
    procedure CreateParams(var Params : TCreateParams); override;
    {$endif}
    procedure SetCaption(Value: TElFString);

    function GetThemedClassName: WideString; override;
    function GetUIStateDrawFocus: Boolean;
    function GetUIStateDrawAccel: Boolean;
    procedure WMUpdateUIState(var Message: TMessage); message WM_UPDATEUISTATE;
    procedure WMChangeUIState(var Message: TMessage); message WM_CHANGEUISTATE;
    {$ifndef CLX_USED}
    procedure SetMoneyFlat(Value: Boolean);
    procedure SetMoneyFlatActiveColor(Value: TColor);
    procedure SetMoneyFlatInactiveColor(Value: TColor);
    procedure SetMoneyFlatDownColor(Value: TColor);
    function GetMoneyFlat: Boolean;
    {$endif}

    {$ifdef ELPACK_UNICODE}
    procedure SetHint(Value: WideString);

    {$ifndef CLX_USED}
    procedure CMHintShow(var Message: TMessage); message CM_HINTSHOW;
    {$else}
    function HintShow(var HintInfo : THintInfo): Boolean; override;
    {$endif}
    {$endif}

    property Color nodefault;
    property Caption: TElFString read FCaption write SetCaption stored IsCaptionStored;
    {$ifndef CLX_USED}
    property MoneyFlat: Boolean read GetMoneyFlat write SetMoneyFlat default false;
    property MoneyFlatActiveColor: TColor read FMoneyFlatActiveColor write
        SetMoneyFlatActiveColor stored GetMoneyFlat;
    property MoneyFlatInactiveColor: TColor read FMoneyFlatInactiveColor write
        SetMoneyFlatInactiveColor stored GetMoneyFlat;
    property MoneyFlatDownColor: TColor read FMoneyFlatDownColor write
        SetMoneyFlatDownColor stored GetMoneyFlat;
    {$endif}
  public
    constructor Create(Owner : TComponent); override;
    property UIStateDrawFocus: Boolean read GetUIStateDrawFocus;
    property UIStateDrawAccel: Boolean read GetUIStateDrawAccel;
  published
    {$ifdef ELPACK_UNICODE}
    property Hint: WideString read FHint write SetHint;
    {$endif}
  end;

{$IFDEF VCL_4_USED}

  {$ifndef CLX_USED}
  TElButtonActionLink = class(TWinControlActionLink)
  {$else}
  TElButtonActionLink = class(TWidgetControlActionLink)
  {$endif}
  protected
    FClient : TElButtonControl;
    {$ifndef CLX_USED}
    procedure SetCaption(const Value: string); override;
    {$else}
    procedure SetCaption(const Value: TCaption); override;
    {$endif}
    procedure AssignClient(AClient : TObject); override;
    function IsCheckedLinked : Boolean; override;
    function IsImageIndexLinked : Boolean; override;
    procedure SetChecked(Value : Boolean); override;
    {$ifndef CLX_USED}
    procedure SetHint(const Value: string); override;
    {$else}
    procedure SetHint(const Value: WideString); override;
    {$endif}
  end;

{$ENDIF}
implementation
end.
