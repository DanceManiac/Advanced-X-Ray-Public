 {====================================================}
{                                                    }
{   EldoS Visual Components                          }
{                                                    }
{   Copyright (c) 1998-2001, EldoS                   }
{                                                    }
{====================================================}

{$include elpack2.inc}
{$ifdef ELPACK_SINGLECOMP}
{$I ElPack.inc}
{$else}
{$ifdef LINUX}
{$I ../ElPack.inc}
{$else}
{$I ..\ElPack.inc}
{$endif}
{$endif}

unit ElObjList;

interface

uses
  SysUtils, Classes, ElList, ElIni;

type
  TElObjectListItem = class;

  TElObjectListItemClass = class of TElObjectListItem;
  
  TElObjListSortCompare = function(Item1,
                                   Item2: TElObjectListItem;
                                   Cargo: Pointer): Integer;  

  {:
  }
  TElObjectList = class (TElList)
  private
    FLastID: Cardinal;
    FListItemClass: TElObjectListItemClass;
    FOwner: TPersistent;
    function GetItems(Index: Integer): TElObjectListItem;
    procedure SetItems(Index: Integer; Value: TElObjectListItem);
  protected
    {$ifndef D_2}
    function GetOwner: TPersistent; override;
    {$endif}
  public
    constructor Create(Owner : TPersistent; ListItemClass :  
        TElObjectListItemClass);
    function Add: TElObjectListItem;
    procedure AddItem(Item : TElObjectListItem);
    procedure AfterLoad(IniFile : TElIniFile; KeyName : string); virtual;
    procedure AfterSave(IniFile : TElIniFile; KeyName : string); virtual;
    procedure Assign(Source : TPersistent); override;
    procedure BeforeLoad(IniFile : TElIniFile; KeyName : string); virtual;
    procedure BeforeSave(IniFile : TElIniFile; KeyName : string); virtual;
    function First: TElObjectListItem;
    function IndexOf(Item: TElObjectListItem): Integer;
    function IndexOfBack(StartIndex: integer; Item: TElObjectListItem): Integer;
    function IndexOfFrom(StartIndex: integer; Item: TElObjectListItem): Integer;
    procedure Insert(Index: Integer; Item: TElObjectListItem);
    function Last: TElObjectListItem;
    procedure Sort(Compare: TElObjListSortCompare; Cargo: Pointer);
    property Items[Index: Integer]: TElObjectListItem read GetItems write 
        SetItems; default;
    property ListItemClass: TElObjectListItemClass read FListItemClass write 
        FListItemClass;
  published
    property LastID: Cardinal read FLastID;
  end;
  
  {:
  }
  TElObjectListItem = class (TPersistent)
  private
    FID: Cardinal;
    FList: TElObjectList;
    FLoading: Boolean;
  protected
    {$ifndef D_2}
    function GetOwner: TPersistent; override;
    {$endif}
  public
    constructor Create(List : TElObjectList); virtual;
    destructor Destroy; override;
    procedure AfterLoad(IniFile : TElIniFile; KeyName : string); virtual;
    procedure AfterSave(IniFile : TElIniFile; KeyName : string); virtual;
    procedure BeforeLoad(IniFile : TElIniFile; KeyName : string); virtual;
    procedure BeforeSave(IniFile : TElIniFile; KeyName : string); virtual;
    property ID: Cardinal read FID;
    property List: TElObjectList read FList;
    property Loading: Boolean read FLoading write FLoading;
  end;
  
  {:
  }
  TElHeteroObjectList = class (TElObjectList)
  public
    procedure BeforeLoad(IniFile : TElIniFile; KeyName : string); override;
    procedure BeforeSave(IniFile : TElIniFile; KeyName : string); override;
  end;


implementation
end.
