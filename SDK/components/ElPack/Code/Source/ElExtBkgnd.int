
{====================================================}
{                                                    }
{   EldoS Visual Components                          }
{                                                    }
{   Copyright (c) 1998-2001, EldoS                   }
{                                                    }
{====================================================}

{$include elpack2.inc}
{$ifdef ELPACK_SINGLECOMP}
{$I ElPack.inc}
{$else}
{$ifdef LINUX}
{$I ../ElPack.inc}
{$else}
{$I ..\ElPack.inc}
{$endif}
{$endif}

unit ElExtBkgnd;

interface

uses
  {$ifndef CLX_USED}
  Windows,
  Graphics,
{$ifdef VCL_6_USED}
Types,
{$endif}
  {$else}
  Qt,
  Types,
  QTypes,
  QGraphics,
  {$endif}
  Classes,
  SysUtils,
  ElTools,
  ElVCLUtils;

{$ifndef CLX_USED}

procedure ExtDrawBkgnd2(DC : HDC; Wnd : HWND; R, DocRect : TRect; Origin : TPoint; FillColor : TColor;
          SourceBitmap : Graphics.TBitmap; DrawMode : TElBkGndType);

procedure ExtDrawBkgnd(DC : HDC; Wnd : HWND; RectDoc, RectWindow, RectDC, RectOnDC : TRect;
  InvertedMode : boolean; FillColor, OverColor : TColor; DoBlend : boolean;
  SourceBitmap : Graphics.TBitmap; DrawMode : TElBkGndType);

{$else}

procedure ExtDrawBkgnd2(DC : QPainterH; Wnd : QWidgetH; R, DocRect : TRect; Origin : TPoint; FillColor : TColor;
          SourceBitmap : TBitmap; DrawMode : TElBkGndType);

procedure ExtDrawBkgnd(DC : QPainterH; Wnd : QWidgetH; RectDoc, RectWindow, RectDC, RectOnDC : TRect;
  InvertedMode : boolean; FillColor, OverColor : TColor; DoBlend : boolean;
  SourceBitmap : TBitmap; DrawMode : TElBkGndType);

{$endif}

// RectWindow - the Window Rectangle. Just to calculate window's width and height
// RectDC - the DC full rectangle relation to RectWindow
// RectOnDC - the rectangle relative to DC coordinates to which the bitmap is drawn
// DrawMode = (bgtTileBitmap, bgtStretchBitmap, bgtColorFill, bgtCenterBitmap);

implementation
end.
