{====================================================}
{                                                    }
{   EldoS Visual Components                          }
{                                                    }
{   Copyright (c) 1998-2002, EldoS                   }
{                                                    }
{====================================================}

{$include elpack2.inc}
{$ifdef ELPACK_SINGLECOMP}
{$I ElPack.inc}
{$else}
{$ifdef LINUX}
{$I ../ElPack.inc}
{$else}
{$I ..\ElPack.inc}
{$endif}
{$endif}

(*

Version History

03/12/2002

  Fixed positioning of invisible groups in design-time
  Fixed theme painting when caption is not visible

*)

unit ElExpBar;

interface

uses
    Windows,
    Classes,
    SysUtils,
    Graphics,
    Messages,
    Controls,
{$ifdef VCL_6_USED}
Types,
{$endif}

    ElTools,
    ElList,
    ElPopBtn,
    ElScrollBox,
    ElStrToken,
    ElPanel,
    ElIni,
    ElUxTheme,
    ElTmSchema,
    ElAdvPanel;

type

    EExplorerBarError = class(Exception);

    TElExplorerBar = class;

    TElExplorerBarGroupButton = class(TElAdvCaptionButton)
    protected
      procedure DrawThemedBackground(Canvas : TCanvas); override;
      function GetThemedClassName: WideString; override;
      function GetThemePartID: Integer; override;
      function GetThemeStateID: Integer; override;
    end;

    TElExplorerBarGroup = class(TCustomElAdvancedPanel)
    private
    protected
      FAlign: TAlign;
      procedure TriggerMinimizeEvent; override;
      procedure TriggerRestoreEvent; override;
      procedure Resize; override;
      procedure CMVisibleChanged(var Message: TMessage); message CM_VISIBLECHANGED;
      procedure WMMove(var Message: TMessage); message WM_MOVE;
      function GetThemedClassName: WideString; override;
      procedure DrawThemedBackground; override;
      function CreateButton: TElAdvCaptionButton; override;
      function CreatePanel: TElAdvCaptionPanel; override;
      procedure WMEraseBkGnd(var Msg : TWMEraseBkGnd); message WM_EraseBkgnd;
      procedure SetUseXPThemes(const Value: Boolean); override;
      procedure CreateWnd; override;
    public
      constructor Create(AOwner : TComponent); override;
      function GetButtonWidth: Integer; override;
      function GetCaptionHeight: Integer; override;
    published
      property Align: TAlign read FAlign write FAlign stored False default alNone;

      property OnImageNeeded;
      property OnLinkClick;
      property Cursor;
      property LinkColor;
      property LinkPopupMenu;
      property LinkStyle;

      property Background;
      property BackgroundType;
      property GradientEndColor;
      property GradientStartColor;
      property GradientSteps;
      property Alignment;
      property Layout;
      property ImageForm;

      property OnMove;

      property BevelInner nodefault;
      property BevelOuter nodefault;
      property BevelSpaceColor nodefault;
      property BevelWidth;
      property BorderStyle;
      property BorderWidth;
      property Canvas;
      property Color;
      property DragCursor;
      property DragMode;
      property Enabled;
      property Font;
      property Locked;
      property MouseCapture;
      property ParentColor;
      property ParentFont;
      property ParentShowHint;
      property PopupMenu;
      property ShowHint;
      property TabStop;
      property Transparent;
      property TransparentXPThemes;
      property UseXPThemes;
      property Visible;
      
      property Caption;
      property OnClick;
      property OnDblClick;
      property OnDragDrop;
      property OnDragOver;
      property OnEndDrag;
      property OnEnter;
      property OnExit;
      property OnKeyDown;
      property OnKeyPress;
      property OnKeyUp;
      property OnMouseDown;
      property OnMouseMove;
      property OnMouseUp;
      property OnMouseEnter;
      property OnMouseLeave;
      property OnResize;
  {$IFDEF VCL_4_USED}
      property Action;
  {$ifdef MSWINDOWS}
      property Floating;
      property BevelKind;
  {$endif}
  {$ENDIF}

      property Minimized;
      property CaptionSettings;
      property OnMinimize;
      property OnRestore;
      property OnClose;
    end;

    TElExplorerBar = class(TElScrollBox)
    private
      procedure WMEraseBkgnd(var Msg: TWMEraseBkgnd); message WM_ERASEBKGND;
    protected
      FInRealign : integer;
      FUpdated   : boolean;
      FMargin: Integer;
      FSpacing: Integer;
      FGroupWidth: Integer;
      FStorage: TElIniFile;
      FStoragePath: string;
      procedure RealignGroups; virtual;
      procedure CMControlChange(var Msg : TCMControlChange); message CM_CONTROLCHANGE;
      procedure CMControlListChange(var Msg : TMessage); message CM_CONTROLLISTCHANGE;
      procedure Resize; override;
      procedure SetMargin(Value: Integer);
      procedure SetSpacing(Value: Integer);
      procedure CreateWnd; override;
      procedure SetGroupWidth(Value: Integer);
      function GetThemedClassName: WideString; override;
      procedure WMVScroll(var Message: TMessage); message WM_VSCROLL;
      procedure WMHScroll(var Message: TMessage); message WM_HSCROLL;
      procedure Loaded; override;
      {$ifndef VCL_4_USED}
      Function FindChildControl(const ControlName : string) : TControl;
      {$endif}
      procedure DrawThemedBackground(DC : HDC); override;
    public
      constructor Create(AOwner : TComponent); override;
      function AddPanel: TElExplorerBarGroup;
      procedure BeginUpdate;
      procedure EndUpdate;
      procedure Restore;
      procedure Save;
    published
      property Margin: Integer read FMargin write SetMargin default 4;
      property Spacing: Integer read FSpacing write SetSpacing default 8;
      property GroupWidth: Integer read FGroupWidth write SetGroupWidth default 88;
      property Storage: TElIniFile read FStorage write FStorage;
      property StoragePath: string read FStoragePath write FStoragePath;
    end;

  TElExplorerBarGroupCaption = class(TElAdvCaptionPanel)
  protected
    procedure DrawThemedBackground; override;
    procedure WMEraseBkGnd(var Msg : TWMEraseBkGnd); message WM_EraseBkgnd;
    function GetThemedClassName: WideString; override;
  end;

implementation
end.
