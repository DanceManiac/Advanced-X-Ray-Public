
{====================================================}
{                                                    }
{   EldoS Visual Components                          }
{                                                    }
{   Copyright (c) 1998-2001, EldoS                   }
{                                                    }
{====================================================}
{$include elpack2.inc}
{$ifdef ELPACK_SINGLECOMP}
{$I ElPack.inc}
{$else}
{$ifdef LINUX}
{$I ../ElPack.inc}
{$else}
{$I ..\ElPack.inc}
{$endif}
{$endif}

(*

Version History

03/17/2002

  Fixed drawing of scrollbars with XP themes enabled

03/10/2002

  Fixed loading of design-time UseXPThemes value in FlatController

01/12/2001

  Added XP themes checking

01/04/2002

  Added BorderSides property to MultiController

  Now it's possible to override values in design-time too

  Fixed the problem with "running away controls" when MultiController is on the form

*)

unit ElFlatCtl;

interface

uses
  Windows,
  SysUtils,
  Messages,
  Classes,
  Graphics,
  Controls,
  Forms,
  ElVCLUtils,
{$ifdef VCL_6_USED}
Types,
{$endif}
  StdCtrls,
  TypInfo,
  ElTools,
  ElTmSchema,
  ElUxTheme,
  ElHook;

type

  TElFlatController = class(TComponent)
  private
    FActiveBorderType : TElFlatBorderType;
    FInactiveBorderType : TElFlatBorderType;
    FHook : TElHook;
    FMouseOver : boolean;
    FFlatFocusedScrollbars : Boolean;
    FBorderSides: TElBorderSides;
    FTheme: HTheme;

    procedure SetFlatFocusedScrollbars(newValue : Boolean);
    procedure HookAfterProcessHandler(Sender : TObject; var Msg : TMessage; var Handled : Boolean); { TElHookEvent }
    procedure SetActive(newValue : Boolean);
    function GetActive : Boolean;
    procedure SetControl(newValue : TWinControl);
    function GetControl : TWinControl;
    procedure SetDesignActive(newValue : Boolean);
    function GetDesignActive : Boolean;
    procedure SetActiveBorderType(newValue : TElFlatBorderType);
    procedure SetInactiveBorderType(newValue : TElFlatBorderType);
    procedure SetBorderSides(Value: TElBorderSides);
    procedure HookBeforeProcessHandler(Sender : TObject; var Msg : TMessage; var 
        Handled : Boolean);

  protected
    FLineBorderActiveColor: TColor;
    FLineBorderInactiveColor: TColor;
    FUseXPThemes: Boolean;
    procedure SetLineBorderActiveColor(Value: TColor);
    procedure SetLineBorderInactiveColor(Value: TColor);
    function IsControlThemed(Control : TControl): Boolean;
    procedure SetUseXPThemes(Value: Boolean);
    procedure CreateThemeHandle;
    procedure FreeThemeHandle;
    procedure Loaded; override;
    procedure DoNCPaint;
    { Protected declarations }
  public
    { Public declarations }
    procedure DrawFlatBorder;
    procedure UpdateFrame;

    constructor Create(AOwner : TComponent); override;
    destructor Destroy; override;
    function IsThemeApplied: Boolean;
  published
    { Published properties and events }
    property FlatFocusedScrollbars : Boolean read FFlatFocusedScrollbars write SetFlatFocusedScrollbars; { Published }
    property Active : Boolean read GetActive write SetActive;
    property Control : TWinControl read GetControl write SetControl;
    property DesignActive : Boolean read GetDesignActive write SetDesignActive;
    property ActiveBorderType : TElFlatBorderType read FActiveBorderType write SetActiveBorderType;  { Published }
    property InactiveBorderType : TElFlatBorderType read FInactiveBorderType write SetInactiveBorderType;  { Published }
    property BorderSides: TElBorderSides read FBorderSides write SetBorderSides;
    property LineBorderActiveColor: TColor read FLineBorderActiveColor write 
        SetLineBorderActiveColor;
    property LineBorderInactiveColor: TColor read FLineBorderInactiveColor write 
        SetLineBorderInactiveColor;
    property UseXPThemes: Boolean read FUseXPThemes write SetUseXPThemes default 
        true;

  end; { TElFlatController }

  TElFlatEntry = class(TCollectionItem)
  private
    FController : TElFlatController;
    FDesignActive : Boolean;
    FControl : TWinControl;
    FActive : Boolean;
    FFlatFocusedScrollbars : Boolean;
    function GetActive : Boolean;
    procedure SetActive(newValue : Boolean);
    function GetFlatFocusedScrollbars : Boolean;
    procedure SetFlatFocusedScrollbars(newValue : Boolean);
    function GetDesignActive : Boolean;
    procedure SetDesignActive(newValue : Boolean);
    procedure SetControl(newValue : TWinControl);
    function GetActiveBorderType : TElFlatBorderType;
    procedure SetActiveBorderType(newValue : TElFlatBorderType);
    function GetInactiveBorderType : TElFlatBorderType;
    procedure SetInactiveBorderType(newValue : TElFlatBorderType);
  protected
    FLineBorderActiveColor: TColor;
    FLineBorderInactiveColor: TColor;
    FBorderSides: TElBorderSides;
    procedure SetLineBorderActiveColor(Value: TColor);
    procedure SetLineBorderInactiveColor(Value: TColor);
    procedure SetBorderSides(Value: TElBorderSides);
    function GetUseXPThemes: Boolean;
    procedure SetUseXPThemes(Value: Boolean);
  public
    procedure Assign(Source : TPersistent); override;

    constructor Create(Collection : TCollection); override;
    destructor Destroy; override;
  published
    property Active : Boolean read GetActive write SetActive; { Published }
    property BorderSides: TElBorderSides read FBorderSides write SetBorderSides;
    property FlatFocusedScrollbars : Boolean read GetFlatFocusedScrollbars write SetFlatFocusedScrollbars; { Published }
    property DesignActive : Boolean read GetDesignActive write SetDesignActive; { Published }
    property Control : TWinControl read FControl write SetControl; { Published }
    property ActiveBorderType : TElFlatBorderType read GetActiveBorderType write SetActiveBorderType;  { Published }
    property InactiveBorderType : TElFlatBorderType read GetInactiveBorderType write SetInactiveBorderType;  { Published }
    property LineBorderActiveColor: TColor read FLineBorderActiveColor write
        SetLineBorderActiveColor;
    property LineBorderInactiveColor: TColor read FLineBorderInactiveColor write
        SetLineBorderInactiveColor;
    property UseXPThemes: Boolean read GetUseXPThemes write SetUseXPThemes;
  end;

  TElFlatMultiController = class;

  TElFlatEntries = class(TCollection)
  private
    FController : TElFlatMultiController;
    function GetEntries(index : integer) : TElFlatEntry;
    procedure SetEntries(index : integer; newValue : TElFlatEntry);
  public
    function GetOwner : TPersistent; override;
    function Add : TElFlatEntry;
    property Entries[index : integer] : TElFlatEntry read GetEntries write SetEntries; default;
  end;

  TElFlatMultiController = class(TComponent)
  private
    FActiveBorderType : TElFlatBorderType;
    FInactiveBorderType : TElFlatBorderType;
    FFlatFocusedScrollbars : Boolean;
    FAutoAddControls : Boolean;
    FHook : TElHook;
    FEntries : TElFlatEntries;
    FBorderSides: TElBorderSides;
    procedure CMControlListChange(var Msg : TMessage); message CM_CONTROLLISTCHANGE;
    procedure SetEntries(newValue : TElFlatEntries);
    procedure SetActive(newValue : Boolean);
    function GetActive : Boolean;
    procedure SetDesignActive(newValue : Boolean);
    function GetDesignActive : Boolean;
    procedure AfterProcessHandler(Sender : TObject; var Msg : TMessage; var Handled : Boolean); { TElHookEvent }
    procedure SetAutoAddControls(newValue : Boolean);
    procedure ScanForm;
    procedure SetFlatFocusedScrollbars(newValue : Boolean);
    procedure SetActiveBorderType(newValue : TElFlatBorderType);
    procedure SetInactiveBorderType(newValue : TElFlatBorderType);
    procedure SetBorderSides(Value: TElBorderSides);
  protected
    FLineBorderActiveColor: TColor;
    FLineBorderInactiveColor: TColor;
    FUseXPThemes: Boolean;
    procedure SetLineBorderActiveColor(Value: TColor);
    procedure SetLineBorderInactiveColor(Value: TColor);
    procedure Loaded; override;
    procedure SetUseXPThemes(Value: Boolean);
  public
    constructor Create(AOwner : TComponent); override;
    destructor Destroy; override;
  published
    property Entries : TElFlatEntries read FEntries write SetEntries; { Published }
    property Active : Boolean read GetActive write SetActive;
    property DesignActive : Boolean read GetDesignActive write SetDesignActive;
    property AutoAddControls : Boolean read FAutoAddControls write SetAutoAddControls; { Published }
    property FlatFocusedScrollbars : Boolean read FFlatFocusedScrollbars write SetFlatFocusedScrollbars; { Published }
    property ActiveBorderType : TElFlatBorderType read FActiveBorderType write SetActiveBorderType;  { Published }
    property InactiveBorderType : TElFlatBorderType read FInactiveBorderType write SetInactiveBorderType;  { Published }
    property LineBorderActiveColor: TColor read FLineBorderActiveColor write 
        SetLineBorderActiveColor;
    property LineBorderInactiveColor: TColor read FLineBorderInactiveColor write
        SetLineBorderInactiveColor;
    property BorderSides: TElBorderSides read FBorderSides write SetBorderSides;
    property UseXPThemes: Boolean read FUseXPThemes write SetUseXPThemes default 
        true;
  end;

implementation
end.
