{====================================================}
{                                                    }
{   EldoS Visual Components                          }
{                                                    }
{   Copyright (c) 1998-2001, EldoS                   }
{                                                    }
{====================================================}
{$include elpack2.inc}
{$ifdef ELPACK_SINGLECOMP}
{$I ElPack.inc}
{$else}
{$ifdef LINUX}
{$I ../ElPack.inc}
{$else}
{$I ..\ElPack.inc}
{$endif}
{$endif}

unit ElClock;

interface

uses
  Windows, Messages, SysUtils, Classes, Controls, ExtCtrls, ElTools,
  ElList, ElStrUtils, Graphics, ElPanel, 
{$ifdef VCL_6_USED}
Types,
{$endif}
Menus;

type
  TElClock = class(TElPanel)
  protected
    FTimerPaused : Boolean;
    FStartTime : TDateTime;
    FPauseTime : TDateTime;
    FIsTimer : Boolean;
    FTimerActive : Boolean;
    FShowDate : Boolean;
    FShowHint : boolean;
    FTimer : TTimer;
    FTZone : TTImeZoneInformation;
    FLocal : Boolean;
    FSeconds : boolean;
    FAMPM : boolean;
    FCaption : string;
    FUseBias : Boolean;
    FBias : Integer;
    FShowWeekDay : Boolean;
    FUseCustomFormat : Boolean;
    FCustomFormat : string;
    FShowDaysInTimer : Boolean;
    FCountdownActive : Boolean;
    FOnCountdownDone : TNotifyEvent;
    FOnCountdownTick : TNotifyEvent;
    FCountdownPaused : Boolean;
    FCountdownTime : Integer;
    FSaveCDTime : Integer;
    FIsCountdown : boolean;
    FDummyStr   : TElFString;
    procedure SetIsCountdown(newValue : boolean);
    procedure SetCountdownTime(newValue : Integer);
    procedure SetCountdownPaused(newValue : Boolean);
    procedure SetCountdownActive(newValue : Boolean);
    procedure SetShowDaysInTimer(newValue : Boolean);
    procedure SetUseCustomFormat(newValue : Boolean);
    procedure SetCustomFormat(newValue : string);
    procedure SetShowWeekDay(newValue : Boolean);
    procedure SetUseBias(newValue : Boolean);
    procedure SetBias(newValue : Integer);
    function GetTimer : boolean;
    procedure SetTimer(value : boolean);
    procedure OnTimer(Sender : TObject);
    procedure WMMouseMove(var Msg : TWMMouseMove); message WM_MOUSEMOVE;
    procedure WMLButtonDown(var Msg : TMessage); message WM_LBUTTONDOWN;
    procedure WMLButtonUp(var Msg : TWMLButtonUp); message WM_LBUTTONUP;
    procedure SetShowDate(newValue : Boolean);
    procedure SetShowHint(newValue : Boolean);
    procedure SetIsTimer(newValue : Boolean);
    function GetTimeElapsed : TDateTime;
    procedure SetTimerActive(newValue : Boolean);
    procedure SetTimerPaused(newValue : Boolean);
    procedure CreateTimer;
    procedure PaintBorders(Canvas : TCanvas; var R : TRect);
    procedure Paint; override;
    procedure InheritedPaint;
    procedure TriggerCountdownDoneEvent; virtual;
    procedure TriggerCountdownTickEvent; virtual;
  public
    { Public declarations }
    constructor Create(AOwner : TComponent); override;
    destructor Destroy; override;
    procedure Kick; virtual;
    procedure GetTime(var Time : TSystemTime); virtual;
    procedure ResetTimer;

    property TimeElapsed : TDateTime read GetTimeElapsed;
    property TimeZone : TTimeZoneInformation read FTZone write FTZone;
  published
    property Caption: TElFString read FDummyStr;
    property LocalTime : boolean read FLocal write FLocal default true;
    property ShowWeekDay : Boolean read FShowWeekDay write SetShowWeekDay;
    property ShowSeconds : boolean read FSeconds write FSeconds;
    property ShowDate : Boolean read FShowDate write SetShowDate; { Published }
    property AM_PM : boolean read FAMPM write FAMPM;
    property Labels : boolean read FShowHint write SetShowHint;
    property UseBias : Boolean read FUseBias write SetUseBias;
    property Bias : Integer read FBias write SetBias;
    property UseCustomFormat : Boolean read FUseCustomFormat write SetUseCustomFormat;
    property CustomFormat : string read FCustomFormat write SetCustomFormat;

    property IsTimer : Boolean read FIsTimer write SetIsTimer;
    property TimerActive : Boolean read FTimerActive write SetTimerActive;
    property TimerPaused : Boolean read FTimerPaused write SetTimerPaused default False;
    property ShowDaysInTimer : Boolean read FShowDaysInTimer write SetShowDaysInTimer;
    property IsCountdown : boolean read FIsCountdown write SetIsCountdown;
    property CountdownTime : Integer read FCountdownTime write SetCountdownTime;
    property CountdownActive : Boolean read FCountdownActive write SetCountdownActive;
    property CountdownPaused : Boolean read FCountdownPaused write SetCountdownPaused;
    property UseTimer : Boolean read GetTimer write SetTimer;

    property OnCountdownDone : TNotifyEvent read FOnCountdownDone write FOnCountdownDone;
    property OnCountdownTick : TNotifyEvent read FOnCountdownTick write FOnCountdownTick;

    property Align;
    property Alignment;
    property BevelInner default bvLowered;
    property BevelOuter default bvRaised;
    property BevelWidth;
    property BorderWidth;
    property BorderStyle;
    property Color;
    property Ctl3D;
    property Cursor;
    property Font;
    property Hint;
    property ParentColor;
    property ParentCtl3D;
    property ParentFont;
    property ParentShowHint;
    property PopupMenu;
    property OnClick;
    property OnDblClick;
    property OnMouseMove;
    property OnMouseDown;
    property OnMouseUp;
    property OnDragOver;
    property OnDragDrop;
    property OnEndDrag;
    property OnStartDrag;
    property OnResize;
{$IFDEF VCL_4_USED}
    property Anchors;
    property Action;
    property Constraints;
    property DockOrientation;
    property Floating;
    property BevelKind;
    property DoubleBuffered;
    property DragKind;
{$ENDIF}
  private
  end;

type
  PShortTZ = ^TShortTZ;
  TShortTZ = packed record
    Bias,
      StandardBias,
      DayLightBias : LongInt;
    wReserved1, // year field
      StdMonth,
      StdDayOfWeek,
      StdDay,
      StdHour,
      StdMinute,
      StdSecond,
      wReserved2, // msec field
      wReserved3, // year field
      DLMonth,
      DLDayOfWeek,
      DLDay,
      DLHour,
      DLMinute,
      DLSecond,
      wReserved4 // msec field
      : word;

  end;

  PTimeZoneInfo = ^TTimeZoneInfo;
  TTimeZoneInfo = record
    KeyName : string;
    DisplayName : string;
    DltName : string;
    StdName : string;
    MapID : string;
    TimeZone : TTimeZoneInformation;
    STimeZone : TShortTZ;
  end;

function RetrieveTimeZoneInfo(TimeZoneInfoList : TElList) : boolean;
procedure ShortTZToTimeZoneInfo(ShortTZ : TShortTZ; var TZInfo : TTimeZoneInfo);
function TranslateTZDate(ADate : TSystemTime) : string;

var
  FDL : boolean;
  SysTimeZones : TElList;

implementation
end.
