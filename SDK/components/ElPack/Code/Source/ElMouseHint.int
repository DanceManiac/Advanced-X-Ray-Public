{====================================================}
{                                                    }
{   EldoS Visual Components                          }
{                                                    }
{   Copyright (c) 1998-2001, EldoS                   }
{                                                    }
{====================================================}
{$include elpack2.inc}
{$ifdef ELPACK_SINGLECOMP}
{$I ElPack.inc}
{$else}
{$ifdef LINUX}
{$I ../ElPack.inc}
{$else}
{$I ..\ElPack.inc}
{$endif}
{$endif}              

(*

Version history

12/03/2001

  When placed to MDI frame, hint is shown when it goes over MDI children

11/21/2001

  Fixed design-time problem, when dropping the component to the form or
  re-opening the form could cause an AV

*)

unit ElMouseHint;

interface

uses
    Windows,
    Graphics,
    Forms,
    SysUtils,
    Controls,
    Classes,
{$ifdef VCL_6_USED}
Types,
{$endif}

    ElStrUtils,
{$ifdef ELPACK_UNICODE}
    ElUnicodeStrings,
{$endif}
    ElVCLUtils,
{$ifdef HAS_HTML_RENDER}
    HTMLRender,
{$endif}
    ElHintWnd;

type

{$ifdef MSWINDOWS}
{$ifdef ELPACK_UNICODE}
  TElFStrings = TElWideStrings;
  TElFStringList = TElWideStringList;
{$else}
  TElFStrings = TStrings;
  TElFStringList = TStringList;
{$endif}
{$else}
  TElFStrings = TStrings;
  TElFStringList = TStringList;
{$endif}

  TElMouseHintLocation = (hlLeftTop, hlLeftCenter, hlLeftBottom,
                          hlRightTop, hlRightCenter, hlRightBottom,
                          hlCenterTop, hlCenterBottom);

  TElMousehintLocations= set of TElMouseHintLocation;

  TElMouseHint = class(TComponent)
  private
    FHintWindow: TElHintWindow;
  protected
    FActive: Boolean;
    FAutoSize: Boolean;
    {$ifdef HAS_HTML_RENDER}
    FIsHTML: Boolean;
    FOnImageNeeded: TElHTMLImageNeededEvent;
    {$endif}
    FUseSystemHintSettings: Boolean;
    FLines: TElFStrings;
    FWordWrap: Boolean;
    FColor: TColor;
    FWidth: Integer;
    FHeight: Integer;
    FLocation: TElMouseHintLocation;
    FFont: TFont;
    FBoundingControl: TControl;
    FVisible : boolean;
    FDistanceToHint: Integer;
    FKeepWithinWindow: Boolean;
    FHideCount : integer;
    FLocations : TElMouseHintLocations;
    FAutoAdjustLocation: Boolean;
    procedure SetActive(Value: Boolean);
    procedure SetAutoSize(Value: Boolean);
    procedure SetCaption(Value: TElFString);
    {$ifdef HAS_HTML_RENDER}
    procedure SetIsHTML(Value: Boolean);
    procedure TriggerImageNeededEvent(Sender: TObject; Src : TElFString; var Image
        : TBitmap); virtual;
    {$endif}
    procedure SetLines(Value: TElFStrings);
    procedure LinesChange(Sender : TObject);
    function GetCaption: TElFString;
    procedure BuildHint;
    procedure SetWordWrap(Value: Boolean);
    procedure SetColor(Value: TColor);
    function GetVisible: Boolean;
    procedure SetWidth(Value: Integer);
    procedure SetHeight(Value: Integer);
    procedure SetLocation(Value: TElMouseHintLocation);
    procedure SetFont(Value: TFont);
    procedure FontChange(Sender : TObject);
    procedure SetBoundingControl(Value: TControl);
    function GetBoundingControl: TControl;
    procedure UpdateHintPos(MousePos : TPoint; Control : TControl);
    function DoUpdatePos(MousePos : TPoint; Location: TElMouseHintLocation): TRect;
    procedure SetDistanceToHint(Value: Integer);
    procedure SetUseSystemHintSettings(Value: Boolean);
    procedure DoShowHintWindow;
    procedure DoHideHintWindow;
    procedure Notification(AComponent : TComponent; operation : TOperation);
        override;
    procedure SetKeepWithinWindow(Value: Boolean);
    procedure SetAutoAdjustLocation(Value: Boolean);
  public
    constructor Create(AOwner : TComponent); override;
    destructor Destroy; override;
    procedure ShowHint;
    procedure HideHint;
    procedure Loaded; override;
    procedure ShowLines(Lines : TElFStrings);
    procedure ShowString(Caption : TElFString);
    property Visible: Boolean read GetVisible;
  published
    property Active: Boolean read FActive write SetActive;
    property AutoSize: Boolean read FAutoSize write SetAutoSize default true;
    property Caption: TElFString read GetCaption write SetCaption;
    {$ifdef HAS_HTML_RENDER}
    property IsHTML: Boolean read FIsHTML write SetIsHTML;
    property OnImageNeeded: TElHTMLImageNeededEvent read FOnImageNeeded write
        FOnImageNeeded;
    {$endif}
    property UseSystemHintSettings: Boolean read FUseSystemHintSettings write
        SetUseSystemHintSettings default true;
    property Lines: TElFStrings read FLines write SetLines;
    property WordWrap: Boolean read FWordWrap write SetWordWrap default false;
    property Color: TColor read FColor write SetColor;
    property Width: Integer read FWidth write SetWidth;
    property Height: Integer read FHeight write SetHeight;
    property Font: TFont read FFont write SetFont;
    property BoundingControl: TControl read FBoundingControl write
        SetBoundingControl;
    property DistanceToHint: Integer read FDistanceToHint write SetDistanceToHint 
        default 2;
    property KeepWithinWindow: Boolean read FKeepWithinWindow write 
        SetKeepWithinWindow default false;
    property AutoAdjustLocation: Boolean read FAutoAdjustLocation write
        SetAutoAdjustLocation default false;
    property Location: TElMouseHintLocation read FLocation write SetLocation
        default hlLeftTop;
  end;

implementation
end.
