{====================================================}
{                                                    }
{   EldoS Visual Components                          }
{                                                    }
{   Copyright (c) 1998-2001, EldoS                   }
{                                                    }
{====================================================}

(*

Version History

12/02/2001

  Added Color property

10/01/2001

  OnLinkClick event added  

03/02/2001

  Fixed horizontal positioning of the window when taskbar is attached
  to left or right sides

11/19/2000

  Fixed the problem with info window causing AV when invoked from or after
  CloseQuery of the main window.

10/22/2000

  Support for HTML added.

*)
{$include elpack2.inc}
{$ifdef ELPACK_SINGLECOMP}
{$I ElPack.inc}
{$else}
{$ifdef LINUX}
{$I ../ElPack.inc}
{$else}
{$I ..\ElPack.inc}
{$endif}
{$endif}

unit ElTrayInfo;

interface

uses
  Windows, Messages, SysUtils, Classes, Controls, Forms,
  ElTools, ElVCLUtils, ElHTMLLbl, ElFrmPers,
{$ifdef VCL_6_USED}
Types,
{$endif}
  ElStrUtils, HTMLRender, StdCtrls, Graphics, ExtCtrls;

type
  TElTrayInfoType = (titInformation, titWarning, titError);

type
  TTrayInfoForm = class(TForm)
    Panel1: TPanel;
    Image1: TImage;
    Timer: TTimer;
    InfoLabel: TElHTMLLabel;
    ElFormPersist1: TElFormPersist;
    procedure TimerTimer(Sender: TObject);
    procedure ClickHandler(Sender: TObject);
    procedure DblClickHandler(Sender: TObject);
    procedure ShowHandler(Sender: TObject);
    procedure HideHandler(Sender: TObject);
  private
    procedure WMMouseActivate(var Msg: TMessage); message WM_MOUSEACTIVATE;
  protected
    FOnShow,
    FOnHide,
    FOnClick,
    FOnDblClick : TNotifyEvent;
    procedure CreateParams(var Params: TCreateParams); override;
    procedure Notification(AComponent : TComponent; Operation : TOperation); override;
  end;

  TElTrayInfo = class(TComponent)
  private
    FIsHTML : Boolean;
    FInfoForm : TTrayInfoForm;
    FShowTime : Cardinal;
    FInfoType : TElTrayInfoType;
    FMessage  : TElFString;
    FColor    : TColor;
    FOnImageNeeded : TElHTMLImageNeededEvent;
    FOnLinkClick   : TElHTMLLinkClickEvent;
    FOnShow,
    FOnHide,
    FOnClick,
    FOnDblClick : TNotifyEvent;
  protected
    procedure SetShowTime(newValue : Cardinal); virtual;
    procedure SetInfoType(newValue : TElTrayInfoType); virtual;
    procedure SetMessage(newValue: TElFString); virtual;
    procedure AdjustFormIcon;
    procedure AdjustFormSize(X, Y : integer);
    function SuggestedHeight : integer;
    function SuggestedWidth : integer;
    procedure SetIsHTML(newValue : Boolean); virtual;
    procedure Notification(AComponent : TComponent; Operation : TOperation); override;
    procedure ClickHandler(Sender: TObject);
    procedure DblClickHandler(Sender: TObject);
    procedure ShowHandler(Sender: TObject);
    procedure HideHandler(Sender: TObject);
    procedure SetColor(Value : TColor);
  public
    procedure Show;
    procedure Hide;
    constructor Create(AOwner : TComponent); override;
    destructor Destroy; override;
  published
    property Color : TColor read FColor write SetColor default clInfoBk;
    property ShowTime : Cardinal read FShowTime write SetShowTime;  { Published }
    property InfoType : TElTrayInfoType read FInfoType write SetInfoType;  { Published }
    property Message: TElFString read FMessage write SetMessage;
    property IsHTML   : Boolean read FIsHTML write SetIsHTML;  { Published }

    property OnImageNeeded : TElHTMLImageNeededEvent read FOnImageNeeded write FOnImageNeeded;
    property OnLinkClick   : TElHTMLLinkClickEvent read FOnLinkClick write FOnLinkClick;
    property OnShow : TNotifyEvent read FOnShow write FOnShow;
    property OnHide : TNotifyEvent read FOnHide write FOnHide;
    property OnClick : TNotifyEvent read FOnClick write FOnClick;
    property OnDblClick : TNotifyEvent read FOnDblClick write FOnDblClick;
  end;

var
  TrayInfoForm: TTrayInfoForm;

implementation
end.
