; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\CLEARSKY\sources\engine\xrEngine\thunderbolt.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??0?$xalloc@PAUSThunderboltDesc@@@@QAE@XZ	; xalloc<SThunderboltDesc *>::xalloc<SThunderboltDesc *>
PUBLIC	??$?0PAUSThunderboltDesc@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAUSThunderboltDesc@@@@@Z ; xalloc<void *>::xalloc<void *><SThunderboltDesc *>
PUBLIC	??0?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAE@ABV?$xalloc@PAUSThunderboltDesc@@@@@Z ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >
PUBLIC	??0?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAE@XZ ; xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >
PUBLIC	?CreateObject@?$FactoryPtr@VIThunderboltDescRender@@@@AAEXXZ ; FactoryPtr<IThunderboltDescRender>::CreateObject
PUBLIC	??0?$FactoryPtr@VIThunderboltDescRender@@@@QAE@XZ ; FactoryPtr<IThunderboltDescRender>::FactoryPtr<IThunderboltDescRender>
PUBLIC	?DestroyObject@?$FactoryPtr@VIThunderboltDescRender@@@@AAEXXZ ; FactoryPtr<IThunderboltDescRender>::DestroyObject
PUBLIC	??1?$FactoryPtr@VIThunderboltDescRender@@@@QAE@XZ ; FactoryPtr<IThunderboltDescRender>::~FactoryPtr<IThunderboltDescRender>
PUBLIC	??1SFlare@SThunderboltDesc@@QAE@XZ		; SThunderboltDesc::SFlare::~SFlare
PUBLIC	??_GSFlare@SThunderboltDesc@@QAEPAXI@Z		; SThunderboltDesc::SFlare::`scalar deleting destructor'
PUBLIC	??R?$xr_special_free@$0A@USFlare@SThunderboltDesc@@@@QAEXAAPAUSFlare@SThunderboltDesc@@@Z ; xr_special_free<0,SThunderboltDesc::SFlare>::operator()
PUBLIC	??$xr_delete@USFlare@SThunderboltDesc@@@@YAXAAPAUSFlare@SThunderboltDesc@@@Z ; xr_delete<SThunderboltDesc::SFlare>
PUBLIC	??C?$FactoryPtr@VIFlareRender@@@@QBEPAVIFlareRender@@XZ ; FactoryPtr<IFlareRender>::operator->
PUBLIC	??0SFlare@SThunderboltDesc@@QAE@XZ		; SThunderboltDesc::SFlare::SFlare
PUBLIC	??$xr_new@USFlare@SThunderboltDesc@@@@YAPAUSFlare@SThunderboltDesc@@XZ ; xr_new<SThunderboltDesc::SFlare>
PUBLIC	?to_storage_type_cref@?$_CastTraits@PAXPAUSThunderboltDesc@@@priv@stlp_std@@SAABQAXABQAUSThunderboltDesc@@@Z ; stlp_std::priv::_CastTraits<void *,SThunderboltDesc *>::to_storage_type_cref
PUBLIC	?push_back@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAEXABQAUSThunderboltDesc@@@Z ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::push_back
PUBLIC	?end@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAEPAPAUSThunderboltDesc@@XZ ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::end
PUBLIC	?clear@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAEXXZ ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::clear
PUBLIC	?clear_and_free@?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAEXXZ ; xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::clear_and_free
PUBLIC	?clear@?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAEXXZ ; xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::clear
PUBLIC	??1?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAE@XZ ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::~vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >
PUBLIC	??1?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAE@XZ ; xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::~xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >
PUBLIC	??_GSThunderboltDesc@@QAEPAXI@Z			; SThunderboltDesc::`scalar deleting destructor'
PUBLIC	??R?$xr_special_free@$0A@USThunderboltDesc@@@@QAEXAAPAUSThunderboltDesc@@@Z ; xr_special_free<0,SThunderboltDesc>::operator()
PUBLIC	??$xr_delete@USThunderboltDesc@@@@YAXAAPAUSThunderboltDesc@@@Z ; xr_delete<SThunderboltDesc>
PUBLIC	??C?$FactoryPtr@VIThunderboltDescRender@@@@QBEPAVIThunderboltDescRender@@XZ ; FactoryPtr<IThunderboltDescRender>::operator->
PUBLIC	?clear@?$vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@stlp_std@@QAEXXZ ; stlp_std::vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::clear
PUBLIC	?clear_and_free@?$xr_vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@@QAEXXZ ; xr_vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::clear_and_free
PUBLIC	?clear@?$xr_vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@@QAEXXZ ; xr_vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::clear
PUBLIC	??_GSThunderboltCollection@@QAEPAXI@Z		; SThunderboltCollection::`scalar deleting destructor'
PUBLIC	??R?$xr_special_free@$0A@USThunderboltCollection@@@@QAEXAAPAUSThunderboltCollection@@@Z ; xr_special_free<0,SThunderboltCollection>::operator()
PUBLIC	??$xr_delete@USThunderboltCollection@@@@YAXAAPAUSThunderboltCollection@@@Z ; xr_delete<SThunderboltCollection>
PUBLIC	?to_value_type_ref@?$_CastTraits@PAXPAUSThunderboltCollection@@@priv@stlp_std@@SAAAPAUSThunderboltCollection@@AAPAX@Z ; stlp_std::priv::_CastTraits<void *,SThunderboltCollection *>::to_value_type_ref
PUBLIC	?back@?$vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@stlp_std@@QAEAAPAUSThunderboltCollection@@XZ ; stlp_std::vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::back
PUBLIC	?to_storage_type_cref@?$_CastTraits@PAXPAUSThunderboltCollection@@@priv@stlp_std@@SAABQAXABQAUSThunderboltCollection@@@Z ; stlp_std::priv::_CastTraits<void *,SThunderboltCollection *>::to_storage_type_cref
PUBLIC	?push_back@?$vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@stlp_std@@QAEXABQAUSThunderboltCollection@@@Z ; stlp_std::vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::push_back
PUBLIC	?normalize@?$_vector3@M@@QAEAAU1@ABU1@@Z	; _vector3<float>::normalize
PUBLIC	?build@?$_plane@M@@QAEAAV1@ABU?$_vector3@M@@0@Z	; _plane<float>::build
PUBLIC	?dotproduct@?$_vector3@M@@QBEMABU1@@Z		; _vector3<float>::dotproduct
PUBLIC	?classify@?$_plane@M@@QBEMABU?$_vector3@M@@@Z	; _plane<float>::classify
PUBLIC	?intersectRayDist@?$_plane@M@@QAEHABU?$_vector3@M@@0AAM@Z ; _plane<float>::intersectRayDist
PUBLIC	?invert@?$_vector3@M@@QAEAAU1@XZ		; _vector3<float>::invert
PUBLIC	_atanf
PUBLIC	?getHP@?$_vector3@M@@QBEXAAM0@Z			; _vector3<float>::getHP
PUBLIC	?transform_dir@?$_matrix@M@@QBEXAAU?$_vector3@M@@ABU2@@Z ; _matrix<float>::transform_dir
PUBLIC	?transform_dir@?$_matrix@M@@QBEXAAU?$_vector3@M@@@Z ; _matrix<float>::transform_dir
PUBLIC	?setHPB@?$_matrix@M@@QAEAAU1@MMM@Z		; _matrix<float>::setHPB
PUBLIC	?setXYZi@?$_matrix@M@@QAEAAU1@ABU?$_vector3@M@@@Z ; _matrix<float>::setXYZi
PUBLIC	?play_no_feedback@ref_sound@@QAEXPAVCObject@@IMPAU?$_vector3@M@@PAM2PAU?$_vector2@M@@@Z ; ref_sound::play_no_feedback
PUBLIC	?size@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QBEIXZ ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::size
PUBLIC	?size@?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QBEIXZ ; xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::size
PUBLIC	?to_value_type_ptr@?$_CastTraits@PAXPAUSThunderboltDesc@@@priv@stlp_std@@SAPAPAUSThunderboltDesc@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,SThunderboltDesc *>::to_value_type_ptr
PUBLIC	?begin@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAEPAPAUSThunderboltDesc@@XZ ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::begin
PUBLIC	??A?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAEAAPAUSThunderboltDesc@@I@Z ; xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::operator[]
PUBLIC	?GetRandomDesc@SThunderboltCollection@@QAEPAUSThunderboltDesc@@XZ ; SThunderboltCollection::GetRandomDesc
PUBLIC	??0?$FactoryPtr@VIThunderboltRender@@@@QAE@XZ	; FactoryPtr<IThunderboltRender>::FactoryPtr<IThunderboltRender>
PUBLIC	??0?$xalloc@PAUSThunderboltCollection@@@@QAE@XZ	; xalloc<SThunderboltCollection *>::xalloc<SThunderboltCollection *>
PUBLIC	??$?0PAUSThunderboltCollection@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAUSThunderboltCollection@@@@@Z ; xalloc<void *>::xalloc<void *><SThunderboltCollection *>
PUBLIC	??0?$vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@stlp_std@@QAE@ABV?$xalloc@PAUSThunderboltCollection@@@@@Z ; stlp_std::vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >
PUBLIC	??0?$xr_vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@@QAE@XZ ; xr_vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::xr_vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >
PUBLIC	?color_get_R@@YAII@Z				; color_get_R
PUBLIC	?color_get_G@@YAII@Z				; color_get_G
PUBLIC	?color_get_B@@YAII@Z				; color_get_B
PUBLIC	??C?$FactoryPtr@VIThunderboltRender@@@@QBEPAVIThunderboltRender@@XZ ; FactoryPtr<IThunderboltRender>::operator->
PUBLIC	??_C@_0BE@LEJFNNBI@gradient_top_shader?$AA@	; `string'
PUBLIC	??_C@_0BF@HEGAGJPO@gradient_top_texture?$AA@	; `string'
PUBLIC	??_C@_0BE@KFKECPI@gradient_top_radius?$AA@	; `string'
PUBLIC	??_C@_0BF@GOHLCGOD@gradient_top_opacity?$AA@	; `string'
PUBLIC	??_C@_0BH@ICJNLODG@gradient_center_shader?$AA@	; `string'
PUBLIC	??_C@_0BI@KIIAGMFC@gradient_center_texture?$AA@	; `string'
PUBLIC	??_C@_0BH@DMFCCBNG@gradient_center_radius?$AA@	; `string'
PUBLIC	??_C@_0BI@LCJLCDEP@gradient_center_opacity?$AA@	; `string'
PUBLIC	??_C@_0L@KAOPGBNI@color_anim?$AA@		; `string'
PUBLIC	??_C@_0BA@LJNGHFK@lightning_model?$AA@		; `string'
PUBLIC	??_C@_0BN@PEAFFMNN@CEffect_Thunderbolt?3?3OnFrame?$AA@ ; `string'
PUBLIC	??_C@_0DE@DNHCHACK@D?3?2CLEARSKY?2sources?2engine?2xrEng@ ; `string'
PUBLIC	??_C@_0BK@JAGJPECK@_valid?$CIcurrent_direction?$CJ?$AA@ ; `string'
EXTRN	__imp_?r_fvector2@CInifile@@QBE?AU?$_vector2@M@@ABVshared_str@@PBD@Z:PROC
;	COMDAT ?ignore_always@?BF@??OnFrame@CEffect_Thunderbolt@@QAEXVshared_str@@MM@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BF@??OnFrame@CEffect_Thunderbolt@@QAEXVshared_str@@MM@Z@4_NA DB 01H DUP (?) ; `CEffect_Thunderbolt::OnFrame'::`21'::ignore_always
;	COMDAT ??_C@_0BK@JAGJPECK@_valid?$CIcurrent_direction?$CJ?$AA@
CONST	SEGMENT
??_C@_0BK@JAGJPECK@_valid?$CIcurrent_direction?$CJ?$AA@ DB '_valid(curren'
	DB	't_direction)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@DNHCHACK@D?3?2CLEARSKY?2sources?2engine?2xrEng@
CONST	SEGMENT
??_C@_0DE@DNHCHACK@D?3?2CLEARSKY?2sources?2engine?2xrEng@ DB 'D:\CLEARSKY'
	DB	'\sources\engine\xrEngine\thunderbolt.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PEAFFMNN@CEffect_Thunderbolt?3?3OnFrame?$AA@
CONST	SEGMENT
??_C@_0BN@PEAFFMNN@CEffect_Thunderbolt?3?3OnFrame?$AA@ DB 'CEffect_Thunde'
	DB	'rbolt::OnFrame', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LJNGHFK@lightning_model?$AA@
CONST	SEGMENT
??_C@_0BA@LJNGHFK@lightning_model?$AA@ DB 'lightning_model', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KAOPGBNI@color_anim?$AA@
CONST	SEGMENT
??_C@_0L@KAOPGBNI@color_anim?$AA@ DB 'color_anim', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LCJLCDEP@gradient_center_opacity?$AA@
CONST	SEGMENT
??_C@_0BI@LCJLCDEP@gradient_center_opacity?$AA@ DB 'gradient_center_opaci'
	DB	'ty', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DMFCCBNG@gradient_center_radius?$AA@
CONST	SEGMENT
??_C@_0BH@DMFCCBNG@gradient_center_radius?$AA@ DB 'gradient_center_radius'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KIIAGMFC@gradient_center_texture?$AA@
CONST	SEGMENT
??_C@_0BI@KIIAGMFC@gradient_center_texture?$AA@ DB 'gradient_center_textu'
	DB	're', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@ICJNLODG@gradient_center_shader?$AA@
CONST	SEGMENT
??_C@_0BH@ICJNLODG@gradient_center_shader?$AA@ DB 'gradient_center_shader'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GOHLCGOD@gradient_top_opacity?$AA@
CONST	SEGMENT
??_C@_0BF@GOHLCGOD@gradient_top_opacity?$AA@ DB 'gradient_top_opacity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KFKECPI@gradient_top_radius?$AA@
CONST	SEGMENT
??_C@_0BE@KFKECPI@gradient_top_radius?$AA@ DB 'gradient_top_radius', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HEGAGJPO@gradient_top_texture?$AA@
CONST	SEGMENT
??_C@_0BF@HEGAGJPO@gradient_top_texture?$AA@ DB 'gradient_top_texture', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LEJFNNBI@gradient_top_shader?$AA@
CONST	SEGMENT
??_C@_0BE@LEJFNNBI@gradient_top_shader?$AA@ DB 'gradient_top_shader', 00H ; `string'
_EPS_S	DD	033d6bf95r			; 1e-007
_EPS_L	DD	03a83126fr			; 0.001
_PI	DD	040490fdbr			; 3.14159
_PI_MUL_2 DD	040c90fdbr			; 6.28319
_PI_DIV_2 DD	03fc90fdbr			; 1.5708
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrsound\sound.h
;	COMDAT ?play_no_feedback@ref_sound@@QAEXPAVCObject@@IMPAU?$_vector3@M@@PAM2PAU?$_vector2@M@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_d$ = 12						; size = 4
_pos$ = 16						; size = 4
_range$ = 20						; size = 4
?play_no_feedback@ref_sound@@QAEXPAVCObject@@IMPAU?$_vector3@M@@PAM2PAU?$_vector2@M@@@Z PROC ; ref_sound::play_no_feedback, COMDAT

; 307  : IC void	ref_sound::play_no_feedback				( CObject* O, u32 flags, float d, Fvector* pos, float* vol, float* freq, Fvector2* range){	VERIFY(!::Sound->i_locked()); ::Sound->play_no_feedback(*this,O,flags,d,pos,vol,freq,range);	}

	mov	eax, DWORD PTR __imp_?Sound@@3PAVCSound_manager_interface@@A
	fld	DWORD PTR _d$[esp-4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _range$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+60]
	push	eax
	mov	eax, DWORD PTR _pos$[esp]
	push	0
	push	0
	push	eax
	mov	eax, DWORD PTR _this$[esp+12]
	push	ecx
	fstp	DWORD PTR [esp]
	push	0
	push	0
	push	eax
	call	edx
	ret	16					; 00000010H
?play_no_feedback@ref_sound@@QAEXPAVCObject@@IMPAU?$_vector3@M@@PAM2PAU?$_vector2@M@@@Z ENDP ; ref_sound::play_no_feedback
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_color.h
_TEXT	ENDS
;	COMDAT ?color_get_B@@YAII@Z
_TEXT	SEGMENT
_rgba$ = 8						; size = 4
?color_get_B@@YAII@Z PROC				; color_get_B, COMDAT

; 19   : ICF	u32	color_get_B	(u32 rgba)						{	return ((rgba) & 0xff);			}

	movzx	eax, BYTE PTR _rgba$[esp-4]
	ret	0
?color_get_B@@YAII@Z ENDP				; color_get_B
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?color_get_G@@YAII@Z
_TEXT	SEGMENT
_rgba$ = 8						; size = 4
?color_get_G@@YAII@Z PROC				; color_get_G, COMDAT

; 18   : ICF	u32	color_get_G	(u32 rgba)						{	return (((rgba) >> 8) & 0xff);	}

	movzx	eax, BYTE PTR _rgba$[esp-3]
	ret	0
?color_get_G@@YAII@Z ENDP				; color_get_G
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?color_get_R@@YAII@Z
_TEXT	SEGMENT
?color_get_R@@YAII@Z PROC				; color_get_R, COMDAT
; _rgba$ = eax

; 17   : ICF	u32	color_get_R	(u32 rgba)						{	return (((rgba) >> 16) & 0xff);	}

	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	ret	0
?color_get_R@@YAII@Z ENDP				; color_get_R
; Function compile flags: /Ogtpy
; File j:\msvs8\vc\include\math.h
_TEXT	ENDS
;	COMDAT _atanf
_TEXT	SEGMENT
__X$ = 8						; size = 4
_atanf	PROC						; COMDAT

; 393  :         {return ((float)atan((double)_X)); }

	fld	DWORD PTR __X$[esp-4]
	fld1
	fpatan
	ret	0
_atanf	ENDP
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\include\xrrender\factoryptr.h
_TEXT	ENDS
;	COMDAT ?CreateObject@?$FactoryPtr@VIThunderboltDescRender@@@@AAEXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?CreateObject@?$FactoryPtr@VIThunderboltDescRender@@@@AAEXXZ PROC ; FactoryPtr<IThunderboltDescRender>::CreateObject, COMDAT

; 73   :     FACTORY_PTR_INSTANCIATE(ThunderboltDescRender)

	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	mov	ecx, DWORD PTR _this$[esp-4]
	mov	DWORD PTR [ecx], eax
	ret	4
?CreateObject@?$FactoryPtr@VIThunderboltDescRender@@@@AAEXXZ ENDP ; FactoryPtr<IThunderboltDescRender>::CreateObject
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?DestroyObject@?$FactoryPtr@VIThunderboltDescRender@@@@AAEXXZ
_TEXT	SEGMENT
?DestroyObject@?$FactoryPtr@VIThunderboltDescRender@@@@AAEXXZ PROC ; FactoryPtr<IThunderboltDescRender>::DestroyObject, COMDAT
; _this$ = esi

; 73   :     FACTORY_PTR_INSTANCIATE(ThunderboltDescRender)

	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [edx+116]
	push	eax
	call	edx
	mov	DWORD PTR [esi], 0
	ret	0
?DestroyObject@?$FactoryPtr@VIThunderboltDescRender@@@@AAEXXZ ENDP ; FactoryPtr<IThunderboltDescRender>::DestroyObject
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??$?0PAUSThunderboltCollection@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAUSThunderboltCollection@@@@@Z
_TEXT	SEGMENT
??$?0PAUSThunderboltCollection@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAUSThunderboltCollection@@@@@Z PROC ; xalloc<void *>::xalloc<void *><SThunderboltCollection *>, COMDAT
; _this$ = eax

; 79   : 	template<class _Other>							xalloc			(const xalloc<_Other>&)					{	}

	ret	0
??$?0PAUSThunderboltCollection@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAUSThunderboltCollection@@@@@Z ENDP ; xalloc<void *>::xalloc<void *><SThunderboltCollection *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0PAUSThunderboltDesc@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAUSThunderboltDesc@@@@@Z
_TEXT	SEGMENT
??$?0PAUSThunderboltDesc@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAUSThunderboltDesc@@@@@Z PROC ; xalloc<void *>::xalloc<void *><SThunderboltDesc *>, COMDAT
; _this$ = eax

; 79   : 	template<class _Other>							xalloc			(const xalloc<_Other>&)					{	}

	ret	0
??$?0PAUSThunderboltDesc@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAUSThunderboltDesc@@@@@Z ENDP ; xalloc<void *>::xalloc<void *><SThunderboltDesc *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xalloc@PAUSThunderboltCollection@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xalloc@PAUSThunderboltCollection@@@@QAE@XZ PROC	; xalloc<SThunderboltCollection *>::xalloc<SThunderboltCollection *>, COMDAT
; _this$ = eax

; 77   : 													xalloc			()										{	}

	ret	0
??0?$xalloc@PAUSThunderboltCollection@@@@QAE@XZ ENDP	; xalloc<SThunderboltCollection *>::xalloc<SThunderboltCollection *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xalloc@PAUSThunderboltDesc@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xalloc@PAUSThunderboltDesc@@@@QAE@XZ PROC		; xalloc<SThunderboltDesc *>::xalloc<SThunderboltDesc *>, COMDAT
; _this$ = eax

; 77   : 													xalloc			()										{	}

	ret	0
??0?$xalloc@PAUSThunderboltDesc@@@@QAE@XZ ENDP		; xalloc<SThunderboltDesc *>::xalloc<SThunderboltDesc *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_matrix.h
_TEXT	ENDS
;	COMDAT ?transform_dir@?$_matrix@M@@QBEXAAU?$_vector3@M@@ABU2@@Z
_TEXT	SEGMENT
?transform_dir@?$_matrix@M@@QBEXAAU?$_vector3@M@@ABU2@@Z PROC ; _matrix<float>::transform_dir, COMDAT
; _this$ = ecx
; _dest$ = edx
; _v$ = eax

; 515  : 		dest.x = v.x*_11 + v.y*_21 + v.z*_31;

	movss	xmm0, DWORD PTR [ecx+32]
	mulss	xmm0, DWORD PTR [eax+8]
	movss	xmm1, DWORD PTR [ecx+16]
	mulss	xmm1, DWORD PTR [eax+4]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR [eax]
	mulss	xmm1, DWORD PTR [ecx]
	addss	xmm0, xmm1
	movss	DWORD PTR [edx], xmm0

; 516  : 		dest.y = v.x*_12 + v.y*_22 + v.z*_32;

	movss	xmm0, DWORD PTR [ecx+36]
	mulss	xmm0, DWORD PTR [eax+8]
	movss	xmm1, DWORD PTR [ecx+20]
	mulss	xmm1, DWORD PTR [eax+4]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR [ecx+4]
	mulss	xmm1, DWORD PTR [eax]
	addss	xmm0, xmm1
	movss	DWORD PTR [edx+4], xmm0

; 517  : 		dest.z = v.x*_13 + v.y*_23 + v.z*_33;

	movss	xmm0, DWORD PTR [ecx+40]
	mulss	xmm0, DWORD PTR [eax+8]
	movss	xmm1, DWORD PTR [ecx+24]
	mulss	xmm1, DWORD PTR [eax+4]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR [ecx+8]
	mulss	xmm1, DWORD PTR [eax]
	addss	xmm0, xmm1
	movss	DWORD PTR [edx+8], xmm0

; 518  : 	}

	ret	0
?transform_dir@?$_matrix@M@@QBEXAAU?$_vector3@M@@ABU2@@Z ENDP ; _matrix<float>::transform_dir
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\include\xrrender\factoryptr.h
_TEXT	ENDS
;	COMDAT ??C?$FactoryPtr@VIThunderboltDescRender@@@@QBEPAVIThunderboltDescRender@@XZ
_TEXT	SEGMENT
??C?$FactoryPtr@VIThunderboltDescRender@@@@QBEPAVIThunderboltDescRender@@XZ PROC ; FactoryPtr<IThunderboltDescRender>::operator->, COMDAT
; _this$ = eax

; 40   : 	T* operator->() const {return m_pObject;}

	mov	eax, DWORD PTR [eax]
	ret	0
??C?$FactoryPtr@VIThunderboltDescRender@@@@QBEPAVIThunderboltDescRender@@XZ ENDP ; FactoryPtr<IThunderboltDescRender>::operator->
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$FactoryPtr@VIThunderboltDescRender@@@@QAE@XZ
_TEXT	SEGMENT
??1?$FactoryPtr@VIThunderboltDescRender@@@@QAE@XZ PROC	; FactoryPtr<IThunderboltDescRender>::~FactoryPtr<IThunderboltDescRender>, COMDAT
; _this$ = esi

; 25   : 	~FactoryPtr() { DestroyObject();}

	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [edx+116]
	push	eax
	call	edx
	mov	DWORD PTR [esi], 0
	ret	0
??1?$FactoryPtr@VIThunderboltDescRender@@@@QAE@XZ ENDP	; FactoryPtr<IThunderboltDescRender>::~FactoryPtr<IThunderboltDescRender>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$FactoryPtr@VIThunderboltDescRender@@@@QAE@XZ
_TEXT	SEGMENT
??0?$FactoryPtr@VIThunderboltDescRender@@@@QAE@XZ PROC	; FactoryPtr<IThunderboltDescRender>::FactoryPtr<IThunderboltDescRender>, COMDAT
; _this$ = esi

; 24   : 	FactoryPtr() { CreateObject();}

	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	mov	DWORD PTR [esi], eax
	mov	eax, esi
	ret	0
??0?$FactoryPtr@VIThunderboltDescRender@@@@QAE@XZ ENDP	; FactoryPtr<IThunderboltDescRender>::FactoryPtr<IThunderboltDescRender>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??C?$FactoryPtr@VIThunderboltRender@@@@QBEPAVIThunderboltRender@@XZ
_TEXT	SEGMENT
??C?$FactoryPtr@VIThunderboltRender@@@@QBEPAVIThunderboltRender@@XZ PROC ; FactoryPtr<IThunderboltRender>::operator->, COMDAT
; _this$ = eax

; 40   : 	T* operator->() const {return m_pObject;}

	mov	eax, DWORD PTR [eax]
	ret	0
??C?$FactoryPtr@VIThunderboltRender@@@@QBEPAVIThunderboltRender@@XZ ENDP ; FactoryPtr<IThunderboltRender>::operator->
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??C?$FactoryPtr@VIFlareRender@@@@QBEPAVIFlareRender@@XZ
_TEXT	SEGMENT
??C?$FactoryPtr@VIFlareRender@@@@QBEPAVIFlareRender@@XZ PROC ; FactoryPtr<IFlareRender>::operator->, COMDAT
; _this$ = eax

; 40   : 	T* operator->() const {return m_pObject;}

	mov	eax, DWORD PTR [eax]
	ret	0
??C?$FactoryPtr@VIFlareRender@@@@QBEPAVIFlareRender@@XZ ENDP ; FactoryPtr<IFlareRender>::operator->
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_vector3d.h
_TEXT	ENDS
;	COMDAT ?dotproduct@?$_vector3@M@@QBEMABU1@@Z
_TEXT	SEGMENT
?dotproduct@?$_vector3@M@@QBEMABU1@@Z PROC		; _vector3<float>::dotproduct, COMDAT
; _this$ = ecx
; _v$ = eax

; 268  : 	{	return x*v.x + y*v.y + z*v.z; }

	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR [eax+4]
	mulss	xmm1, DWORD PTR [ecx+4]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR [eax]
	mulss	xmm1, DWORD PTR [ecx]
	addss	xmm0, xmm1
	ret	0
?dotproduct@?$_vector3@M@@QBEMABU1@@Z ENDP		; _vector3<float>::dotproduct
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?invert@?$_vector3@M@@QAEAAU1@XZ
_TEXT	SEGMENT
?invert@?$_vector3@M@@QAEAAU1@XZ PROC			; _vector3<float>::invert, COMDAT
; _this$ = eax

; 49   : 	IC	SelfRef	invert()								{ x=-x; y=-y; z=-z;						return *this;	}

	movss	xmm0, DWORD PTR __real@80000000
	movaps	xmm1, xmm0
	subss	xmm1, DWORD PTR [eax]
	movss	DWORD PTR [eax], xmm1
	movaps	xmm1, xmm0
	subss	xmm1, DWORD PTR [eax+4]
	subss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR [eax+4], xmm1
	movss	DWORD PTR [eax+8], xmm0
	ret	0
?invert@?$_vector3@M@@QAEAAU1@XZ ENDP			; _vector3<float>::invert
_TEXT	ENDS
PUBLIC	?Render@CEffect_Thunderbolt@@QAEXXZ		; CEffect_Thunderbolt::Render
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\thunderbolt.cpp
;	COMDAT ?Render@CEffect_Thunderbolt@@QAEXXZ
_TEXT	SEGMENT
?Render@CEffect_Thunderbolt@@QAEXXZ PROC		; CEffect_Thunderbolt::Render, COMDAT
; _this$ = ecx

; 273  : 	if (state==stWorking)

	cmp	DWORD PTR [ecx+96], 1
	jne	SHORT $LN1@Render@2

; 274  : 	{
; 275  : 		m_pRender->Render(*this);

	mov	eax, DWORD PTR [ecx+92]
	mov	edx, DWORD PTR [eax]
	push	ecx
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN1@Render@2:

; 276  : 
; 277  : 		/*
; 278  :     	VERIFY	(current);
; 279  : 
; 280  :         // lightning model
; 281  :         float dv			= lightning_phase*0.5f;
; 282  :         dv					= (lightning_phase>0.5f)?Random.randI(2)*0.5f:dv;
; 283  : 
; 284  : 		RCache.set_CullMode	(CULL_NONE);
; 285  :         u32					v_offset,i_offset;
; 286  :         u32					vCount_Lock		= current->l_model->number_vertices;
; 287  :         u32					iCount_Lock		= current->l_model->number_indices;
; 288  :         IRender_DetailModel::fvfVertexOut* v_ptr= (IRender_DetailModel::fvfVertexOut*) 	RCache.Vertex.Lock	(vCount_Lock, hGeom_model->vb_stride, v_offset);
; 289  :         u16*				i_ptr				=										RCache.Index.Lock	(iCount_Lock, i_offset);
; 290  :         // XForm verts
; 291  :         current->l_model->transfer(current_xform,v_ptr,0xffffffff,i_ptr,0,0.f,dv);
; 292  :         // Flush if needed
; 293  :         RCache.Vertex.Unlock(vCount_Lock,hGeom_model->vb_stride);
; 294  :         RCache.Index.Unlock	(iCount_Lock);
; 295  :         RCache.set_xform_world(Fidentity);
; 296  :         RCache.set_Shader	(current->l_model->shader);
; 297  :         RCache.set_Geometry	(hGeom_model);
; 298  :         RCache.Render		(D3DPT_TRIANGLELIST,v_offset,0,vCount_Lock,i_offset,iCount_Lock/3);
; 299  : 		RCache.set_CullMode	(CULL_CCW);
; 300  : 
; 301  :         // gradient
; 302  :         Fvector				vecSx, vecSy;
; 303  :         u32					VS_Offset;
; 304  :         FVF::LIT *pv		= (FVF::LIT*) RCache.Vertex.Lock(8,hGeom_gradient.stride(),VS_Offset);
; 305  :         // top
; 306  :         {
; 307  :             u32 c_val		= iFloor(current->m_GradientTop.fOpacity*lightning_phase*255.f);
; 308  :             u32 c			= color_rgba(c_val,c_val,c_val,c_val);
; 309  :             vecSx.mul		(Device.vCameraRight, 	current->m_GradientTop.fRadius.x*lightning_size);
; 310  :             vecSy.mul		(Device.vCameraTop, 	-current->m_GradientTop.fRadius.y*lightning_size);
; 311  :             pv->set			(current_xform.c.x+vecSx.x-vecSy.x, current_xform.c.y+vecSx.y-vecSy.y, current_xform.c.z+vecSx.z-vecSy.z, c, 0, 0); pv++;
; 312  :             pv->set			(current_xform.c.x+vecSx.x+vecSy.x, current_xform.c.y+vecSx.y+vecSy.y, current_xform.c.z+vecSx.z+vecSy.z, c, 0, 1); pv++;
; 313  :             pv->set			(current_xform.c.x-vecSx.x-vecSy.x, current_xform.c.y-vecSx.y-vecSy.y, current_xform.c.z-vecSx.z-vecSy.z, c, 1, 0); pv++;
; 314  :             pv->set			(current_xform.c.x-vecSx.x+vecSy.x, current_xform.c.y-vecSx.y+vecSy.y, current_xform.c.z-vecSx.z+vecSy.z, c, 1, 1); pv++;
; 315  :         }
; 316  :         // center
; 317  :         {
; 318  :             u32 c_val		= iFloor(current->m_GradientTop.fOpacity*lightning_phase*255.f);
; 319  :             u32 c			= color_rgba(c_val,c_val,c_val,c_val);
; 320  :             vecSx.mul		(Device.vCameraRight, 	current->m_GradientCenter.fRadius.x*lightning_size);
; 321  :             vecSy.mul		(Device.vCameraTop, 	-current->m_GradientCenter.fRadius.y*lightning_size);
; 322  :             pv->set			(lightning_center.x+vecSx.x-vecSy.x, lightning_center.y+vecSx.y-vecSy.y, lightning_center.z+vecSx.z-vecSy.z, c, 0, 0); pv++;
; 323  :             pv->set			(lightning_center.x+vecSx.x+vecSy.x, lightning_center.y+vecSx.y+vecSy.y, lightning_center.z+vecSx.z+vecSy.z, c, 0, 1); pv++;
; 324  :             pv->set			(lightning_center.x-vecSx.x-vecSy.x, lightning_center.y-vecSx.y-vecSy.y, lightning_center.z-vecSx.z-vecSy.z, c, 1, 0); pv++;
; 325  :             pv->set			(lightning_center.x-vecSx.x+vecSy.x, lightning_center.y-vecSx.y+vecSy.y, lightning_center.z-vecSx.z+vecSy.z, c, 1, 1); pv++;
; 326  :         }
; 327  :         RCache.Vertex.Unlock	(8,hGeom_gradient.stride());
; 328  :         RCache.set_xform_world	(Fidentity);
; 329  :         RCache.set_Geometry		(hGeom_gradient);
; 330  :         RCache.set_Shader		(current->m_GradientTop.hShader);
; 331  :         RCache.Render			(D3DPT_TRIANGLELIST,VS_Offset, 0,4,0,2);
; 332  :         RCache.set_Shader		(current->m_GradientCenter.hShader);
; 333  :         RCache.Render			(D3DPT_TRIANGLELIST,VS_Offset+4, 0,4,0,2);
; 334  : 		*/
; 335  :     }
; 336  : }

	ret	0
?Render@CEffect_Thunderbolt@@QAEXXZ ENDP		; CEffect_Thunderbolt::Render
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
;	COMDAT ?to_storage_type_cref@?$_CastTraits@PAXPAUSThunderboltCollection@@@priv@stlp_std@@SAABQAXABQAUSThunderboltCollection@@@Z
_TEXT	SEGMENT
?to_storage_type_cref@?$_CastTraits@PAXPAUSThunderboltCollection@@@priv@stlp_std@@SAABQAXABQAUSThunderboltCollection@@@Z PROC ; stlp_std::priv::_CastTraits<void *,SThunderboltCollection *>::to_storage_type_cref, COMDAT
; ___ref$ = eax

; 224  :   { return cv_traits::uncv_cref(__REINTERPRET_CAST(void_cv_type const&, __ref)); }

	ret	0
?to_storage_type_cref@?$_CastTraits@PAXPAUSThunderboltCollection@@@priv@stlp_std@@SAABQAXABQAUSThunderboltCollection@@@Z ENDP ; stlp_std::priv::_CastTraits<void *,SThunderboltCollection *>::to_storage_type_cref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_value_type_ref@?$_CastTraits@PAXPAUSThunderboltCollection@@@priv@stlp_std@@SAAAPAUSThunderboltCollection@@AAPAX@Z
_TEXT	SEGMENT
?to_value_type_ref@?$_CastTraits@PAXPAUSThunderboltCollection@@@priv@stlp_std@@SAAAPAUSThunderboltCollection@@AAPAX@Z PROC ; stlp_std::priv::_CastTraits<void *,SThunderboltCollection *>::to_value_type_ref, COMDAT
; ___ref$ = eax

; 213  :   { return __REINTERPRET_CAST(value_type &, cv_traits::cv_ref(__ref)); }

	ret	0
?to_value_type_ref@?$_CastTraits@PAXPAUSThunderboltCollection@@@priv@stlp_std@@SAAAPAUSThunderboltCollection@@AAPAX@Z ENDP ; stlp_std::priv::_CastTraits<void *,SThunderboltCollection *>::to_value_type_ref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_storage_type_cref@?$_CastTraits@PAXPAUSThunderboltDesc@@@priv@stlp_std@@SAABQAXABQAUSThunderboltDesc@@@Z
_TEXT	SEGMENT
?to_storage_type_cref@?$_CastTraits@PAXPAUSThunderboltDesc@@@priv@stlp_std@@SAABQAXABQAUSThunderboltDesc@@@Z PROC ; stlp_std::priv::_CastTraits<void *,SThunderboltDesc *>::to_storage_type_cref, COMDAT
; ___ref$ = eax

; 224  :   { return cv_traits::uncv_cref(__REINTERPRET_CAST(void_cv_type const&, __ref)); }

	ret	0
?to_storage_type_cref@?$_CastTraits@PAXPAUSThunderboltDesc@@@priv@stlp_std@@SAABQAXABQAUSThunderboltDesc@@@Z ENDP ; stlp_std::priv::_CastTraits<void *,SThunderboltDesc *>::to_storage_type_cref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_value_type_ptr@?$_CastTraits@PAXPAUSThunderboltDesc@@@priv@stlp_std@@SAPAPAUSThunderboltDesc@@PAPAX@Z
_TEXT	SEGMENT
?to_value_type_ptr@?$_CastTraits@PAXPAUSThunderboltDesc@@@priv@stlp_std@@SAPAPAUSThunderboltDesc@@PAPAX@Z PROC ; stlp_std::priv::_CastTraits<void *,SThunderboltDesc *>::to_value_type_ptr, COMDAT
; ___ptr$ = eax

; 207  :   { return __REINTERPRET_CAST(value_type *, cv_traits::cv_ptr(__ptr)); }

	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	ret	0
?to_value_type_ptr@?$_CastTraits@PAXPAUSThunderboltDesc@@@priv@stlp_std@@SAPAPAUSThunderboltDesc@@PAPAX@Z ENDP ; stlp_std::priv::_CastTraits<void *,SThunderboltDesc *>::to_value_type_ptr
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QBEIXZ PROC ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::size, COMDAT
; _this$ = ecx

; 89   :   size_type size() const        { return _M_impl.size(); }

	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
	ret	0
?size@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QBEIXZ ENDP ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::size
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_matrix.h
_TEXT	ENDS
;	COMDAT ?setHPB@?$_matrix@M@@QAEAAU1@MMM@Z
_TEXT	SEGMENT
__sh$ = -12						; size = 4
__ch$ = -8						; size = 4
__sp$ = -4						; size = 4
__sb$ = 8						; size = 4
_h$ = 8							; size = 4
__cp$ = 12						; size = 4
_p$ = 12						; size = 4
__cb$ = 16						; size = 4
_b$ = 16						; size = 4
?setHPB@?$_matrix@M@@QAEAAU1@MMM@Z PROC			; _matrix<float>::setHPB, COMDAT
; _this$ = esi

; 561  : 	{

	sub	esp, 16					; 00000010H

; 562  :         T _ch, _cp, _cb, _sh, _sp, _sb, _cc, _cs, _sc, _ss;
; 563  : 
; 564  :         _sh = _sin(h); _ch = _cos(h);

	fld	DWORD PTR _h$[esp+12]
	push	ecx
	fstp	DWORD PTR [esp]
	call	_sinf
	fstp	DWORD PTR __sh$[esp+20]
	fld	DWORD PTR _h$[esp+16]
	fstp	DWORD PTR [esp]
	call	_cosf
	fstp	DWORD PTR __ch$[esp+20]

; 565  :         _sp = _sin(p); _cp = _cos(p);

	fld	DWORD PTR _p$[esp+16]
	fstp	DWORD PTR [esp]
	call	_sinf
	fstp	DWORD PTR __sp$[esp+20]
	fld	DWORD PTR _p$[esp+16]
	fstp	DWORD PTR [esp]
	call	_cosf
	fstp	DWORD PTR __cp$[esp+16]

; 566  :         _sb = _sin(b); _cb = _cos(b);

	fld	DWORD PTR _b$[esp+16]
	fstp	DWORD PTR [esp]
	call	_sinf
	fstp	DWORD PTR __sb$[esp+16]
	fld	DWORD PTR _b$[esp+16]
	fstp	DWORD PTR [esp]
	call	_cosf

; 567  :         _cc = _ch*_cb; _cs = _ch*_sb; _sc = _sh*_cb; _ss = _sh*_sb;

	movss	xmm4, DWORD PTR __sb$[esp+16]
	fst	DWORD PTR __cb$[esp+16]

; 568  : 
; 569  :         i.set(_cc-_sp*_ss,	-_cp*_sb,	_sp*_cs+_sc	);	_14_=0;

	fld	DWORD PTR __sb$[esp+16]
	movss	xmm1, DWORD PTR __cb$[esp+16]
	fld	DWORD PTR __cp$[esp+16]
	movss	xmm2, DWORD PTR __sh$[esp+20]
	movss	xmm5, DWORD PTR __sp$[esp+20]
	fmul	ST(1), ST(0)
	movss	xmm6, DWORD PTR __ch$[esp+20]
	fxch	ST(1)
	movaps	xmm0, xmm1
	mulss	xmm1, xmm2
	fchs
	fstp	DWORD PTR [esi+4]
	mulss	xmm0, xmm6
	movaps	xmm3, xmm4
	mulss	xmm4, xmm2

; 570  :         j.set(_sp*_sc+_cs,	_cp*_cb, 	_ss-_sp*_cc	);	_24_=0;

	fmulp	ST(1), ST(0)
	movaps	xmm7, xmm0
	mulss	xmm3, xmm6
	movaps	xmm2, xmm4
	mulss	xmm2, xmm5
	subss	xmm7, xmm2
	movss	DWORD PTR [esi], xmm7
	movaps	xmm2, xmm3
	mulss	xmm2, xmm5
	addss	xmm2, xmm1
	movss	DWORD PTR [esi+8], xmm2
	xorps	xmm2, xmm2
	movss	DWORD PTR [esi+12], xmm2
	fstp	DWORD PTR [esi+20]
	mulss	xmm0, xmm5
	mulss	xmm1, xmm5
	addss	xmm1, xmm3

; 571  :         k.set(-_cp*_sh,    	_sp,		_cp*_ch		);	_34_=0;

	movss	xmm3, DWORD PTR __real@80000000
	movss	DWORD PTR [esi+16], xmm1
	subss	xmm4, xmm0
	movss	xmm0, DWORD PTR __cp$[esp+16]
	movss	DWORD PTR [esi+24], xmm4
	movss	DWORD PTR [esi+28], xmm2
	movaps	xmm1, xmm0
	mulss	xmm1, DWORD PTR __sh$[esp+20]
	movss	DWORD PTR [esi+36], xmm5
	mulss	xmm0, xmm6
	movss	DWORD PTR [esi+40], xmm0

; 572  :         c.set(0,			0,			0			);  _44_=1;

	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm3, xmm1
	movss	DWORD PTR [esi+32], xmm3
	movss	DWORD PTR [esi+44], xmm2
	movss	DWORD PTR [esi+48], xmm2
	movss	DWORD PTR [esi+52], xmm2
	movss	DWORD PTR [esi+56], xmm2
	movss	DWORD PTR [esi+60], xmm0

; 573  : 		return *this; 

	mov	eax, esi

; 574  :     }

	add	esp, 20					; 00000014H
	ret	12					; 0000000cH
?setHPB@?$_matrix@M@@QAEAAU1@MMM@Z ENDP			; _matrix<float>::setHPB
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_vector3d.h
_TEXT	ENDS
;	COMDAT ?normalize@?$_vector3@M@@QAEAAU1@ABU1@@Z
_TEXT	SEGMENT
_mag$ = -16						; size = 4
tv138 = -12						; size = 4
tv134 = -8						; size = 4
tv130 = -4						; size = 4
?normalize@?$_vector3@M@@QAEAAU1@ABU1@@Z PROC		; _vector3<float>::normalize, COMDAT
; _this$ = esi
; _v$ = eax

; 212  : 	{

	sub	esp, 16					; 00000010H

; 213  : 		VERIFY((v.x*v.x+v.y*v.y+v.z*v.z)>flt_zero);
; 214  : 		T mag=_sqrt(1/(v.x*v.x + v.y*v.y + v.z*v.z));

	movss	xmm2, DWORD PTR [eax]
	movss	xmm1, DWORD PTR [eax+4]
	movss	xmm0, DWORD PTR [eax+8]
	movaps	xmm3, xmm2
	mulss	xmm3, xmm2
	movss	DWORD PTR tv138[esp+16], xmm2
	movaps	xmm2, xmm1
	mulss	xmm2, xmm1
	movss	DWORD PTR tv134[esp+16], xmm1
	movaps	xmm1, xmm0
	mulss	xmm1, xmm0
	movss	DWORD PTR tv130[esp+16], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	addss	xmm3, xmm2
	addss	xmm3, xmm1
	push	ecx
	divss	xmm0, xmm3
	movss	DWORD PTR [esp], xmm0
	call	_sqrtf
	fstp	DWORD PTR _mag$[esp+20]

; 215  : 		x = v.x*mag;

	movss	xmm1, DWORD PTR _mag$[esp+20]
	movss	xmm0, DWORD PTR tv138[esp+20]
	mulss	xmm0, xmm1
	movss	DWORD PTR [esi], xmm0

; 216  : 		y = v.y*mag;

	movss	xmm0, DWORD PTR tv134[esp+20]
	mulss	xmm0, xmm1
	movss	DWORD PTR [esi+4], xmm0

; 217  : 		z = v.z*mag;

	movss	xmm0, DWORD PTR tv130[esp+20]
	mulss	xmm0, xmm1
	movss	DWORD PTR [esi+8], xmm0

; 218  : 		return *this;	

	mov	eax, esi

; 219  : 	}

	add	esp, 20					; 00000014H
	ret	0
?normalize@?$_vector3@M@@QAEAAU1@ABU1@@Z ENDP		; _vector3<float>::normalize
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAEPAPAUSThunderboltDesc@@XZ
_TEXT	SEGMENT
?end@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAEPAPAUSThunderboltDesc@@XZ PROC ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::end, COMDAT
; _this$ = eax

; 81   :   iterator end()               { return cast_traits::to_value_type_ptr(_M_impl.end()); }

	mov	eax, DWORD PTR [eax+4]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	ret	0
?end@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAEPAPAUSThunderboltDesc@@XZ ENDP ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAEPAPAUSThunderboltDesc@@XZ
_TEXT	SEGMENT
?begin@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAEPAPAUSThunderboltDesc@@XZ PROC ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::begin, COMDAT
; _this$ = eax

; 79   :   iterator begin()             { return cast_traits::to_value_type_ptr(_M_impl.begin()); }

	mov	eax, DWORD PTR [eax]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	ret	0
?begin@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAEPAPAUSThunderboltDesc@@XZ ENDP ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::begin
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??A?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAEAAPAUSThunderboltDesc@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAEAAPAUSThunderboltDesc@@I@Z PROC ; xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::operator[], COMDAT
; _this$ = eax

; 139  : 	reference operator[]		(size_type _Pos)					{ {VERIFY2(_Pos<size(),make_string("index is out of range: index requested[%d], size of container[%d]", _Pos, size()).c_str());} return (*(begin() + _Pos)); }

	mov	eax, DWORD PTR [eax]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	ecx, DWORD PTR __Pos$[esp]
	add	esp, 4
	lea	eax, DWORD PTR [eax+ecx*4]
	ret	4
??A?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAEAAPAUSThunderboltDesc@@I@Z ENDP ; xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::operator[]
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?size@?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QBEIXZ
_TEXT	SEGMENT
?size@?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QBEIXZ PROC ; xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::size, COMDAT
; _this$ = ecx

; 126  : 	u32		size				() const							{ return (u32)inherited::size();} 

	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
	ret	0
?size@?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QBEIXZ ENDP ; xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::size
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\include\xrrender\factoryptr.h
_TEXT	ENDS
;	COMDAT ??0?$FactoryPtr@VIThunderboltRender@@@@QAE@XZ
_TEXT	SEGMENT
??0?$FactoryPtr@VIThunderboltRender@@@@QAE@XZ PROC	; FactoryPtr<IThunderboltRender>::FactoryPtr<IThunderboltRender>, COMDAT
; _this$ = esi

; 24   : 	FactoryPtr() { CreateObject();}

	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+104]
	call	eax
	mov	DWORD PTR [esi], eax
	mov	eax, esi
	ret	0
??0?$FactoryPtr@VIThunderboltRender@@@@QAE@XZ ENDP	; FactoryPtr<IThunderboltRender>::FactoryPtr<IThunderboltRender>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_plane.h
_TEXT	ENDS
;	COMDAT ?classify@?$_plane@M@@QBEMABU?$_vector3@M@@@Z
_TEXT	SEGMENT
?classify@?$_plane@M@@QBEMABU?$_vector3@M@@@Z PROC	; _plane<float>::classify, COMDAT
; _this$ = eax
; _v$ = ecx

; 62   : 		return n.dotproduct(v)+d;

	movss	xmm0, DWORD PTR [ecx+8]
	mulss	xmm0, DWORD PTR [eax+8]
	movss	xmm1, DWORD PTR [ecx+4]
	mulss	xmm1, DWORD PTR [eax+4]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR [ecx]
	mulss	xmm1, DWORD PTR [eax]
	addss	xmm0, xmm1
	addss	xmm0, DWORD PTR [eax+12]

; 63   : 	}

	ret	0
?classify@?$_plane@M@@QBEMABU?$_vector3@M@@@Z ENDP	; _plane<float>::classify
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?build@?$_plane@M@@QAEAAV1@ABU?$_vector3@M@@0@Z
_TEXT	SEGMENT
_mag$251371 = -16					; size = 4
tv170 = -12						; size = 4
tv166 = -8						; size = 4
tv162 = -4						; size = 4
?build@?$_plane@M@@QAEAAV1@ABU?$_vector3@M@@0@Z PROC	; _plane<float>::build, COMDAT
; _this$ = esi
; __p$ = edi
; __n$ = eax

; 40   : 	{

	sub	esp, 16					; 00000010H

; 41   : 		d			= - n.normalize(_n).dotproduct(_p);

	movss	xmm2, DWORD PTR [eax]
	movss	xmm1, DWORD PTR [eax+4]
	movss	xmm0, DWORD PTR [eax+8]
	movaps	xmm3, xmm2
	mulss	xmm3, xmm2
	movss	DWORD PTR tv170[esp+16], xmm2
	movaps	xmm2, xmm1
	mulss	xmm2, xmm1
	movss	DWORD PTR tv166[esp+16], xmm1
	movaps	xmm1, xmm0
	mulss	xmm1, xmm0
	movss	DWORD PTR tv162[esp+16], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	addss	xmm3, xmm2
	addss	xmm3, xmm1
	push	ecx
	divss	xmm0, xmm3
	movss	DWORD PTR [esp], xmm0
	call	_sqrtf
	fstp	DWORD PTR _mag$251371[esp+20]
	movss	xmm1, DWORD PTR _mag$251371[esp+20]
	movss	xmm0, DWORD PTR tv170[esp+20]
	mulss	xmm0, xmm1
	movaps	xmm2, xmm0
	movss	xmm0, DWORD PTR tv166[esp+20]
	mulss	xmm0, xmm1
	movaps	xmm3, xmm0
	movss	xmm0, DWORD PTR tv162[esp+20]
	mulss	xmm0, xmm1
	movss	xmm1, DWORD PTR [edi+8]
	mulss	xmm1, xmm0
	movss	DWORD PTR [esi+8], xmm0
	movss	xmm0, DWORD PTR [edi+4]
	mulss	xmm0, xmm3
	addss	xmm1, xmm0
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, xmm2
	addss	xmm1, xmm0
	movss	xmm0, DWORD PTR __real@80000000
	subss	xmm0, xmm1
	movss	DWORD PTR [esi], xmm2
	movss	DWORD PTR [esi+4], xmm3
	movss	DWORD PTR [esi+12], xmm0

; 42   : 		return *this;

	mov	eax, esi

; 43   : 	}

	add	esp, 20					; 00000014H
	ret	0
?build@?$_plane@M@@QAEAAV1@ABU?$_vector3@M@@0@Z ENDP	; _plane<float>::build
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_matrix.h
_TEXT	ENDS
;	COMDAT ?setXYZi@?$_matrix@M@@QAEAAU1@ABU?$_vector3@M@@@Z
_TEXT	SEGMENT
__sb$251445 = -24					; size = 4
$T251451 = -24						; size = 4
__cb$251442 = -20					; size = 4
$T251450 = -20						; size = 4
__cp$251441 = -16					; size = 4
$T251452 = -16						; size = 4
__sh$251443 = -12					; size = 4
__ch$251440 = -8					; size = 4
__sp$251444 = -4					; size = 4
?setXYZi@?$_matrix@M@@QAEAAU1@ABU?$_vector3@M@@@Z PROC	; _matrix<float>::setXYZi, COMDAT
; _this$ = esi
; _xyz$ = eax

; 578  : 	IC	SelfRef	setXYZi	(Tvector const& xyz)	{return setHPB(-xyz.y,-xyz.x,-xyz.z);}

	sub	esp, 28					; 0000001cH
	fld	DWORD PTR [eax+4]
	push	ecx
	fchs
	fst	DWORD PTR $T251452[esp+32]
	fld	DWORD PTR [eax]
	fchs
	fstp	DWORD PTR $T251451[esp+32]
	fld	DWORD PTR [eax+8]
	fchs
	fstp	DWORD PTR $T251450[esp+32]
	fstp	DWORD PTR [esp]
	call	_sinf
	fstp	DWORD PTR __sh$251443[esp+32]
	fld	DWORD PTR $T251452[esp+32]
	fstp	DWORD PTR [esp]
	call	_cosf
	fstp	DWORD PTR __ch$251440[esp+32]
	fld	DWORD PTR $T251451[esp+32]
	fstp	DWORD PTR [esp]
	call	_sinf
	fstp	DWORD PTR __sp$251444[esp+32]
	fld	DWORD PTR $T251451[esp+32]
	fstp	DWORD PTR [esp]
	call	_cosf
	fstp	DWORD PTR __cp$251441[esp+32]
	fld	DWORD PTR $T251450[esp+32]
	fstp	DWORD PTR [esp]
	call	_sinf
	fstp	DWORD PTR __sb$251445[esp+32]
	fld	DWORD PTR $T251450[esp+32]
	fstp	DWORD PTR [esp]
	call	_cosf
	movss	xmm4, DWORD PTR __sb$251445[esp+32]
	fst	DWORD PTR __cb$251442[esp+32]
	fld	DWORD PTR __sb$251445[esp+32]
	movss	xmm1, DWORD PTR __cb$251442[esp+32]
	fld	DWORD PTR __cp$251441[esp+32]
	movss	xmm2, DWORD PTR __sh$251443[esp+32]
	movss	xmm5, DWORD PTR __sp$251444[esp+32]
	fmul	ST(1), ST(0)
	movss	xmm6, DWORD PTR __ch$251440[esp+32]
	fxch	ST(1)
	movaps	xmm0, xmm1
	mulss	xmm1, xmm2
	fchs
	movaps	xmm3, xmm4
	fstp	DWORD PTR [esi+4]
	mulss	xmm4, xmm2
	mulss	xmm0, xmm6
	fmulp	ST(1), ST(0)
	movaps	xmm7, xmm0
	mulss	xmm3, xmm6
	movaps	xmm2, xmm4
	mulss	xmm2, xmm5
	subss	xmm7, xmm2
	movaps	xmm2, xmm3
	movss	DWORD PTR [esi], xmm7
	mulss	xmm2, xmm5
	addss	xmm2, xmm1
	movss	DWORD PTR [esi+8], xmm2
	xorps	xmm2, xmm2
	movss	DWORD PTR [esi+12], xmm2
	fstp	DWORD PTR [esi+20]
	mulss	xmm1, xmm5
	addss	xmm1, xmm3
	movss	xmm3, DWORD PTR __real@80000000
	movss	DWORD PTR [esi+16], xmm1
	mulss	xmm0, xmm5
	subss	xmm4, xmm0
	movss	xmm0, DWORD PTR __cp$251441[esp+32]
	movss	DWORD PTR [esi+24], xmm4
	movss	DWORD PTR [esi+28], xmm2
	movaps	xmm1, xmm0
	mulss	xmm1, DWORD PTR __sh$251443[esp+32]
	subss	xmm3, xmm1
	movss	DWORD PTR [esi+32], xmm3
	movss	DWORD PTR [esi+36], xmm5
	mulss	xmm0, xmm6
	movss	DWORD PTR [esi+40], xmm0
	movss	DWORD PTR [esi+44], xmm2
	movss	DWORD PTR [esi+48], xmm2
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esi+52], xmm2
	movss	DWORD PTR [esi+56], xmm2
	movss	DWORD PTR [esi+60], xmm0
	mov	eax, esi
	add	esp, 32					; 00000020H
	ret	0
?setXYZi@?$_matrix@M@@QAEAAU1@ABU?$_vector3@M@@@Z ENDP	; _matrix<float>::setXYZi
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?transform_dir@?$_matrix@M@@QBEXAAU?$_vector3@M@@@Z
_TEXT	SEGMENT
?transform_dir@?$_matrix@M@@QBEXAAU?$_vector3@M@@@Z PROC ; _matrix<float>::transform_dir, COMDAT
; _this$ = eax
; _v$ = ecx

; 556  : 		Tvector			res;
; 557  : 		transform_dir	(res,v);

	movss	xmm4, DWORD PTR [ecx+4]
	movss	xmm3, DWORD PTR [ecx+8]
	movss	xmm0, DWORD PTR [eax+16]
	movss	xmm1, DWORD PTR [eax+32]
	movss	xmm5, DWORD PTR [ecx]
	movss	xmm2, DWORD PTR [eax+20]
	mulss	xmm1, xmm3
	mulss	xmm0, xmm4
	addss	xmm0, xmm1
	mulss	xmm2, xmm4
	movaps	xmm1, xmm5
	mulss	xmm1, DWORD PTR [eax]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR [eax+4]
	mulss	xmm1, xmm5
	addss	xmm1, xmm2
	movss	xmm2, DWORD PTR [eax+36]
	mulss	xmm2, xmm3
	addss	xmm1, xmm2
	movss	xmm2, DWORD PTR [eax+8]
	mulss	xmm2, xmm5
	movss	xmm5, DWORD PTR [eax+24]
	mulss	xmm5, xmm4
	movss	xmm4, DWORD PTR [eax+40]
	addss	xmm2, xmm5
	mulss	xmm4, xmm3
	addss	xmm2, xmm4

; 558  : 		v.set			(res);

	movss	DWORD PTR [ecx], xmm0
	movss	DWORD PTR [ecx+4], xmm1
	movss	DWORD PTR [ecx+8], xmm2

; 559  : 	}

	ret	0
?transform_dir@?$_matrix@M@@QBEXAAU?$_vector3@M@@@Z ENDP ; _matrix<float>::transform_dir
; Function compile flags: /Ogtpy
;	COMDAT ??1SFlare@SThunderboltDesc@@QAE@XZ
_TEXT	SEGMENT
??1SFlare@SThunderboltDesc@@QAE@XZ PROC			; SThunderboltDesc::SFlare::~SFlare, COMDAT
; _this$ = esi
	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [esi+20]
	mov	edx, DWORD PTR [edx+124]
	push	eax
	call	edx
	xor	ecx, ecx
	mov	DWORD PTR [esi+20], ecx
	mov	eax, DWORD PTR [esi+16]
	cmp	eax, ecx
	je	SHORT $LN9@SFlare
	add	DWORD PTR [eax], -1
	mov	eax, DWORD PTR [esi+16]
	cmp	DWORD PTR [eax], ecx
	jne	SHORT $LN9@SFlare
	mov	DWORD PTR [esi+16], ecx
$LN9@SFlare:
	mov	eax, DWORD PTR [esi+12]
	cmp	eax, ecx
	je	SHORT $LN15@SFlare
	add	DWORD PTR [eax], -1
	mov	edx, DWORD PTR [esi+12]
	cmp	DWORD PTR [edx], ecx
	jne	SHORT $LN15@SFlare
	mov	DWORD PTR [esi+12], ecx
$LN15@SFlare:
	ret	0
??1SFlare@SThunderboltDesc@@QAE@XZ ENDP			; SThunderboltDesc::SFlare::~SFlare
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GSFlare@SThunderboltDesc@@QAEPAXI@Z
_TEXT	SEGMENT
??_GSFlare@SThunderboltDesc@@QAEPAXI@Z PROC		; SThunderboltDesc::SFlare::`scalar deleting destructor', COMDAT
; _this$ = esi
	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [esi+20]
	mov	edx, DWORD PTR [edx+124]
	push	eax
	call	edx
	xor	ecx, ecx
	mov	DWORD PTR [esi+20], ecx
	mov	eax, DWORD PTR [esi+16]
	cmp	eax, ecx
	je	SHORT $LN12@scalar@28
	add	DWORD PTR [eax], -1
	mov	eax, DWORD PTR [esi+16]
	cmp	DWORD PTR [eax], ecx
	jne	SHORT $LN12@scalar@28
	mov	DWORD PTR [esi+16], ecx
$LN12@scalar@28:
	mov	eax, DWORD PTR [esi+12]
	cmp	eax, ecx
	je	SHORT $LN28@scalar@28
	add	DWORD PTR [eax], -1
	mov	edx, DWORD PTR [esi+12]
	cmp	DWORD PTR [edx], ecx
	mov	eax, esi
	jne	SHORT $LN18@scalar@28
	mov	DWORD PTR [esi+12], ecx
	ret	0
$LN28@scalar@28:
	mov	eax, esi
$LN18@scalar@28:
	ret	0
??_GSFlare@SThunderboltDesc@@QAEPAXI@Z ENDP		; SThunderboltDesc::SFlare::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
_TEXT	ENDS
;	COMDAT ??R?$xr_special_free@$0A@USFlare@SThunderboltDesc@@@@QAEXAAPAUSFlare@SThunderboltDesc@@@Z
_TEXT	SEGMENT
??R?$xr_special_free@$0A@USFlare@SThunderboltDesc@@@@QAEXAAPAUSFlare@SThunderboltDesc@@@Z PROC ; xr_special_free<0,SThunderboltDesc::SFlare>::operator(), COMDAT
; _ptr$ = edi

; 143  : 		ptr->~T			();

	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+124]
	push	esi
	mov	esi, DWORD PTR [edi]
	mov	eax, DWORD PTR [esi+20]
	push	eax
	call	edx
	xor	ecx, ecx
	mov	DWORD PTR [esi+20], ecx
	mov	eax, DWORD PTR [esi+16]
	cmp	eax, ecx
	je	SHORT $LN14@operator@48
	add	DWORD PTR [eax], -1
	mov	eax, DWORD PTR [esi+16]
	cmp	DWORD PTR [eax], ecx
	jne	SHORT $LN14@operator@48
	mov	DWORD PTR [esi+16], ecx
$LN14@operator@48:
	mov	eax, DWORD PTR [esi+12]
	cmp	eax, ecx
	je	SHORT $LN20@operator@48
	add	DWORD PTR [eax], -1
	mov	edx, DWORD PTR [esi+12]
	cmp	DWORD PTR [edx], ecx
	jne	SHORT $LN20@operator@48
	mov	DWORD PTR [esi+12], ecx
$LN20@operator@48:

; 144  : 		Memory.mem_free	(ptr);

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	pop	esi

; 145  : 	}

	ret	0
??R?$xr_special_free@$0A@USFlare@SThunderboltDesc@@@@QAEXAAPAUSFlare@SThunderboltDesc@@@Z ENDP ; xr_special_free<0,SThunderboltDesc::SFlare>::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_delete@USFlare@SThunderboltDesc@@@@YAXAAPAUSFlare@SThunderboltDesc@@@Z
_TEXT	SEGMENT
??$xr_delete@USFlare@SThunderboltDesc@@@@YAXAAPAUSFlare@SThunderboltDesc@@@Z PROC ; xr_delete<SThunderboltDesc::SFlare>, COMDAT
; _ptr$ = eax

; 150  : {

	push	edi
	mov	edi, eax

; 151  : 	if (ptr) 

	cmp	DWORD PTR [edi], 0
	je	SHORT $LN1@xr_delete@28

; 152  : 	{
; 153  : 		xr_special_free<is_polymorphic<T>::result,T>()(ptr);

	call	??R?$xr_special_free@$0A@USFlare@SThunderboltDesc@@@@QAEXAAPAUSFlare@SThunderboltDesc@@@Z ; xr_special_free<0,SThunderboltDesc::SFlare>::operator()

; 154  : 		ptr = NULL;

	mov	DWORD PTR [edi], 0
$LN1@xr_delete@28:
	pop	edi

; 155  : 	}
; 156  : }

	ret	0
??$xr_delete@USFlare@SThunderboltDesc@@@@YAXAAPAUSFlare@SThunderboltDesc@@@Z ENDP ; xr_delete<SThunderboltDesc::SFlare>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ??0?$vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@stlp_std@@QAE@ABV?$xalloc@PAUSThunderboltCollection@@@@@Z
_TEXT	SEGMENT
??0?$vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@stlp_std@@QAE@ABV?$xalloc@PAUSThunderboltCollection@@@@@Z PROC ; stlp_std::vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >, COMDAT
; _this$ = eax

; 106  :   explicit vector(const allocator_type& __a = allocator_type())

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@stlp_std@@QAE@ABV?$xalloc@PAUSThunderboltCollection@@@@@Z ENDP ; stlp_std::vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAE@ABV?$xalloc@PAUSThunderboltDesc@@@@@Z
_TEXT	SEGMENT
??0?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAE@ABV?$xalloc@PAUSThunderboltDesc@@@@@Z PROC ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >, COMDAT
; _this$ = eax

; 106  :   explicit vector(const allocator_type& __a = allocator_type())

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAE@ABV?$xalloc@PAUSThunderboltDesc@@@@@Z ENDP ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?back@?$vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@stlp_std@@QAEAAPAUSThunderboltCollection@@XZ
_TEXT	SEGMENT
?back@?$vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@stlp_std@@QAEAAPAUSThunderboltCollection@@XZ PROC ; stlp_std::vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::back, COMDAT
; _this$ = eax

; 100  :   reference back()              { return cast_traits::to_value_type_ref(_M_impl.back()); }

	mov	eax, DWORD PTR [eax+4]
	sub	eax, 4
	ret	0
?back@?$vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@stlp_std@@QAEAAPAUSThunderboltCollection@@XZ ENDP ; stlp_std::vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::back
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_plane.h
_TEXT	ENDS
;	COMDAT ?intersectRayDist@?$_plane@M@@QAEHABU?$_vector3@M@@0AAM@Z
_TEXT	SEGMENT
_denom$ = -16						; size = 4
tv172 = -12						; size = 4
tv165 = -8						; size = 4
tv204 = -4						; size = 4
tv178 = -4						; size = 4
_dist$ = 8						; size = 4
?intersectRayDist@?$_plane@M@@QAEHABU?$_vector3@M@@0AAM@Z PROC ; _plane<float>::intersectRayDist, COMDAT
; _this$ = esi
; _P$ = edi
; _D$ = eax

; 76   : 	{

	sub	esp, 16					; 00000010H

; 78   : 		T denom = n.dotproduct(D);

	movss	xmm2, DWORD PTR [esi+4]
	movss	xmm1, DWORD PTR [esi+8]
	movss	xmm0, DWORD PTR [eax+4]
	movss	xmm3, DWORD PTR [esi]
	mulss	xmm0, xmm2
	movss	DWORD PTR tv172[esp+16], xmm2
	movss	xmm2, DWORD PTR [eax+8]
	mulss	xmm2, xmm1
	movss	DWORD PTR tv165[esp+16], xmm1
	movss	xmm1, DWORD PTR [eax]
	addss	xmm0, xmm2
	mulss	xmm1, xmm3
	addss	xmm0, xmm1
	movss	DWORD PTR _denom$[esp+16], xmm0

; 79   : 	
; 80   : 		if (_abs(denom)<EPS_S)  // normal is orthogonal to vector3, cant intersect

	fld	DWORD PTR _denom$[esp+16]
	push	ecx
	fstp	DWORD PTR [esp]
	movss	DWORD PTR tv178[esp+20], xmm3
	call	_fabsf
	fld	DWORD PTR _EPS_S
	add	esp, 4
	fcomip	ST(1)
	fstp	ST(0)
	jbe	SHORT $LN1@intersectR
$LN25@intersectR:

; 81   : 			return FALSE;

	xor	eax, eax

; 85   : 	}

	add	esp, 16					; 00000010H
	ret	4
$LN1@intersectR:

; 77   : 		T numer = classify(P);

	movss	xmm1, DWORD PTR [edi+4]
	mulss	xmm1, DWORD PTR tv172[esp+16]
	movss	xmm0, DWORD PTR [edi+8]
	mulss	xmm0, DWORD PTR tv165[esp+16]

; 82   : 	
; 83   : 		dist = -(numer / denom);

	mov	eax, DWORD PTR _dist$[esp+12]
	addss	xmm1, xmm0
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, DWORD PTR tv178[esp+16]
	addss	xmm1, xmm0
	addss	xmm1, DWORD PTR [esi+12]
	divss	xmm1, DWORD PTR _denom$[esp+16]
	movss	xmm0, DWORD PTR __real@80000000
	subss	xmm0, xmm1

; 84   : 		return ((dist>0.f)||fis_zero(dist));

	comiss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR tv204[esp+16], xmm0
	movss	DWORD PTR [eax], xmm0
	ja	SHORT $LN4@intersectR
	fld	DWORD PTR tv204[esp+16]
	push	ecx
	fstp	DWORD PTR [esp]
	call	_fabsf
	fld	DWORD PTR _EPS_S
	add	esp, 4
	fcomip	ST(1)
	fstp	ST(0)
	jbe	SHORT $LN25@intersectR
$LN4@intersectR:
	mov	eax, 1

; 85   : 	}

	add	esp, 16					; 00000010H
	ret	4
?intersectRayDist@?$_plane@M@@QAEHABU?$_vector3@M@@0AAM@Z ENDP ; _plane<float>::intersectRayDist
_TEXT	ENDS
PUBLIC	__real@bfc90fdb
;	COMDAT __real@bfc90fdb
; File j:\msvs8\vc\include\math.h
CONST	SEGMENT
__real@bfc90fdb DD 0bfc90fdbr			; -1.5708
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_vector3d.h
CONST	ENDS
;	COMDAT ?getHP@?$_vector3@M@@QBEXAAM0@Z
_TEXT	SEGMENT
tv225 = -8						; size = 4
tv238 = -4						; size = 4
tv231 = -4						; size = 4
_hyp$ = -4						; size = 4
?getHP@?$_vector3@M@@QBEXAAM0@Z PROC			; _vector3<float>::getHP, COMDAT
; _this$ = esi
; _h$ = edi
; _p$ = ebx

; 338  :     {

	sub	esp, 12					; 0000000cH

; 339  :         float hyp;
; 340  : 
; 341  :         if (fis_zero(x)&& fis_zero(z)){

	fld	DWORD PTR [esi]
	push	ecx
	fst	DWORD PTR tv225[esp+16]
	fstp	DWORD PTR [esp]
	call	_fabsf
	fld	DWORD PTR _EPS_S
	add	esp, 4
	fcomip	ST(1)
	fstp	ST(0)
	jbe	SHORT $LN10@getHP
	fld	DWORD PTR [esi+8]
	push	ecx
	fstp	DWORD PTR [esp]
	call	_fabsf
	fld	DWORD PTR _EPS_S
	add	esp, 4
	fcomip	ST(1)
	fstp	ST(0)
	jbe	SHORT $LN10@getHP

; 342  :             h = 0.0f;
; 343  :             if (!fis_zero(float(y)))	p = (y>0.0f)?PI_DIV_2:-PI_DIV_2;

	fld	DWORD PTR [esi+4]
	xorps	xmm0, xmm0
	push	ecx
	fst	DWORD PTR tv238[esp+16]
	fstp	DWORD PTR [esp]
	movss	DWORD PTR [edi], xmm0
	call	_fabsf
	fld	DWORD PTR _EPS_S
	add	esp, 4
	fcomip	ST(1)
	fstp	ST(0)
	ja	SHORT $LN9@getHP
	movss	xmm0, DWORD PTR tv238[esp+12]
	jmp	$LN74@getHP
$LN9@getHP:

; 344  :             else            			p = 0.0f;

	xorps	xmm0, xmm0
	movss	DWORD PTR [ebx], xmm0

; 352  :         }
; 353  :     }

	add	esp, 12					; 0000000cH
	ret	0
$LN10@getHP:

; 345  :         }else{
; 346  :             if (fis_zero(z))			h = (x>0.0f)?-PI_DIV_2:PI_DIV_2;

	fld	DWORD PTR [esi+8]
	push	ecx
	fst	DWORD PTR tv231[esp+16]
	fstp	DWORD PTR [esp]
	call	_fabsf
	fld	DWORD PTR _EPS_S
	movss	xmm1, DWORD PTR tv225[esp+16]
	add	esp, 4
	fcomip	ST(1)
	fstp	ST(0)
	jbe	SHORT $LN6@getHP
	comiss	xmm1, DWORD PTR __real@00000000
	jbe	SHORT $LN15@getHP
	movss	xmm0, DWORD PTR __real@bfc90fdb
	movss	DWORD PTR [edi], xmm0
	jmp	SHORT $LN3@getHP
$LN15@getHP:
	movss	xmm0, DWORD PTR _PI_DIV_2
	movss	DWORD PTR [edi], xmm0
	jmp	SHORT $LN3@getHP
$LN6@getHP:

; 347  :             else if (z<0.0f)			h = -(atanf(x/z)-PI);

	fld	DWORD PTR tv225[esp+12]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR tv231[esp+12]
	fdiv	DWORD PTR tv231[esp+12]
	fld1
	fpatan
	jbe	SHORT $LN4@getHP
	fsub	DWORD PTR _M_PI
$LN4@getHP:

; 348  :             else            			h = -atanf(x/z);

	fchs
	fstp	DWORD PTR [edi]
$LN3@getHP:

; 349  :             hyp = _sqrt(x*x+z*z);

	movss	xmm0, DWORD PTR [esi+8]
	movaps	xmm2, xmm0
	mulss	xmm2, xmm0
	movaps	xmm0, xmm1
	mulss	xmm0, xmm1
	push	ecx
	addss	xmm2, xmm0
	movss	DWORD PTR [esp], xmm2
	call	_sqrtf
	fst	DWORD PTR _hyp$[esp+16]

; 350  :             if (fis_zero(float(hyp)))	p = (y>0.0f)?PI_DIV_2:-PI_DIV_2;

	fstp	DWORD PTR [esp]
	call	_fabsf
	fld	DWORD PTR _EPS_S
	add	esp, 4
	fcomip	ST(1)
	fstp	ST(0)
	jbe	SHORT $LN2@getHP
	movss	xmm0, DWORD PTR [esi+4]
$LN74@getHP:
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN17@getHP
	movss	xmm0, DWORD PTR _PI_DIV_2
	movss	DWORD PTR [ebx], xmm0

; 352  :         }
; 353  :     }

	add	esp, 12					; 0000000cH
	ret	0
$LN17@getHP:

; 350  :             if (fis_zero(float(hyp)))	p = (y>0.0f)?PI_DIV_2:-PI_DIV_2;

	movss	xmm0, DWORD PTR __real@bfc90fdb
	movss	DWORD PTR [ebx], xmm0

; 352  :         }
; 353  :     }

	add	esp, 12					; 0000000cH
	ret	0
$LN2@getHP:

; 351  :             else						p = atanf(y/hyp);

	fld	DWORD PTR [esi+4]
	fdiv	DWORD PTR _hyp$[esp+12]
	fld1
	fpatan
	fstp	DWORD PTR [ebx]

; 352  :         }
; 353  :     }

	add	esp, 12					; 0000000cH
	ret	0
?getHP@?$_vector3@M@@QBEXAAM0@Z ENDP			; _vector3<float>::getHP
_TEXT	ENDS
PUBLIC	?RayPick@CEffect_Thunderbolt@@AAEHABU?$_vector3@M@@0AAM@Z ; CEffect_Thunderbolt::RayPick
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\thunderbolt.cpp
;	COMDAT ?RayPick@CEffect_Thunderbolt@@AAEHABU?$_vector3@M@@0AAM@Z
_TEXT	SEGMENT
_PL$129423 = -16					; size = 16
_RQ$ = -16						; size = 12
_s$ = 8							; size = 4
tv196 = 12						; size = 4
_d$ = 12						; size = 4
_mag$311029 = 16					; size = 4
_dst$129424 = 16					; size = 4
_dist$ = 16						; size = 4
?RayPick@CEffect_Thunderbolt@@AAEHABU?$_vector3@M@@0AAM@Z PROC ; CEffect_Thunderbolt::RayPick, COMDAT
; _this$ = ecx

; 159  : 	BOOL bRes 	= TRUE;
; 160  : #ifdef _EDITOR
; 161  :     bRes 				= Tools->RayPick	(s,d,dist,0,0);
; 162  : #else
; 163  : 	collide::rq_result	RQ;
; 164  : 	CObject* E 			= g_pGameLevel->CurrentViewEntity();

	mov	eax, DWORD PTR ?g_pGameLevel@@3PAVIGame_Level@@A ; g_pGameLevel
	mov	ecx, DWORD PTR [eax+36]
	sub	esp, 20					; 00000014H
	push	ebx

; 165  : 	bRes 				= g_pGameLevel->ObjectSpace.RayPick(s,d,dist,collide::rqtBoth,RQ,E);	

	mov	ebx, DWORD PTR _dist$[esp+20]
	fld	DWORD PTR [ebx]
	push	esi
	mov	esi, DWORD PTR _d$[esp+24]
	push	edi
	mov	edi, DWORD PTR _s$[esp+28]
	push	ecx
	lea	ecx, DWORD PTR _RQ$[esp+36]
	push	ecx
	push	3
	push	ecx
	fstp	DWORD PTR [esp]
	push	esi
	push	edi
	lea	ecx, DWORD PTR [eax+262292]
	call	DWORD PTR __imp_?RayPick@CObjectSpace@@QAEHABU?$_vector3@M@@0MW4rq_target@collide@@AAUrq_result@4@PAVCObject@@@Z

; 166  :     if (bRes) dist	 	= RQ.range;

	test	eax, eax
	je	SHORT $LN4@RayPick@2
	movss	xmm0, DWORD PTR _RQ$[esp+36]
	movss	DWORD PTR [ebx], xmm0

; 173  :     }
; 174  : #endif
; 175  :     return bRes;
; 176  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	ret	12					; 0000000cH
$LN4@RayPick@2:

; 167  :     else{
; 168  :         Fvector N	={0.f,-1.f,0.f};
; 169  :         Fvector P	={0.f,0.f,0.f};
; 170  :         Fplane PL; PL.build(P,N);

	fld1
	push	ecx
	fstp	DWORD PTR [esp]
	call	_sqrtf
	fstp	DWORD PTR _mag$311029[esp+32]
	movss	xmm1, DWORD PTR _mag$311029[esp+32]
	movaps	xmm0, xmm1
	mulss	xmm0, DWORD PTR __real@00000000
	mulss	xmm1, DWORD PTR __real@bf800000
	movaps	xmm2, xmm0
	movss	DWORD PTR _PL$129423[esp+36], xmm0
	addss	xmm0, xmm2
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR __real@80000000
	add	esp, 4

; 171  :         float dst	=dist;
; 172  :         if (PL.intersectRayDist(s,d,dst)&&(dst<=dist)){dist=dst; return true;}else return false;

	lea	edx, DWORD PTR _dst$129424[esp+28]
	movss	DWORD PTR _PL$129423[esp+44], xmm0
	movss	xmm0, DWORD PTR [ebx]
	mov	eax, esi
	push	edx
	lea	esi, DWORD PTR _PL$129423[esp+36]
	movss	DWORD PTR _PL$129423[esp+40], xmm1
	movss	DWORD PTR _PL$129423[esp+44], xmm2
	movss	DWORD PTR tv196[esp+32], xmm0
	movss	DWORD PTR _dst$129424[esp+32], xmm0
	call	?intersectRayDist@?$_plane@M@@QAEHABU?$_vector3@M@@0AAM@Z ; _plane<float>::intersectRayDist
	test	eax, eax
	je	SHORT $LN2@RayPick@2
	movss	xmm0, DWORD PTR _dst$129424[esp+28]
	movss	xmm1, DWORD PTR tv196[esp+28]
	comiss	xmm1, xmm0
	jb	SHORT $LN2@RayPick@2
	movss	DWORD PTR [ebx], xmm0
	mov	eax, 1

; 173  :     }
; 174  : #endif
; 175  :     return bRes;
; 176  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	ret	12					; 0000000cH
$LN2@RayPick@2:
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
	add	esp, 20					; 00000014H
	ret	12					; 0000000cH
?RayPick@CEffect_Thunderbolt@@AAEHABU?$_vector3@M@@0AAM@Z ENDP ; CEffect_Thunderbolt::RayPick
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAE@XZ PROC ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::~vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN36@vector@35
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN36@vector@35:
	ret	0
??1?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAE@XZ ENDP ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::~vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAE@XZ
_TEXT	SEGMENT
??1?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAE@XZ PROC ; xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::~xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN38@xr_vector@26
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN38@xr_vector@26:
	ret	0
??1?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAE@XZ ENDP ; xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::~xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\thunderbolt.h
_TEXT	ENDS
;	COMDAT ?GetRandomDesc@SThunderboltCollection@@QAEPAUSThunderboltDesc@@XZ
_TEXT	SEGMENT
?GetRandomDesc@SThunderboltCollection@@QAEPAUSThunderboltDesc@@XZ PROC ; SThunderboltCollection::GetRandomDesc, COMDAT
; _this$ = eax

; 67   : 	SThunderboltDesc*			GetRandomDesc			(){VERIFY(palette.size()>0); return palette[Random.randI(palette.size())];}

	push	esi
	push	edi
	mov	edi, eax
	mov	esi, DWORD PTR [edi+4]
	sub	esi, DWORD PTR [edi]
	mov	eax, DWORD PTR __imp_?Random@@3VCRandom@@A
	sar	esi, 2
	call	?randI@CRandom@@QAEHXZ			; CRandom::randI
	cdq
	idiv	esi
	mov	edi, DWORD PTR [edi]
	push	edi
	mov	esi, edx
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	eax, DWORD PTR [eax+esi*4]
	add	esp, 4
	pop	edi
	pop	esi
	ret	0
?GetRandomDesc@SThunderboltCollection@@QAEPAUSThunderboltDesc@@XZ ENDP ; SThunderboltCollection::GetRandomDesc
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0SFlare@SThunderboltDesc@@QAE@XZ
_TEXT	SEGMENT
??0SFlare@SThunderboltDesc@@QAE@XZ PROC			; SThunderboltDesc::SFlare::SFlare, COMDAT
; _this$ = esi

; 42   :     	SFlare()				{ fOpacity = 0; fRadius.set(0.f,0.f);}

	xor	eax, eax
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+120]
	call	eax
	fldz
	xorps	xmm0, xmm0
	sub	esp, 8
	fst	DWORD PTR [esp+4]
	lea	ecx, DWORD PTR [esi+4]
	fstp	DWORD PTR [esp]
	mov	DWORD PTR [esi+20], eax
	movss	DWORD PTR [esi], xmm0
	call	?set@?$_vector2@M@@QAEAAU1@MM@Z		; _vector2<float>::set
	mov	eax, esi
	ret	0
??0SFlare@SThunderboltDesc@@QAE@XZ ENDP			; SThunderboltDesc::SFlare::SFlare
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
;	COMDAT ??$xr_new@USFlare@SThunderboltDesc@@@@YAPAUSFlare@SThunderboltDesc@@XZ
_TEXT	SEGMENT
??$xr_new@USFlare@SThunderboltDesc@@@@YAPAUSFlare@SThunderboltDesc@@XZ PROC ; xr_new<SThunderboltDesc::SFlare>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	24					; 00000018H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
	xor	eax, eax
	cmp	esi, eax
	je	SHORT $LN4@xr_new@17
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+120]
	call	eax
	fldz
	xorps	xmm0, xmm0
	sub	esp, 8
	fst	DWORD PTR [esp+4]
	lea	ecx, DWORD PTR [esi+4]
	fstp	DWORD PTR [esp]
	mov	DWORD PTR [esi+20], eax
	movss	DWORD PTR [esi], xmm0
	call	?set@?$_vector2@M@@QAEAAU1@MM@Z		; _vector2<float>::set
	mov	eax, esi
$LN4@xr_new@17:
	pop	esi

; 70   : }

	ret	0
??$xr_new@USFlare@SThunderboltDesc@@@@YAPAUSFlare@SThunderboltDesc@@XZ ENDP ; xr_new<SThunderboltDesc::SFlare>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xr_vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xr_vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@@QAE@XZ PROC ; xr_vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::xr_vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >, COMDAT
; _this$ = eax

; 123  : 			xr_vector			()									: inherited	()					{}

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$xr_vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@@QAE@XZ ENDP ; xr_vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::xr_vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAE@XZ PROC ; xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >, COMDAT
; _this$ = eax

; 123  : 			xr_vector			()									: inherited	()					{}

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAE@XZ ENDP ; xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >
_TEXT	ENDS
PUBLIC	__real@3b5a740e
PUBLIC	__real@be99999a
PUBLIC	__real@3f733333
PUBLIC	?Bolt@CEffect_Thunderbolt@@AAEXVshared_str@@MM@Z ; CEffect_Thunderbolt::Bolt
;	COMDAT __real@3b5a740e
; File d:\clearsky\sources\engine\xrcore\xrstring.h
CONST	SEGMENT
__real@3b5a740e DD 03b5a740er			; 0.00333333
CONST	ENDS
;	COMDAT __real@be99999a
CONST	SEGMENT
__real@be99999a DD 0be99999ar			; -0.3
CONST	ENDS
;	COMDAT __real@3f733333
CONST	SEGMENT
__real@3f733333 DD 03f733333r			; 0.95
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\thunderbolt.cpp
CONST	ENDS
;	COMDAT ?Bolt@CEffect_Thunderbolt@@AAEXVshared_str@@MM@Z
_TEXT	SEGMENT
tv1343 = -124						; size = 4
tv881 = -124						; size = 4
__cp$383754 = -124					; size = 4
tv1332 = -120						; size = 4
tv887 = -120						; size = 4
_lng$ = -120						; size = 4
_sun_h$ = -120						; size = 4
tv1354 = -116						; size = 4
_alt$ = -116						; size = 4
_dist$ = -112						; size = 4
tv1338 = -108						; size = 4
$T383839 = -108						; size = 4
$T383787 = -108						; size = 4
$T383724 = -108						; size = 4
$T383689 = -108						; size = 4
tv1349 = -104						; size = 4
$T383838 = -104						; size = 4
$T383786 = -104						; size = 4
$T383723 = -104						; size = 4
$T383688 = -104						; size = 4
$T383356 = -104						; size = 4
tv1360 = -100						; size = 4
$T383927 = -100						; size = 4
$T383331 = -100						; size = 8
_dev$ = -100						; size = 12
_pos$ = -88						; size = 12
_light_dir$ = -76					; size = 12
_XF$ = -64						; size = 64
_id$ = 8						; size = 4
_period$ = 12						; size = 4
_lt$ = 16						; size = 4
?Bolt@CEffect_Thunderbolt@@AAEXVshared_str@@MM@Z PROC	; CEffect_Thunderbolt::Bolt, COMDAT
; _this$ = ecx

; 180  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 124				; 0000007cH

; 181  : 	VERIFY					(id.size());
; 182  : 	state 		            = stWorking;
; 183  : 	life_time	            = lt+Random.randF(-lt*0.5f,lt*0.5f);

	movss	xmm0, DWORD PTR _lt$[ebp]
	mulss	xmm0, DWORD PTR __real@bf000000
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR [edi+96], 1
	mov	eax, DWORD PTR __imp_?Random@@3VCRandom@@A
	movss	DWORD PTR $T383356[esp+136], xmm0
	call	?randI@CRandom@@QAEHXZ			; CRandom::randI
	movss	xmm0, DWORD PTR _lt$[ebp]
	movss	xmm1, DWORD PTR $T383356[esp+136]
	movaps	xmm3, xmm0
	mulss	xmm3, DWORD PTR __real@3f000000
	cvtsi2ss xmm2, eax

; 184  :     current_time            = 0.f;
; 185  : 
; 186  :     current		            = g_pGamePersistent->Environment().thunderbolt_collection(collection, id)->GetRandomDesc(); VERIFY(current);

	mov	eax, DWORD PTR [edi]
	subss	xmm3, xmm1
	mulss	xmm2, xmm3
	mulss	xmm2, DWORD PTR __real@38000100
	addss	xmm2, xmm1
	addss	xmm2, xmm0
	xorps	xmm0, xmm0
	push	eax
	movss	DWORD PTR [edi+120], xmm2
	movss	DWORD PTR [edi+124], xmm0
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	esi, eax
	mov	eax, DWORD PTR [edi+4]
	add	esp, 4
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	npad	6
$LL24@Bolt:
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR _id$[ebp]
	cmp	DWORD PTR [ecx+12], edx
	je	SHORT $LN264@Bolt
	add	esi, 4
	jmp	SHORT $LL24@Bolt
$LN264@Bolt:
	mov	eax, DWORD PTR __imp_?Random@@3VCRandom@@A
	mov	ebx, ecx
	mov	esi, DWORD PTR [ebx+4]
	sub	esi, DWORD PTR [ebx]
	sar	esi, 2
	call	?randI@CRandom@@QAEHXZ			; CRandom::randI
	cdq
	idiv	esi
	mov	ebx, DWORD PTR [ebx]
	push	ebx
	mov	esi, edx
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	eax, DWORD PTR [eax+esi*4]
	mov	DWORD PTR [edi+12], eax

; 187  : 
; 188  :     Fmatrix XF,S;
; 189  :     Fvector pos,dev;
; 190  :     float sun_h, sun_p; 
; 191  : 	CEnvironment&			environment = g_pGamePersistent->Environment();

	mov	ecx, DWORD PTR ?g_pGamePersistent@@3PAVIGame_Persistent@@A ; g_pGamePersistent
	mov	ebx, DWORD PTR [ecx+1128]

; 192  :     environment.CurrentEnv->sun_dir.getHP			(sun_h,sun_p);

	mov	esi, DWORD PTR [ebx+120]
	fld	DWORD PTR [esi+152]
	add	esi, 152				; 00000098H
	fst	DWORD PTR tv881[esp+140]
	fstp	DWORD PTR [esp]
	call	_fabsf
	fld	DWORD PTR _EPS_S
	add	esp, 4
	fcomip	ST(1)
	fstp	ST(0)
	jbe	SHORT $LN90@Bolt
	fld	DWORD PTR [esi+8]
	push	ecx
	fstp	DWORD PTR [esp]
	call	_fabsf
	fld	DWORD PTR _EPS_S
	add	esp, 4
	fcomip	ST(1)
	fstp	ST(0)
	jbe	SHORT $LN90@Bolt
	xorps	xmm2, xmm2
	jmp	SHORT $LN83@Bolt
$LN90@Bolt:
	fld	DWORD PTR [esi+8]
	push	ecx
	fst	DWORD PTR tv887[esp+140]
	fstp	DWORD PTR [esp]
	call	_fabsf
	fld	DWORD PTR _EPS_S
	add	esp, 4
	fcomip	ST(1)
	fstp	ST(0)
	jbe	SHORT $LN86@Bolt
	movss	xmm0, DWORD PTR tv881[esp+136]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN95@Bolt
	movss	xmm2, DWORD PTR __real@bfc90fdb
	jmp	SHORT $LN83@Bolt
$LN95@Bolt:
	movss	xmm2, DWORD PTR _PI_DIV_2
	jmp	SHORT $LN83@Bolt
$LN86@Bolt:
	fld	DWORD PTR tv881[esp+136]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR tv887[esp+136]
	fdiv	DWORD PTR tv887[esp+136]
	fld1
	fpatan
	jbe	SHORT $LN84@Bolt
	fsub	DWORD PTR _M_PI
$LN84@Bolt:
	fchs
	fstp	DWORD PTR _sun_h$[esp+136]
	movss	xmm2, DWORD PTR _sun_h$[esp+136]
$LN83@Bolt:

; 193  :     float alt	            = environment.p_var_alt;//Random.randF(environment.p_var_alt.x,environment.p_var_alt.y);
; 194  :     float lng	            = Random.randF(sun_h-environment.p_var_long+PI,sun_h+environment.p_var_long+PI); 

	movss	xmm0, DWORD PTR [ebx+280]
	fld	DWORD PTR [ebx+276]
	movss	xmm3, DWORD PTR _M_PI
	fstp	DWORD PTR _alt$[esp+136]
	mov	eax, DWORD PTR __imp_?Random@@3VCRandom@@A
	movaps	xmm1, xmm2
	subss	xmm1, xmm0
	addss	xmm0, xmm2
	addss	xmm1, xmm3
	addss	xmm0, xmm3
	movss	DWORD PTR $T383689[esp+136], xmm1
	movss	DWORD PTR $T383688[esp+136], xmm0
	call	?randI@CRandom@@QAEHXZ			; CRandom::randI
	movss	xmm1, DWORD PTR $T383689[esp+136]
	movss	xmm0, DWORD PTR $T383688[esp+136]

; 195  :     float dist	            = Random.randF(FAR_DIST*environment.p_min_dist,FAR_DIST*.95f);

	mov	edx, DWORD PTR ?g_pGamePersistent@@3PAVIGame_Persistent@@A ; g_pGamePersistent
	subss	xmm0, xmm1
	cvtsi2ss xmm2, eax
	mov	eax, DWORD PTR [edx+1128]
	mov	ecx, DWORD PTR [eax+120]
	mov	eax, DWORD PTR __imp_?Random@@3VCRandom@@A
	mulss	xmm2, xmm0
	mulss	xmm2, DWORD PTR __real@38000100
	movss	xmm0, DWORD PTR [ecx+56]
	addss	xmm2, xmm1
	movss	xmm1, DWORD PTR [ebx+284]
	mulss	xmm1, xmm0
	mulss	xmm0, DWORD PTR __real@3f733333
	movss	DWORD PTR _lng$[esp+136], xmm2
	movss	DWORD PTR $T383724[esp+136], xmm1
	movss	DWORD PTR $T383723[esp+136], xmm0
	call	?randI@CRandom@@QAEHXZ			; CRandom::randI

; 196  :     current_direction.setHP	(lng,alt);

	fld	DWORD PTR _alt$[esp+136]
	movss	xmm2, DWORD PTR $T383724[esp+136]
	movss	xmm1, DWORD PTR $T383723[esp+136]
	cvtsi2ss xmm0, eax
	subss	xmm1, xmm2
	mulss	xmm0, xmm1
	mulss	xmm0, DWORD PTR __real@38000100
	push	ecx
	addss	xmm0, xmm2
	fstp	DWORD PTR [esp]
	movss	DWORD PTR _dist$[esp+140], xmm0
	call	_cosf
	fstp	DWORD PTR __cp$383754[esp+140]
	fld	DWORD PTR _lng$[esp+140]
	fstp	DWORD PTR [esp]
	call	_sinf
	fmul	DWORD PTR __cp$383754[esp+140]
	fchs
	fstp	DWORD PTR [edi+80]
	fld	DWORD PTR _alt$[esp+140]
	fstp	DWORD PTR [esp]
	call	_sinf
	fstp	DWORD PTR [edi+84]
	fld	DWORD PTR _lng$[esp+140]
	fstp	DWORD PTR [esp]
	call	_cosf
	fmul	DWORD PTR __cp$383754[esp+140]

; 197  :     pos.mad		            (Device.vCameraPosition,current_direction,dist);

	movss	xmm0, DWORD PTR _dist$[esp+140]
	add	esp, 4
	fstp	DWORD PTR [edi+88]
	movss	xmm1, DWORD PTR [edi+80]

; 198  :     dev.x		            = Random.randF(-environment.p_tilt,environment.p_tilt);

	mov	eax, DWORD PTR __imp_?Random@@3VCRandom@@A
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR ?Device@@3VCRenderDevice@@A+48
	movss	DWORD PTR _pos$[esp+136], xmm1
	movss	xmm1, DWORD PTR [edi+84]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR ?Device@@3VCRenderDevice@@A+52
	movss	DWORD PTR _pos$[esp+140], xmm1
	movss	xmm1, DWORD PTR [edi+88]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR ?Device@@3VCRenderDevice@@A+56
	movss	xmm0, DWORD PTR __real@80000000
	movss	DWORD PTR _pos$[esp+144], xmm1
	movss	xmm1, DWORD PTR [ebx+288]
	subss	xmm0, xmm1
	movss	DWORD PTR $T383787[esp+136], xmm0
	movss	DWORD PTR $T383786[esp+136], xmm1
	call	?randI@CRandom@@QAEHXZ			; CRandom::randI
	movss	xmm1, DWORD PTR $T383787[esp+136]
	movss	xmm0, DWORD PTR $T383786[esp+136]
	cvtsi2ss xmm2, eax

; 199  :     dev.y		            = Random.randF(0,PI_MUL_2);

	mov	eax, DWORD PTR __imp_?Random@@3VCRandom@@A
	subss	xmm0, xmm1
	mulss	xmm2, xmm0
	mulss	xmm2, DWORD PTR __real@38000100
	addss	xmm2, xmm1
	movss	DWORD PTR _dev$[esp+136], xmm2
	call	?randI@CRandom@@QAEHXZ			; CRandom::randI

; 200  :     dev.z		            = Random.randF(-environment.p_tilt,environment.p_tilt);

	movss	xmm1, DWORD PTR [ebx+288]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@3949116d
	mov	eax, DWORD PTR __imp_?Random@@3VCRandom@@A
	movss	DWORD PTR _dev$[esp+140], xmm0
	movss	xmm0, DWORD PTR __real@80000000
	subss	xmm0, xmm1
	movss	DWORD PTR $T383839[esp+136], xmm0
	movss	DWORD PTR $T383838[esp+136], xmm1
	call	?randI@CRandom@@QAEHXZ			; CRandom::randI
	movss	xmm1, DWORD PTR $T383839[esp+136]
	movss	xmm0, DWORD PTR $T383838[esp+136]
	cvtsi2ss xmm2, eax
	subss	xmm0, xmm1
	mulss	xmm2, xmm0
	mulss	xmm2, DWORD PTR __real@38000100
	addss	xmm2, xmm1

; 201  :     XF.setXYZi	            (dev);               

	lea	eax, DWORD PTR _dev$[esp+136]
	lea	esi, DWORD PTR _XF$[esp+136]
	movss	DWORD PTR _dev$[esp+144], xmm2
	call	?setXYZi@?$_matrix@M@@QAEAAU1@ABU?$_vector3@M@@@Z ; _matrix<float>::setXYZi

; 202  : 
; 203  :     Fvector light_dir 		= {0.f,-1.f,0.f};
; 204  :     XF.transform_dir		(light_dir);

	xorps	xmm0, xmm0
	movss	xmm5, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR _XF$[esp+136]
	movss	xmm3, DWORD PTR _XF$[esp+152]
	movss	xmm1, DWORD PTR _XF$[esp+168]
	movss	xmm4, DWORD PTR _XF$[esp+156]

; 205  :     lightning_size			= FAR_DIST*2.f;

	mov	edx, DWORD PTR ?g_pGamePersistent@@3PAVIGame_Persistent@@A ; g_pGamePersistent
	mulss	xmm1, xmm0
	mulss	xmm2, xmm0
	mulss	xmm3, xmm5
	movss	DWORD PTR tv1338[esp+136], xmm2
	subss	xmm2, xmm3
	movss	xmm3, DWORD PTR _XF$[esp+140]
	mulss	xmm3, xmm0
	addss	xmm2, xmm1
	movss	DWORD PTR tv1332[esp+136], xmm1
	movss	xmm1, DWORD PTR _XF$[esp+172]
	mulss	xmm1, xmm0
	mulss	xmm4, xmm5
	movss	DWORD PTR tv1349[esp+136], xmm3
	subss	xmm3, xmm4
	movss	xmm4, DWORD PTR _XF$[esp+144]
	mulss	xmm4, xmm0
	addss	xmm3, xmm1
	movss	DWORD PTR tv1343[esp+136], xmm1
	movss	xmm1, DWORD PTR _XF$[esp+176]
	mulss	xmm1, xmm0
	movss	xmm0, DWORD PTR _XF$[esp+160]
	mulss	xmm0, xmm5
	movss	DWORD PTR tv1360[esp+136], xmm4
	subss	xmm4, xmm0
	movss	DWORD PTR _light_dir$[esp+136], xmm2
	movss	DWORD PTR _light_dir$[esp+140], xmm3
	addss	xmm4, xmm1
	movss	DWORD PTR _light_dir$[esp+144], xmm4
	mov	eax, DWORD PTR [edx+1128]
	mov	ecx, DWORD PTR [eax+120]
	movss	xmm0, DWORD PTR [ecx+56]
	mulss	xmm0, DWORD PTR __real@40000000
	lea	esi, DWORD PTR [edi+112]

; 206  :     RayPick					(pos,light_dir,lightning_size);

	push	esi
	lea	edx, DWORD PTR _light_dir$[esp+140]
	push	edx
	lea	eax, DWORD PTR _pos$[esp+144]
	push	eax
	mov	ecx, edi
	movss	DWORD PTR tv1354[esp+148], xmm1
	movss	DWORD PTR [esi], xmm0
	call	?RayPick@CEffect_Thunderbolt@@AAEHABU?$_vector3@M@@0AAM@Z ; CEffect_Thunderbolt::RayPick

; 207  : 
; 208  :     lightning_center.mad	(pos,light_dir,lightning_size*0.5f);

	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR __real@3f000000

; 209  : 
; 210  :     S.scale					(lightning_size,lightning_size,lightning_size);
; 211  :     XF.translate_over		(pos);
; 212  :     current_xform.mul_43	(XF,S);

	xorps	xmm4, xmm4
	movss	xmm5, DWORD PTR _XF$[esp+152]
	movaps	xmm1, xmm0
	mulss	xmm1, DWORD PTR _light_dir$[esp+136]
	addss	xmm1, DWORD PTR _pos$[esp+136]
	movss	DWORD PTR [edi+100], xmm1
	movss	xmm6, DWORD PTR _XF$[esp+144]
	movaps	xmm1, xmm0
	mulss	xmm0, DWORD PTR _light_dir$[esp+144]
	mulss	xmm1, DWORD PTR _light_dir$[esp+140]
	addss	xmm0, DWORD PTR _pos$[esp+144]
	addss	xmm1, DWORD PTR _pos$[esp+140]
	movss	DWORD PTR [edi+108], xmm0
	movss	DWORD PTR [edi+104], xmm1
	movss	xmm2, DWORD PTR [esi]
	movss	xmm1, DWORD PTR _XF$[esp+140]
	movaps	xmm7, xmm2
	movaps	xmm0, xmm7
	mulss	xmm0, DWORD PTR _XF$[esp+136]
	mulss	xmm1, xmm7
	mulss	xmm5, xmm4
	addss	xmm0, xmm5
	addss	xmm0, DWORD PTR tv1332[esp+136]
	addss	xmm5, DWORD PTR tv1338[esp+136]
	mulss	xmm6, xmm7
	movss	DWORD PTR [edi+16], xmm0
	movss	xmm0, DWORD PTR _XF$[esp+156]
	mulss	xmm7, DWORD PTR _XF$[esp+172]
	mulss	xmm0, xmm4
	addss	xmm1, xmm0
	addss	xmm1, DWORD PTR tv1343[esp+136]
	movss	DWORD PTR [edi+20], xmm1
	movss	xmm1, DWORD PTR _XF$[esp+160]
	mulss	xmm1, xmm4
	addss	xmm6, xmm1
	addss	xmm6, DWORD PTR tv1354[esp+136]
	movss	DWORD PTR [edi+24], xmm6
	movaps	xmm6, xmm2
	mulss	xmm6, DWORD PTR _XF$[esp+152]
	addss	xmm6, DWORD PTR tv1338[esp+136]
	addss	xmm6, DWORD PTR tv1332[esp+136]
	movss	DWORD PTR [edi+32], xmm6
	movaps	xmm6, xmm2
	mulss	xmm6, DWORD PTR _XF$[esp+156]
	addss	xmm6, DWORD PTR tv1349[esp+136]
	addss	xmm6, DWORD PTR tv1343[esp+136]
	movaps	xmm3, xmm2
	mulss	xmm2, DWORD PTR _XF$[esp+160]
	movss	DWORD PTR [edi+36], xmm6
	movss	xmm6, DWORD PTR tv1360[esp+136]
	addss	xmm2, xmm6
	addss	xmm2, DWORD PTR tv1354[esp+136]
	movss	DWORD PTR [edi+40], xmm2
	movaps	xmm2, xmm3
	mulss	xmm2, DWORD PTR _XF$[esp+168]
	mulss	xmm3, DWORD PTR _XF$[esp+176]
	addss	xmm2, xmm5
	addss	xmm5, DWORD PTR tv1332[esp+136]
	addss	xmm5, DWORD PTR _pos$[esp+136]
	addss	xmm7, xmm0
	addss	xmm3, xmm1
	movss	DWORD PTR [edi+48], xmm2
	movss	xmm2, DWORD PTR tv1349[esp+136]
	addss	xmm0, xmm2
	addss	xmm0, DWORD PTR tv1343[esp+136]
	addss	xmm0, DWORD PTR _pos$[esp+140]
	addss	xmm1, xmm6
	addss	xmm1, DWORD PTR tv1354[esp+136]
	addss	xmm1, DWORD PTR _pos$[esp+144]
	addss	xmm7, xmm2
	addss	xmm3, xmm6
	movss	DWORD PTR [edi+68], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [edi+28], xmm4
	movss	DWORD PTR [edi+44], xmm4
	movss	DWORD PTR [edi+52], xmm7
	movss	DWORD PTR [edi+56], xmm3
	movss	DWORD PTR [edi+60], xmm4
	movss	DWORD PTR [edi+64], xmm5
	movss	DWORD PTR [edi+72], xmm1
	movss	DWORD PTR [edi+76], xmm0

; 213  : 
; 214  :     float next_v			= Random.randF();

	mov	eax, DWORD PTR __imp_?Random@@3VCRandom@@A
	call	?randI@CRandom@@QAEHXZ			; CRandom::randI

; 215  : 
; 216  :     if (next_v<environment.p_second_prop){

	movss	xmm1, DWORD PTR [ebx+292]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@38000100
	comiss	xmm1, xmm0
	jbe	SHORT $LN2@Bolt

; 217  : 	    next_lightning_time = Device.fTimeGlobal+lt+EPS_L;

	movss	xmm0, DWORD PTR ?Device@@3VCRenderDevice@@A+32
	addss	xmm0, DWORD PTR _lt$[ebp]
	addss	xmm0, DWORD PTR _EPS_L
	movss	DWORD PTR [edi+128], xmm0

; 218  :     }else{

	jmp	$LN253@Bolt
$LN2@Bolt:

; 219  : 	    next_lightning_time = Device.fTimeGlobal+period+Random.randF(-period*0.3f,period*0.3f);

	movss	xmm0, DWORD PTR _period$[ebp]
	mulss	xmm0, DWORD PTR __real@be99999a
	mov	eax, DWORD PTR __imp_?Random@@3VCRandom@@A
	movss	DWORD PTR $T383927[esp+136], xmm0
	call	?randI@CRandom@@QAEHXZ			; CRandom::randI
	movss	xmm1, DWORD PTR _period$[ebp]
	movss	xmm2, DWORD PTR $T383927[esp+136]
	movaps	xmm3, xmm1
	mulss	xmm3, DWORD PTR _particles_time
	cvtsi2ss xmm0, eax
	subss	xmm3, xmm2
	mulss	xmm0, xmm3
	mulss	xmm0, DWORD PTR __real@38000100
	addss	xmm0, xmm2
	addss	xmm0, DWORD PTR ?Device@@3VCRenderDevice@@A+32
	addss	xmm0, xmm1
	movss	DWORD PTR [edi+128], xmm0

; 220  : 		current->snd.play_no_feedback		(0,0,dist/300.f,&pos,0,0,&Fvector2().set(dist/2,dist*2.f));

	movss	xmm0, DWORD PTR _dist$[esp+136]
	movaps	xmm1, xmm0
	mulss	xmm1, DWORD PTR __real@40000000
	mulss	xmm0, DWORD PTR __real@3f000000
	sub	esp, 8
	xor	eax, eax
	movss	DWORD PTR [esp+4], xmm1
	lea	ecx, DWORD PTR $T383331[esp+144]
	mov	DWORD PTR $T383331[esp+144], eax
	mov	DWORD PTR $T383331[esp+148], eax
	movss	DWORD PTR [esp], xmm0
	call	?set@?$_vector2@M@@QAEAAU1@MM@Z		; _vector2<float>::set
	mov	ecx, DWORD PTR __imp_?Sound@@3PAVCSound_manager_interface@@A
	mov	ecx, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR _dist$[esp+136]
	mulss	xmm0, DWORD PTR __real@3b5a740e
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+60]
	push	eax
	push	0
	push	0
	lea	eax, DWORD PTR _pos$[esp+148]
	push	eax
	mov	eax, DWORD PTR [edi+12]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	add	eax, 4
	push	eax
	call	edx
$LN253@Bolt:

; 221  :     }
; 222  : 
; 223  : 
; 224  : 	current_direction.invert			();	// for env-sun

	movss	xmm0, DWORD PTR __real@80000000

; 225  : }

	mov	eax, DWORD PTR _id$[ebp]
	test	eax, eax
	movaps	xmm1, xmm0
	subss	xmm1, DWORD PTR [edi+80]
	movss	DWORD PTR [edi+80], xmm1
	movaps	xmm1, xmm0
	subss	xmm1, DWORD PTR [edi+84]
	subss	xmm0, DWORD PTR [edi+88]
	movss	DWORD PTR [edi+84], xmm1
	movss	DWORD PTR [edi+88], xmm0
	je	SHORT $LN259@Bolt
	add	DWORD PTR [eax], -1
$LN259@Bolt:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Bolt@CEffect_Thunderbolt@@AAEXVshared_str@@MM@Z ENDP	; CEffect_Thunderbolt::Bolt
_TEXT	ENDS
PUBLIC	??0CEffect_Thunderbolt@@QAE@XZ			; CEffect_Thunderbolt::CEffect_Thunderbolt
; Function compile flags: /Ogtpy
;	COMDAT ??0CEffect_Thunderbolt@@QAE@XZ
_TEXT	SEGMENT
??0CEffect_Thunderbolt@@QAE@XZ PROC			; CEffect_Thunderbolt::CEffect_Thunderbolt, COMDAT
; _this$ = ecx

; 115  : {

	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	push	esi
	mov	esi, ecx
	push	edi
	xor	edi, edi
	mov	DWORD PTR [esi], edi
	mov	DWORD PTR [esi+4], edi
	mov	DWORD PTR [esi+8], edi
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+104]
	call	eax

; 116  : 	current		= 0;
; 117  : 	life_time	= 0.f;

	xorps	xmm0, xmm0
	mov	DWORD PTR [esi+92], eax
	mov	DWORD PTR [esi+12], edi

; 118  :     state		= stIdle;

	mov	DWORD PTR [esi+96], edi

; 119  :     next_lightning_time = 0.f;
; 120  :     bEnabled	= FALSE;

	mov	DWORD PTR [esi+132], edi
	pop	edi
	movss	DWORD PTR [esi+120], xmm0
	movss	DWORD PTR [esi+128], xmm0

; 121  : 
; 122  :     // geom
; 123  : 	//hGeom_model.create	(D3DFVF_XYZ | D3DFVF_DIFFUSE | D3DFVF_TEX1, RCache.Vertex.Buffer(), RCache.Index.Buffer());
; 124  : 	//hGeom_gradient.create(FVF::F_LIT,RCache.Vertex.Buffer(),RCache.QuadIB);
; 125  : 
; 126  :     // params
; 127  : //	p_var_alt		= pSettings->r_fvector2							( "environment","altitude" );  
; 128  : //	p_var_alt.x		= deg2rad(p_var_alt.x); p_var_alt.y	= deg2rad(p_var_alt.y);
; 129  : //	p_var_long		= deg2rad	(				 pSettings->r_float	( "environment","delta_longitude" ));
; 130  : //	p_min_dist		= _min		(.95f,pSettings->r_float	( "environment","min_dist_factor" ));
; 131  : //	p_tilt			= deg2rad	(pSettings->r_float					( "environment","tilt" ));
; 132  : //	p_second_prop	= pSettings->r_float							( "environment","second_propability" );
; 133  : //	clamp			(p_second_prop,0.f,1.f);
; 134  : //	p_sky_color		= pSettings->r_float							( "environment","sky_color" );
; 135  : //	p_sun_color		= pSettings->r_float							( "environment","sun_color" );
; 136  : //	p_fog_color		= pSettings->r_float							( "environment","fog_color" );
; 137  : }

	mov	eax, esi
	pop	esi
	ret	0
??0CEffect_Thunderbolt@@QAE@XZ ENDP			; CEffect_Thunderbolt::CEffect_Thunderbolt
_TEXT	ENDS
PUBLIC	??0SThunderboltCollection@@QAE@XZ		; SThunderboltCollection::SThunderboltCollection
; Function compile flags: /Ogtpy
;	COMDAT ??0SThunderboltCollection@@QAE@XZ
_TEXT	SEGMENT
??0SThunderboltCollection@@QAE@XZ PROC			; SThunderboltCollection::SThunderboltCollection, COMDAT
; _this$ = eax

; 90   : {

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 91   : }

	ret	0
??0SThunderboltCollection@@QAE@XZ ENDP			; SThunderboltCollection::SThunderboltCollection
_TEXT	ENDS
PUBLIC	?create_center_gradient@SThunderboltDesc@@QAEXAAVCInifile@@ABVshared_str@@@Z ; SThunderboltDesc::create_center_gradient
; Function compile flags: /Ogtpy
;	COMDAT ?create_center_gradient@SThunderboltDesc@@QAEXAAVCInifile@@ABVshared_str@@@Z
_TEXT	SEGMENT
$T384120 = -8						; size = 8
_pIni$ = 8						; size = 4
?create_center_gradient@SThunderboltDesc@@QAEXAAVCInifile@@ABVshared_str@@@Z PROC ; SThunderboltDesc::create_center_gradient, COMDAT
; _this$ = edi
; _sect$ = ebx

; 51   : 	m_GradientCenter			= xr_new<SFlare>();

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	sub	esp, 8
	push	ebp
	mov	ebp, DWORD PTR _pIni$[esp+8]
	push	esi
	push	24					; 00000018H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	mov	esi, eax
	xor	eax, eax
	cmp	esi, eax
	je	SHORT $LN5@create_cen
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+120]
	call	eax
	fldz
	xorps	xmm0, xmm0
	sub	esp, 8
	fst	DWORD PTR [esp+4]
	lea	ecx, DWORD PTR [esi+4]
	fstp	DWORD PTR [esp]
	mov	DWORD PTR [esi+20], eax
	movss	DWORD PTR [esi], xmm0
	call	?set@?$_vector2@M@@QAEAAU1@MM@Z		; _vector2<float>::set
	jmp	SHORT $LN6@create_cen
$LN5@create_cen:
	xor	esi, esi
$LN6@create_cen:

; 52   :     m_GradientCenter->shader 	= pIni.r_string		( sect,"gradient_center_shader" );

	push	OFFSET ??_C@_0BH@ICJNLODG@gradient_center_shader?$AA@
	push	ebx
	mov	ecx, ebp
	mov	DWORD PTR [edi+12], esi
	call	DWORD PTR __imp_?r_string@CInifile@@QBEPBDABVshared_str@@PBD@Z
	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	esi, DWORD PTR [edi+12]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	add	esi, 16					; 00000010H
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	test	eax, eax
	je	SHORT $LN23@create_cen
	add	DWORD PTR [eax], 1
$LN23@create_cen:
	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN26@create_cen
	add	DWORD PTR [ecx], -1
	mov	edx, DWORD PTR [esi]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN26@create_cen
	mov	DWORD PTR [esi], 0
$LN26@create_cen:

; 53   :     m_GradientCenter->texture	= pIni.r_string		( sect,"gradient_center_texture" );

	push	OFFSET ??_C@_0BI@KIIAGMFC@gradient_center_texture?$AA@
	push	ebx
	mov	ecx, ebp
	mov	DWORD PTR [esi], eax
	call	DWORD PTR __imp_?r_string@CInifile@@QBEPBDABVshared_str@@PBD@Z
	mov	esi, DWORD PTR [edi+12]
	push	eax
	mov	eax, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	ecx, DWORD PTR [eax]
	add	esi, 12					; 0000000cH
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	test	eax, eax
	je	SHORT $LN32@create_cen
	add	DWORD PTR [eax], 1
$LN32@create_cen:
	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN35@create_cen
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [esi]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN35@create_cen
	mov	DWORD PTR [esi], 0
$LN35@create_cen:

; 54   :     m_GradientCenter->fRadius	= pIni.r_fvector2	(sect,"gradient_center_radius"  );

	push	OFFSET ??_C@_0BH@DMFCCBNG@gradient_center_radius?$AA@
	push	ebx
	lea	edx, DWORD PTR $T384120[esp+24]
	push	edx
	mov	ecx, ebp
	mov	DWORD PTR [esi], eax
	call	DWORD PTR __imp_?r_fvector2@CInifile@@QBE?AU?$_vector2@M@@ABVshared_str@@PBD@Z
	mov	ecx, DWORD PTR [edi+12]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+8], eax

; 55   :     m_GradientCenter->fOpacity 	= pIni.r_float		( sect,"gradient_center_opacity" );

	mov	esi, DWORD PTR [edi+12]
	push	OFFSET ??_C@_0BI@LCJLCDEP@gradient_center_opacity?$AA@
	push	ebx
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMABVshared_str@@PBD@Z
	fstp	DWORD PTR [esi]

; 56   : 	m_GradientCenter->m_pFlare->CreateShader		(*m_GradientCenter->shader,*m_GradientCenter->texture);

	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	mov	ecx, DWORD PTR [esi+20]
	je	SHORT $LN43@create_cen
	lea	edx, DWORD PTR [eax+16]
	jmp	SHORT $LN44@create_cen
$LN43@create_cen:
	xor	edx, edx
$LN44@create_cen:
	mov	esi, DWORD PTR [esi+16]
	test	esi, esi
	je	SHORT $LN47@create_cen
	lea	eax, DWORD PTR [esi+16]
	mov	esi, DWORD PTR [ecx]
	push	edx
	mov	edx, DWORD PTR [esi+8]
	push	eax
	call	edx
	pop	esi
	pop	ebp

; 57   : }

	add	esp, 8
	ret	4

; 56   : 	m_GradientCenter->m_pFlare->CreateShader		(*m_GradientCenter->shader,*m_GradientCenter->texture);

$LN47@create_cen:
	mov	esi, DWORD PTR [ecx]
	push	edx
	mov	edx, DWORD PTR [esi+8]
	xor	eax, eax
	push	eax
	call	edx
	pop	esi
	pop	ebp

; 57   : }

	add	esp, 8
	ret	4
?create_center_gradient@SThunderboltDesc@@QAEXAAVCInifile@@ABVshared_str@@@Z ENDP ; SThunderboltDesc::create_center_gradient
_TEXT	ENDS
PUBLIC	?create_top_gradient@SThunderboltDesc@@QAEXAAVCInifile@@ABVshared_str@@@Z ; SThunderboltDesc::create_top_gradient
; Function compile flags: /Ogtpy
;	COMDAT ?create_top_gradient@SThunderboltDesc@@QAEXAAVCInifile@@ABVshared_str@@@Z
_TEXT	SEGMENT
$T384252 = -8						; size = 8
_pIni$ = 8						; size = 4
?create_top_gradient@SThunderboltDesc@@QAEXAAVCInifile@@ABVshared_str@@@Z PROC ; SThunderboltDesc::create_top_gradient, COMDAT
; _this$ = edi
; _sect$ = ebx

; 41   : 	m_GradientTop				= xr_new<SFlare>();

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	sub	esp, 8
	push	ebp
	mov	ebp, DWORD PTR _pIni$[esp+8]
	push	esi
	push	24					; 00000018H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	mov	esi, eax
	xor	eax, eax
	cmp	esi, eax
	je	SHORT $LN5@create_top
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+120]
	call	eax
	fldz
	xorps	xmm0, xmm0
	sub	esp, 8
	fst	DWORD PTR [esp+4]
	lea	ecx, DWORD PTR [esi+4]
	fstp	DWORD PTR [esp]
	mov	DWORD PTR [esi+20], eax
	movss	DWORD PTR [esi], xmm0
	call	?set@?$_vector2@M@@QAEAAU1@MM@Z		; _vector2<float>::set
	jmp	SHORT $LN6@create_top
$LN5@create_top:
	xor	esi, esi
$LN6@create_top:

; 42   :     m_GradientTop->shader 		= pIni.r_string		( sect,"gradient_top_shader" );

	push	OFFSET ??_C@_0BE@LEJFNNBI@gradient_top_shader?$AA@
	push	ebx
	mov	ecx, ebp
	mov	DWORD PTR [edi+8], esi
	call	DWORD PTR __imp_?r_string@CInifile@@QBEPBDABVshared_str@@PBD@Z
	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	esi, DWORD PTR [edi+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	add	esi, 16					; 00000010H
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	test	eax, eax
	je	SHORT $LN23@create_top
	add	DWORD PTR [eax], 1
$LN23@create_top:
	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN26@create_top
	add	DWORD PTR [ecx], -1
	mov	edx, DWORD PTR [esi]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN26@create_top
	mov	DWORD PTR [esi], 0
$LN26@create_top:

; 43   :     m_GradientTop->texture		= pIni.r_string		( sect,"gradient_top_texture" );

	push	OFFSET ??_C@_0BF@HEGAGJPO@gradient_top_texture?$AA@
	push	ebx
	mov	ecx, ebp
	mov	DWORD PTR [esi], eax
	call	DWORD PTR __imp_?r_string@CInifile@@QBEPBDABVshared_str@@PBD@Z
	mov	esi, DWORD PTR [edi+8]
	push	eax
	mov	eax, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	ecx, DWORD PTR [eax]
	add	esi, 12					; 0000000cH
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	test	eax, eax
	je	SHORT $LN32@create_top
	add	DWORD PTR [eax], 1
$LN32@create_top:
	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN35@create_top
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [esi]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN35@create_top
	mov	DWORD PTR [esi], 0
$LN35@create_top:

; 44   :     m_GradientTop->fRadius		= pIni.r_fvector2	(sect,"gradient_top_radius"  );

	push	OFFSET ??_C@_0BE@KFKECPI@gradient_top_radius?$AA@
	push	ebx
	lea	edx, DWORD PTR $T384252[esp+24]
	push	edx
	mov	ecx, ebp
	mov	DWORD PTR [esi], eax
	call	DWORD PTR __imp_?r_fvector2@CInifile@@QBE?AU?$_vector2@M@@ABVshared_str@@PBD@Z
	mov	ecx, DWORD PTR [edi+8]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+8], eax

; 45   :     m_GradientTop->fOpacity		= pIni.r_float		( sect,"gradient_top_opacity" );

	mov	esi, DWORD PTR [edi+8]
	push	OFFSET ??_C@_0BF@GOHLCGOD@gradient_top_opacity?$AA@
	push	ebx
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMABVshared_str@@PBD@Z
	fstp	DWORD PTR [esi]

; 46   : 	m_GradientTop->m_pFlare->CreateShader			(*m_GradientTop->shader,*m_GradientTop->texture);

	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	mov	ecx, DWORD PTR [esi+20]
	je	SHORT $LN43@create_top
	lea	edx, DWORD PTR [eax+16]
	jmp	SHORT $LN44@create_top
$LN43@create_top:
	xor	edx, edx
$LN44@create_top:
	mov	esi, DWORD PTR [esi+16]
	test	esi, esi
	je	SHORT $LN47@create_top
	lea	eax, DWORD PTR [esi+16]
	mov	esi, DWORD PTR [ecx]
	push	edx
	mov	edx, DWORD PTR [esi+8]
	push	eax
	call	edx
	pop	esi
	pop	ebp

; 47   : }

	add	esp, 8
	ret	4

; 46   : 	m_GradientTop->m_pFlare->CreateShader			(*m_GradientTop->shader,*m_GradientTop->texture);

$LN47@create_top:
	mov	esi, DWORD PTR [ecx]
	push	edx
	mov	edx, DWORD PTR [esi+8]
	xor	eax, eax
	push	eax
	call	edx
	pop	esi
	pop	ebp

; 47   : }

	add	esp, 8
	ret	4
?create_top_gradient@SThunderboltDesc@@QAEXAAVCInifile@@ABVshared_str@@@Z ENDP ; SThunderboltDesc::create_top_gradient
_TEXT	ENDS
PUBLIC	??1SThunderboltDesc@@QAE@XZ			; SThunderboltDesc::~SThunderboltDesc
; Function compile flags: /Ogtpy
;	COMDAT ??1SThunderboltDesc@@QAE@XZ
_TEXT	SEGMENT
$T384463 = -1						; size = 1
??1SThunderboltDesc@@QAE@XZ PROC			; SThunderboltDesc::~SThunderboltDesc, COMDAT
; _this$ = esi

; 26   : {

	push	ecx

; 27   : 	m_pRender->DestroyModel		();

	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	push	ebx
	push	ebp
	push	edi
	call	edx

; 28   :     //::Render->model_Delete	(l_model);
; 29   : 	m_GradientTop->m_pFlare->DestroyShader();

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	lea	edi, DWORD PTR [esi+8]
	call	eax

; 30   : 	m_GradientCenter->m_pFlare->DestroyShader();

	mov	ecx, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR [ecx+20]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	lea	ebp, DWORD PTR [esi+12]
	call	eax

; 31   :     //m_GradientTop.hShader.destroy	();
; 32   :     //m_GradientCenter.hShader.destroy();
; 33   :     snd.destroy					();

	mov	ecx, DWORD PTR __imp_?Sound@@3PAVCSound_manager_interface@@A
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+40]
	lea	ebx, DWORD PTR [esi+4]
	push	ebx
	call	eax

; 34   : 
; 35   : 	xr_delete					(m_GradientTop);

	cmp	DWORD PTR [edi], 0
	je	SHORT $LN14@SThunderbo
	call	??R?$xr_special_free@$0A@USFlare@SThunderboltDesc@@@@QAEXAAPAUSFlare@SThunderboltDesc@@@Z ; xr_special_free<0,SThunderboltDesc::SFlare>::operator()
	mov	DWORD PTR [edi], 0
$LN14@SThunderbo:

; 36   : 	xr_delete					(m_GradientCenter);

	cmp	DWORD PTR [ebp], 0
	je	SHORT $LN17@SThunderbo
	mov	edi, ebp
	call	??R?$xr_special_free@$0A@USFlare@SThunderboltDesc@@@@QAEXAAPAUSFlare@SThunderboltDesc@@@Z ; xr_special_free<0,SThunderboltDesc::SFlare>::operator()
	mov	DWORD PTR [ebp], 0
$LN17@SThunderbo:

; 37   : }

	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN22@SThunderbo
	add	DWORD PTR [eax], -1
	mov	ecx, DWORD PTR [esi+16]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN22@SThunderbo
	mov	DWORD PTR [esi+16], 0
$LN22@SThunderbo:
	mov	eax, DWORD PTR [ebx]
	test	eax, eax
	je	SHORT $LN34@SThunderbo
	add	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR [ebx]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN34@SThunderbo
	test	eax, eax
	je	SHORT $LN34@SThunderbo
	push	ebx
	lea	ecx, DWORD PTR $T384463[esp+20]
	mov	BYTE PTR $T384463[esp+20], 0
	call	??R?$xr_special_free@$00Vref_sound_data@@@@QAEXAAPAVref_sound_data@@@Z ; xr_special_free<1,ref_sound_data>::operator()
	mov	DWORD PTR [ebx], 0
$LN34@SThunderbo:
	mov	edx, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [edx]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+116]
	push	edx
	call	eax
	pop	edi
	pop	ebp
	mov	DWORD PTR [esi], 0
	pop	ebx
	pop	ecx
	ret	0
??1SThunderboltDesc@@QAE@XZ ENDP			; SThunderboltDesc::~SThunderboltDesc
_TEXT	ENDS
PUBLIC	??0SThunderboltDesc@@QAE@XZ			; SThunderboltDesc::SThunderboltDesc
; Function compile flags: /Ogtpy
;	COMDAT ??0SThunderboltDesc@@QAE@XZ
_TEXT	SEGMENT
??0SThunderboltDesc@@QAE@XZ PROC			; SThunderboltDesc::SThunderboltDesc, COMDAT
; _this$ = esi

; 22   : {

	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	mov	DWORD PTR [esi], eax
	xor	eax, eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax

; 23   : }

	mov	eax, esi
	ret	0
??0SThunderboltDesc@@QAE@XZ ENDP			; SThunderboltDesc::SThunderboltDesc
; Function compile flags: /Ogtpy
;	COMDAT ??_GSThunderboltDesc@@QAEPAXI@Z
_TEXT	SEGMENT
??_GSThunderboltDesc@@QAEPAXI@Z PROC			; SThunderboltDesc::`scalar deleting destructor', COMDAT
; _this$ = eax
	push	esi
	mov	esi, eax
	call	??1SThunderboltDesc@@QAE@XZ		; SThunderboltDesc::~SThunderboltDesc
	mov	eax, esi
	pop	esi
	ret	0
??_GSThunderboltDesc@@QAEPAXI@Z ENDP			; SThunderboltDesc::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
_TEXT	ENDS
;	COMDAT ??R?$xr_special_free@$0A@USThunderboltDesc@@@@QAEXAAPAUSThunderboltDesc@@@Z
_TEXT	SEGMENT
??R?$xr_special_free@$0A@USThunderboltDesc@@@@QAEXAAPAUSThunderboltDesc@@@Z PROC ; xr_special_free<0,SThunderboltDesc>::operator(), COMDAT
; _ptr$ = edi

; 142  : 	{

	push	esi

; 143  : 		ptr->~T			();

	mov	esi, DWORD PTR [edi]
	call	??1SThunderboltDesc@@QAE@XZ		; SThunderboltDesc::~SThunderboltDesc

; 144  : 		Memory.mem_free	(ptr);

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	pop	esi

; 145  : 	}

	ret	0
??R?$xr_special_free@$0A@USThunderboltDesc@@@@QAEXAAPAUSThunderboltDesc@@@Z ENDP ; xr_special_free<0,SThunderboltDesc>::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_delete@USThunderboltDesc@@@@YAXAAPAUSThunderboltDesc@@@Z
_TEXT	SEGMENT
??$xr_delete@USThunderboltDesc@@@@YAXAAPAUSThunderboltDesc@@@Z PROC ; xr_delete<SThunderboltDesc>, COMDAT
; _ptr$ = edi

; 150  : {

	push	esi

; 151  : 	if (ptr) 

	mov	esi, DWORD PTR [edi]
	test	esi, esi
	je	SHORT $LN1@xr_delete@39

; 152  : 	{
; 153  : 		xr_special_free<is_polymorphic<T>::result,T>()(ptr);

	call	??1SThunderboltDesc@@QAE@XZ		; SThunderboltDesc::~SThunderboltDesc
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 154  : 		ptr = NULL;

	mov	DWORD PTR [edi], 0
$LN1@xr_delete@39:
	pop	esi

; 155  : 	}
; 156  : }

	ret	0
??$xr_delete@USThunderboltDesc@@@@YAXAAPAUSThunderboltDesc@@@Z ENDP ; xr_delete<SThunderboltDesc>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?clear@?$vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@stlp_std@@QAEXXZ PROC ; stlp_std::vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::clear, COMDAT
; _this$ = edi

; 223  :   void clear() { _M_impl.clear(); }

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN12@clear@53
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN18@clear@53
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN18@clear@53:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN12@clear@53:
	ret	0
?clear@?$vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@stlp_std@@QAEXXZ ENDP ; stlp_std::vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::clear
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?clear@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAEXXZ PROC ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::clear, COMDAT
; _this$ = edi

; 223  :   void clear() { _M_impl.clear(); }

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN12@clear@54
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN18@clear@54
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN18@clear@54:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN12@clear@54:
	ret	0
?clear@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAEXXZ ENDP ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::clear
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?clear_and_free@?$xr_vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@@QAEXXZ
_TEXT	SEGMENT
?clear_and_free@?$xr_vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@@QAEXXZ PROC ; xr_vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::clear_and_free, COMDAT
; _this$ = edi

; 128  : 	void	clear_and_free		()									{ inherited::clear();			}

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN14@clear_and_@18
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN20@clear_and_@18
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN20@clear_and_@18:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN14@clear_and_@18:
	ret	0
?clear_and_free@?$xr_vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@@QAEXXZ ENDP ; xr_vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::clear_and_free
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?clear_and_free@?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAEXXZ
_TEXT	SEGMENT
?clear_and_free@?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAEXXZ PROC ; xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::clear_and_free, COMDAT
; _this$ = edi

; 128  : 	void	clear_and_free		()									{ inherited::clear();			}

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN14@clear_and_@19
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN20@clear_and_@19
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN20@clear_and_@19:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN14@clear_and_@19:
	ret	0
?clear_and_free@?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAEXXZ ENDP ; xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::clear_and_free
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@stlp_std@@QAEXABQAUSThunderboltCollection@@@Z
_TEXT	SEGMENT
?push_back@?$vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@stlp_std@@QAEXABQAUSThunderboltCollection@@@Z PROC ; stlp_std::vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::push_back, COMDAT
; _this$ = ecx
; ___x$ = eax

; 171  :   { _M_impl.push_back(cast_traits::to_storage_type_cref(__x)); }

	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [edi+4]
	cmp	ecx, DWORD PTR [edi+8]
	je	SHORT $LN8@push_back@52
	push	eax
	push	ecx
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [edi+4], 4
	pop	edi
	ret	0
$LN8@push_back@52:
	push	1
	push	1
	push	ecx
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
	pop	edi
	ret	0
?push_back@?$vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@stlp_std@@QAEXABQAUSThunderboltCollection@@@Z ENDP ; stlp_std::vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::push_back
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?clear@?$xr_vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@@QAEXXZ
_TEXT	SEGMENT
?clear@?$xr_vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@@QAEXXZ PROC ; xr_vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::clear, COMDAT
; _this$ = edi

; 133  : 	void	clear				()									{ clear_and_free	();			}

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN16@clear@55
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN22@clear@55
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN22@clear@55:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN16@clear@55:
	ret	0
?clear@?$xr_vector@PAUSThunderboltCollection@@V?$xalloc@PAUSThunderboltCollection@@@@@@QAEXXZ ENDP ; xr_vector<SThunderboltCollection *,xalloc<SThunderboltCollection *> >::clear
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAEXABQAUSThunderboltDesc@@@Z
_TEXT	SEGMENT
?push_back@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAEXABQAUSThunderboltDesc@@@Z PROC ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::push_back, COMDAT
; _this$ = ecx
; ___x$ = eax

; 171  :   { _M_impl.push_back(cast_traits::to_storage_type_cref(__x)); }

	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [edi+4]
	cmp	ecx, DWORD PTR [edi+8]
	je	SHORT $LN8@push_back@53
	push	eax
	push	ecx
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [edi+4], 4
	pop	edi
	ret	0
$LN8@push_back@53:
	push	1
	push	1
	push	ecx
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
	pop	edi
	ret	0
?push_back@?$vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@stlp_std@@QAEXABQAUSThunderboltDesc@@@Z ENDP ; stlp_std::vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::push_back
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?clear@?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAEXXZ
_TEXT	SEGMENT
?clear@?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAEXXZ PROC ; xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::clear, COMDAT
; _this$ = edi

; 133  : 	void	clear				()									{ clear_and_free	();			}

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN16@clear@56
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN22@clear@56
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN22@clear@56:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN16@clear@56:
	ret	0
?clear@?$xr_vector@PAUSThunderboltDesc@@V?$xalloc@PAUSThunderboltDesc@@@@@@QAEXXZ ENDP ; xr_vector<SThunderboltDesc *,xalloc<SThunderboltDesc *> >::clear
_TEXT	ENDS
PUBLIC	?OnFrame@CEffect_Thunderbolt@@QAEXVshared_str@@MM@Z ; CEffect_Thunderbolt::OnFrame
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\thunderbolt.cpp
;	COMDAT ?OnFrame@CEffect_Thunderbolt@@QAEXVshared_str@@MM@Z
_TEXT	SEGMENT
$T453122 = 8						; size = 4
$T453077 = 8						; size = 4
_id$ = 8						; size = 4
tv689 = 12						; size = 4
tv688 = 12						; size = 4
tv687 = 12						; size = 4
$T453083 = 12						; size = 4
_frame$129469 = 12					; size = 4
_period$ = 12						; size = 4
$T453080 = 16						; size = 4
_duration$ = 16						; size = 4
?OnFrame@CEffect_Thunderbolt@@QAEXVshared_str@@MM@Z PROC ; CEffect_Thunderbolt::OnFrame, COMDAT
; _this$ = ecx

; 228  : {

	push	ebx

; 229  : 	BOOL enabled			= !!(id.size());

	mov	ebx, DWORD PTR _id$[esp]
	test	ebx, ebx
	push	esi
	push	edi
	mov	edi, ecx
	jne	SHORT $LN18@OnFrame@3
	xor	eax, eax
	jmp	SHORT $LN17@OnFrame@3
$LN18@OnFrame@3:
	mov	eax, DWORD PTR [ebx+4]
$LN17@OnFrame@3:
	xor	ecx, ecx
	test	eax, eax
	setne	cl
	mov	eax, ecx

; 230  : 	if (bEnabled!=enabled){

	mov	ecx, DWORD PTR [edi+132]
	cmp	ecx, eax
	je	SHORT $LN14@OnFrame@3

; 231  :     	bEnabled			= enabled;
; 232  : 	    next_lightning_time = Device.fTimeGlobal+period+Random.randF(-period*0.5f,period*0.5f);

	movss	xmm0, DWORD PTR _period$[esp+8]
	mulss	xmm0, DWORD PTR __real@bf000000
	mov	DWORD PTR [edi+132], eax
	mov	eax, DWORD PTR __imp_?Random@@3VCRandom@@A
	movss	DWORD PTR $T453122[esp+8], xmm0
	call	?randI@CRandom@@QAEHXZ			; CRandom::randI
	movss	xmm1, DWORD PTR _period$[esp+8]
	movss	xmm2, DWORD PTR $T453122[esp+8]
	movaps	xmm3, xmm1
	mulss	xmm3, DWORD PTR __real@3f000000
	subss	xmm3, xmm2
	cvtsi2ss xmm0, eax
	mulss	xmm0, xmm3
	mulss	xmm0, DWORD PTR __real@38000100
	addss	xmm0, xmm2
	movss	xmm2, DWORD PTR ?Device@@3VCRenderDevice@@A+32
	addss	xmm2, xmm0
	addss	xmm2, xmm1
	movss	DWORD PTR [edi+128], xmm2
	jmp	SHORT $LN11@OnFrame@3
$LN14@OnFrame@3:

; 233  :     }else if (bEnabled&&(Device.fTimeGlobal>next_lightning_time)){ 

	test	ecx, ecx
	je	SHORT $LN11@OnFrame@3
	movss	xmm0, DWORD PTR ?Device@@3VCRenderDevice@@A+32
	comiss	xmm0, DWORD PTR [edi+128]
	jbe	SHORT $LN11@OnFrame@3

; 234  :     	if (state==stIdle && !!(id.size())) Bolt(id,period,duration);

	cmp	DWORD PTR [edi+96], 0
	jne	SHORT $LN11@OnFrame@3
	test	ebx, ebx
	je	SHORT $LN11@OnFrame@3
	cmp	DWORD PTR [ebx+4], 0
	je	SHORT $LN11@OnFrame@3
	fld	DWORD PTR _duration$[esp+8]
	sub	esp, 12					; 0000000cH
	fstp	DWORD PTR [esp+8]
	lea	ecx, DWORD PTR _id$[esp+20]
	fld	DWORD PTR _period$[esp+20]
	mov	eax, esp
	fstp	DWORD PTR [esp+4]
	call	??0shared_str@@QAE@ABV0@@Z		; shared_str::shared_str
	mov	ecx, edi
	call	?Bolt@CEffect_Thunderbolt@@AAEXVshared_str@@MM@Z ; CEffect_Thunderbolt::Bolt
$LN11@OnFrame@3:

; 235  :     }
; 236  : 	if (state==stWorking){

	cmp	DWORD PTR [edi+96], 1
	jne	$LN1@OnFrame@3

; 237  :     	if (current_time>life_time) state = stIdle;

	movss	xmm1, DWORD PTR [edi+120]
	movss	xmm0, DWORD PTR [edi+124]
	comiss	xmm0, xmm1
	jbe	SHORT $LN9@OnFrame@3
	mov	DWORD PTR [edi+96], 0
$LN9@OnFrame@3:

; 238  :     	current_time	+= Device.fTimeDelta;

	movss	xmm0, DWORD PTR [edi+124]
	addss	xmm0, DWORD PTR ?Device@@3VCRenderDevice@@A+28

; 239  : 		Fvector fClr;		
; 240  : 		int frame;
; 241  : 		u32 uClr		= current->color_anim->CalculateRGB(current_time/life_time,frame);

	mov	eax, DWORD PTR [edi+12]
	lea	edx, DWORD PTR _frame$129469[esp+8]
	push	edx
	movss	DWORD PTR [edi+124], xmm0
	push	ecx
	mov	ecx, DWORD PTR [eax+20]
	divss	xmm0, xmm1
	movss	DWORD PTR [esp], xmm0
	call	?CalculateRGB@CLAItem@@QAEIMAAH@Z	; CLAItem::CalculateRGB

; 242  : 		fClr.set		(
; 243  : 			clampr(float(color_get_R(uClr)/255.f), 0.f, 1.f),
; 244  : 			clampr(float(color_get_G(uClr)/255.f), 0.f, 1.f),
; 245  : 			clampr(float(color_get_B(uClr)/255.f), 0.f, 1.f)
; 246  : 		);

	movzx	ecx, al
	mov	DWORD PTR tv689[esp+8], ecx
	movss	xmm4, DWORD PTR __real@3f800000
	fild	DWORD PTR tv689[esp+8]
	xorps	xmm2, xmm2
	fld	DWORD PTR __real@3b808081
	mov	edx, eax
	shr	edx, 8
	fmul	ST(1), ST(0)
	and	edx, 255				; 000000ffH
	fxch	ST(1)
	mov	DWORD PTR tv688[esp+8], edx
	shr	eax, 16					; 00000010H
	fst	DWORD PTR $T453077[esp+8]
	and	eax, 255				; 000000ffH
	fild	DWORD PTR tv688[esp+8]
	mov	DWORD PTR tv687[esp+8], eax
	fmul	ST(0), ST(2)
	fstp	DWORD PTR $T453080[esp+8]
	fild	DWORD PTR tv687[esp+8]
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR $T453083[esp+8]
	fldz
	fcomip	ST(1)
	fstp	ST(0)
	jbe	SHORT $LN42@OnFrame@3
	movaps	xmm6, xmm2
	jmp	SHORT $LN39@OnFrame@3
$LN42@OnFrame@3:
	movss	xmm0, DWORD PTR $T453077[esp+8]
	comiss	xmm0, xmm4
	jbe	SHORT $LN40@OnFrame@3
	movaps	xmm6, xmm4
	jmp	SHORT $LN39@OnFrame@3
$LN40@OnFrame@3:
	movaps	xmm6, xmm0
$LN39@OnFrame@3:
	movss	xmm5, DWORD PTR $T453080[esp+8]
	comiss	xmm2, xmm5
	jbe	SHORT $LN48@OnFrame@3
	movaps	xmm5, xmm2
	jmp	SHORT $LN46@OnFrame@3
$LN48@OnFrame@3:
	comiss	xmm5, xmm4
	jbe	SHORT $LN46@OnFrame@3
	movaps	xmm5, xmm4
$LN46@OnFrame@3:
	movss	xmm3, DWORD PTR $T453083[esp+8]
	comiss	xmm2, xmm3
	jbe	SHORT $LN54@OnFrame@3
	movaps	xmm3, xmm2
	jmp	SHORT $LN52@OnFrame@3
$LN54@OnFrame@3:
	comiss	xmm3, xmm4
	jbe	SHORT $LN52@OnFrame@3
	movaps	xmm3, xmm4
$LN52@OnFrame@3:

; 247  : 
; 248  :         lightning_phase	= 1.5f*(current_time/life_time);

	movss	xmm0, DWORD PTR [edi+124]
	divss	xmm0, DWORD PTR [edi+120]
	mulss	xmm0, DWORD PTR _fQuantizerRangeExt

; 249  :         clamp			(lightning_phase,0.f,1.f);

	comiss	xmm2, xmm0
	movss	DWORD PTR [edi+116], xmm0
	jbe	SHORT $LN61@OnFrame@3
	movss	DWORD PTR [edi+116], xmm2
	jmp	SHORT $LN59@OnFrame@3
$LN61@OnFrame@3:
	comiss	xmm0, xmm4
	jbe	SHORT $LN59@OnFrame@3
	movss	DWORD PTR [edi+116], xmm4
$LN59@OnFrame@3:

; 250  : 
; 251  : 		CEnvironment&	environment = g_pGamePersistent->Environment();

	mov	eax, DWORD PTR ?g_pGamePersistent@@3PAVIGame_Persistent@@A ; g_pGamePersistent
	mov	ecx, DWORD PTR [eax+1128]

; 252  : 		
; 253  : 		Fvector&		sky_color = environment.CurrentEnv->sky_color;
; 254  :         sky_color.mad	( fClr, environment.p_sky_color );

	movss	xmm0, DWORD PTR [ecx+296]
	mov	eax, DWORD PTR [ecx+120]
	add	eax, 40					; 00000028H
	movaps	xmm1, xmm0
	movaps	xmm7, xmm0
	mulss	xmm1, xmm3
	addss	xmm1, DWORD PTR [eax]

; 255  : 		clamp			( sky_color.x, 0.f, 1.f );

	comiss	xmm2, xmm1
	mulss	xmm7, xmm5
	addss	xmm7, DWORD PTR [eax+4]
	mulss	xmm0, xmm6
	addss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR [eax], xmm1
	movss	DWORD PTR [eax+4], xmm7
	movss	DWORD PTR [eax+8], xmm0
	jbe	SHORT $LN70@OnFrame@3
	movss	DWORD PTR [eax], xmm2
	jmp	SHORT $LN68@OnFrame@3
$LN70@OnFrame@3:
	comiss	xmm1, xmm4
	jbe	SHORT $LN68@OnFrame@3
	movss	DWORD PTR [eax], xmm4
$LN68@OnFrame@3:

; 256  : 		clamp			( sky_color.y, 0.f, 1.f );

	movss	xmm0, DWORD PTR [eax+4]
	comiss	xmm2, xmm0
	jbe	SHORT $LN75@OnFrame@3
	movss	DWORD PTR [eax+4], xmm2
	jmp	SHORT $LN73@OnFrame@3
$LN75@OnFrame@3:
	comiss	xmm0, xmm4
	jbe	SHORT $LN73@OnFrame@3
	movss	DWORD PTR [eax+4], xmm4
$LN73@OnFrame@3:

; 257  : 		clamp			( sky_color.z, 0.f, 1.f );

	movss	xmm0, DWORD PTR [eax+8]
	comiss	xmm2, xmm0
	jbe	SHORT $LN80@OnFrame@3
	movss	DWORD PTR [eax+8], xmm2
	jmp	SHORT $LN78@OnFrame@3
$LN80@OnFrame@3:
	comiss	xmm0, xmm4
	jbe	SHORT $LN78@OnFrame@3
	movss	DWORD PTR [eax+8], xmm4
$LN78@OnFrame@3:

; 258  : 
; 259  :         environment.CurrentEnv->sun_color.mad(fClr,environment.p_sun_color);

	movss	xmm0, DWORD PTR [ecx+300]
	mov	eax, DWORD PTR [ecx+120]
	add	eax, 140				; 0000008cH
	movaps	xmm1, xmm0
	mulss	xmm1, xmm3
	addss	xmm1, DWORD PTR [eax]
	movss	DWORD PTR [eax], xmm1
	movaps	xmm1, xmm0
	mulss	xmm1, xmm5
	addss	xmm1, DWORD PTR [eax+4]
	movss	DWORD PTR [eax+4], xmm1
	mulss	xmm0, xmm6
	addss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR [eax+8], xmm0

; 260  : 		environment.CurrentEnv->fog_color.mad(fClr,environment.p_fog_color);

	movss	xmm0, DWORD PTR [ecx+304]
	mov	eax, DWORD PTR [ecx+120]

; 261  : 
; 262  : 		if (::Render->get_generation()==IRender_interface::GENERATION_R2)	{

	mov	ecx, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx]
	add	eax, 60					; 0000003cH
	movaps	xmm1, xmm0
	mulss	xmm1, xmm3
	addss	xmm1, DWORD PTR [eax]
	movss	DWORD PTR [eax], xmm1
	movaps	xmm1, xmm0
	mulss	xmm1, xmm5
	addss	xmm1, DWORD PTR [eax+4]
	mulss	xmm0, xmm6
	addss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR [eax+4], xmm1
	movss	DWORD PTR [eax+8], xmm0
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	eax, 90					; 0000005aH
	jne	SHORT $LN1@OnFrame@3

; 263  : 			R_ASSERT	( _valid(current_direction) );

	cmp	BYTE PTR ?ignore_always@?BF@??OnFrame@CEffect_Thunderbolt@@QAEXVshared_str@@MM@Z@4_NA, 0
	jne	SHORT $LN6@OnFrame@3
	lea	esi, DWORD PTR [edi+80]
	call	??$_valid@M@@YAHABU?$_vector3@M@@@Z	; _valid<float>
	test	eax, eax
	jne	SHORT $LN6@OnFrame@3
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BF@??OnFrame@CEffect_Thunderbolt@@QAEXVshared_str@@MM@Z@4_NA
	push	OFFSET ??_C@_0BN@PEAFFMNN@CEffect_Thunderbolt?3?3OnFrame?$AA@
	push	263					; 00000107H
	push	OFFSET ??_C@_0DE@DNHCHACK@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BK@JAGJPECK@_valid?$CIcurrent_direction?$CJ?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN6@OnFrame@3:

; 264  : 			g_pGamePersistent->Environment().CurrentEnv->sun_dir = current_direction;

	mov	edx, DWORD PTR ?g_pGamePersistent@@3PAVIGame_Persistent@@A ; g_pGamePersistent
	mov	eax, DWORD PTR [edx+1128]
	mov	eax, DWORD PTR [eax+120]
	mov	edx, DWORD PTR [edi+80]
	lea	ecx, DWORD PTR [edi+80]
	add	eax, 152				; 00000098H
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx
$LN1@OnFrame@3:

; 265  : 			VERIFY2(g_pGamePersistent->Environment().CurrentEnv->sun_dir.y<0,"Invalid sun direction settings while CEffect_Thunderbolt");
; 266  : 
; 267  : 		} 
; 268  :     }
; 269  : }

	test	ebx, ebx
	je	SHORT $LN91@OnFrame@3
	add	DWORD PTR [ebx], -1
$LN91@OnFrame@3:
	pop	edi
	pop	esi
	pop	ebx
	ret	12					; 0000000cH
?OnFrame@CEffect_Thunderbolt@@QAEXVshared_str@@MM@Z ENDP ; CEffect_Thunderbolt::OnFrame
_TEXT	ENDS
PUBLIC	??1SThunderboltCollection@@QAE@XZ		; SThunderboltCollection::~SThunderboltCollection
; Function compile flags: /Ogtpy
;	COMDAT ??1SThunderboltCollection@@QAE@XZ
_TEXT	SEGMENT
??1SThunderboltCollection@@QAE@XZ PROC			; SThunderboltCollection::~SThunderboltCollection, COMDAT
; _this$ = eax

; 104  : {

	push	ebx
	push	ebp
	push	esi
	mov	ebx, eax

; 105  : 	for (DescIt d_it=palette.begin(); d_it!=palette.end(); d_it++)

	mov	eax, DWORD PTR [ebx]
	push	edi
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	edi, eax
	mov	eax, DWORD PTR [ebx+4]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	ebp, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	add	esp, 8
	cmp	edi, eax
	je	SHORT $LN1@SThunderbo@2
$LL3@SThunderbo@2:

; 106  : 		xr_delete	(*d_it);

	mov	esi, DWORD PTR [edi]
	test	esi, esi
	je	SHORT $LN2@SThunderbo@2
	call	??1SThunderboltDesc@@QAE@XZ		; SThunderboltDesc::~SThunderboltDesc
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebp
	mov	DWORD PTR [edi], 0
$LN2@SThunderbo@2:
	mov	eax, DWORD PTR [ebx+4]
	push	eax
	add	edi, 4
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	cmp	edi, eax
	jne	SHORT $LL3@SThunderbo@2
$LN1@SThunderbo@2:

; 107  : 
; 108  : 	palette.clear	();

	mov	ecx, DWORD PTR [ebx+4]
	mov	eax, DWORD PTR [ebx]
	cmp	eax, ecx
	je	SHORT $LN50@SThunderbo@2
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN56@SThunderbo@2
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN56@SThunderbo@2:
	mov	DWORD PTR [ebx+4], eax
$LN50@SThunderbo@2:

; 109  : }

	mov	eax, DWORD PTR [ebx+12]
	test	eax, eax
	je	SHORT $LN60@SThunderbo@2
	add	DWORD PTR [eax], -1
	mov	ecx, DWORD PTR [ebx+12]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN60@SThunderbo@2
	mov	DWORD PTR [ebx+12], 0
$LN60@SThunderbo@2:
	mov	ebx, DWORD PTR [ebx]
	test	ebx, ebx
	je	SHORT $LN101@SThunderbo@2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	ebx
	call	ebp
$LN101@SThunderbo@2:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
??1SThunderboltCollection@@QAE@XZ ENDP			; SThunderboltCollection::~SThunderboltCollection
_TEXT	ENDS
PUBLIC	?load@SThunderboltDesc@@QAEXAAVCInifile@@ABVshared_str@@@Z ; SThunderboltDesc::load
; Function compile flags: /Ogtpy
;	COMDAT ?load@SThunderboltDesc@@QAEXAAVCInifile@@ABVshared_str@@@Z
_TEXT	SEGMENT
?load@SThunderboltDesc@@QAEXAAVCInifile@@ABVshared_str@@@Z PROC ; SThunderboltDesc::load, COMDAT
; _this$ = ecx
; _pIni$ = esi
; _sect$ = eax

; 60   : {

	push	ebx
	push	ebp
	push	edi
	mov	ebx, eax
	mov	edi, ecx

; 61   : 	create_top_gradient			(pIni, sect);

	push	esi
	call	?create_top_gradient@SThunderboltDesc@@QAEXAAVCInifile@@ABVshared_str@@@Z ; SThunderboltDesc::create_top_gradient

; 62   : 	create_center_gradient		(pIni, sect);

	push	esi
	call	?create_center_gradient@SThunderboltDesc@@QAEXAAVCInifile@@ABVshared_str@@@Z ; SThunderboltDesc::create_center_gradient

; 63   : 
; 64   : 	name						= sect;

	mov	eax, DWORD PTR [ebx]
	test	eax, eax
	je	SHORT $LN9@load@4
	add	DWORD PTR [eax], 1
$LN9@load@4:
	mov	ecx, DWORD PTR [edi+16]
	test	ecx, ecx
	je	SHORT $LN12@load@4
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [edi+16]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN12@load@4
	mov	DWORD PTR [edi+16], 0
$LN12@load@4:

; 65   : 	color_anim					= LALib.FindItem (pIni.r_string ( sect,"color_anim" ));

	push	OFFSET ??_C@_0L@KAOPGBNI@color_anim?$AA@
	push	ebx
	mov	ecx, esi
	mov	DWORD PTR [edi+16], eax
	call	DWORD PTR __imp_?r_string@CInifile@@QBEPBDABVshared_str@@PBD@Z
	push	eax
	mov	ecx, OFFSET ?LALib@@3VELightAnimLibrary@@A ; LALib
	call	?FindItemI@ELightAnimLibrary@@QAEPAPAVCLAItem@@PBD@Z ; ELightAnimLibrary::FindItemI
	mov	edx, DWORD PTR ?LALib@@3VELightAnimLibrary@@A+4
	push	edx
	mov	ebp, eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	cmp	ebp, eax
	je	SHORT $LN18@load@4
	mov	eax, DWORD PTR [ebp]
	jmp	SHORT $LN19@load@4
$LN18@load@4:
	xor	eax, eax
$LN19@load@4:
	mov	DWORD PTR [edi+20], eax

; 66   : 	VERIFY						(color_anim);
; 67   : 	color_anim->fFPS			= (float)color_anim->iFrameCount;

	cvtsi2ss xmm0, DWORD PTR [eax+32]

; 68   : 
; 69   :     // models
; 70   : 	LPCSTR m_name;
; 71   : 	m_name						= pIni.r_string(sect,"lightning_model");

	push	OFFSET ??_C@_0BA@LJNGHFK@lightning_model?$AA@
	push	ebx
	mov	ecx, esi
	movss	DWORD PTR [eax+4], xmm0
	call	DWORD PTR __imp_?r_string@CInifile@@QBEPBDABVshared_str@@PBD@Z

; 72   : 	m_pRender->CreateModel		(m_name);

	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 73   : 
; 74   : 	/*
; 75   :     IReader* F			= 0;
; 76   : 	F					= FS.r_open("$game_meshes$",m_name); R_ASSERT2(F,"Empty 'lightning_model'.");
; 77   : 	l_model				= ::Render->model_CreateDM(F);
; 78   :     FS.r_close			(F);
; 79   : 	*/
; 80   : 
; 81   :     // sound
; 82   : 	m_name				= pIni.r_string(sect,"sound");

	push	OFFSET ??_C@_05MHNANJII@sound?$AA@
	push	ebx
	mov	ecx, esi
	call	DWORD PTR __imp_?r_string@CInifile@@QBEPBDABVshared_str@@PBD@Z

; 83   :     if (m_name&&m_name[0]) snd.create(m_name,st_Effect,sg_Undefined);

	test	eax, eax
	je	SHORT $LN33@load@4
	cmp	BYTE PTR [eax], 0
	je	SHORT $LN33@load@4
	mov	ecx, DWORD PTR __imp_?Sound@@3PAVCSound_manager_interface@@A
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx]
	push	0
	push	0
	push	eax
	mov	eax, DWORD PTR [edx+28]
	add	edi, 4
	push	edi
	call	eax
$LN33@load@4:
	pop	edi
	pop	ebp
	pop	ebx

; 84   : }

	ret	0
?load@SThunderboltDesc@@QAEXAAVCInifile@@ABVshared_str@@@Z ENDP ; SThunderboltDesc::load
; Function compile flags: /Ogtpy
;	COMDAT ??_GSThunderboltCollection@@QAEPAXI@Z
_TEXT	SEGMENT
??_GSThunderboltCollection@@QAEPAXI@Z PROC		; SThunderboltCollection::`scalar deleting destructor', COMDAT
; _this$ = esi
	mov	eax, esi
	call	??1SThunderboltCollection@@QAE@XZ	; SThunderboltCollection::~SThunderboltCollection
	mov	eax, esi
	ret	0
??_GSThunderboltCollection@@QAEPAXI@Z ENDP		; SThunderboltCollection::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
_TEXT	ENDS
;	COMDAT ??R?$xr_special_free@$0A@USThunderboltCollection@@@@QAEXAAPAUSThunderboltCollection@@@Z
_TEXT	SEGMENT
??R?$xr_special_free@$0A@USThunderboltCollection@@@@QAEXAAPAUSThunderboltCollection@@@Z PROC ; xr_special_free<0,SThunderboltCollection>::operator(), COMDAT
; _ptr$ = esi

; 143  : 		ptr->~T			();

	mov	eax, DWORD PTR [esi]
	call	??1SThunderboltCollection@@QAE@XZ	; SThunderboltCollection::~SThunderboltCollection

; 144  : 		Memory.mem_free	(ptr);

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 145  : 	}

	ret	0
??R?$xr_special_free@$0A@USThunderboltCollection@@@@QAEXAAPAUSThunderboltCollection@@@Z ENDP ; xr_special_free<0,SThunderboltCollection>::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_delete@USThunderboltCollection@@@@YAXAAPAUSThunderboltCollection@@@Z
_TEXT	SEGMENT
??$xr_delete@USThunderboltCollection@@@@YAXAAPAUSThunderboltCollection@@@Z PROC ; xr_delete<SThunderboltCollection>, COMDAT
; _ptr$ = esi

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN1@xr_delete@44

; 152  : 	{
; 153  : 		xr_special_free<is_polymorphic<T>::result,T>()(ptr);

	call	??1SThunderboltCollection@@QAE@XZ	; SThunderboltCollection::~SThunderboltCollection
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 154  : 		ptr = NULL;

	mov	DWORD PTR [esi], 0
$LN1@xr_delete@44:

; 155  : 	}
; 156  : }

	ret	0
??$xr_delete@USThunderboltCollection@@@@YAXAAPAUSThunderboltCollection@@@Z ENDP ; xr_delete<SThunderboltCollection>
_TEXT	ENDS
PUBLIC	??1CEffect_Thunderbolt@@QAE@XZ			; CEffect_Thunderbolt::~CEffect_Thunderbolt
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\thunderbolt.cpp
;	COMDAT ??1CEffect_Thunderbolt@@QAE@XZ
_TEXT	SEGMENT
??1CEffect_Thunderbolt@@QAE@XZ PROC			; CEffect_Thunderbolt::~CEffect_Thunderbolt, COMDAT
; _this$ = ecx

; 140  : {

	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 141  : 	for (CollectionVecIt d_it=collection.begin(); d_it!=collection.end(); d_it++)

	mov	eax, DWORD PTR [edi]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	esi, eax
	mov	eax, DWORD PTR [edi+4]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	ebx, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	add	esp, 8
	cmp	esi, eax
	je	SHORT $LN1@CEffect_Th
$LL3@CEffect_Th:

; 142  :     	xr_delete				(*d_it);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@CEffect_Th
	call	??1SThunderboltCollection@@QAE@XZ	; SThunderboltCollection::~SThunderboltCollection
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebx
	mov	DWORD PTR [esi], 0
$LN2@CEffect_Th:
	mov	eax, DWORD PTR [edi+4]
	push	eax
	add	esi, 4
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	cmp	esi, eax
	jne	SHORT $LL3@CEffect_Th
$LN1@CEffect_Th:

; 143  : 	collection.clear			();

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN50@CEffect_Th
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN56@CEffect_Th
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN56@CEffect_Th:
	mov	DWORD PTR [edi+4], eax
$LN50@CEffect_Th:

; 144  : 	//hGeom_model.destroy			();
; 145  : 	//hGeom_gradient.destroy		();
; 146  : }

	mov	ecx, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edi+92]
	mov	edx, DWORD PTR [edx+108]
	push	eax
	call	edx
	mov	DWORD PTR [edi+92], 0
	mov	edi, DWORD PTR [edi]
	test	edi, edi
	je	SHORT $LN99@CEffect_Th
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	ebx
$LN99@CEffect_Th:
	pop	edi
	pop	esi
	pop	ebx
	ret	0
??1CEffect_Thunderbolt@@QAE@XZ ENDP			; CEffect_Thunderbolt::~CEffect_Thunderbolt
_TEXT	ENDS
PUBLIC	?load@SThunderboltCollection@@QAEXPAVCInifile@@0PBD@Z ; SThunderboltCollection::load
; Function compile flags: /Ogtpy
;	COMDAT ?load@SThunderboltCollection@@QAEXPAVCInifile@@0PBD@Z
_TEXT	SEGMENT
$T495273 = -24						; size = 4
$T495272 = -20						; size = 4
_tb_idx$129350 = -16					; size = 4
_N$129354 = -12						; size = 4
_tb_count$ = -8						; size = 4
_V$129355 = -4						; size = 4
_pIni$ = 8						; size = 4
_sect$ = 12						; size = 4
?load@SThunderboltCollection@@QAEXPAVCInifile@@0PBD@Z PROC ; SThunderboltCollection::load, COMDAT
; _this$ = ecx
; _thunderbolts$ = eax

; 94   : {

	sub	esp, 24					; 00000018H
	push	ebx

; 95   : 	section			= sect;

	mov	ebx, DWORD PTR _sect$[esp+24]
	push	ebp
	push	esi
	push	edi
	mov	esi, eax
	mov	eax, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	edi, ecx
	mov	ecx, DWORD PTR [eax]
	push	ebx
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	xor	ebp, ebp
	cmp	eax, ebp
	je	SHORT $LN71@load@6
	add	DWORD PTR [eax], 1
$LN71@load@6:
	mov	ecx, DWORD PTR [edi+12]
	cmp	ecx, ebp
	je	SHORT $LN72@load@6
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [edi+12]
	cmp	DWORD PTR [ecx], ebp
	jne	SHORT $LN72@load@6
	mov	DWORD PTR [edi+12], ebp
$LN72@load@6:

; 96   : 	int tb_count	= pIni->line_count(sect);

	mov	ecx, DWORD PTR _pIni$[esp+36]
	push	ebx
	mov	DWORD PTR [edi+12], eax
	call	DWORD PTR __imp_?line_count@CInifile@@QBEIPBD@Z

; 97   : 	for (int tb_idx=0; tb_idx<tb_count; tb_idx++){

	xor	ecx, ecx
	cmp	eax, ebp
	mov	DWORD PTR _tb_count$[esp+40], eax
	mov	DWORD PTR _tb_idx$129350[esp+40], ecx
	jle	$LN2@load@6
	jmp	SHORT $LN4@load@6
	npad	4
$LL74@load@6:
	mov	ebx, DWORD PTR _sect$[esp+36]
$LN4@load@6:

; 98   : 		LPCSTR		N, V;
; 99   : 		if (pIni->r_line(sect,tb_idx,&N,&V))

	lea	edx, DWORD PTR _V$129355[esp+40]
	push	edx
	lea	eax, DWORD PTR _N$129354[esp+44]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR _pIni$[esp+48]
	push	ebx
	call	DWORD PTR __imp_?r_line@CInifile@@QBEHPBDHPAPBD1@Z
	test	eax, eax
	je	$LN3@load@6

; 100  : 			palette.push_back	(g_pGamePersistent->Environment().thunderbolt_description(*thunderbolts, N));

	mov	ecx, DWORD PTR _N$129354[esp+40]
	mov	edx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	push	ecx
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR $T495273[esp+44], ebp
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	cmp	eax, ebp
	je	SHORT $LN18@load@6
	add	DWORD PTR [eax], 1
$LN18@load@6:
	mov	ecx, DWORD PTR $T495273[esp+40]
	cmp	ecx, ebp
	je	SHORT $LN21@load@6
	add	DWORD PTR [ecx], -1
$LN21@load@6:
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	24					; 00000018H
	mov	DWORD PTR $T495273[esp+44], eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	mov	ebx, eax
	cmp	ebx, ebp
	je	SHORT $LN31@load@6
	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	mov	DWORD PTR [ebx], eax
	mov	DWORD PTR [ebx+4], ebp
	mov	DWORD PTR [ebx+8], ebp
	mov	DWORD PTR [ebx+12], ebp
	mov	DWORD PTR [ebx+16], ebp
	jmp	SHORT $LN32@load@6
$LN31@load@6:
	xor	ebx, ebx
$LN32@load@6:
	lea	eax, DWORD PTR $T495273[esp+40]
	mov	ecx, ebx
	call	?load@SThunderboltDesc@@QAEXAAVCInifile@@ABVshared_str@@@Z ; SThunderboltDesc::load
	mov	eax, DWORD PTR [edi+4]
	cmp	eax, DWORD PTR [edi+8]
	mov	DWORD PTR $T495272[esp+40], ebx
	je	SHORT $LN54@load@6
	lea	ecx, DWORD PTR $T495272[esp+40]
	push	ecx
	push	eax
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [edi+4], 4
	jmp	SHORT $LN53@load@6
$LN54@load@6:
	push	1
	push	1
	push	eax
	lea	eax, DWORD PTR $T495272[esp+52]
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
$LN53@load@6:
	mov	eax, DWORD PTR $T495273[esp+40]
	cmp	eax, ebp
	je	SHORT $LN3@load@6
	add	DWORD PTR [eax], -1
$LN3@load@6:

; 97   : 	for (int tb_idx=0; tb_idx<tb_count; tb_idx++){

	mov	ecx, DWORD PTR _tb_idx$129350[esp+40]
	add	ecx, 1
	cmp	ecx, DWORD PTR _tb_count$[esp+40]
	mov	DWORD PTR _tb_idx$129350[esp+40], ecx
	jl	$LL74@load@6
$LN2@load@6:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 101  : 	}
; 102  : }

	add	esp, 24					; 00000018H
	ret	8
?load@SThunderboltCollection@@QAEXPAVCInifile@@0PBD@Z ENDP ; SThunderboltCollection::load
PUBLIC	?AppendDef@CEffect_Thunderbolt@@QAE?AVshared_str@@AAVCEnvironment@@PAVCInifile@@1PBD@Z ; CEffect_Thunderbolt::AppendDef
; Function compile flags: /Ogtpy
;	COMDAT ?AppendDef@CEffect_Thunderbolt@@QAE?AVshared_str@@AAVCEnvironment@@PAVCInifile@@1PBD@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_environment$ = 12					; size = 4
_pIni$ = 16						; size = 4
_thunderbolts$ = 20					; size = 4
$T532141 = 24						; size = 4
_sect$ = 24						; size = 4
?AppendDef@CEffect_Thunderbolt@@QAE?AVshared_str@@AAVCEnvironment@@PAVCInifile@@1PBD@Z PROC ; CEffect_Thunderbolt::AppendDef, COMDAT
; _this$ = ecx

; 149  : {

	push	ebx
	push	ebp

; 150  : 	if (!sect||(0==sect[0])) return "";

	mov	ebp, DWORD PTR _sect$[esp+4]
	push	esi
	xor	ebx, ebx
	cmp	ebp, ebx
	push	edi
	mov	edi, ecx
	je	$LN5@AppendDef
	cmp	BYTE PTR [ebp], bl
	je	$LN5@AppendDef

; 151  : 	for (CollectionVecIt it=collection.begin(); it!=collection.end(); it++)

	mov	eax, DWORD PTR [edi]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	esi, eax
	mov	eax, DWORD PTR [edi+4]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 8
	cmp	esi, eax
	je	SHORT $LN2@AppendDef
	mov	ebx, DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	npad	3
$LL4@AppendDef:

; 152  : 		if ((*it)->section==sect)	return (*it)->section;

	mov	eax, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	ecx, DWORD PTR [eax]
	push	ebp
	call	ebx
	test	eax, eax
	je	SHORT $LN130@AppendDef
	add	DWORD PTR [eax], 1
$LN130@AppendDef:
	mov	ecx, DWORD PTR [esi]
	cmp	DWORD PTR [ecx+12], eax
	sete	cl
	test	eax, eax
	je	SHORT $LN51@AppendDef
	add	DWORD PTR [eax], -1
$LN51@AppendDef:
	test	cl, cl
	jne	SHORT $LN128@AppendDef
	mov	eax, DWORD PTR [edi+4]
	push	eax
	add	esi, 4
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	cmp	esi, eax
	jne	SHORT $LL4@AppendDef
	xor	ebx, ebx
$LN2@AppendDef:

; 153  : 	collection.push_back		(environment.thunderbolt_collection(pIni, thunderbolts, sect));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	16					; 00000010H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	cmp	eax, ebx
	je	SHORT $LN68@AppendDef
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], ebx
	mov	DWORD PTR [eax+12], ebx
	mov	esi, eax
	jmp	SHORT $LN69@AppendDef
$LN128@AppendDef:

; 152  : 		if ((*it)->section==sect)	return (*it)->section;

	mov	edx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [edx+12]
	test	ecx, ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+12]
	mov	DWORD PTR [eax], 0
	je	SHORT $LN57@AppendDef
	add	DWORD PTR [ecx], 1
$LN57@AppendDef:
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], ecx
	pop	ebx

; 155  : }

	ret	20					; 00000014H

; 153  : 	collection.push_back		(environment.thunderbolt_collection(pIni, thunderbolts, sect));

$LN68@AppendDef:
	xor	esi, esi
$LN69@AppendDef:
	mov	eax, DWORD PTR _pIni$[esp+12]
	push	ebp
	push	eax
	mov	eax, DWORD PTR _thunderbolts$[esp+20]
	mov	ecx, esi
	call	?load@SThunderboltCollection@@QAEXPAVCInifile@@0PBD@Z ; SThunderboltCollection::load
	mov	eax, DWORD PTR [edi+4]
	cmp	eax, DWORD PTR [edi+8]
	mov	DWORD PTR $T532141[esp+12], esi
	je	SHORT $LN99@AppendDef
	lea	ecx, DWORD PTR $T532141[esp+12]
	push	ecx
	push	eax
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [edi+4], 4
	jmp	SHORT $LN98@AppendDef
$LN99@AppendDef:
	push	1
	push	1
	push	eax
	lea	eax, DWORD PTR $T532141[esp+24]
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
$LN98@AppendDef:

; 154  : 	return collection.back()->section;

	mov	edx, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edx-4]
	mov	ecx, DWORD PTR [ecx+12]
	cmp	ecx, ebx
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+12]
	mov	DWORD PTR [eax], ebx
	je	SHORT $LN57@AppendDef
	add	DWORD PTR [ecx], 1
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], ecx
	pop	ebx

; 155  : }

	ret	20					; 00000014H
$LN5@AppendDef:

; 150  : 	if (!sect||(0==sect[0])) return "";

	mov	edx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+12]
	mov	ecx, DWORD PTR [edx]
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	DWORD PTR [esi], ebx
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	cmp	eax, ebx
	je	SHORT $LN11@AppendDef
	add	DWORD PTR [eax], 1
$LN11@AppendDef:
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, ebx
	je	SHORT $LN14@AppendDef
	add	DWORD PTR [ecx], -1
	jne	SHORT $LN14@AppendDef
	mov	DWORD PTR [esi], ebx
$LN14@AppendDef:
	pop	edi
	mov	DWORD PTR [esi], eax
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx

; 155  : }

	ret	20					; 00000014H
?AppendDef@CEffect_Thunderbolt@@QAE?AVshared_str@@AAVCEnvironment@@PAVCInifile@@1PBD@Z ENDP ; CEffect_Thunderbolt::AppendDef
END
