; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\CLEARSKY\sources\engine\xrEngine\xr_object_list.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	?to_value_type_ref@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAAAPAVCObject@@AAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ref
PUBLIC	?back@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEAAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::back
PUBLIC	?GetClosureThis@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AGXPAVCObject@@@ZP6GX0@ZP6GX0@Z@detail@fastdelegate@@QBEPAVGenericClass@23@XZ ; fastdelegate::detail::ClosurePtr<void (__stdcall fastdelegate::detail::GenericClass::*)(CObject *),void (__stdcall*)(CObject *),void (__stdcall*)(CObject *)>::GetClosureThis
PUBLIC	?GetClosureMemPtr@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AGXPAVCObject@@@ZP6GX0@ZP6GX0@Z@detail@fastdelegate@@QBEP8GenericClass@23@AGXPAVCObject@@@ZXZ ; fastdelegate::detail::ClosurePtr<void (__stdcall fastdelegate::detail::GenericClass::*)(CObject *),void (__stdcall*)(CObject *),void (__stdcall*)(CObject *)>::GetClosureMemPtr
PUBLIC	??R?$FastDelegate1@PAVCObject@@X@fastdelegate@@QBEXPAVCObject@@@Z ; fastdelegate::FastDelegate1<CObject *,void>::operator()
PUBLIC	?end@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEPAUSRelcasePair@CObjectList@@XZ ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::end
PUBLIC	??$__distance@PAPAVCObject@@@stlp_std@@YAHABQAPAVCObject@@0ABUrandom_access_iterator_tag@0@@Z ; stlp_std::__distance<CObject * *>
PUBLIC	??$distance@PAPAVCObject@@@stlp_std@@YAHPAPAVCObject@@0@Z ; stlp_std::distance<CObject * *>
PUBLIC	?__copy_trivial_backward@priv@stlp_std@@YAPAXPBX0PAX@Z ; stlp_std::priv::__copy_trivial_backward
PUBLIC	??$__copy_backward_ptrs@PAPAXPAPAX@priv@stlp_std@@YAPAPAXPAPAX00ABU__true_type@1@@Z ; stlp_std::priv::__copy_backward_ptrs<void * *,void * *>
PUBLIC	??$_UseTrivialCopy@PAVCObject@@PAX@stlp_std@@YA?AU?$_TrivialCopy@PAVCObject@@PAX@0@PAPAVCObject@@PAPAX@Z ; stlp_std::_UseTrivialCopy<CObject *,void *>
PUBLIC	?_Answer@?$_TrivialCopy@PAVCObject@@PAX@stlp_std@@SA?AU__true_type@2@XZ ; stlp_std::_TrivialCopy<CObject *,void *>::_Answer
PUBLIC	??$__copy_ptrs@PAPAVCObject@@PAPAX@priv@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAXABU__true_type@1@@Z ; stlp_std::priv::__copy_ptrs<CObject * *,void * *>
PUBLIC	??$__copy_aux@PAPAVCObject@@PAPAX@priv@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAXABU__true_type@1@@Z ; stlp_std::priv::__copy_aux<CObject * *,void * *>
PUBLIC	??$copy@PAPAVCObject@@PAPAX@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAX@Z ; stlp_std::copy<CObject * *,void * *>
PUBLIC	??$__advance@PAPAVCObject@@I@stlp_std@@YAXAAPAPAVCObject@@IABUrandom_access_iterator_tag@0@@Z ; stlp_std::__advance<CObject * *,unsigned int>
PUBLIC	??$advance@PAPAVCObject@@I@stlp_std@@YAXAAPAPAVCObject@@I@Z ; stlp_std::advance<CObject * *,unsigned int>
PUBLIC	??$_M_range_insert_aux@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1IABU__false_type@2@@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert_aux<CObject * *>
PUBLIC	??$__destroy_mv_srcs@V?$reverse_iterator@PAPAX@stlp_std@@PAX@stlp_std@@YAXV?$reverse_iterator@PAPAX@0@0PAPAX@Z ; stlp_std::__destroy_mv_srcs<stlp_std::reverse_iterator<void * *>,void *>
PUBLIC	??$_Destroy_Moved_Range@V?$reverse_iterator@PAPAX@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAPAX@0@0@Z ; stlp_std::_Destroy_Moved_Range<stlp_std::reverse_iterator<void * *> >
PUBLIC	?_M_clear_after_move@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_clear_after_move
PUBLIC	?_Answer@?$_BothPtrType@PAPAVCObject@@PAPAX@stlp_std@@SA?AU__true_type@2@XZ ; stlp_std::_BothPtrType<CObject * *,void * *>::_Answer
PUBLIC	??$_UseTrivialUCopy@PAVCObject@@PAX@stlp_std@@YA?AU?$_TrivialUCopy@PAVCObject@@PAX@0@PAPAVCObject@@PAPAX@Z ; stlp_std::_UseTrivialUCopy<CObject *,void *>
PUBLIC	?_Answer@?$_TrivialUCopy@PAVCObject@@PAX@stlp_std@@SA?AU__true_type@2@XZ ; stlp_std::_TrivialUCopy<CObject *,void *>::_Answer
PUBLIC	??$__ucopy_ptrs@PAPAVCObject@@PAPAX@priv@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAXABU__true_type@1@@Z ; stlp_std::priv::__ucopy_ptrs<CObject * *,void * *>
PUBLIC	??$__ucopy_aux@PAPAVCObject@@PAPAX@priv@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAXABU__true_type@1@@Z ; stlp_std::priv::__ucopy_aux<CObject * *,void * *>
PUBLIC	??$uninitialized_copy@PAPAVCObject@@PAPAX@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAX@Z ; stlp_std::uninitialized_copy<CObject * *,void * *>
PUBLIC	??$__ucopy_ptrs@PAPAXPAPAX@priv@stlp_std@@YAPAPAXPAPAX00ABU__true_type@1@@Z ; stlp_std::priv::__ucopy_ptrs<void * *,void * *>
PUBLIC	??$__uninitialized_move@PAPAXPAPAXU__true_type@stlp_std@@@priv@stlp_std@@YAPAPAXPAPAX00U__true_type@1@ABU__false_type@1@@Z ; stlp_std::priv::__uninitialized_move<void * *,void * *,stlp_std::__true_type>
PUBLIC	??$_M_range_insert_realloc@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1I@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert_realloc<CObject * *>
PUBLIC	??$_M_range_insert@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1ABUforward_iterator_tag@2@@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert<CObject * *>
PUBLIC	??$_M_insert_dispatch@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1ABU__false_type@2@@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_dispatch<CObject * *>
PUBLIC	??$insert@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXPAPAXPAPAVCObject@@1@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::insert<CObject * *>
PUBLIC	??$insert@PAPAVCObject@@@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEXPAPAVCObject@@00@Z ; stlp_std::vector<CObject *,xalloc<CObject *> >::insert<CObject * *>
PUBLIC	?_Answer@?$_BothPtrType@PAPAVCObject@@PAPAV1@@stlp_std@@SA?AU__true_type@2@XZ ; stlp_std::_BothPtrType<CObject * *,CObject * *>::_Answer
PUBLIC	??$_UseTrivialCopy@PAVCObject@@PAV1@@stlp_std@@YA?AU?$_TrivialCopy@PAVCObject@@PAV1@@0@PAPAVCObject@@0@Z ; stlp_std::_UseTrivialCopy<CObject *,CObject *>
PUBLIC	?_Answer@?$_TrivialCopy@PAVCObject@@PAV1@@stlp_std@@SA?AU__true_type@2@XZ ; stlp_std::_TrivialCopy<CObject *,CObject *>::_Answer
PUBLIC	??$__copy_ptrs@PAPAVCObject@@PAPAV1@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@00ABU__true_type@1@@Z ; stlp_std::priv::__copy_ptrs<CObject * *,CObject * *>
PUBLIC	??$__copy_aux@PAPAVCObject@@PAPAV1@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@00ABU__true_type@1@@Z ; stlp_std::priv::__copy_aux<CObject * *,CObject * *>
PUBLIC	??$copy@PAPAVCObject@@PAPAV1@@stlp_std@@YAPAPAVCObject@@PAPAV1@00@Z ; stlp_std::copy<CObject * *,CObject * *>
PUBLIC	??0SRelcasePair@CObjectList@@QAE@PAHV?$FastDelegate1@PAVCObject@@X@fastdelegate@@@Z ; CObjectList::SRelcasePair::SRelcasePair
PUBLIC	??$__destroy_mv_srcs@V?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@USRelcasePair@CObjectList@@@stlp_std@@YAXV?$reverse_iterator@PAUSRelcasePair@CObjectList@@@0@0PAUSRelcasePair@CObjectList@@@Z ; stlp_std::__destroy_mv_srcs<stlp_std::reverse_iterator<CObjectList::SRelcasePair *>,CObjectList::SRelcasePair>
PUBLIC	??$_Destroy_Moved_Range@V?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUSRelcasePair@CObjectList@@@0@0@Z ; stlp_std::_Destroy_Moved_Range<stlp_std::reverse_iterator<CObjectList::SRelcasePair *> >
PUBLIC	?_M_clear_after_move@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXXZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_M_clear_after_move
PUBLIC	?_M_set@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXPAUSRelcasePair@CObjectList@@00@Z ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_M_set
PUBLIC	??$__ucopy@PAUSRelcasePair@CObjectList@@PAU12@H@priv@stlp_std@@YAPAUSRelcasePair@CObjectList@@PAU23@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<CObjectList::SRelcasePair *,CObjectList::SRelcasePair *,int>
PUBLIC	??$__ucopy_ptrs@PAUSRelcasePair@CObjectList@@PAU12@@priv@stlp_std@@YAPAUSRelcasePair@CObjectList@@PAU23@00ABU__false_type@1@@Z ; stlp_std::priv::__ucopy_ptrs<CObjectList::SRelcasePair *,CObjectList::SRelcasePair *>
PUBLIC	??$__uninitialized_move@PAUSRelcasePair@CObjectList@@PAU12@U__false_type@stlp_std@@@priv@stlp_std@@YAPAUSRelcasePair@CObjectList@@PAU23@00U__false_type@1@ABU41@@Z ; stlp_std::priv::__uninitialized_move<CObjectList::SRelcasePair *,CObjectList::SRelcasePair *,stlp_std::__false_type>
PUBLIC	??$__ufill@PAUSRelcasePair@CObjectList@@U12@H@priv@stlp_std@@YAXPAUSRelcasePair@CObjectList@@0ABU23@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ufill<CObjectList::SRelcasePair *,CObjectList::SRelcasePair,int>
PUBLIC	??$__uninitialized_fill_n@PAUSRelcasePair@CObjectList@@IU12@@priv@stlp_std@@YAPAUSRelcasePair@CObjectList@@PAU23@IABU23@@Z ; stlp_std::priv::__uninitialized_fill_n<CObjectList::SRelcasePair *,unsigned int,CObjectList::SRelcasePair>
PUBLIC	?_M_insert_overflow_aux@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXPAUSRelcasePair@CObjectList@@ABU45@ABU__false_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_M_insert_overflow_aux
PUBLIC	?_M_insert_overflow@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXPAUSRelcasePair@CObjectList@@ABU45@ABU__false_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_M_insert_overflow
PUBLIC	??$_Copy_Construct@USRelcasePair@CObjectList@@@stlp_std@@YAXPAUSRelcasePair@CObjectList@@ABU12@@Z ; stlp_std::_Copy_Construct<CObjectList::SRelcasePair>
PUBLIC	?push_back@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEXABUSRelcasePair@CObjectList@@@Z ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::push_back
PUBLIC	?to_storage_type_cref@?$_CastTraits@USRelcasePair@CObjectList@@U12@@priv@stlp_std@@SAABUSRelcasePair@CObjectList@@ABU45@@Z ; stlp_std::priv::_CastTraits<CObjectList::SRelcasePair,CObjectList::SRelcasePair>::to_storage_type_cref
PUBLIC	?push_back@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEXABUSRelcasePair@CObjectList@@@Z ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::push_back
PUBLIC	?size@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QBEIXZ ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::size
PUBLIC	?size@?$xr_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@@QBEIXZ ; xr_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::size
PUBLIC	??0?$xalloc@USRelcasePair@CObjectList@@@@QAE@XZ	; xalloc<CObjectList::SRelcasePair>::xalloc<CObjectList::SRelcasePair>
PUBLIC	??0?$_Vector_base@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USRelcasePair@CObjectList@@@@@Z ; stlp_std::priv::_Vector_base<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_Vector_base<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >
PUBLIC	??0?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USRelcasePair@CObjectList@@@@@Z ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >
PUBLIC	??0?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAE@ABV?$xalloc@USRelcasePair@CObjectList@@@@@Z ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >
PUBLIC	??0?$xr_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@@QAE@XZ ; xr_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::xr_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >
PUBLIC	?back@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEAAUSRelcasePair@CObjectList@@XZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::back
PUBLIC	?to_value_type_ref@?$_CastTraits@USRelcasePair@CObjectList@@U12@@priv@stlp_std@@SAAAUSRelcasePair@CObjectList@@AAU45@@Z ; stlp_std::priv::_CastTraits<CObjectList::SRelcasePair,CObjectList::SRelcasePair>::to_value_type_ref
PUBLIC	?back@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEAAUSRelcasePair@CObjectList@@XZ ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::back
PUBLIC	??$__destroy_aux@USRelcasePair@CObjectList@@@stlp_std@@YAXPAUSRelcasePair@CObjectList@@ABU__true_type@0@@Z ; stlp_std::__destroy_aux<CObjectList::SRelcasePair>
PUBLIC	??$_Destroy@USRelcasePair@CObjectList@@@stlp_std@@YAXPAUSRelcasePair@CObjectList@@@Z ; stlp_std::_Destroy<CObjectList::SRelcasePair>
PUBLIC	?pop_back@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::pop_back
PUBLIC	?pop_back@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEXXZ ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::pop_back
PUBLIC	?to_value_type_ptr@?$_CastTraits@USRelcasePair@CObjectList@@U12@@priv@stlp_std@@SAPAUSRelcasePair@CObjectList@@PAU45@@Z ; stlp_std::priv::_CastTraits<CObjectList::SRelcasePair,CObjectList::SRelcasePair>::to_value_type_ptr
PUBLIC	?begin@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEPAUSRelcasePair@CObjectList@@XZ ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::begin
PUBLIC	??A?$xr_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@@QAEAAUSRelcasePair@CObjectList@@I@Z ; xr_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::operator[]
PUBLIC	?equal@shared_str@@QBE_NABV1@@Z			; shared_str::equal
PUBLIC	??0fClassEQ@@QAE@_K@Z				; fClassEQ::fClassEQ
PUBLIC	??RfClassEQ@@QAE_NPAVCObject@@@Z		; fClassEQ::operator()
PUBLIC	??$__find_if@PAPAVCObject@@VfClassEQ@@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@0VfClassEQ@@ABUrandom_access_iterator_tag@1@@Z ; stlp_std::priv::__find_if<CObject * *,fClassEQ>
PUBLIC	??$find_if@PAPAVCObject@@VfClassEQ@@@stlp_std@@YAPAPAVCObject@@PAPAV1@0VfClassEQ@@@Z ; stlp_std::find_if<CObject * *,fClassEQ>
PUBLIC	?erase@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@PAPAV3@@Z ; stlp_std::vector<CObject *,xalloc<CObject *> >::erase
PUBLIC	??$__find@PAPAVCObject@@PAV1@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@0ABQAV2@ABUrandom_access_iterator_tag@1@@Z ; stlp_std::priv::__find<CObject * *,CObject *>
PUBLIC	??$find@PAPAVCObject@@PAV1@@stlp_std@@YAPAPAVCObject@@PAPAV1@0ABQAV1@@Z ; stlp_std::find<CObject * *,CObject *>
PUBLIC	?to_storage_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAXPAPAVCObject@@@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_storage_type_ptr
PUBLIC	?erase@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@PAPAV3@0@Z ; stlp_std::vector<CObject *,xalloc<CObject *> >::erase
PUBLIC	?clear_not_free@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEXXZ ; xr_vector<CObject *,xalloc<CObject *> >::clear_not_free
PUBLIC	??_C@_0BK@DCIPJNGL@CObjectList?3?3?$HOCObjectList?$AA@ ; `string'
PUBLIC	??_C@_0DH@PPDLGENG@D?3?2CLEARSKY?2sources?2engine?2xrEng@ ; `string'
PUBLIC	??_C@_0BH@PDHHJNBL@objects_active?4empty?$CI?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BJ@IIMKBKBD@objects_sleeping?4empty?$CI?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BG@HEEBHJNA@destroy_queue?4empty?$CI?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0FC@IACAKAM@?$CB?5ERROR?3?5incorrect?5destroy?5seque@ ; `string'
PUBLIC	??_C@_0BK@PGNPAPLE@CObjectList?3?3net_Register?$AA@ ; `string'
PUBLIC	??_C@_01MJMHLOMK@O?$AA@				; `string'
PUBLIC	??_C@_0BB@KFLMBOAE@O?9?$DOID?$CI?$CJ?5?$DM?50xffff?$AA@ ; `string'
PUBLIC	?g_Dump_Export_Obj@@3HA				; g_Dump_Export_Obj
PUBLIC	??_C@_0BF@LHIIFDOK@?9?9?9?9?5net_export?5?9?9?9?5?$AA@ ; `string'
PUBLIC	??_C@_09NJPFAADA@?$CK?5?$CFs?5?3?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BF@PBNKDANJ@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?5?$AA@ ; `string'
PUBLIC	?g_Dump_Import_Obj@@3HA				; g_Dump_Import_Obj
PUBLIC	??_C@_0BF@GNCDHGOC@?9?9?9?9?5net_import?5?9?9?9?5?$AA@ ; `string'
PUBLIC	??_C@_0P@ODAMBMPO@?$CK?5?$CFs?5?3?5?$CFd?5?9?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BC@FLFEPBEJ@CObjectList?3?3Load?$AA@	; `string'
PUBLIC	??_C@_0EM@HEHLHFBD@objects_active?4empty?$CI?$CJ?5?$CG?$CG?5destro@ ; `string'
PUBLIC	??_C@_0BF@NACOILDI@?$CB?5objects?9leaked?3?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BI@OAINGCJB@?$CB?5?$FL?$CFx?$FN?5s?$FL?$CF4d?$FN?9?$FL?$CFs?$FN?9?$FL?$CFs?$FN?$AA@ ; `string'
PUBLIC	??_C@_0BI@CDOAGLCL@?$CB?5?$FL?$CFx?$FN?5a?$FL?$CF4d?$FN?9?$FL?$CFs?$FN?9?$FL?$CFs?$FN?$AA@ ; `string'
PUBLIC	??_C@_0CJ@JNMNJAJN@assertion?5?$CBm_crows?$FL1?$FN?4empty?$CI?$CJ?5fa@ ; `string'
PUBLIC	??_C@_05OPEIBKFE@?$CFd?5?$CFs?$AA@		; `string'
PUBLIC	??_C@_0CG@KGGOBMNP@?$CB?5Unregistered?5object?5being?5dest@ ; `string'
PUBLIC	??_C@_0BF@DLMBKFFJ@CObjectList?3?3Destroy?$AA@	; `string'
PUBLIC	??_C@_0O@BFCGBGLE@destroy_queue?$AA@		; `string'
PUBLIC	??_C@_0P@FODBCAA@objects_active?$AA@		; `string'
PUBLIC	??_C@_0BB@LDKHAKKD@objects_sleeping?$AA@	; `string'
PUBLIC	??_C@_0L@COGFLGCF@m_crows?$FL0?$FN?$AA@		; `string'
PUBLIC	??_C@_0L@CPKHNMBC@m_crows?$FL1?$FN?$AA@		; `string'
PUBLIC	??_C@_0EG@POHPENJE@setDestroy?5called?0?5but?5not?9destr@ ; `string'
EXTRN	__imp_?w_tell@NET_Packet@@QAEIXZ:PROC
EXTRN	__imp_?w_u16@NET_Packet@@QAEXG@Z:PROC
EXTRN	__imp_?w_chunk_open8@NET_Packet@@QAEXAAI@Z:PROC
EXTRN	__imp_?w_chunk_close8@NET_Packet@@QAEXI@Z:PROC
EXTRN	__imp_?r_tell@NET_Packet@@QAEIXZ:PROC
EXTRN	__imp_?r_eof@NET_Packet@@QAEHXZ:PROC
EXTRN	__imp_?r_advance@NET_Packet@@QAEXI@Z:PROC
EXTRN	__imp_?r_u16@NET_Packet@@QAEXAAG@Z:PROC
EXTRN	__imp_?r_u8@NET_Packet@@QAEXAAE@Z:PROC
;	COMDAT ?ignore_always@?3???1CObjectList@@QAE@XZ@4_NA
_BSS	SEGMENT
?ignore_always@?3???1CObjectList@@QAE@XZ@4_NA DB 01H DUP (?) ; `CObjectList::~CObjectList'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?7???1CObjectList@@QAE@XZ@4_NA
_BSS	SEGMENT
?ignore_always@?7???1CObjectList@@QAE@XZ@4_NA DB 01H DUP (?) ; `CObjectList::~CObjectList'::`8'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?M@???1CObjectList@@QAE@XZ@4_NA
_BSS	SEGMENT
?ignore_always@?M@???1CObjectList@@QAE@XZ@4_NA DB 01H DUP (?) ; `CObjectList::~CObjectList'::`12'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?3??net_Register@CObjectList@@QAEXPAVCObject@@@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3??net_Register@CObjectList@@QAEXPAVCObject@@@Z@4_NA DB 01H DUP (?) ; `CObjectList::net_Register'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?7??net_Register@CObjectList@@QAEXPAVCObject@@@Z@4_NA
_BSS	SEGMENT
?ignore_always@?7??net_Register@CObjectList@@QAEXPAVCObject@@@Z@4_NA DB 01H DUP (?) ; `CObjectList::net_Register'::`8'::ignore_always
?g_Dump_Export_Obj@@3HA DD 01H DUP (?)			; g_Dump_Export_Obj
?g_Dump_Import_Obj@@3HA DD 01H DUP (?)			; g_Dump_Import_Obj
;	COMDAT ?ignore_always@?3??Load@CObjectList@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?3??Load@CObjectList@@QAEXXZ@4_NA DB 01H DUP (?) ; `CObjectList::Load'::`4'::ignore_always
;	COMDAT ??_C@_0EG@POHPENJE@setDestroy?5called?0?5but?5not?9destr@
CONST	SEGMENT
??_C@_0EG@POHPENJE@setDestroy?5called?0?5but?5not?9destr@ DB 'setDestroy '
	DB	'called, but not-destroyed child found parent[%d] child[%d]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CPKHNMBC@m_crows?$FL1?$FN?$AA@
CONST	SEGMENT
??_C@_0L@CPKHNMBC@m_crows?$FL1?$FN?$AA@ DB 'm_crows[1]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@COGFLGCF@m_crows?$FL0?$FN?$AA@
CONST	SEGMENT
??_C@_0L@COGFLGCF@m_crows?$FL0?$FN?$AA@ DB 'm_crows[0]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LDKHAKKD@objects_sleeping?$AA@
CONST	SEGMENT
??_C@_0BB@LDKHAKKD@objects_sleeping?$AA@ DB 'objects_sleeping', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FODBCAA@objects_active?$AA@
CONST	SEGMENT
??_C@_0P@FODBCAA@objects_active?$AA@ DB 'objects_active', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BFCGBGLE@destroy_queue?$AA@
CONST	SEGMENT
??_C@_0O@BFCGBGLE@destroy_queue?$AA@ DB 'destroy_queue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DLMBKFFJ@CObjectList?3?3Destroy?$AA@
CONST	SEGMENT
??_C@_0BF@DLMBKFFJ@CObjectList?3?3Destroy?$AA@ DB 'CObjectList::Destroy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@KGGOBMNP@?$CB?5Unregistered?5object?5being?5dest@
CONST	SEGMENT
??_C@_0CG@KGGOBMNP@?$CB?5Unregistered?5object?5being?5dest@ DB '! Unregis'
	DB	'tered object being destroyed', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OPEIBKFE@?$CFd?5?$CFs?$AA@
CONST	SEGMENT
??_C@_05OPEIBKFE@?$CFd?5?$CFs?$AA@ DB '%d %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@JNMNJAJN@assertion?5?$CBm_crows?$FL1?$FN?4empty?$CI?$CJ?5fa@
CONST	SEGMENT
??_C@_0CJ@JNMNJAJN@assertion?5?$CBm_crows?$FL1?$FN?4empty?$CI?$CJ?5fa@ DB 'a'
	DB	'ssertion !m_crows[1].empty() failed: %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CDOAGLCL@?$CB?5?$FL?$CFx?$FN?5a?$FL?$CF4d?$FN?9?$FL?$CFs?$FN?9?$FL?$CFs?$FN?$AA@
CONST	SEGMENT
??_C@_0BI@CDOAGLCL@?$CB?5?$FL?$CFx?$FN?5a?$FL?$CF4d?$FN?9?$FL?$CFs?$FN?9?$FL?$CFs?$FN?$AA@ DB '!'
	DB	' [%x] a[%4d]-[%s]-[%s]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OAINGCJB@?$CB?5?$FL?$CFx?$FN?5s?$FL?$CF4d?$FN?9?$FL?$CFs?$FN?9?$FL?$CFs?$FN?$AA@
CONST	SEGMENT
??_C@_0BI@OAINGCJB@?$CB?5?$FL?$CFx?$FN?5s?$FL?$CF4d?$FN?9?$FL?$CFs?$FN?9?$FL?$CFs?$FN?$AA@ DB '!'
	DB	' [%x] s[%4d]-[%s]-[%s]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NACOILDI@?$CB?5objects?9leaked?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BF@NACOILDI@?$CB?5objects?9leaked?3?5?$CFd?$AA@ DB '! objects-leak'
	DB	'ed: %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@HEHLHFBD@objects_active?4empty?$CI?$CJ?5?$CG?$CG?5destro@
CONST	SEGMENT
??_C@_0EM@HEHLHFBD@objects_active?4empty?$CI?$CJ?5?$CG?$CG?5destro@ DB 'o'
	DB	'bjects_active.empty() && destroy_queue.empty() && objects_sle'
	DB	'eping.empty()', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FLFEPBEJ@CObjectList?3?3Load?$AA@
CONST	SEGMENT
??_C@_0BC@FLFEPBEJ@CObjectList?3?3Load?$AA@ DB 'CObjectList::Load', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ODAMBMPO@?$CK?5?$CFs?5?3?5?$CFd?5?9?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0P@ODAMBMPO@?$CK?5?$CFs?5?3?5?$CFd?5?9?5?$CFd?$AA@ DB '* %s : %d - '
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GNCDHGOC@?9?9?9?9?5net_import?5?9?9?9?5?$AA@
CONST	SEGMENT
??_C@_0BF@GNCDHGOC@?9?9?9?9?5net_import?5?9?9?9?5?$AA@ DB '---- net_impor'
	DB	't --- ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PBNKDANJ@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?5?$AA@
CONST	SEGMENT
??_C@_0BF@PBNKDANJ@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?5?$AA@ DB '----'
	DB	'--------------- ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09NJPFAADA@?$CK?5?$CFs?5?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_09NJPFAADA@?$CK?5?$CFs?5?3?5?$CFd?$AA@ DB '* %s : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LHIIFDOK@?9?9?9?9?5net_export?5?9?9?9?5?$AA@
CONST	SEGMENT
??_C@_0BF@LHIIFDOK@?9?9?9?9?5net_export?5?9?9?9?5?$AA@ DB '---- net_expor'
	DB	't --- ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KFLMBOAE@O?9?$DOID?$CI?$CJ?5?$DM?50xffff?$AA@
CONST	SEGMENT
??_C@_0BB@KFLMBOAE@O?9?$DOID?$CI?$CJ?5?$DM?50xffff?$AA@ DB 'O->ID() < 0xf'
	DB	'fff', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_01MJMHLOMK@O?$AA@
CONST	SEGMENT
??_C@_01MJMHLOMK@O?$AA@ DB 'O', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PGNPAPLE@CObjectList?3?3net_Register?$AA@
CONST	SEGMENT
??_C@_0BK@PGNPAPLE@CObjectList?3?3net_Register?$AA@ DB 'CObjectList::net_'
	DB	'Register', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@IACAKAM@?$CB?5ERROR?3?5incorrect?5destroy?5seque@
CONST	SEGMENT
??_C@_0FC@IACAKAM@?$CB?5ERROR?3?5incorrect?5destroy?5seque@ DB '! ERROR: '
	DB	'incorrect destroy sequence for object[%d:%s], section[%s], pa'
	DB	'rent[%d:%s]', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HEEBHJNA@destroy_queue?4empty?$CI?$CJ?$AA@
CONST	SEGMENT
??_C@_0BG@HEEBHJNA@destroy_queue?4empty?$CI?$CJ?$AA@ DB 'destroy_queue.em'
	DB	'pty()', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IIMKBKBD@objects_sleeping?4empty?$CI?$CJ?$AA@
CONST	SEGMENT
??_C@_0BJ@IIMKBKBD@objects_sleeping?4empty?$CI?$CJ?$AA@ DB 'objects_sleep'
	DB	'ing.empty()', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PDHHJNBL@objects_active?4empty?$CI?$CJ?$AA@
CONST	SEGMENT
??_C@_0BH@PDHHJNBL@objects_active?4empty?$CI?$CJ?$AA@ DB 'objects_active.'
	DB	'empty()', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@PPDLGENG@D?3?2CLEARSKY?2sources?2engine?2xrEng@
CONST	SEGMENT
??_C@_0DH@PPDLGENG@D?3?2CLEARSKY?2sources?2engine?2xrEng@ DB 'D:\CLEARSKY'
	DB	'\sources\engine\xrEngine\xr_object_list.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DCIPJNGL@CObjectList?3?3?$HOCObjectList?$AA@
CONST	SEGMENT
??_C@_0BK@DCIPJNGL@CObjectList?3?3?$HOCObjectList?$AA@ DB 'CObjectList::~'
	DB	'CObjectList', 00H				; `string'
_EPS_S	DD	033d6bf95r			; 1e-007
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrstring.h
;	COMDAT ?equal@shared_str@@QBE_NABV1@@Z
_TEXT	SEGMENT
?equal@shared_str@@QBE_NABV1@@Z PROC			; shared_str::equal, COMDAT
; _this$ = eax
; _rhs$ = edx

; 88   : 	bool				equal		(const shared_str & rhs) const	{	return (p_ == rhs.p_);							}

	mov	ecx, DWORD PTR [eax]
	xor	eax, eax
	cmp	ecx, DWORD PTR [edx]
	sete	al
	ret	0
?equal@shared_str@@QBE_NABV1@@Z ENDP			; shared_str::equal
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ?__copy_trivial_backward@priv@stlp_std@@YAPAXPBX0PAX@Z
_TEXT	SEGMENT
?__copy_trivial_backward@priv@stlp_std@@YAPAXPBX0PAX@Z PROC ; stlp_std::priv::__copy_trivial_backward, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 243  :   const ptrdiff_t _Num = (const char*)__last - (const char*)__first;

	sub	ecx, edx

; 244  :   return (_Num > 0) ? memmove((char*)__result - _Num, __first, _Num) : __result ;

	test	ecx, ecx
	jle	SHORT $LN4@copy_trivi
	push	ecx
	push	edx
	sub	eax, ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
$LN4@copy_trivi:

; 245  : }

	ret	0
?__copy_trivial_backward@priv@stlp_std@@YAPAXPBX0PAX@Z ENDP ; stlp_std::priv::__copy_trivial_backward
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\type_traits.h
_TEXT	ENDS
;	COMDAT ??$_UseTrivialUCopy@PAVCObject@@PAX@stlp_std@@YA?AU?$_TrivialUCopy@PAVCObject@@PAX@0@PAPAVCObject@@PAPAX@Z
_TEXT	SEGMENT
??$_UseTrivialUCopy@PAVCObject@@PAX@stlp_std@@YA?AU?$_TrivialUCopy@PAVCObject@@PAX@0@PAPAVCObject@@PAPAX@Z PROC ; stlp_std::_UseTrivialUCopy<CObject *,void *>, COMDAT

; 489  : { return _TrivialUCopy<_Src, _Dst>(); }

	xor	al, al
	ret	0
??$_UseTrivialUCopy@PAVCObject@@PAX@stlp_std@@YA?AU?$_TrivialUCopy@PAVCObject@@PAX@0@PAPAVCObject@@PAPAX@Z ENDP ; stlp_std::_UseTrivialUCopy<CObject *,void *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_UseTrivialCopy@PAVCObject@@PAX@stlp_std@@YA?AU?$_TrivialCopy@PAVCObject@@PAX@0@PAPAVCObject@@PAPAX@Z
_TEXT	SEGMENT
??$_UseTrivialCopy@PAVCObject@@PAX@stlp_std@@YA?AU?$_TrivialCopy@PAVCObject@@PAX@0@PAPAVCObject@@PAPAX@Z PROC ; stlp_std::_UseTrivialCopy<CObject *,void *>, COMDAT

; 485  : { return _TrivialCopy<_Src, _Dst>(); }

	xor	al, al
	ret	0
??$_UseTrivialCopy@PAVCObject@@PAX@stlp_std@@YA?AU?$_TrivialCopy@PAVCObject@@PAX@0@PAPAVCObject@@PAPAX@Z ENDP ; stlp_std::_UseTrivialCopy<CObject *,void *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Answer@?$_TrivialUCopy@PAVCObject@@PAX@stlp_std@@SA?AU__true_type@2@XZ
_TEXT	SEGMENT
?_Answer@?$_TrivialUCopy@PAVCObject@@PAX@stlp_std@@SA?AU__true_type@2@XZ PROC ; stlp_std::_TrivialUCopy<CObject *,void *>::_Answer, COMDAT

; 407  :   static _Ret _Answer() { return _Ret(); }

	xor	al, al
	ret	0
?_Answer@?$_TrivialUCopy@PAVCObject@@PAX@stlp_std@@SA?AU__true_type@2@XZ ENDP ; stlp_std::_TrivialUCopy<CObject *,void *>::_Answer
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Answer@?$_TrivialCopy@PAVCObject@@PAX@stlp_std@@SA?AU__true_type@2@XZ
_TEXT	SEGMENT
?_Answer@?$_TrivialCopy@PAVCObject@@PAX@stlp_std@@SA?AU__true_type@2@XZ PROC ; stlp_std::_TrivialCopy<CObject *,void *>::_Answer, COMDAT

; 390  :   static _Ret _Answer() { return _Ret(); }

	xor	al, al
	ret	0
?_Answer@?$_TrivialCopy@PAVCObject@@PAX@stlp_std@@SA?AU__true_type@2@XZ ENDP ; stlp_std::_TrivialCopy<CObject *,void *>::_Answer
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator_base.h
_TEXT	ENDS
;	COMDAT ??$__advance@PAPAVCObject@@I@stlp_std@@YAXAAPAPAVCObject@@IABUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
??$__advance@PAPAVCObject@@I@stlp_std@@YAXAAPAPAVCObject@@IABUrandom_access_iterator_tag@0@@Z PROC ; stlp_std::__advance<CObject * *,unsigned int>, COMDAT
; ___i$ = eax
; ___n$ = ecx

; 522  :   __i += __n;

	lea	edx, DWORD PTR [ecx*4]
	add	DWORD PTR [eax], edx

; 523  : }

	ret	0
??$__advance@PAPAVCObject@@I@stlp_std@@YAXAAPAPAVCObject@@IABUrandom_access_iterator_tag@0@@Z ENDP ; stlp_std::__advance<CObject * *,unsigned int>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\type_traits.h
_TEXT	ENDS
;	COMDAT ?_Answer@?$_BothPtrType@PAPAVCObject@@PAPAX@stlp_std@@SA?AU__true_type@2@XZ
_TEXT	SEGMENT
?_Answer@?$_BothPtrType@PAPAVCObject@@PAPAX@stlp_std@@SA?AU__true_type@2@XZ PROC ; stlp_std::_BothPtrType<CObject * *,void * *>::_Answer, COMDAT

; 468  :   static _Ret _Answer() { return _Ret(); }

	xor	al, al
	ret	0
?_Answer@?$_BothPtrType@PAPAVCObject@@PAPAX@stlp_std@@SA?AU__true_type@2@XZ ENDP ; stlp_std::_BothPtrType<CObject * *,void * *>::_Answer
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator_base.h
_TEXT	ENDS
;	COMDAT ??$advance@PAPAVCObject@@I@stlp_std@@YAXAAPAPAVCObject@@I@Z
_TEXT	SEGMENT
??$advance@PAPAVCObject@@I@stlp_std@@YAXAAPAPAVCObject@@I@Z PROC ; stlp_std::advance<CObject * *,unsigned int>, COMDAT
; ___i$ = eax
; ___n$ = ecx

; 527  :   __advance(__i, __n, _STLP_ITERATOR_CATEGORY(__i, _InputIterator));

	lea	edx, DWORD PTR [ecx*4]
	add	DWORD PTR [eax], edx

; 528  : }

	ret	0
??$advance@PAPAVCObject@@I@stlp_std@@YAXAAPAPAVCObject@@I@Z ENDP ; stlp_std::advance<CObject * *,unsigned int>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy_backward_ptrs@PAPAXPAPAX@priv@stlp_std@@YAPAPAXPAPAX00ABU__true_type@1@@Z
_TEXT	SEGMENT
??$__copy_backward_ptrs@PAPAXPAPAX@priv@stlp_std@@YAPAPAXPAPAX00ABU__true_type@1@@Z PROC ; stlp_std::priv::__copy_backward_ptrs<void * *,void * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 294  :   return (_OutputIter)__copy_trivial_backward(__first, __last, __result);

	sub	ecx, edx
	test	ecx, ecx
	jle	SHORT $LN6@copy_backw
	push	ecx
	push	edx
	sub	eax, ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
$LN6@copy_backw:

; 295  : }

	ret	0
??$__copy_backward_ptrs@PAPAXPAPAX@priv@stlp_std@@YAPAPAXPAPAX00ABU__true_type@1@@Z ENDP ; stlp_std::priv::__copy_backward_ptrs<void * *,void * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator_base.h
_TEXT	ENDS
;	COMDAT ??$__distance@PAPAVCObject@@@stlp_std@@YAHABQAPAVCObject@@0ABUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
??$__distance@PAPAVCObject@@@stlp_std@@YAHABQAPAVCObject@@0ABUrandom_access_iterator_tag@0@@Z PROC ; stlp_std::__distance<CObject * *>, COMDAT
; ___first$ = ecx
; ___last$ = eax

; 372  :   return __last - __first;

	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 373  : }

	ret	0
??$__distance@PAPAVCObject@@@stlp_std@@YAHABQAPAVCObject@@0ABUrandom_access_iterator_tag@0@@Z ENDP ; stlp_std::__distance<CObject * *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$distance@PAPAVCObject@@@stlp_std@@YAHPAPAVCObject@@0@Z
_TEXT	SEGMENT
___first$ = 8						; size = 4
??$distance@PAPAVCObject@@@stlp_std@@YAHPAPAVCObject@@0@Z PROC ; stlp_std::distance<CObject * *>, COMDAT
; ___last$ = eax

; 378  :   return __distance(__first, __last, _STLP_ITERATOR_CATEGORY(__first, _InputIterator));

	sub	eax, DWORD PTR ___first$[esp-4]
	sar	eax, 2

; 379  : }

	ret	0
??$distance@PAPAVCObject@@@stlp_std@@YAHPAPAVCObject@@0@Z ENDP ; stlp_std::distance<CObject * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\type_traits.h
_TEXT	ENDS
;	COMDAT ??$_UseTrivialCopy@PAVCObject@@PAV1@@stlp_std@@YA?AU?$_TrivialCopy@PAVCObject@@PAV1@@0@PAPAVCObject@@0@Z
_TEXT	SEGMENT
??$_UseTrivialCopy@PAVCObject@@PAV1@@stlp_std@@YA?AU?$_TrivialCopy@PAVCObject@@PAV1@@0@PAPAVCObject@@0@Z PROC ; stlp_std::_UseTrivialCopy<CObject *,CObject *>, COMDAT

; 485  : { return _TrivialCopy<_Src, _Dst>(); }

	xor	al, al
	ret	0
??$_UseTrivialCopy@PAVCObject@@PAV1@@stlp_std@@YA?AU?$_TrivialCopy@PAVCObject@@PAV1@@0@PAPAVCObject@@0@Z ENDP ; stlp_std::_UseTrivialCopy<CObject *,CObject *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Answer@?$_TrivialCopy@PAVCObject@@PAV1@@stlp_std@@SA?AU__true_type@2@XZ
_TEXT	SEGMENT
?_Answer@?$_TrivialCopy@PAVCObject@@PAV1@@stlp_std@@SA?AU__true_type@2@XZ PROC ; stlp_std::_TrivialCopy<CObject *,CObject *>::_Answer, COMDAT

; 390  :   static _Ret _Answer() { return _Ret(); }

	xor	al, al
	ret	0
?_Answer@?$_TrivialCopy@PAVCObject@@PAV1@@stlp_std@@SA?AU__true_type@2@XZ ENDP ; stlp_std::_TrivialCopy<CObject *,CObject *>::_Answer
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$__destroy_aux@USRelcasePair@CObjectList@@@stlp_std@@YAXPAUSRelcasePair@CObjectList@@ABU__true_type@0@@Z
_TEXT	SEGMENT
??$__destroy_aux@USRelcasePair@CObjectList@@@stlp_std@@YAXPAUSRelcasePair@CObjectList@@ABU__true_type@0@@Z PROC ; stlp_std::__destroy_aux<CObjectList::SRelcasePair>, COMDAT

; 56   : inline void __destroy_aux(_Tp*, const __true_type& /*_Trivial_destructor*/) {}

	ret	0
??$__destroy_aux@USRelcasePair@CObjectList@@@stlp_std@@YAXPAUSRelcasePair@CObjectList@@ABU__true_type@0@@Z ENDP ; stlp_std::__destroy_aux<CObjectList::SRelcasePair>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.c
_TEXT	ENDS
;	COMDAT ??$__find@PAPAVCObject@@PAV1@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@0ABQAV2@ABUrandom_access_iterator_tag@1@@Z
_TEXT	SEGMENT
??$__find@PAPAVCObject@@PAV1@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@0ABQAV2@ABUrandom_access_iterator_tag@1@@Z PROC ; stlp_std::priv::__find<CObject * *,CObject *>, COMDAT
; ___first$ = eax
; ___last$ = esi
; ___val$ = edi

; 108  :   _STLP_DIFFERENCE_TYPE(_RandomAccessIter) __trip_count = (__last - __first) >> 2;

	mov	ecx, esi
	sub	ecx, eax
	sar	ecx, 4

; 109  : 
; 110  :   for ( ; __trip_count > 0 ; --__trip_count) {

	test	ecx, ecx
	jle	SHORT $LN14@find@4
	mov	edx, DWORD PTR [edi]
	npad	3
$LL16@find@4:

; 111  :     if (*__first == __val) return __first;

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN8@find@4

; 112  :     ++__first;

	add	eax, 4

; 113  : 
; 114  :     if (*__first == __val) return __first;

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN8@find@4

; 115  :     ++__first;

	add	eax, 4

; 116  : 
; 117  :     if (*__first == __val) return __first;

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN8@find@4

; 118  :     ++__first;

	add	eax, 4

; 119  : 
; 120  :     if (*__first == __val) return __first;

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN8@find@4
	sub	ecx, 1

; 121  :     ++__first;

	add	eax, 4
	test	ecx, ecx
	jg	SHORT $LL16@find@4
$LN14@find@4:

; 122  :   }
; 123  : 
; 124  :   switch (__last - __first) {

	mov	ecx, esi
	sub	ecx, eax
	sar	ecx, 2
	sub	ecx, 1
	je	SHORT $LN3@find@4
	sub	ecx, 1
	je	SHORT $LN5@find@4
	sub	ecx, 1
	jne	SHORT $LN2@find@4

; 125  :   case 3:
; 126  :     if (*__first == __val) return __first;

	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [edi]
	je	SHORT $LN8@find@4

; 127  :     ++__first;

	add	eax, 4
$LN5@find@4:

; 128  :   case 2:
; 129  :     if (*__first == __val) return __first;

	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [edi]
	je	SHORT $LN8@find@4

; 130  :     ++__first;

	add	eax, 4
$LN3@find@4:

; 131  :   case 1:
; 132  :     if (*__first == __val) return __first;

	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [edi]
	je	SHORT $LN8@find@4
$LN2@find@4:

; 133  :     //++__first;
; 134  :   case 0:
; 135  :   default:
; 136  :     return __last;

	mov	eax, esi
$LN8@find@4:

; 137  :   }
; 138  : }

	ret	0
??$__find@PAPAVCObject@@PAV1@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@0ABQAV2@ABUrandom_access_iterator_tag@1@@Z ENDP ; stlp_std::priv::__find<CObject * *,CObject *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\type_traits.h
_TEXT	ENDS
;	COMDAT ?_Answer@?$_BothPtrType@PAPAVCObject@@PAPAV1@@stlp_std@@SA?AU__true_type@2@XZ
_TEXT	SEGMENT
?_Answer@?$_BothPtrType@PAPAVCObject@@PAPAV1@@stlp_std@@SA?AU__true_type@2@XZ PROC ; stlp_std::_BothPtrType<CObject * *,CObject * *>::_Answer, COMDAT

; 468  :   static _Ret _Answer() { return _Ret(); }

	xor	al, al
	ret	0
?_Answer@?$_BothPtrType@PAPAVCObject@@PAPAV1@@stlp_std@@SA?AU__true_type@2@XZ ENDP ; stlp_std::_BothPtrType<CObject * *,CObject * *>::_Answer
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?_M_set@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXPAUSRelcasePair@CObjectList@@00@Z
_TEXT	SEGMENT
___e$ = 8						; size = 4
?_M_set@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXPAUSRelcasePair@CObjectList@@00@Z PROC ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_M_set, COMDAT
; _this$ = eax
; ___s$ = ecx
; ___f$ = edx

; 626  :     this->_M_start = __s;

	mov	DWORD PTR [eax], ecx

; 627  :     this->_M_finish = __f;
; 628  :     this->_M_end_of_storage._M_data = __e;

	mov	ecx, DWORD PTR ___e$[esp-4]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx

; 629  :   }

	ret	4
?_M_set@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXPAUSRelcasePair@CObjectList@@00@Z ENDP ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_M_set
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$_Destroy@USRelcasePair@CObjectList@@@stlp_std@@YAXPAUSRelcasePair@CObjectList@@@Z
_TEXT	SEGMENT
??$_Destroy@USRelcasePair@CObjectList@@@stlp_std@@YAXPAUSRelcasePair@CObjectList@@@Z PROC ; stlp_std::_Destroy<CObjectList::SRelcasePair>, COMDAT

; 60   : #if defined (_STLP_MSVC) && (_STLP_MSVC <= 1010)
; 61   :   __pointer;
; 62   : #endif
; 63   :   typedef typename __type_traits<_Tp>::has_trivial_destructor _Trivial_destructor;
; 64   :   __destroy_aux(__pointer, _Trivial_destructor());
; 65   : #if defined (_STLP_DEBUG_UNINITIALIZED)
; 66   :   memset(__REINTERPRET_CAST(char*, __pointer), _STLP_SHRED_BYTE, sizeof(_Tp));
; 67   : #endif
; 68   : }

	ret	0
??$_Destroy@USRelcasePair@CObjectList@@@stlp_std@@YAXPAUSRelcasePair@CObjectList@@@Z ENDP ; stlp_std::_Destroy<CObjectList::SRelcasePair>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.c
_TEXT	ENDS
;	COMDAT ??$find@PAPAVCObject@@PAV1@@stlp_std@@YAPAPAVCObject@@PAPAV1@0ABQAV1@@Z
_TEXT	SEGMENT
??$find@PAPAVCObject@@PAV1@@stlp_std@@YAPAPAVCObject@@PAPAV1@0ABQAV1@@Z PROC ; stlp_std::find<CObject * *,CObject *>, COMDAT
; ___first$ = eax
; ___last$ = esi
; ___val$ = edi

; 215  :   _STLP_DEBUG_CHECK(_STLP_PRIV __check_range(__first, __last))
; 216  :   return _STLP_PRIV __find(__first, __last, __val, _STLP_ITERATOR_CATEGORY(__first, _InputIter));

	jmp	??$__find@PAPAVCObject@@PAV1@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@0ABQAV2@ABUrandom_access_iterator_tag@1@@Z ; stlp_std::priv::__find<CObject * *,CObject *>
??$find@PAPAVCObject@@PAV1@@stlp_std@@YAPAPAVCObject@@PAPAV1@0ABQAV1@@Z ENDP ; stlp_std::find<CObject * *,CObject *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_TEXT	ENDS
;	COMDAT ?to_storage_type_cref@?$_CastTraits@USRelcasePair@CObjectList@@U12@@priv@stlp_std@@SAABUSRelcasePair@CObjectList@@ABU45@@Z
_TEXT	SEGMENT
?to_storage_type_cref@?$_CastTraits@USRelcasePair@CObjectList@@U12@@priv@stlp_std@@SAABUSRelcasePair@CObjectList@@ABU45@@Z PROC ; stlp_std::priv::_CastTraits<CObjectList::SRelcasePair,CObjectList::SRelcasePair>::to_storage_type_cref, COMDAT
; ___ref$ = eax

; 254  :   { return __ref; }

	ret	0
?to_storage_type_cref@?$_CastTraits@USRelcasePair@CObjectList@@U12@@priv@stlp_std@@SAABUSRelcasePair@CObjectList@@ABU45@@Z ENDP ; stlp_std::priv::_CastTraits<CObjectList::SRelcasePair,CObjectList::SRelcasePair>::to_storage_type_cref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_value_type_ref@?$_CastTraits@USRelcasePair@CObjectList@@U12@@priv@stlp_std@@SAAAUSRelcasePair@CObjectList@@AAU45@@Z
_TEXT	SEGMENT
?to_value_type_ref@?$_CastTraits@USRelcasePair@CObjectList@@U12@@priv@stlp_std@@SAAAUSRelcasePair@CObjectList@@AAU45@@Z PROC ; stlp_std::priv::_CastTraits<CObjectList::SRelcasePair,CObjectList::SRelcasePair>::to_value_type_ref, COMDAT
; ___ref$ = eax

; 243  :   { return __ref; }

	ret	0
?to_value_type_ref@?$_CastTraits@USRelcasePair@CObjectList@@U12@@priv@stlp_std@@SAAAUSRelcasePair@CObjectList@@AAU45@@Z ENDP ; stlp_std::priv::_CastTraits<CObjectList::SRelcasePair,CObjectList::SRelcasePair>::to_value_type_ref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_value_type_ptr@?$_CastTraits@USRelcasePair@CObjectList@@U12@@priv@stlp_std@@SAPAUSRelcasePair@CObjectList@@PAU45@@Z
_TEXT	SEGMENT
?to_value_type_ptr@?$_CastTraits@USRelcasePair@CObjectList@@U12@@priv@stlp_std@@SAPAUSRelcasePair@CObjectList@@PAU45@@Z PROC ; stlp_std::priv::_CastTraits<CObjectList::SRelcasePair,CObjectList::SRelcasePair>::to_value_type_ptr, COMDAT
; ___ptr$ = eax

; 237  :   { return __ptr; }

	ret	0
?to_value_type_ptr@?$_CastTraits@USRelcasePair@CObjectList@@U12@@priv@stlp_std@@SAPAUSRelcasePair@CObjectList@@PAU45@@Z ENDP ; stlp_std::priv::_CastTraits<CObjectList::SRelcasePair,CObjectList::SRelcasePair>::to_value_type_ptr
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?pop_back@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?pop_back@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEXXZ PROC ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::pop_back, COMDAT
; _this$ = eax

; 532  :     --this->_M_finish;

	add	DWORD PTR [eax+4], -12			; fffffff4H

; 533  :     _STLP_STD::_Destroy(this->_M_finish);
; 534  :   }

	ret	0
?pop_back@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEXXZ ENDP ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::pop_back
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xalloc@USRelcasePair@CObjectList@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xalloc@USRelcasePair@CObjectList@@@@QAE@XZ PROC	; xalloc<CObjectList::SRelcasePair>::xalloc<CObjectList::SRelcasePair>, COMDAT
; _this$ = eax

; 77   : 													xalloc			()										{	}

	ret	0
??0?$xalloc@USRelcasePair@CObjectList@@@@QAE@XZ ENDP	; xalloc<CObjectList::SRelcasePair>::xalloc<CObjectList::SRelcasePair>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\fastdelegate.h
_TEXT	ENDS
;	COMDAT ?GetClosureMemPtr@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AGXPAVCObject@@@ZP6GX0@ZP6GX0@Z@detail@fastdelegate@@QBEP8GenericClass@23@AGXPAVCObject@@@ZXZ
_TEXT	SEGMENT
?GetClosureMemPtr@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AGXPAVCObject@@@ZP6GX0@ZP6GX0@Z@detail@fastdelegate@@QBEP8GenericClass@23@AGXPAVCObject@@@ZXZ PROC ; fastdelegate::detail::ClosurePtr<void (__stdcall fastdelegate::detail::GenericClass::*)(CObject *),void (__stdcall*)(CObject *),void (__stdcall*)(CObject *)>::GetClosureMemPtr, COMDAT
; _this$ = eax

; 711  : 	inline GenericMemFunc GetClosureMemPtr() const { return reinterpret_cast<GenericMemFunc>(m_pFunction); }

	mov	eax, DWORD PTR [eax+4]
	ret	0
?GetClosureMemPtr@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AGXPAVCObject@@@ZP6GX0@ZP6GX0@Z@detail@fastdelegate@@QBEP8GenericClass@23@AGXPAVCObject@@@ZXZ ENDP ; fastdelegate::detail::ClosurePtr<void (__stdcall fastdelegate::detail::GenericClass::*)(CObject *),void (__stdcall*)(CObject *),void (__stdcall*)(CObject *)>::GetClosureMemPtr
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetClosureThis@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AGXPAVCObject@@@ZP6GX0@ZP6GX0@Z@detail@fastdelegate@@QBEPAVGenericClass@23@XZ
_TEXT	SEGMENT
?GetClosureThis@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AGXPAVCObject@@@ZP6GX0@ZP6GX0@Z@detail@fastdelegate@@QBEPAVGenericClass@23@XZ PROC ; fastdelegate::detail::ClosurePtr<void (__stdcall fastdelegate::detail::GenericClass::*)(CObject *),void (__stdcall*)(CObject *),void (__stdcall*)(CObject *)>::GetClosureThis, COMDAT
; _this$ = eax

; 710  : 	inline GenericClass *GetClosureThis() const { return m_pthis; }

	mov	eax, DWORD PTR [eax]
	ret	0
?GetClosureThis@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AGXPAVCObject@@@ZP6GX0@ZP6GX0@Z@detail@fastdelegate@@QBEPAVGenericClass@23@XZ ENDP ; fastdelegate::detail::ClosurePtr<void (__stdcall fastdelegate::detail::GenericClass::*)(CObject *),void (__stdcall*)(CObject *),void (__stdcall*)(CObject *)>::GetClosureThis
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?pop_back@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?pop_back@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEXXZ PROC ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::pop_back, COMDAT
; _this$ = eax

; 204  :   void pop_back() {_M_impl.pop_back();}

	add	DWORD PTR [eax+4], -12			; fffffff4H
	ret	0
?pop_back@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEXXZ ENDP ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::pop_back
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\fastdelegate.h
_TEXT	ENDS
;	COMDAT ??R?$FastDelegate1@PAVCObject@@X@fastdelegate@@QBEXPAVCObject@@@Z
_TEXT	SEGMENT
??R?$FastDelegate1@PAVCObject@@X@fastdelegate@@QBEXPAVCObject@@@Z PROC ; fastdelegate::FastDelegate1<CObject *,void>::operator(), COMDAT
; _this$ = eax
; _p1$ = ecx

; 1000 : 						return (m_Closure.GetClosureThis()->*(m_Closure.GetClosureMemPtr()))(p1); }

	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	push	ecx
	push	edx
	call	eax
	ret	0
??R?$FastDelegate1@PAVCObject@@X@fastdelegate@@QBEXPAVCObject@@@Z ENDP ; fastdelegate::FastDelegate1<CObject *,void>::operator()
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_object_list.cpp
_TEXT	ENDS
;	COMDAT ??RfClassEQ@@QAE_NPAVCObject@@@Z
_TEXT	SEGMENT
??RfClassEQ@@QAE_NPAVCObject@@@Z PROC			; fClassEQ::operator(), COMDAT
; _this$ = ecx
; _O$ = eax

; 18   : 	IC bool operator() (CObject* O) { return cls==O->CLS_ID; }

	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR [eax+8]
	jne	SHORT $LN3@operator@2
	mov	ecx, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN3@operator@2
	mov	eax, 1
	ret	0
$LN3@operator@2:
	xor	eax, eax
	ret	0
??RfClassEQ@@QAE_NPAVCObject@@@Z ENDP			; fClassEQ::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0fClassEQ@@QAE@_K@Z
_TEXT	SEGMENT
_C$ = 8							; size = 8
??0fClassEQ@@QAE@_K@Z PROC				; fClassEQ::fClassEQ, COMDAT
; _this$ = eax

; 17   : 	fClassEQ(CLASS_ID C) : cls(C) {};

	mov	ecx, DWORD PTR _C$[esp-4]
	mov	edx, DWORD PTR _C$[esp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	ret	8
??0fClassEQ@@QAE@_K@Z ENDP				; fClassEQ::fClassEQ
PUBLIC	?register_object_to_destroy@CObjectList@@QAEXPAVCObject@@@Z ; CObjectList::register_object_to_destroy
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
;	COMDAT ??$__ucopy_ptrs@PAPAVCObject@@PAPAX@priv@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAXABU__true_type@1@@Z
_TEXT	SEGMENT
??$__ucopy_ptrs@PAPAVCObject@@PAPAX@priv@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAXABU__true_type@1@@Z PROC ; stlp_std::priv::__ucopy_ptrs<CObject * *,void * *>, COMDAT
; ___first$ = ecx
; ___last$ = edx
; ___result$ = eax

; 117  :                                 const __true_type& /*TrivialUCopy*/) {

	push	esi
	mov	esi, edx

; 118  :   // we know they all pointers, so this cast is OK
; 119  :   //  return (_OutputIter)__copy_trivial(&(*__first), &(*__last), &(*__result));
; 120  :   return (_OutputIter)__ucopy_trivial(__first, __last, __result);

	cmp	esi, ecx
	je	SHORT $LN6@ucopy_ptrs@17
	sub	esi, ecx
	push	esi
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN6@ucopy_ptrs@17:
	pop	esi

; 121  : }

	ret	0
??$__ucopy_ptrs@PAPAVCObject@@PAPAX@priv@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAXABU__true_type@1@@Z ENDP ; stlp_std::priv::__ucopy_ptrs<CObject * *,void * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy_ptrs@PAPAVCObject@@PAPAX@priv@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAXABU__true_type@1@@Z
_TEXT	SEGMENT
??$__copy_ptrs@PAPAVCObject@@PAPAX@priv@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAXABU__true_type@1@@Z PROC ; stlp_std::priv::__copy_ptrs<CObject * *,void * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 255  :   // we know they all pointers, so this cast is OK
; 256  :   //  return (_OutputIter)__copy_trivial(&(*__first), &(*__last), &(*__result));
; 257  :   return (_OutputIter)__copy_trivial(__first, __last, __result);

	sub	ecx, edx
	push	esi
	mov	esi, ecx
	je	SHORT $LN6@copy_ptrs@25
	push	esi
	push	edx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN6@copy_ptrs@25:
	pop	esi

; 258  : }

	ret	0
??$__copy_ptrs@PAPAVCObject@@PAPAX@priv@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAXABU__true_type@1@@Z ENDP ; stlp_std::priv::__copy_ptrs<CObject * *,void * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$__destroy_mv_srcs@V?$reverse_iterator@PAPAX@stlp_std@@PAX@stlp_std@@YAXV?$reverse_iterator@PAPAX@0@0PAPAX@Z
_TEXT	SEGMENT
___first$ = 8						; size = 4
___last$ = 12						; size = 4
??$__destroy_mv_srcs@V?$reverse_iterator@PAPAX@stlp_std@@PAX@stlp_std@@YAXV?$reverse_iterator@PAPAX@0@0PAPAX@Z PROC ; stlp_std::__destroy_mv_srcs<stlp_std::reverse_iterator<void * *>,void *>, COMDAT

; 193  :   typedef typename __move_traits<_Tp>::complete _CompleteMove;
; 194  :   __destroy_range_aux(__first, __last, __ptr, _CompleteMove());
; 195  : }

	ret	0
??$__destroy_mv_srcs@V?$reverse_iterator@PAPAX@stlp_std@@PAX@stlp_std@@YAXV?$reverse_iterator@PAPAX@0@0PAPAX@Z ENDP ; stlp_std::__destroy_mv_srcs<stlp_std::reverse_iterator<void * *>,void *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__ucopy_aux@PAPAVCObject@@PAPAX@priv@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAXABU__true_type@1@@Z
_TEXT	SEGMENT
??$__ucopy_aux@PAPAVCObject@@PAPAX@priv@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAXABU__true_type@1@@Z PROC ; stlp_std::priv::__ucopy_aux<CObject * *,void * *>, COMDAT
; ___first$ = ecx
; ___last$ = edx
; ___result$ = eax

; 125  :                                const __true_type& /*BothPtrType*/) {

	push	esi
	mov	esi, edx

; 126  :   return __ucopy_ptrs(__first, __last, __result,
; 127  :                       _UseTrivialUCopy(_STLP_VALUE_TYPE(__first, _InputIter),
; 128  :                                        _STLP_VALUE_TYPE(__result, _OutputIter))._Answer());

	cmp	esi, ecx
	je	SHORT $LN12@ucopy_aux@2
	sub	esi, ecx
	push	esi
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN12@ucopy_aux@2:
	pop	esi

; 129  : }

	ret	0
??$__ucopy_aux@PAPAVCObject@@PAPAX@priv@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAXABU__true_type@1@@Z ENDP ; stlp_std::priv::__ucopy_aux<CObject * *,void * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy_aux@PAPAVCObject@@PAPAX@priv@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAXABU__true_type@1@@Z
_TEXT	SEGMENT
??$__copy_aux@PAPAVCObject@@PAPAX@priv@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAXABU__true_type@1@@Z PROC ; stlp_std::priv::__copy_aux<CObject * *,void * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 263  :   return __copy_ptrs(__first, __last, __result,
; 264  :                      _UseTrivialCopy(_STLP_VALUE_TYPE(__first, _InputIter),
; 265  :                                      _STLP_VALUE_TYPE(__result, _OutputIter))._Answer());

	sub	ecx, edx
	push	esi
	mov	esi, ecx
	je	SHORT $LN12@copy_aux@3
	push	esi
	push	edx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN12@copy_aux@3:
	pop	esi

; 266  : }

	ret	0
??$__copy_aux@PAPAVCObject@@PAPAX@priv@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAXABU__true_type@1@@Z ENDP ; stlp_std::priv::__copy_aux<CObject * *,void * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$_Destroy_Moved_Range@V?$reverse_iterator@PAPAX@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAPAX@0@0@Z
_TEXT	SEGMENT
___first$ = 8						; size = 4
___last$ = 12						; size = 4
??$_Destroy_Moved_Range@V?$reverse_iterator@PAPAX@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAPAX@0@0@Z PROC ; stlp_std::_Destroy_Moved_Range<stlp_std::reverse_iterator<void * *> >, COMDAT

; 199  :   __destroy_mv_srcs(__first, __last, _STLP_VALUE_TYPE(__first, _ForwardIterator));
; 200  : }

	ret	0
??$_Destroy_Moved_Range@V?$reverse_iterator@PAPAX@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAPAX@0@0@Z ENDP ; stlp_std::_Destroy_Moved_Range<stlp_std::reverse_iterator<void * *> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$uninitialized_copy@PAPAVCObject@@PAPAX@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAX@Z
_TEXT	SEGMENT
??$uninitialized_copy@PAPAVCObject@@PAPAX@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAX@Z PROC ; stlp_std::uninitialized_copy<CObject * *,void * *>, COMDAT
; ___first$ = ecx
; ___last$ = edx
; ___result$ = eax

; 144  : { return _STLP_PRIV __ucopy_aux(__first, __last, __result, _BothPtrType< _InputIter, _ForwardIter>::_Answer()); }

	push	esi
	mov	esi, edx
	cmp	esi, ecx
	je	SHORT $LN16@uninitiali@7
	sub	esi, ecx
	push	esi
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN16@uninitiali@7:
	pop	esi
	ret	0
??$uninitialized_copy@PAPAVCObject@@PAPAX@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAX@Z ENDP ; stlp_std::uninitialized_copy<CObject * *,void * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$copy@PAPAVCObject@@PAPAX@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAX@Z
_TEXT	SEGMENT
??$copy@PAPAVCObject@@PAPAX@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAX@Z PROC ; stlp_std::copy<CObject * *,void * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 280  :   _STLP_DEBUG_CHECK(_STLP_PRIV __check_range(__first, __last))
; 281  :   return _STLP_PRIV __copy_aux(__first, __last, __result, _BothPtrType< _InputIter, _OutputIter>::_Answer());

	sub	ecx, edx
	push	esi
	mov	esi, ecx
	je	SHORT $LN16@copy@4
	push	esi
	push	edx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN16@copy@4:
	pop	esi

; 282  : }

	ret	0
??$copy@PAPAVCObject@@PAPAX@stlp_std@@YAPAPAXPAPAVCObject@@0PAPAX@Z ENDP ; stlp_std::copy<CObject * *,void * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__ucopy_ptrs@PAPAXPAPAX@priv@stlp_std@@YAPAPAXPAPAX00ABU__true_type@1@@Z
_TEXT	SEGMENT
??$__ucopy_ptrs@PAPAXPAPAX@priv@stlp_std@@YAPAPAXPAPAX00ABU__true_type@1@@Z PROC ; stlp_std::priv::__ucopy_ptrs<void * *,void * *>, COMDAT
; ___first$ = ecx
; ___last$ = edx
; ___result$ = eax

; 117  :                                 const __true_type& /*TrivialUCopy*/) {

	push	esi
	mov	esi, edx

; 118  :   // we know they all pointers, so this cast is OK
; 119  :   //  return (_OutputIter)__copy_trivial(&(*__first), &(*__last), &(*__result));
; 120  :   return (_OutputIter)__ucopy_trivial(__first, __last, __result);

	cmp	esi, ecx
	je	SHORT $LN6@ucopy_ptrs@18
	sub	esi, ecx
	push	esi
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN6@ucopy_ptrs@18:
	pop	esi

; 121  : }

	ret	0
??$__ucopy_ptrs@PAPAXPAPAX@priv@stlp_std@@YAPAPAXPAPAX00ABU__true_type@1@@Z ENDP ; stlp_std::priv::__ucopy_ptrs<void * *,void * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?_M_clear_after_move@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXXZ
_TEXT	SEGMENT
?_M_clear_after_move@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXXZ PROC ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_clear_after_move, COMDAT
; _this$ = eax

; 621  :     _STLP_STD::_Destroy_Moved_Range(rbegin(), rend());
; 622  :     this->_M_end_of_storage.deallocate(this->_M_start, this->_M_end_of_storage._M_data - this->_M_start);

	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN31@M_clear_af
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN31@M_clear_af:

; 623  :   }

	ret	0
?_M_clear_after_move@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXXZ ENDP ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_clear_after_move
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_M_range_insert_aux@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1IABU__false_type@2@@Z
_TEXT	SEGMENT
tv369 = -4						; size = 4
___pos$ = 8						; size = 4
___first$ = 12						; size = 4
___last$ = 16						; size = 4
___mid$139712 = 20					; size = 4
___n$ = 20						; size = 4
??$_M_range_insert_aux@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1IABU__false_type@2@@Z PROC ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert_aux<CObject * *>, COMDAT
; _this$ = eax

; 441  :   void _M_range_insert_aux(iterator __pos,

	push	ecx

; 442  :                            _ForwardIterator __first, _ForwardIterator __last,
; 443  : #else
; 444  :   void _M_range_insert_aux(iterator __pos,
; 445  :                            const_iterator __first, const_iterator __last,
; 446  : #endif /* _STLP_MEMBER_TEMPLATES */
; 447  :                            size_type __n, const __false_type& /*_Movable*/) {
; 448  :     const size_type __elems_after = this->_M_finish - __pos;

	mov	ecx, DWORD PTR ___pos$[esp]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR ___n$[esp+8]
	push	esi
	push	edi
	mov	esi, eax
	mov	edi, DWORD PTR [esi+4]

; 449  :     pointer __old_finish = this->_M_finish;

	mov	ebx, DWORD PTR [esi+4]
	sub	edi, ecx
	sar	edi, 2

; 450  :     if (__elems_after > __n) {

	cmp	edi, ebp
	jbe	SHORT $LN2@M_range_in

; 451  :       _STLP_PRIV __ucopy_ptrs(this->_M_finish - __n, this->_M_finish, this->_M_finish, _TrivialUCopy());

	add	ebp, ebp
	add	ebp, ebp
	mov	edi, ebx
	sub	edi, ebp
	cmp	ebx, edi
	je	SHORT $LN10@M_range_in
	mov	eax, ebx
	sub	eax, edi
	push	eax
	push	edi
	push	ebx
	call	_memcpy
	mov	ecx, DWORD PTR ___pos$[esp+28]
	add	esp, 12					; 0000000cH
$LN10@M_range_in:

; 452  :       this->_M_finish += __n;

	add	DWORD PTR [esi+4], ebp

; 453  :       _STLP_PRIV __copy_backward_ptrs(__pos, __old_finish - __n, __old_finish, _TrivialCopy());

	mov	esi, DWORD PTR __imp__memmove
	sub	edi, ecx
	test	edi, edi
	jle	SHORT $LN15@M_range_in
	push	edi
	push	ecx
	sub	ebx, edi
	push	ebx
	call	esi
	mov	ecx, DWORD PTR ___pos$[esp+28]
	add	esp, 12					; 0000000cH
$LN15@M_range_in:

; 454  :       copy(__first, __last, __pos);

	mov	eax, DWORD PTR ___last$[esp+16]
	mov	edx, DWORD PTR ___first$[esp+16]
	sub	eax, edx
	je	$LN73@M_range_in
	push	eax
	push	edx
	push	ecx
	call	esi

; 467  :       copy(__first, __mid, __pos);

	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 468  :     } /* elems_after */
; 469  :   }

	pop	ecx
	ret	16					; 00000010H
$LN2@M_range_in:

; 455  :     }
; 456  :     else {
; 457  : #if defined ( _STLP_MEMBER_TEMPLATES )
; 458  :       _ForwardIterator __mid = __first;
; 459  :       advance(__mid, __elems_after);

	mov	edx, DWORD PTR ___first$[esp+16]
	lea	eax, DWORD PTR [edi*4]
	mov	DWORD PTR tv369[esp+20], eax
	add	eax, edx

; 460  : #else
; 461  :       const_pointer __mid = __first + __elems_after;
; 462  : #endif
; 463  :       uninitialized_copy(__mid, __last, this->_M_finish);

	mov	edx, DWORD PTR ___last$[esp+16]
	cmp	edx, eax
	mov	DWORD PTR ___mid$139712[esp+16], eax
	je	SHORT $LN75@M_range_in
	sub	edx, eax
	push	edx
	push	eax
	push	ebx
	call	_memcpy
	mov	eax, DWORD PTR ___mid$139712[esp+28]
	mov	ecx, DWORD PTR ___pos$[esp+28]
	add	esp, 12					; 0000000cH
$LN75@M_range_in:

; 464  :       this->_M_finish += __n - __elems_after;

	sub	ebp, edi
	add	ebp, ebp
	add	ebp, ebp
	add	DWORD PTR [esi+4], ebp

; 465  :       _STLP_PRIV __ucopy_ptrs(__pos, __old_finish, this->_M_finish, _TrivialUCopy());

	cmp	ebx, ecx
	mov	edx, DWORD PTR [esi+4]
	je	SHORT $LN58@M_range_in
	sub	ebx, ecx
	push	ebx
	push	ecx
	push	edx
	call	_memcpy
	mov	eax, DWORD PTR ___mid$139712[esp+28]
	mov	ecx, DWORD PTR ___pos$[esp+28]
	add	esp, 12					; 0000000cH
$LN58@M_range_in:

; 466  :       this->_M_finish += __elems_after;

	mov	edx, DWORD PTR tv369[esp+20]
	add	DWORD PTR [esi+4], edx

; 467  :       copy(__first, __mid, __pos);

	mov	edx, DWORD PTR ___first$[esp+16]
	sub	eax, edx
	je	SHORT $LN73@M_range_in
	push	eax
	push	edx
	push	ecx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
$LN73@M_range_in:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 468  :     } /* elems_after */
; 469  :   }

	pop	ecx
	ret	16					; 00000010H
??$_M_range_insert_aux@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1IABU__false_type@2@@Z ENDP ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert_aux<CObject * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$__destroy_mv_srcs@V?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@USRelcasePair@CObjectList@@@stlp_std@@YAXV?$reverse_iterator@PAUSRelcasePair@CObjectList@@@0@0PAUSRelcasePair@CObjectList@@@Z
_TEXT	SEGMENT
$T258322 = -1						; size = 1
___first$ = 8						; size = 4
___last$ = 12						; size = 4
??$__destroy_mv_srcs@V?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@USRelcasePair@CObjectList@@@stlp_std@@YAXV?$reverse_iterator@PAUSRelcasePair@CObjectList@@@0@0PAUSRelcasePair@CObjectList@@@Z PROC ; stlp_std::__destroy_mv_srcs<stlp_std::reverse_iterator<CObjectList::SRelcasePair *>,CObjectList::SRelcasePair>, COMDAT

; 192  : __destroy_mv_srcs(_ForwardIterator __first, _ForwardIterator __last, _Tp *__ptr) {

	push	ecx

; 193  :   typedef typename __move_traits<_Tp>::complete _CompleteMove;
; 194  :   __destroy_range_aux(__first, __last, __ptr, _CompleteMove());

	lea	eax, DWORD PTR $T258322[esp+4]
	push	eax
	push	0
	push	ecx
	lea	edx, DWORD PTR ___last$[esp+12]
	mov	ecx, esp
	push	edx
	mov	BYTE PTR $T258322[esp+20], 0
	call	??0?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<CObjectList::SRelcasePair *>::reverse_iterator<CObjectList::SRelcasePair *>
	push	ecx
	lea	eax, DWORD PTR ___first$[esp+16]
	mov	ecx, esp
	push	eax
	call	??0?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<CObjectList::SRelcasePair *>::reverse_iterator<CObjectList::SRelcasePair *>
	call	??$__destroy_range_aux@V?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@USRelcasePair@CObjectList@@@stlp_std@@YAXV?$reverse_iterator@PAUSRelcasePair@CObjectList@@@0@0PAUSRelcasePair@CObjectList@@ABU__true_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<CObjectList::SRelcasePair *>,CObjectList::SRelcasePair>

; 195  : }

	add	esp, 20					; 00000014H
	ret	0
??$__destroy_mv_srcs@V?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@USRelcasePair@CObjectList@@@stlp_std@@YAXV?$reverse_iterator@PAUSRelcasePair@CObjectList@@@0@0PAUSRelcasePair@CObjectList@@@Z ENDP ; stlp_std::__destroy_mv_srcs<stlp_std::reverse_iterator<CObjectList::SRelcasePair *>,CObjectList::SRelcasePair>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy_ptrs@PAPAVCObject@@PAPAV1@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@00ABU__true_type@1@@Z
_TEXT	SEGMENT
??$__copy_ptrs@PAPAVCObject@@PAPAV1@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@00ABU__true_type@1@@Z PROC ; stlp_std::priv::__copy_ptrs<CObject * *,CObject * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 255  :   // we know they all pointers, so this cast is OK
; 256  :   //  return (_OutputIter)__copy_trivial(&(*__first), &(*__last), &(*__result));
; 257  :   return (_OutputIter)__copy_trivial(__first, __last, __result);

	sub	ecx, edx
	push	esi
	mov	esi, ecx
	je	SHORT $LN6@copy_ptrs@26
	push	esi
	push	edx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN6@copy_ptrs@26:
	pop	esi

; 258  : }

	ret	0
??$__copy_ptrs@PAPAVCObject@@PAPAV1@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@00ABU__true_type@1@@Z ENDP ; stlp_std::priv::__copy_ptrs<CObject * *,CObject * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$_Destroy_Moved_Range@V?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUSRelcasePair@CObjectList@@@0@0@Z
_TEXT	SEGMENT
$T258355 = -9						; size = 1
$T258358 = -8						; size = 4
$T258359 = -4						; size = 4
___first$ = 8						; size = 4
___last$ = 12						; size = 4
??$_Destroy_Moved_Range@V?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUSRelcasePair@CObjectList@@@0@0@Z PROC ; stlp_std::_Destroy_Moved_Range<stlp_std::reverse_iterator<CObjectList::SRelcasePair *> >, COMDAT

; 198  : inline void _Destroy_Moved_Range(_ForwardIterator __first, _ForwardIterator __last) {

	sub	esp, 12					; 0000000cH

; 199  :   __destroy_mv_srcs(__first, __last, _STLP_VALUE_TYPE(__first, _ForwardIterator));

	lea	eax, DWORD PTR ___last$[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T258358[esp+16]
	call	??0?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<CObjectList::SRelcasePair *>::reverse_iterator<CObjectList::SRelcasePair *>
	lea	ecx, DWORD PTR ___first$[esp+8]
	push	ecx
	lea	ecx, DWORD PTR $T258359[esp+16]
	call	??0?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<CObjectList::SRelcasePair *>::reverse_iterator<CObjectList::SRelcasePair *>
	lea	edx, DWORD PTR $T258355[esp+12]
	push	edx
	push	0
	push	ecx
	lea	eax, DWORD PTR $T258358[esp+24]
	mov	ecx, esp
	push	eax
	mov	BYTE PTR $T258355[esp+28], 0
	call	??0?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<CObjectList::SRelcasePair *>::reverse_iterator<CObjectList::SRelcasePair *>
	push	ecx
	lea	edx, DWORD PTR $T258359[esp+28]
	mov	ecx, esp
	push	edx
	call	??0?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<CObjectList::SRelcasePair *>::reverse_iterator<CObjectList::SRelcasePair *>
	call	??$__destroy_range_aux@V?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@USRelcasePair@CObjectList@@@stlp_std@@YAXV?$reverse_iterator@PAUSRelcasePair@CObjectList@@@0@0PAUSRelcasePair@CObjectList@@ABU__true_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<CObjectList::SRelcasePair *>,CObjectList::SRelcasePair>

; 200  : }

	add	esp, 28					; 0000001cH
	ret	0
??$_Destroy_Moved_Range@V?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUSRelcasePair@CObjectList@@@0@0@Z ENDP ; stlp_std::_Destroy_Moved_Range<stlp_std::reverse_iterator<CObjectList::SRelcasePair *> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy_aux@PAPAVCObject@@PAPAV1@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@00ABU__true_type@1@@Z
_TEXT	SEGMENT
??$__copy_aux@PAPAVCObject@@PAPAV1@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@00ABU__true_type@1@@Z PROC ; stlp_std::priv::__copy_aux<CObject * *,CObject * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 263  :   return __copy_ptrs(__first, __last, __result,
; 264  :                      _UseTrivialCopy(_STLP_VALUE_TYPE(__first, _InputIter),
; 265  :                                      _STLP_VALUE_TYPE(__result, _OutputIter))._Answer());

	sub	ecx, edx
	push	esi
	mov	esi, ecx
	je	SHORT $LN12@copy_aux@4
	push	esi
	push	edx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN12@copy_aux@4:
	pop	esi

; 266  : }

	ret	0
??$__copy_aux@PAPAVCObject@@PAPAV1@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@00ABU__true_type@1@@Z ENDP ; stlp_std::priv::__copy_aux<CObject * *,CObject * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.c
_TEXT	ENDS
;	COMDAT ??$__find_if@PAPAVCObject@@VfClassEQ@@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@0VfClassEQ@@ABUrandom_access_iterator_tag@1@@Z
_TEXT	SEGMENT
___pred$ = 8						; size = 8
??$__find_if@PAPAVCObject@@VfClassEQ@@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@0VfClassEQ@@ABUrandom_access_iterator_tag@1@@Z PROC ; stlp_std::priv::__find_if<CObject * *,fClassEQ>, COMDAT
; ___first$ = eax
; ___last$ = ebx

; 155  :   _STLP_DIFFERENCE_TYPE(_RandomAccessIter) __trip_count = (__last - __first) >> 2;

	mov	ecx, ebx
	sub	ecx, eax
	push	esi

; 156  : 
; 157  :   for ( ; __trip_count > 0 ; --__trip_count) {

	mov	esi, DWORD PTR ___pred$[esp]
	sar	ecx, 4
	test	ecx, ecx
	push	edi
	mov	edi, DWORD PTR ___pred$[esp+8]
	jle	SHORT $LN14@find_if@2
$LL16@find_if@2:

; 158  :     if (__pred(*__first)) return __first;

	mov	edx, DWORD PTR [eax]
	cmp	esi, DWORD PTR [edx+8]
	jne	SHORT $LN65@find_if@2
	cmp	edi, DWORD PTR [edx+12]
	je	SHORT $LN8@find_if@2
$LN65@find_if@2:

; 159  :     ++__first;
; 160  : 
; 161  :     if (__pred(*__first)) return __first;

	mov	edx, DWORD PTR [eax+4]
	add	eax, 4
	cmp	esi, DWORD PTR [edx+8]
	jne	SHORT $LN66@find_if@2
	cmp	edi, DWORD PTR [edx+12]
	je	SHORT $LN8@find_if@2
$LN66@find_if@2:

; 162  :     ++__first;
; 163  : 
; 164  :     if (__pred(*__first)) return __first;

	mov	edx, DWORD PTR [eax+4]
	add	eax, 4
	cmp	esi, DWORD PTR [edx+8]
	jne	SHORT $LN67@find_if@2
	cmp	edi, DWORD PTR [edx+12]
	je	SHORT $LN8@find_if@2
$LN67@find_if@2:

; 165  :     ++__first;
; 166  : 
; 167  :     if (__pred(*__first)) return __first;

	mov	edx, DWORD PTR [eax+4]
	add	eax, 4
	cmp	esi, DWORD PTR [edx+8]
	jne	SHORT $LN68@find_if@2
	cmp	edi, DWORD PTR [edx+12]
	je	SHORT $LN8@find_if@2
$LN68@find_if@2:

; 156  : 
; 157  :   for ( ; __trip_count > 0 ; --__trip_count) {

	sub	ecx, 1

; 168  :     ++__first;

	add	eax, 4
	test	ecx, ecx
	jg	SHORT $LL16@find_if@2
$LN14@find_if@2:

; 169  :   }
; 170  : 
; 171  :   switch(__last - __first) {

	mov	ecx, ebx
	sub	ecx, eax
	sar	ecx, 2
	sub	ecx, 1
	je	SHORT $LN3@find_if@2
	sub	ecx, 1
	je	SHORT $LN5@find_if@2
	sub	ecx, 1
	jne	SHORT $LN2@find_if@2

; 172  :   case 3:
; 173  :     if (__pred(*__first)) return __first;

	mov	ecx, DWORD PTR [eax]
	cmp	esi, DWORD PTR [ecx+8]
	jne	SHORT $LN6@find_if@2
	cmp	edi, DWORD PTR [ecx+12]
	je	SHORT $LN8@find_if@2
$LN6@find_if@2:

; 174  :     ++__first;

	add	eax, 4
$LN5@find_if@2:

; 175  :   case 2:
; 176  :     if (__pred(*__first)) return __first;

	mov	ecx, DWORD PTR [eax]
	cmp	esi, DWORD PTR [ecx+8]
	jne	SHORT $LN4@find_if@2
	cmp	edi, DWORD PTR [ecx+12]
	je	SHORT $LN8@find_if@2
$LN4@find_if@2:

; 177  :     ++__first;

	add	eax, 4
$LN3@find_if@2:

; 178  :   case 1:
; 179  :     if (__pred(*__first)) return __first;

	mov	ecx, DWORD PTR [eax]
	cmp	esi, DWORD PTR [ecx+8]
	jne	SHORT $LN2@find_if@2
	cmp	edi, DWORD PTR [ecx+12]
	je	SHORT $LN8@find_if@2
$LN2@find_if@2:

; 180  :       //++__first;
; 181  :   case 0:
; 182  :   default:
; 183  :     return __last;

	mov	eax, ebx
$LN8@find_if@2:
	pop	edi
	pop	esi

; 184  :   }
; 185  : }

	ret	0
??$__find_if@PAPAVCObject@@VfClassEQ@@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@0VfClassEQ@@ABUrandom_access_iterator_tag@1@@Z ENDP ; stlp_std::priv::__find_if<CObject * *,fClassEQ>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?_M_clear_after_move@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXXZ
_TEXT	SEGMENT
$T258501 = -17						; size = 1
$T258504 = -16						; size = 4
$T258505 = -12						; size = 4
$T258493 = -8						; size = 4
$T258494 = -4						; size = 4
?_M_clear_after_move@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXXZ PROC ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_M_clear_after_move, COMDAT
; _this$ = eax

; 620  :   void _M_clear_after_move() {

	sub	esp, 20					; 00000014H
	push	esi
	mov	esi, eax

; 621  :     _STLP_STD::_Destroy_Moved_Range(rbegin(), rend());

	lea	eax, DWORD PTR $T258504[esp+24]
	push	eax
	mov	ecx, esi
	call	?rend@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUSRelcasePair@CObjectList@@@3@XZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::rend
	lea	ecx, DWORD PTR $T258505[esp+24]
	push	ecx
	mov	ecx, esi
	call	?rbegin@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUSRelcasePair@CObjectList@@@3@XZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::rbegin
	lea	edx, DWORD PTR $T258504[esp+24]
	push	edx
	lea	ecx, DWORD PTR $T258493[esp+28]
	call	??0?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<CObjectList::SRelcasePair *>::reverse_iterator<CObjectList::SRelcasePair *>
	lea	eax, DWORD PTR $T258505[esp+24]
	push	eax
	lea	ecx, DWORD PTR $T258494[esp+28]
	call	??0?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<CObjectList::SRelcasePair *>::reverse_iterator<CObjectList::SRelcasePair *>
	lea	ecx, DWORD PTR $T258501[esp+24]
	push	ecx
	push	0
	push	ecx
	lea	edx, DWORD PTR $T258493[esp+36]
	mov	ecx, esp
	push	edx
	mov	BYTE PTR $T258501[esp+40], 0
	call	??0?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<CObjectList::SRelcasePair *>::reverse_iterator<CObjectList::SRelcasePair *>
	push	ecx
	lea	eax, DWORD PTR $T258494[esp+40]
	mov	ecx, esp
	push	eax
	call	??0?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<CObjectList::SRelcasePair *>::reverse_iterator<CObjectList::SRelcasePair *>
	call	??$__destroy_range_aux@V?$reverse_iterator@PAUSRelcasePair@CObjectList@@@stlp_std@@USRelcasePair@CObjectList@@@stlp_std@@YAXV?$reverse_iterator@PAUSRelcasePair@CObjectList@@@0@0PAUSRelcasePair@CObjectList@@ABU__true_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<CObjectList::SRelcasePair *>,CObjectList::SRelcasePair>

; 622  :     this->_M_end_of_storage.deallocate(this->_M_start, this->_M_end_of_storage._M_data - this->_M_start);

	mov	edx, DWORD PTR [esi+8]
	lea	ecx, DWORD PTR [esi+8]
	mov	esi, DWORD PTR [esi]
	sub	edx, esi
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	esp, 16					; 00000010H
	add	eax, edx
	push	eax
	push	esi
	call	?deallocate@?$xalloc@USRelcasePair@CObjectList@@@@QBEXPAUSRelcasePair@CObjectList@@I@Z ; xalloc<CObjectList::SRelcasePair>::deallocate

; 623  :   }

	pop	esi
	add	esp, 20					; 00000014H
	ret	0
?_M_clear_after_move@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXXZ ENDP ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_M_clear_after_move
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$copy@PAPAVCObject@@PAPAV1@@stlp_std@@YAPAPAVCObject@@PAPAV1@00@Z
_TEXT	SEGMENT
??$copy@PAPAVCObject@@PAPAV1@@stlp_std@@YAPAPAVCObject@@PAPAV1@00@Z PROC ; stlp_std::copy<CObject * *,CObject * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 280  :   _STLP_DEBUG_CHECK(_STLP_PRIV __check_range(__first, __last))
; 281  :   return _STLP_PRIV __copy_aux(__first, __last, __result, _BothPtrType< _InputIter, _OutputIter>::_Answer());

	sub	ecx, edx
	push	esi
	mov	esi, ecx
	je	SHORT $LN16@copy@5
	push	esi
	push	edx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN16@copy@5:
	pop	esi

; 282  : }

	ret	0
??$copy@PAPAVCObject@@PAPAV1@@stlp_std@@YAPAPAVCObject@@PAPAV1@00@Z ENDP ; stlp_std::copy<CObject * *,CObject * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.c
_TEXT	ENDS
;	COMDAT ??$find_if@PAPAVCObject@@VfClassEQ@@@stlp_std@@YAPAPAVCObject@@PAPAV1@0VfClassEQ@@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 4
___pred$ = 12						; size = 8
??$find_if@PAPAVCObject@@VfClassEQ@@@stlp_std@@YAPAPAVCObject@@PAPAV1@0VfClassEQ@@@Z PROC ; stlp_std::find_if<CObject * *,fClassEQ>, COMDAT
; ___last$ = ebx

; 209  :   _STLP_DEBUG_CHECK(_STLP_PRIV __check_range(__first, __last))
; 210  :   return _STLP_PRIV __find_if(__first, __last, __pred, _STLP_ITERATOR_CATEGORY(__first, _InputIter));

	mov	eax, DWORD PTR ___pred$[esp]
	mov	ecx, DWORD PTR ___pred$[esp-4]
	push	eax
	mov	eax, DWORD PTR ___first$[esp]
	push	ecx
	call	??$__find_if@PAPAVCObject@@VfClassEQ@@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@0VfClassEQ@@ABUrandom_access_iterator_tag@1@@Z ; stlp_std::priv::__find_if<CObject * *,fClassEQ>
	add	esp, 8

; 211  : }

	ret	0
??$find_if@PAPAVCObject@@VfClassEQ@@@stlp_std@@YAPAPAVCObject@@PAPAV1@0VfClassEQ@@@Z ENDP ; stlp_std::find_if<CObject * *,fClassEQ>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_TEXT	ENDS
;	COMDAT ?to_storage_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAXPAPAVCObject@@@Z
_TEXT	SEGMENT
?to_storage_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAXPAPAVCObject@@@Z PROC ; stlp_std::priv::_CastTraits<void *,CObject *>::to_storage_type_ptr, COMDAT
; ___ptr$ = eax

; 218  :   { return cv_traits::uncv_ptr(__REINTERPRET_CAST(void_cv_type *, __ptr)); }

	ret	0
?to_storage_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAXPAPAVCObject@@@Z ENDP ; stlp_std::priv::_CastTraits<void *,CObject *>::to_storage_type_ptr
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_value_type_ref@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAAAPAVCObject@@AAPAX@Z
_TEXT	SEGMENT
?to_value_type_ref@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAAAPAVCObject@@AAPAX@Z PROC ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ref, COMDAT
; ___ref$ = eax

; 213  :   { return __REINTERPRET_CAST(value_type &, cv_traits::cv_ref(__ref)); }

	ret	0
?to_value_type_ref@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAAAPAVCObject@@AAPAX@Z ENDP ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ref
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?back@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEAAUSRelcasePair@CObjectList@@XZ
_TEXT	SEGMENT
?back@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEAAUSRelcasePair@CObjectList@@XZ PROC ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::back, COMDAT
; _this$ = ecx

; 195  :   reference back()              { return *(end() - 1); }

	call	?end@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEPAUSRelcasePair@CObjectList@@XZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::end
	sub	eax, 12					; 0000000cH
	ret	0
?back@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEAAUSRelcasePair@CObjectList@@XZ ENDP ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::back
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?size@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QBEIXZ PROC ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::size, COMDAT
; _this$ = ecx

; 89   :   size_type size() const        { return _M_impl.size(); }

	jmp	?size@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QBEIXZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::size
?size@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QBEIXZ ENDP ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?back@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEAAUSRelcasePair@CObjectList@@XZ
_TEXT	SEGMENT
?back@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEAAUSRelcasePair@CObjectList@@XZ PROC ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::back, COMDAT
; _this$ = ecx

; 100  :   reference back()              { return cast_traits::to_value_type_ref(_M_impl.back()); }

	call	?end@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEPAUSRelcasePair@CObjectList@@XZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::end
	sub	eax, 12					; 0000000cH
	ret	0
?back@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEAAUSRelcasePair@CObjectList@@XZ ENDP ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::back
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEPAUSRelcasePair@CObjectList@@XZ
_TEXT	SEGMENT
?end@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEPAUSRelcasePair@CObjectList@@XZ PROC ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::end, COMDAT
; _this$ = ecx

; 81   :   iterator end()               { return cast_traits::to_value_type_ptr(_M_impl.end()); }

	jmp	?end@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEPAUSRelcasePair@CObjectList@@XZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::end
?end@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEPAUSRelcasePair@CObjectList@@XZ ENDP ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEPAUSRelcasePair@CObjectList@@XZ
_TEXT	SEGMENT
?begin@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEPAUSRelcasePair@CObjectList@@XZ PROC ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::begin, COMDAT
; _this$ = ecx

; 79   :   iterator begin()             { return cast_traits::to_value_type_ptr(_M_impl.begin()); }

	jmp	?begin@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEPAUSRelcasePair@CObjectList@@XZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::begin
?begin@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEPAUSRelcasePair@CObjectList@@XZ ENDP ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::begin
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??A?$xr_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@@QAEAAUSRelcasePair@CObjectList@@I@Z
_TEXT	SEGMENT
??A?$xr_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@@QAEAAUSRelcasePair@CObjectList@@I@Z PROC ; xr_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::operator[], COMDAT
; _this$ = ecx
; __Pos$ = esi

; 139  : 	reference operator[]		(size_type _Pos)					{ {VERIFY2(_Pos<size(),make_string("index is out of range: index requested[%d], size of container[%d]", _Pos, size()).c_str());} return (*(begin() + _Pos)); }

	call	?begin@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEPAUSRelcasePair@CObjectList@@XZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::begin
	lea	ecx, DWORD PTR [esi+esi*2]
	lea	eax, DWORD PTR [eax+ecx*4]
	ret	0
??A?$xr_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@@QAEAAUSRelcasePair@CObjectList@@I@Z ENDP ; xr_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::operator[]
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?size@?$xr_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@@QBEIXZ
_TEXT	SEGMENT
?size@?$xr_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@@QBEIXZ PROC ; xr_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::size, COMDAT
; _this$ = ecx

; 126  : 	u32		size				() const							{ return (u32)inherited::size();} 

	jmp	?size@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QBEIXZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::size
?size@?$xr_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@@QBEIXZ ENDP ; xr_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::size
_TEXT	ENDS
PUBLIC	?net_Unregister@CObjectList@@QAEXPAVCObject@@@Z	; CObjectList::net_Unregister
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_object_list.cpp
;	COMDAT ?net_Unregister@CObjectList@@QAEXPAVCObject@@@Z
_TEXT	SEGMENT
_O$ = 8							; size = 4
?net_Unregister@CObjectList@@QAEXPAVCObject@@@Z PROC	; CObjectList::net_Unregister, COMDAT
; _this$ = ecx

; 316  : 	//R_ASSERT		(O->ID() < 0xffff);
; 317  : 	if (O->ID() < 0xffff)				//demo_spectator can have 0xffff

	mov	eax, DWORD PTR _O$[esp-4]
	movzx	eax, WORD PTR [eax+164]
	cmp	ax, 65535				; 0000ffffH
	jae	SHORT $LN1@net_Unregi

; 318  : 		map_NETID[O->ID()] = NULL;

	movzx	edx, ax
	mov	DWORD PTR [ecx+edx*4], 0
$LN1@net_Unregi:

; 319  : /*
; 320  : 	xr_map<u32,CObject*>::iterator	it = map_NETID.find(O->ID());
; 321  : 	if ((it!=map_NETID.end()) && (it->second == O))	{
; 322  : 		// Msg			("-------------------------------- Unregster: %s",O->cName());
; 323  : 		map_NETID.erase(it);
; 324  : 	}
; 325  : */
; 326  : }

	ret	4
?net_Unregister@CObjectList@@QAEXPAVCObject@@@Z ENDP	; CObjectList::net_Unregister
_TEXT	ENDS
PUBLIC	?net_Register@CObjectList@@QAEXPAVCObject@@@Z	; CObjectList::net_Register
; Function compile flags: /Ogtpy
;	COMDAT ?net_Register@CObjectList@@QAEXPAVCObject@@@Z
_TEXT	SEGMENT
_O$ = 8							; size = 4
?net_Register@CObjectList@@QAEXPAVCObject@@@Z PROC	; CObjectList::net_Register, COMDAT
; _this$ = ecx

; 303  : 	R_ASSERT		(O);

	cmp	BYTE PTR ?ignore_always@?3??net_Register@CObjectList@@QAEXPAVCObject@@@Z@4_NA, 0
	push	ebx
	mov	ebx, DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
	push	esi
	mov	esi, DWORD PTR _O$[esp+4]
	push	edi
	mov	edi, ecx
	jne	SHORT $LN7@net_Regist
	test	esi, esi
	jne	SHORT $LN7@net_Regist
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??net_Register@CObjectList@@QAEXPAVCObject@@@Z@4_NA
	push	OFFSET ??_C@_0BK@PGNPAPLE@CObjectList?3?3net_Register?$AA@
	push	303					; 0000012fH
	push	OFFSET ??_C@_0DH@PPDLGENG@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_01MJMHLOMK@O?$AA@
	call	ebx
$LN7@net_Regist:

; 304  : 	R_ASSERT		(O->ID() < 0xffff);

	cmp	BYTE PTR ?ignore_always@?7??net_Register@CObjectList@@QAEXPAVCObject@@@Z@4_NA, 0
	jne	SHORT $LN15@net_Regist
	cmp	WORD PTR [esi+164], 65535		; 0000ffffH
	jb	SHORT $LN16@net_Regist
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?7??net_Register@CObjectList@@QAEXPAVCObject@@@Z@4_NA
	push	OFFSET ??_C@_0BK@PGNPAPLE@CObjectList?3?3net_Register?$AA@
	push	304					; 00000130H
	push	OFFSET ??_C@_0DH@PPDLGENG@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BB@KFLMBOAE@O?9?$DOID?$CI?$CJ?5?$DM?50xffff?$AA@
	call	ebx

; 305  : 
; 306  : 	map_NETID[O->ID()] = O;

	movzx	eax, WORD PTR [esi+164]
	mov	DWORD PTR [edi+eax*4], esi
	pop	edi
	pop	esi
	pop	ebx

; 307  : 	
; 308  : 	
; 309  : 
; 310  : //.	map_NETID.insert(mk_pair(O->ID(),O));
; 311  : 	//Msg			("-------------------------------- Register: %s",O->cName());
; 312  : }

	ret	4
$LN15@net_Regist:

; 305  : 
; 306  : 	map_NETID[O->ID()] = O;

	movzx	ecx, WORD PTR [esi+164]
	mov	DWORD PTR [edi+ecx*4], esi
	pop	edi
	pop	esi
	pop	ebx

; 307  : 	
; 308  : 	
; 309  : 
; 310  : //.	map_NETID.insert(mk_pair(O->ID(),O));
; 311  : 	//Msg			("-------------------------------- Register: %s",O->cName());
; 312  : }

	ret	4
$LN16@net_Regist:

; 305  : 
; 306  : 	map_NETID[O->ID()] = O;

	movzx	edx, WORD PTR [esi+164]
	mov	DWORD PTR [edi+edx*4], esi
	pop	edi
	pop	esi
	pop	ebx

; 307  : 	
; 308  : 	
; 309  : 
; 310  : //.	map_NETID.insert(mk_pair(O->ID(),O));
; 311  : 	//Msg			("-------------------------------- Register: %s",O->cName());
; 312  : }

	ret	4
?net_Register@CObjectList@@QAEXPAVCObject@@@Z ENDP	; CObjectList::net_Register
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
;	COMDAT ??$__uninitialized_move@PAPAXPAPAXU__true_type@stlp_std@@@priv@stlp_std@@YAPAPAXPAPAX00U__true_type@1@ABU__false_type@1@@Z
_TEXT	SEGMENT
___trivial_ucpy$ = 8					; size = 1
??$__uninitialized_move@PAPAXPAPAXU__true_type@stlp_std@@@priv@stlp_std@@YAPAPAXPAPAX00U__true_type@1@ABU__false_type@1@@Z PROC ; stlp_std::priv::__uninitialized_move<void * *,void * *,stlp_std::__true_type>, COMDAT
; ___first$ = ecx
; ___last$ = edx
; ___result$ = eax

; 414  : { return __ucopy_ptrs(__first, __last, __result, __trivial_ucpy); }

	push	esi
	mov	esi, edx
	cmp	esi, ecx
	je	SHORT $LN8@uninitiali@22
	sub	esi, ecx
	push	esi
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN8@uninitiali@22:
	pop	esi
	ret	0
??$__uninitialized_move@PAPAXPAPAXU__true_type@stlp_std@@@priv@stlp_std@@YAPAPAXPAPAX00U__true_type@1@ABU__false_type@1@@Z ENDP ; stlp_std::priv::__uninitialized_move<void * *,void * *,stlp_std::__true_type>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ??$_M_range_insert_realloc@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1I@Z
_TEXT	SEGMENT
___old_size$ = -12					; size = 4
___new_start$ = -8					; size = 4
tv330 = -4						; size = 4
___first$ = 8						; size = 4
___last$ = 12						; size = 4
___n$ = 16						; size = 4
??$_M_range_insert_realloc@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1I@Z PROC ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert_realloc<CObject * *>, COMDAT
; _this$ = esi
; ___pos$ = ebx

; 398  :   void _M_range_insert_realloc(iterator __pos,

	sub	esp, 12					; 0000000cH

; 399  :                                _ForwardIterator __first, _ForwardIterator __last,
; 400  : #else
; 401  :   void _M_range_insert_realloc(iterator __pos,
; 402  :                                const_iterator __first, const_iterator __last,
; 403  : #endif /* _STLP_MEMBER_TEMPLATES */
; 404  :                                size_type __n) {
; 405  :     const size_type __old_size = size();

	mov	eax, DWORD PTR [esi+4]
	sub	eax, DWORD PTR [esi]
	push	ebp
	push	edi

; 406  :     size_type __len = __old_size + (max)(__old_size, __n);

	lea	ecx, DWORD PTR ___n$[esp+16]
	push	ecx
	lea	edx, DWORD PTR ___old_size$[esp+24]
	sar	eax, 2
	push	edx
	mov	DWORD PTR ___old_size$[esp+28], eax
	call	??$max@I@stlp_std@@YAABIABI0@Z		; stlp_std::max<unsigned int>
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR ___old_size$[esp+28]

; 407  :     pointer __new_start = this->_M_end_of_storage.allocate(__len, __len);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	add	eax, eax
	add	eax, eax
	add	esp, 8
	push	eax
	mov	DWORD PTR tv330[esp+24], eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	mov	edi, eax

; 408  :     pointer __new_finish = __new_start;
; 409  :     _STLP_TRY {
; 410  :       __new_finish = _STLP_PRIV __uninitialized_move(this->_M_start, __pos, __new_start, _TrivialUCopy(), _Movable());

	mov	eax, DWORD PTR [esi]
	cmp	ebx, eax
	mov	DWORD PTR ___new_start$[esp+20], edi
	je	SHORT $LN26@M_range_in@3
	mov	ebp, ebx
	sub	ebp, eax
	push	ebp
	push	eax
	push	edi
	call	_memcpy
	mov	edi, eax
	add	esp, 12					; 0000000cH
	add	edi, ebp
$LN26@M_range_in@3:

; 411  :       __new_finish = uninitialized_copy(__first, __last, __new_finish);

	mov	ebp, DWORD PTR ___last$[esp+16]
	mov	eax, DWORD PTR ___first$[esp+16]
	cmp	ebp, eax
	je	SHORT $LN42@M_range_in@3
	sub	ebp, eax
	push	ebp
	push	eax
	push	edi
	call	_memcpy
	add	esp, 12					; 0000000cH
	add	eax, ebp
	mov	edi, eax
$LN42@M_range_in@3:

; 412  :       __new_finish = _STLP_PRIV __uninitialized_move(__pos, this->_M_finish, __new_finish, _TrivialUCopy(), _Movable());

	mov	ebp, DWORD PTR [esi+4]
	cmp	ebp, ebx
	je	SHORT $LN50@M_range_in@3
	sub	ebp, ebx
	push	ebp
	push	ebx
	push	edi
	call	_memcpy
	add	esp, 12					; 0000000cH
	add	eax, ebp
	mov	edi, eax
$LN50@M_range_in@3:

; 413  :     }
; 414  :     _STLP_UNWIND((_STLP_STD::_Destroy_Range(__new_start,__new_finish),
; 415  :                   this->_M_end_of_storage.deallocate(__new_start,__len)))
; 416  :     _M_clear_after_move();

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN81@M_range_in@3
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN81@M_range_in@3:

; 417  :     _M_set(__new_start, __new_finish, __new_start + __len);

	mov	eax, DWORD PTR ___new_start$[esp+20]
	mov	ecx, DWORD PTR tv330[esp+20]
	mov	DWORD PTR [esi+4], edi
	add	ecx, eax

; 418  :   }

	pop	edi
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+8], ecx
	pop	ebp
	add	esp, 12					; 0000000cH
	ret	12					; 0000000cH
??$_M_range_insert_realloc@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1I@Z ENDP ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert_realloc<CObject * *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_M_range_insert@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1ABUforward_iterator_tag@2@@Z
_TEXT	SEGMENT
___pos$ = 8						; size = 4
??$_M_range_insert@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1ABUforward_iterator_tag@2@@Z PROC ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert<CObject * *>, COMDAT
; _this$ = eax
; ___first$ = ecx
; ___last$ = edx

; 504  :   void _M_range_insert(iterator __pos,

	push	ebx
	mov	ebx, DWORD PTR ___pos$[esp]
	push	esi
	push	edi

; 505  :                        _ForwardIterator __first, _ForwardIterator __last,
; 506  :                        const forward_iterator_tag &) {
; 507  : #else /* _STLP_MEMBER_TEMPLATES */
; 508  : public:
; 509  :   void insert(iterator __pos,
; 510  :               const_iterator __first, const_iterator __last) {
; 511  : #endif /* _STLP_MEMBER_TEMPLATES */
; 512  :     /* This method do not check self referencing.
; 513  :      * Standard forbids it, checked by the debug mode.
; 514  :      */
; 515  :     if (__first != __last) {
; 516  :       size_type __n = distance(__first, __last);
; 517  : 
; 518  :       if (size_type(this->_M_end_of_storage._M_data - this->_M_finish) >= __n) {

	mov	edi, DWORD PTR [eax+8]
	sub	edi, DWORD PTR [eax+4]
	mov	esi, ecx
	mov	ecx, edx
	sub	ecx, esi
	sar	ecx, 2

; 519  :         _M_range_insert_aux(__pos, __first, __last, __n, _Movable());

	push	ecx
	sar	edi, 2
	cmp	edi, ecx
	push	edx
	push	esi
	jb	SHORT $LN2@M_range_in@4
	push	ebx
	call	??$_M_range_insert_aux@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1IABU__false_type@2@@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert_aux<CObject * *>
	pop	edi
	pop	esi
	pop	ebx

; 523  :       }
; 524  :     }
; 525  :   }

	ret	4
$LN2@M_range_in@4:

; 520  :       }
; 521  :       else {
; 522  :         _M_range_insert_realloc(__pos, __first, __last, __n);

	mov	esi, eax
	call	??$_M_range_insert_realloc@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1I@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert_realloc<CObject * *>
	pop	edi
	pop	esi
	pop	ebx

; 523  :       }
; 524  :     }
; 525  :   }

	ret	4
??$_M_range_insert@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1ABUforward_iterator_tag@2@@Z ENDP ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert<CObject * *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_M_insert_dispatch@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1ABU__false_type@2@@Z
_TEXT	SEGMENT
??$_M_insert_dispatch@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1ABU__false_type@2@@Z PROC ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_dispatch<CObject * *>, COMDAT
; _this$ = eax
; ___pos$ = ecx
; ___first$ = edi
; ___last$ = edx

; 479  :   void _M_insert_dispatch(iterator __pos,

	cmp	edi, edx
	push	ebx
	mov	ebx, ecx
	je	SHORT $LN3@M_insert_d
	push	esi
	mov	esi, DWORD PTR [eax+8]
	sub	esi, DWORD PTR [eax+4]
	mov	ecx, edx
	sub	ecx, edi
	sar	ecx, 2
	push	ecx
	sar	esi, 2
	cmp	esi, ecx
	push	edx
	push	edi
	jb	SHORT $LN4@M_insert_d
	push	ebx
	call	??$_M_range_insert_aux@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1IABU__false_type@2@@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert_aux<CObject * *>
	pop	esi
	pop	ebx

; 480  :                           _InputIterator __first, _InputIterator __last,
; 481  :                           const __false_type&)
; 482  :   { _M_range_insert(__pos, __first, __last, _STLP_ITERATOR_CATEGORY(__first, _InputIterator)); }

	ret	0

; 479  :   void _M_insert_dispatch(iterator __pos,

$LN4@M_insert_d:
	mov	esi, eax
	call	??$_M_range_insert_realloc@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1I@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert_realloc<CObject * *>
	pop	esi
$LN3@M_insert_d:
	pop	ebx

; 480  :                           _InputIterator __first, _InputIterator __last,
; 481  :                           const __false_type&)
; 482  :   { _M_range_insert(__pos, __first, __last, _STLP_ITERATOR_CATEGORY(__first, _InputIterator)); }

	ret	0
??$_M_insert_dispatch@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1ABU__false_type@2@@Z ENDP ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_dispatch<CObject * *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$insert@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXPAPAXPAPAVCObject@@1@Z
_TEXT	SEGMENT
??$insert@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXPAPAXPAPAVCObject@@1@Z PROC ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::insert<CObject * *>, COMDAT
; _this$ = eax
; ___pos$ = ecx
; ___first$ = edi
; ___last$ = edx

; 488  :     typedef typename _IsIntegral<_InputIterator>::_Ret _Integral;
; 489  :     _M_insert_dispatch(__pos, __first, __last, _Integral());

	cmp	edi, edx
	push	ebx
	mov	ebx, ecx
	je	SHORT $LN5@insert
	push	esi
	mov	esi, DWORD PTR [eax+8]
	sub	esi, DWORD PTR [eax+4]
	mov	ecx, edx
	sub	ecx, edi
	sar	ecx, 2
	push	ecx
	sar	esi, 2
	cmp	esi, ecx
	push	edx
	push	edi
	jb	SHORT $LN6@insert
	push	ebx
	call	??$_M_range_insert_aux@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1IABU__false_type@2@@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert_aux<CObject * *>
	pop	esi
	pop	ebx

; 490  :   }

	ret	0

; 488  :     typedef typename _IsIntegral<_InputIterator>::_Ret _Integral;
; 489  :     _M_insert_dispatch(__pos, __first, __last, _Integral());

$LN6@insert:
	mov	esi, eax
	call	??$_M_range_insert_realloc@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1I@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert_realloc<CObject * *>
	pop	esi
$LN5@insert:
	pop	ebx

; 490  :   }

	ret	0
??$insert@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXPAPAXPAPAVCObject@@1@Z ENDP ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::insert<CObject * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ??$insert@PAPAVCObject@@@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEXPAPAVCObject@@00@Z
_TEXT	SEGMENT
??$insert@PAPAVCObject@@@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEXPAPAVCObject@@00@Z PROC ; stlp_std::vector<CObject *,xalloc<CObject *> >::insert<CObject * *>, COMDAT
; _this$ = eax
; ___pos$ = ecx
; ___first$ = edi
; ___last$ = edx

; 191  :   void insert(iterator __pos, _InputIterator __first, _InputIterator __last)

	cmp	edi, edx
	push	ebx
	mov	ebx, ecx
	je	SHORT $LN11@insert@2
	push	esi
	mov	esi, DWORD PTR [eax+8]
	sub	esi, DWORD PTR [eax+4]
	mov	ecx, edx
	sub	ecx, edi
	sar	ecx, 2
	push	ecx
	sar	esi, 2
	cmp	esi, ecx
	push	edx
	push	edi
	jb	SHORT $LN12@insert@2
	push	ebx
	call	??$_M_range_insert_aux@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1IABU__false_type@2@@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert_aux<CObject * *>
	pop	esi
	pop	ebx

; 192  :   { _M_impl.insert(cast_traits::to_storage_type_ptr(__pos), __first, __last); }

	ret	0

; 191  :   void insert(iterator __pos, _InputIterator __first, _InputIterator __last)

$LN12@insert@2:
	mov	esi, eax
	call	??$_M_range_insert_realloc@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1I@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert_realloc<CObject * *>
	pop	esi
$LN11@insert@2:
	pop	ebx

; 192  :   { _M_impl.insert(cast_traits::to_storage_type_ptr(__pos), __first, __last); }

	ret	0
??$insert@PAPAVCObject@@@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEXPAPAVCObject@@00@Z ENDP ; stlp_std::vector<CObject *,xalloc<CObject *> >::insert<CObject * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ??0?$_Vector_base@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USRelcasePair@CObjectList@@@@@Z
_TEXT	SEGMENT
??0?$_Vector_base@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USRelcasePair@CObjectList@@@@@Z PROC ; stlp_std::priv::_Vector_base<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_Vector_base<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >, COMDAT
; _this$ = esi
; ___a$ = eax

; 67   :     : _M_start(0), _M_finish(0), _M_end_of_storage(__a, 0) {}

	push	0
	push	eax
	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	call	??0?$_STLP_alloc_proxy@PAUSRelcasePair@CObjectList@@U12@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USRelcasePair@CObjectList@@@@PAUSRelcasePair@CObjectList@@@Z ; stlp_std::priv::_STLP_alloc_proxy<CObjectList::SRelcasePair *,CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_STLP_alloc_proxy<CObjectList::SRelcasePair *,CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >
	mov	eax, esi
	ret	0
??0?$_Vector_base@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USRelcasePair@CObjectList@@@@@Z ENDP ; stlp_std::priv::_Vector_base<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_Vector_base<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USRelcasePair@CObjectList@@@@@Z
_TEXT	SEGMENT
??0?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USRelcasePair@CObjectList@@@@@Z PROC ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >, COMDAT
; _this$ = esi
; ___a$ = eax

; 208  :     : _STLP_PRIV _Vector_base<_Tp, _Alloc>(__a) {}

	push	0
	push	eax
	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	call	??0?$_STLP_alloc_proxy@PAUSRelcasePair@CObjectList@@U12@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USRelcasePair@CObjectList@@@@PAUSRelcasePair@CObjectList@@@Z ; stlp_std::priv::_STLP_alloc_proxy<CObjectList::SRelcasePair *,CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_STLP_alloc_proxy<CObjectList::SRelcasePair *,CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >
	mov	eax, esi
	ret	0
??0?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USRelcasePair@CObjectList@@@@@Z ENDP ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ??0?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAE@ABV?$xalloc@USRelcasePair@CObjectList@@@@@Z
_TEXT	SEGMENT
??0?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAE@ABV?$xalloc@USRelcasePair@CObjectList@@@@@Z PROC ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >, COMDAT
; _this$ = esi
; ___a$ = eax

; 106  :   explicit vector(const allocator_type& __a = allocator_type())

	push	0
	push	eax
	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	call	??0?$_STLP_alloc_proxy@PAUSRelcasePair@CObjectList@@U12@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USRelcasePair@CObjectList@@@@PAUSRelcasePair@CObjectList@@@Z ; stlp_std::priv::_STLP_alloc_proxy<CObjectList::SRelcasePair *,CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_STLP_alloc_proxy<CObjectList::SRelcasePair *,CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >
	mov	eax, esi
	ret	0
??0?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAE@ABV?$xalloc@USRelcasePair@CObjectList@@@@@Z ENDP ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xr_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@@QAE@XZ
_TEXT	SEGMENT
$T317841 = -1						; size = 1
??0?$xr_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@@QAE@XZ PROC ; xr_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::xr_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >, COMDAT
; _this$ = esi

; 123  : 			xr_vector			()									: inherited	()					{}

	push	ecx
	push	0
	lea	eax, DWORD PTR $T317841[esp+8]
	push	eax
	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	call	??0?$_STLP_alloc_proxy@PAUSRelcasePair@CObjectList@@U12@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USRelcasePair@CObjectList@@@@PAUSRelcasePair@CObjectList@@@Z ; stlp_std::priv::_STLP_alloc_proxy<CObjectList::SRelcasePair *,CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_STLP_alloc_proxy<CObjectList::SRelcasePair *,CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >
	mov	eax, esi
	pop	ecx
	ret	0
??0?$xr_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@@QAE@XZ ENDP ; xr_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::xr_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?erase@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@PAPAV3@@Z
_TEXT	SEGMENT
?erase@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@PAPAV3@@Z PROC ; stlp_std::vector<CObject *,xalloc<CObject *> >::erase, COMDAT
; _this$ = eax
; ___pos$ = edi

; 206  :   {return cast_traits::to_value_type_ptr(_M_impl.erase(cast_traits::to_storage_type_ptr(__pos)));}

	push	esi
	mov	esi, eax
	mov	eax, DWORD PTR [esi+4]
	lea	ecx, DWORD PTR [edi+4]
	cmp	ecx, eax
	je	SHORT $LN18@erase@41
	sub	eax, ecx
	je	SHORT $LN18@erase@41
	push	eax
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
$LN18@erase@41:
	add	DWORD PTR [esi+4], -4			; fffffffcH
	mov	esi, DWORD PTR [esi+4]
	push	esi
	call	??$_Destroy@PAX@stlp_std@@YAXPAPAX@Z	; stlp_std::_Destroy<void *>
	push	edi
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 8
	pop	esi
	ret	0
?erase@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@PAPAV3@@Z ENDP ; stlp_std::vector<CObject *,xalloc<CObject *> >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?back@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEAAPAVCObject@@XZ
_TEXT	SEGMENT
?back@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEAAPAVCObject@@XZ PROC ; stlp_std::vector<CObject *,xalloc<CObject *> >::back, COMDAT
; _this$ = eax

; 100  :   reference back()              { return cast_traits::to_value_type_ref(_M_impl.back()); }

	mov	eax, DWORD PTR [eax+4]
	sub	eax, 4
	ret	0
?back@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEAAPAVCObject@@XZ ENDP ; stlp_std::vector<CObject *,xalloc<CObject *> >::back
_TEXT	ENDS
PUBLIC	?dump_list@CObjectList@@CAXAAV?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@PBD@Z ; CObjectList::dump_list
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_object_list.cpp
;	COMDAT ?dump_list@CObjectList@@CAXAAV?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@PBD@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
_reason$ = 12						; size = 4
?dump_list@CObjectList@@CAXAAV?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@PBD@Z PROC ; CObjectList::dump_list, COMDAT

; 529  : {

	push	esi

; 530  : 	Objects::iterator it = v.begin();

	mov	esi, DWORD PTR _v$[esp]
	mov	ecx, esi
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin

; 531  : 	Objects::iterator it_e = v.end();

	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	pop	esi

; 532  : #ifdef DEBUG
; 533  : 	Msg("----------------dump_list [%s]",reason);
; 534  : 	for(;it!=it_e;++it)
; 535  : 		Msg("%x - name [%s] ID[%d] parent[%s] getDestroy()=[%s]", 
; 536  : 			(*it),
; 537  : 			(*it)->cName().c_str(), 
; 538  : 			(*it)->ID(), 
; 539  : 			((*it)->H_Parent())?(*it)->H_Parent()->cName().c_str():"", 
; 540  : 			((*it)->getDestroy())?"yes":"no" );
; 541  : #endif // #ifdef DEBUG
; 542  : }

	ret	0
?dump_list@CObjectList@@CAXAAV?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@PBD@Z ENDP ; CObjectList::dump_list
_TEXT	ENDS
PUBLIC	?Load@CObjectList@@QAEXXZ			; CObjectList::Load
; Function compile flags: /Ogtpy
;	COMDAT ?Load@CObjectList@@QAEXXZ
_TEXT	SEGMENT
?Load@CObjectList@@QAEXXZ PROC				; CObjectList::Load, COMDAT
; _this$ = ecx

; 404  : 	R_ASSERT				(/*map_NETID.empty() &&*/ objects_active.empty() && destroy_queue.empty() && objects_sleeping.empty());

	cmp	BYTE PTR ?ignore_always@?3??Load@CObjectList@@QAEXXZ@4_NA, 0
	push	esi
	mov	esi, ecx
	jne	SHORT $LN4@Load@4
	lea	ecx, DWORD PTR [esi+262152]
	call	?empty@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBE_NXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::empty
	test	al, al
	je	SHORT $LN1@Load@4
	lea	ecx, DWORD PTR [esi+262140]
	call	?empty@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBE_NXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::empty
	test	al, al
	je	SHORT $LN1@Load@4
	lea	ecx, DWORD PTR [esi+262164]
	call	?empty@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBE_NXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::empty
	test	al, al
	jne	SHORT $LN4@Load@4
$LN1@Load@4:
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??Load@CObjectList@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BC@FLFEPBEJ@CObjectList?3?3Load?$AA@
	push	404					; 00000194H
	push	OFFSET ??_C@_0DH@PPDLGENG@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0EM@HEHLHFBD@objects_active?4empty?$CI?$CJ?5?$CG?$CG?5destro@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN4@Load@4:
	pop	esi

; 405  : }

	ret	0
?Load@CObjectList@@QAEXXZ ENDP				; CObjectList::Load
_TEXT	ENDS
PUBLIC	?o_remove@CObjectList@@QAEXAAV?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@PAVCObject@@@Z ; CObjectList::o_remove
; Function compile flags: /Ogtpy
;	COMDAT ?o_remove@CObjectList@@QAEXAAV?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@PAVCObject@@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
_O$ = 12						; size = 4
?o_remove@CObjectList@@QAEXAAV?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@PAVCObject@@@Z PROC ; CObjectList::o_remove, COMDAT
; _this$ = ecx

; 67   : {

	push	ebx

; 68   : //.	if(O->ID()==1026)
; 69   : //.	{
; 70   : //.		Log("ahtung");
; 71   : //.	}
; 72   : 	Objects::iterator _i	= std::find(v.begin(),v.end(),O);

	mov	ebx, DWORD PTR _v$[esp]
	mov	eax, DWORD PTR [ebx+4]
	push	esi
	push	edi
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	mov	ecx, ebx
	mov	esi, eax
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	lea	edi, DWORD PTR _O$[esp+8]
	call	??$__find@PAPAVCObject@@PAV1@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@0ABQAV2@ABUrandom_access_iterator_tag@1@@Z ; stlp_std::priv::__find<CObject * *,CObject *>
	mov	esi, eax

; 73   : 	VERIFY					(_i!=v.end());
; 74   : 	v.erase					(_i);

	mov	eax, DWORD PTR [ebx+4]
	lea	ecx, DWORD PTR [esi+4]
	cmp	ecx, eax
	je	SHORT $LN41@o_remove
	sub	eax, ecx
	je	SHORT $LN41@o_remove
	push	eax
	push	ecx
	push	esi
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
$LN41@o_remove:
	add	DWORD PTR [ebx+4], -4			; fffffffcH
	mov	ebx, DWORD PTR [ebx+4]
	push	ebx
	call	??$_Destroy@PAX@stlp_std@@YAXPAPAX@Z	; stlp_std::_Destroy<void *>
	push	esi
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx

; 75   : //.	Msg("---o_remove[%s][%d]", O->cName().c_str(), O->ID() );
; 76   : }

	ret	8
?o_remove@CObjectList@@QAEXAAV?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@PAVCObject@@@Z ENDP ; CObjectList::o_remove
_TEXT	ENDS
PUBLIC	?FindObjectByCLS_ID@CObjectList@@QAEPAVCObject@@_K@Z ; CObjectList::FindObjectByCLS_ID
; Function compile flags: /Ogtpy
;	COMDAT ?FindObjectByCLS_ID@CObjectList@@QAEPAVCObject@@_K@Z
_TEXT	SEGMENT
_cls$ = 8						; size = 8
?FindObjectByCLS_ID@CObjectList@@QAEPAVCObject@@_K@Z PROC ; CObjectList::FindObjectByCLS_ID, COMDAT
; _this$ = ecx

; 52   : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx

; 53   : 	{
; 54   : 		Objects::iterator O	= std::find_if(objects_active.begin(),objects_active.end(),fClassEQ(cls));

	mov	eax, DWORD PTR [esi+262156]
	push	edi
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	lea	ecx, DWORD PTR [esi+262152]
	mov	ebx, eax
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	mov	edi, DWORD PTR _cls$[ebp+4]
	mov	ecx, DWORD PTR _cls$[ebp]
	push	edi
	push	ecx
	call	??$__find_if@PAPAVCObject@@VfClassEQ@@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@0VfClassEQ@@ABUrandom_access_iterator_tag@1@@Z ; stlp_std::priv::__find_if<CObject * *,fClassEQ>
	mov	ebx, eax

; 55   : 		if (O!=objects_active.end())	return *O;

	mov	eax, DWORD PTR [esi+262156]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 12					; 0000000cH
	cmp	ebx, eax
	je	SHORT $LN2@FindObject
	mov	eax, DWORD PTR [ebx]

; 60   : 	}
; 61   : 
; 62   : 	return	NULL;
; 63   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN2@FindObject:

; 56   : 	}
; 57   : 	{
; 58   : 		Objects::iterator O	= std::find_if(objects_sleeping.begin(),objects_sleeping.end(),fClassEQ(cls));

	mov	eax, DWORD PTR [esi+262168]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	lea	ecx, DWORD PTR [esi+262164]
	mov	ebx, eax
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	mov	edx, DWORD PTR _cls$[ebp]
	push	edi
	push	edx
	call	??$__find_if@PAPAVCObject@@VfClassEQ@@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@0VfClassEQ@@ABUrandom_access_iterator_tag@1@@Z ; stlp_std::priv::__find_if<CObject * *,fClassEQ>

; 59   : 		if (O!=objects_sleeping.end())	return *O;

	mov	esi, DWORD PTR [esi+262168]
	push	esi
	mov	edi, eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 12					; 0000000cH
	cmp	edi, eax
	je	SHORT $LN1@FindObject
	mov	eax, DWORD PTR [edi]

; 60   : 	}
; 61   : 
; 62   : 	return	NULL;
; 63   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN1@FindObject:
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?FindObjectByCLS_ID@CObjectList@@QAEPAVCObject@@_K@Z ENDP ; CObjectList::FindObjectByCLS_ID
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_object_list.h
_TEXT	ENDS
;	COMDAT ??0SRelcasePair@CObjectList@@QAE@PAHV?$FastDelegate1@PAVCObject@@X@fastdelegate@@@Z
_TEXT	SEGMENT
_cb$ = 8						; size = 8
??0SRelcasePair@CObjectList@@QAE@PAHV?$FastDelegate1@PAVCObject@@X@fastdelegate@@@Z PROC ; CObjectList::SRelcasePair::SRelcasePair, COMDAT
; _this$ = esi
; _id$ = eax

; 30   : 								SRelcasePair		(int* id, RELCASE_CALLBACK cb):m_ID(id),m_Callback(cb){}

	lea	ecx, DWORD PTR _cb$[esp-4]
	push	ecx
	lea	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], eax
	call	??0?$FastDelegate1@PAVCObject@@X@fastdelegate@@QAE@ABV01@@Z ; fastdelegate::FastDelegate1<CObject *,void>::FastDelegate1<CObject *,void>
	mov	eax, esi
	ret	8
??0SRelcasePair@CObjectList@@QAE@PAHV?$FastDelegate1@PAVCObject@@X@fastdelegate@@@Z ENDP ; CObjectList::SRelcasePair::SRelcasePair
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
;	COMDAT ??$__ucopy@PAUSRelcasePair@CObjectList@@PAU12@H@priv@stlp_std@@YAPAUSRelcasePair@CObjectList@@PAU23@00ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
??$__ucopy@PAUSRelcasePair@CObjectList@@PAU12@H@priv@stlp_std@@YAPAUSRelcasePair@CObjectList@@PAU23@00ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__ucopy<CObjectList::SRelcasePair *,CObjectList::SRelcasePair *,int>, COMDAT
; ___first$ = ecx
; ___last$ = eax
; ___result$ = edx

; 83   :                            _OutputIter __result, const random_access_iterator_tag &, _Distance*) {

	push	ebx
	mov	ebx, ecx

; 84   :   _OutputIter __cur = __result;
; 85   :   _STLP_TRY {
; 86   :     for (_Distance __n = __last - __first; __n > 0; --__n) {

	sub	eax, ebx
	push	esi
	mov	ecx, eax
	push	edi
	mov	edi, edx
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	test	esi, esi
	jle	SHORT $LN26@ucopy@15
	npad	1
$LL3@ucopy@15:

; 87   :       _Param_Construct(&*__cur, *__first);

	push	ebx
	push	edi
	call	??$_Param_Construct@USRelcasePair@CObjectList@@U12@@stlp_std@@YAXPAUSRelcasePair@CObjectList@@ABU12@@Z ; stlp_std::_Param_Construct<CObjectList::SRelcasePair,CObjectList::SRelcasePair>
	sub	esi, 1
	add	esp, 8

; 88   :       ++__first;

	add	ebx, 12					; 0000000cH

; 89   :       ++__cur;

	add	edi, 12					; 0000000cH
	test	esi, esi
	jg	SHORT $LL3@ucopy@15
$LN26@ucopy@15:

; 90   :     }
; 91   :     return __cur;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 92   :   }
; 93   :   _STLP_UNWIND(_STLP_STD::_Destroy_Range(__result, __cur))
; 94   :   _STLP_RET_AFTER_THROW(__cur)
; 95   : }

	ret	0
??$__ucopy@PAUSRelcasePair@CObjectList@@PAU12@H@priv@stlp_std@@YAPAUSRelcasePair@CObjectList@@PAU23@00ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__ucopy<CObjectList::SRelcasePair *,CObjectList::SRelcasePair *,int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__ufill@PAUSRelcasePair@CObjectList@@U12@H@priv@stlp_std@@YAXPAUSRelcasePair@CObjectList@@0ABU23@ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
??$__ufill@PAUSRelcasePair@CObjectList@@U12@H@priv@stlp_std@@YAXPAUSRelcasePair@CObjectList@@0ABU23@ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__ufill<CObjectList::SRelcasePair *,CObjectList::SRelcasePair,int>, COMDAT
; ___first$ = ecx
; ___last$ = eax
; ___x$ = ebx

; 246  :                     const _Tp& __x, const random_access_iterator_tag &, _Distance*) {

	push	esi
	push	edi
	mov	edi, ecx

; 247  :   _ForwardIter __cur = __first;
; 248  :   _STLP_TRY {
; 249  :     for (_Distance __n = __last - __first; __n > 0; --__n, ++__cur)

	sub	eax, edi
	mov	ecx, eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	test	esi, esi
	jle	SHORT $LN1@ufill@13
	npad	4
$LL3@ufill@13:

; 250  :       _Param_Construct(&*__cur, __x);

	push	ebx
	push	edi
	call	??$_Param_Construct@USRelcasePair@CObjectList@@U12@@stlp_std@@YAXPAUSRelcasePair@CObjectList@@ABU12@@Z ; stlp_std::_Param_Construct<CObjectList::SRelcasePair,CObjectList::SRelcasePair>
	sub	esi, 1
	add	esp, 8
	add	edi, 12					; 0000000cH
	test	esi, esi
	jg	SHORT $LL3@ufill@13
$LN1@ufill@13:
	pop	edi
	pop	esi

; 251  :   }
; 252  :   _STLP_UNWIND(_STLP_STD::_Destroy_Range(__first, __cur))
; 253  : }

	ret	0
??$__ufill@PAUSRelcasePair@CObjectList@@U12@H@priv@stlp_std@@YAXPAUSRelcasePair@CObjectList@@0ABU23@ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__ufill<CObjectList::SRelcasePair *,CObjectList::SRelcasePair,int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__ucopy_ptrs@PAUSRelcasePair@CObjectList@@PAU12@@priv@stlp_std@@YAPAUSRelcasePair@CObjectList@@PAU23@00ABU__false_type@1@@Z
_TEXT	SEGMENT
??$__ucopy_ptrs@PAUSRelcasePair@CObjectList@@PAU12@@priv@stlp_std@@YAPAUSRelcasePair@CObjectList@@PAU23@00ABU__false_type@1@@Z PROC ; stlp_std::priv::__ucopy_ptrs<CObjectList::SRelcasePair *,CObjectList::SRelcasePair *>, COMDAT
; ___first$ = edx
; ___last$ = eax
; ___result$ = ecx

; 113  : { return __ucopy(__first, __last, __result, random_access_iterator_tag(), (ptrdiff_t*)0); }

	push	ebx
	push	esi
	mov	ebx, edx
	sub	eax, ebx
	push	edi
	mov	edi, ecx
	mov	ecx, eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	test	esi, esi
	jle	SHORT $LN28@ucopy_ptrs@29
	sub	ebx, edi
$LL5@ucopy_ptrs@29:
	lea	eax, DWORD PTR [ebx+edi]
	push	eax
	push	edi
	call	??$_Param_Construct@USRelcasePair@CObjectList@@U12@@stlp_std@@YAXPAUSRelcasePair@CObjectList@@ABU12@@Z ; stlp_std::_Param_Construct<CObjectList::SRelcasePair,CObjectList::SRelcasePair>
	sub	esi, 1
	add	esp, 8
	add	edi, 12					; 0000000cH
	test	esi, esi
	jg	SHORT $LL5@ucopy_ptrs@29
$LN28@ucopy_ptrs@29:
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
	ret	0
??$__ucopy_ptrs@PAUSRelcasePair@CObjectList@@PAU12@@priv@stlp_std@@YAPAUSRelcasePair@CObjectList@@PAU23@00ABU__false_type@1@@Z ENDP ; stlp_std::priv::__ucopy_ptrs<CObjectList::SRelcasePair *,CObjectList::SRelcasePair *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__uninitialized_fill_n@PAUSRelcasePair@CObjectList@@IU12@@priv@stlp_std@@YAPAUSRelcasePair@CObjectList@@PAU23@IABU23@@Z
_TEXT	SEGMENT
___x$ = 8						; size = 4
??$__uninitialized_fill_n@PAUSRelcasePair@CObjectList@@IU12@@priv@stlp_std@@YAPAUSRelcasePair@CObjectList@@PAU23@IABU23@@Z PROC ; stlp_std::priv::__uninitialized_fill_n<CObjectList::SRelcasePair *,unsigned int,CObjectList::SRelcasePair>, COMDAT
; ___first$ = ecx
; ___n$ = eax

; 313  : inline _ForwardIter __uninitialized_fill_n(_ForwardIter __first, _Size __n, const _Tp& __x) {

	push	ebx
	push	ebp
	push	esi
	mov	ebp, DWORD PTR ___x$[esp+8]

; 314  :   _ForwardIter __last = __first + __n;

	lea	eax, DWORD PTR [eax+eax*2]
	push	edi
	mov	edi, ecx
	lea	ebx, DWORD PTR [edi+eax*4]

; 315  :   __ufill(__first, __last, __x, random_access_iterator_tag(), (ptrdiff_t*)0);

	mov	ecx, ebx
	sub	ecx, edi
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	test	esi, esi
	jle	SHORT $LN28@uninitiali@31
$LL5@uninitiali@31:
	push	ebp
	push	edi
	call	??$_Param_Construct@USRelcasePair@CObjectList@@U12@@stlp_std@@YAXPAUSRelcasePair@CObjectList@@ABU12@@Z ; stlp_std::_Param_Construct<CObjectList::SRelcasePair,CObjectList::SRelcasePair>
	sub	esi, 1
	add	esp, 8
	add	edi, 12					; 0000000cH
	test	esi, esi
	jg	SHORT $LL5@uninitiali@31
$LN28@uninitiali@31:
	pop	edi
	pop	esi
	pop	ebp

; 316  :   return __last;

	mov	eax, ebx
	pop	ebx

; 317  : }

	ret	0
??$__uninitialized_fill_n@PAUSRelcasePair@CObjectList@@IU12@@priv@stlp_std@@YAPAUSRelcasePair@CObjectList@@PAU23@IABU23@@Z ENDP ; stlp_std::priv::__uninitialized_fill_n<CObjectList::SRelcasePair *,unsigned int,CObjectList::SRelcasePair>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__uninitialized_move@PAUSRelcasePair@CObjectList@@PAU12@U__false_type@stlp_std@@@priv@stlp_std@@YAPAUSRelcasePair@CObjectList@@PAU23@00U__false_type@1@ABU41@@Z
_TEXT	SEGMENT
___trivial_ucpy$ = 8					; size = 1
??$__uninitialized_move@PAUSRelcasePair@CObjectList@@PAU12@U__false_type@stlp_std@@@priv@stlp_std@@YAPAUSRelcasePair@CObjectList@@PAU23@00U__false_type@1@ABU41@@Z PROC ; stlp_std::priv::__uninitialized_move<CObjectList::SRelcasePair *,CObjectList::SRelcasePair *,stlp_std::__false_type>, COMDAT
; ___first$ = edx
; ___last$ = eax
; ___result$ = ecx

; 414  : { return __ucopy_ptrs(__first, __last, __result, __trivial_ucpy); }

	push	ebx
	push	esi
	mov	ebx, edx
	sub	eax, ebx
	push	edi
	mov	edi, ecx
	mov	ecx, eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	test	esi, esi
	jle	SHORT $LN30@uninitiali@32
	sub	ebx, edi
$LL7@uninitiali@32:
	lea	eax, DWORD PTR [ebx+edi]
	push	eax
	push	edi
	call	??$_Param_Construct@USRelcasePair@CObjectList@@U12@@stlp_std@@YAXPAUSRelcasePair@CObjectList@@ABU12@@Z ; stlp_std::_Param_Construct<CObjectList::SRelcasePair,CObjectList::SRelcasePair>
	sub	esi, 1
	add	esp, 8
	add	edi, 12					; 0000000cH
	test	esi, esi
	jg	SHORT $LL7@uninitiali@32
$LN30@uninitiali@32:
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
	ret	0
??$__uninitialized_move@PAUSRelcasePair@CObjectList@@PAU12@U__false_type@stlp_std@@@priv@stlp_std@@YAPAUSRelcasePair@CObjectList@@PAU23@00U__false_type@1@ABU41@@Z ENDP ; stlp_std::priv::__uninitialized_move<CObjectList::SRelcasePair *,CObjectList::SRelcasePair *,stlp_std::__false_type>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$_Copy_Construct@USRelcasePair@CObjectList@@@stlp_std@@YAXPAUSRelcasePair@CObjectList@@ABU12@@Z
_TEXT	SEGMENT
??$_Copy_Construct@USRelcasePair@CObjectList@@@stlp_std@@YAXPAUSRelcasePair@CObjectList@@ABU12@@Z PROC ; stlp_std::_Copy_Construct<CObjectList::SRelcasePair>, COMDAT
; ___p$ = ecx
; ___val$ = eax

; 110  : #if defined (_STLP_DEBUG_UNINITIALIZED)
; 111  :   memset((char*)__p, _STLP_SHRED_BYTE, sizeof(_Tp));
; 112  : #endif
; 113  :   _STLP_PLACEMENT_NEW (__p) _Tp(__val);

	test	ecx, ecx
	je	SHORT $LN3@Copy_Const@27
	push	eax
	call	??0SRelcasePair@CObjectList@@QAE@ABU01@@Z
$LN3@Copy_Const@27:

; 114  : }

	ret	0
??$_Copy_Construct@USRelcasePair@CObjectList@@@stlp_std@@YAXPAUSRelcasePair@CObjectList@@ABU12@@Z ENDP ; stlp_std::_Copy_Construct<CObjectList::SRelcasePair>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.c
_TEXT	ENDS
;	COMDAT ?_M_insert_overflow_aux@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXPAUSRelcasePair@CObjectList@@ABU45@ABU__false_type@3@I_N@Z
_TEXT	SEGMENT
___fill_len$ = -16					; size = 4
___len$ = -12						; size = 4
___new_start$ = -8					; size = 4
tv227 = -4						; size = 4
___old_size$ = 8					; size = 4
_this$ = 8						; size = 4
___x$ = 12						; size = 4
?_M_insert_overflow_aux@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXPAUSRelcasePair@CObjectList@@ABU45@ABU__false_type@3@I_N@Z PROC ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_M_insert_overflow_aux, COMDAT
; ___pos$ = eax

; 84   :                                                  size_type __fill_len, bool __atend ) {

	sub	esp, 16					; 00000010H
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+20]
	push	esi
	push	edi

; 85   :   const size_type __old_size = size();

	mov	ecx, ebp
	mov	esi, eax
	mov	DWORD PTR ___fill_len$[esp+32], 1
	call	?size@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QBEIXZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::size
	mov	DWORD PTR ___old_size$[esp+28], eax

; 86   :   size_type __len = __old_size + (max)(__old_size, __fill_len);

	lea	eax, DWORD PTR ___fill_len$[esp+32]
	push	eax
	lea	ecx, DWORD PTR ___old_size$[esp+32]
	push	ecx
	call	??$max@I@stlp_std@@YAABIABI0@Z		; stlp_std::max<unsigned int>
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR ___old_size$[esp+36]
	add	esp, 8

; 87   : 
; 88   :   pointer __new_start = this->_M_end_of_storage.allocate(__len, __len);

	lea	edx, DWORD PTR ___len$[esp+32]
	push	edx
	lea	ecx, DWORD PTR [ebp+8]
	push	eax
	mov	DWORD PTR ___len$[esp+40], eax
	mov	DWORD PTR tv227[esp+40], ecx
	call	?allocate@?$_STLP_alloc_proxy@PAUSRelcasePair@CObjectList@@U12@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEPAUSRelcasePair@CObjectList@@IAAI@Z ; stlp_std::priv::_STLP_alloc_proxy<CObjectList::SRelcasePair *,CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::allocate

; 89   :   pointer __new_finish = __new_start;
; 90   :   _STLP_TRY {
; 91   :     __new_finish = _STLP_PRIV __uninitialized_move(this->_M_start, __pos, __new_start, _TrivialUCopy(), _Movable());

	mov	edi, DWORD PTR [ebp]
	sub	esi, edi
	mov	DWORD PTR ___new_start$[esp+32], eax
	mov	ebx, eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	esi
	sar	edx, 1
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	test	esi, esi
	jle	SHORT $LN26@M_insert_o@21
	npad	3
$LL28@M_insert_o@21:
	push	edi
	push	ebx
	call	??$_Param_Construct@USRelcasePair@CObjectList@@U12@@stlp_std@@YAXPAUSRelcasePair@CObjectList@@ABU12@@Z ; stlp_std::_Param_Construct<CObjectList::SRelcasePair,CObjectList::SRelcasePair>
	sub	esi, 1
	add	esp, 8
	add	edi, 12					; 0000000cH
	add	ebx, 12					; 0000000cH
	test	esi, esi
	jg	SHORT $LL28@M_insert_o@21
$LN26@M_insert_o@21:

; 92   :     // handle insertion
; 93   :     if (__fill_len == 1) {

	mov	eax, DWORD PTR ___fill_len$[esp+32]
	cmp	eax, 1
	jne	SHORT $LN3@M_insert_o@21

; 94   :       _Copy_Construct(__new_finish, __x);

	test	ebx, ebx
	je	SHORT $LN51@M_insert_o@21
	mov	eax, DWORD PTR ___x$[esp+28]
	push	eax
	mov	ecx, ebx
	call	??0SRelcasePair@CObjectList@@QAE@ABU01@@Z
$LN51@M_insert_o@21:

; 95   :       ++__new_finish;

	lea	esi, DWORD PTR [ebx+12]

; 96   :     } else

	jmp	SHORT $LN1@M_insert_o@21
$LN3@M_insert_o@21:

; 97   :       __new_finish = _STLP_PRIV __uninitialized_fill_n(__new_finish, __fill_len, __x);

	mov	ecx, DWORD PTR ___x$[esp+28]
	push	ecx
	mov	ecx, ebx
	call	??$__uninitialized_fill_n@PAUSRelcasePair@CObjectList@@IU12@@priv@stlp_std@@YAPAUSRelcasePair@CObjectList@@PAU23@IABU23@@Z ; stlp_std::priv::__uninitialized_fill_n<CObjectList::SRelcasePair *,unsigned int,CObjectList::SRelcasePair>
	add	esp, 4
	mov	esi, eax
$LN1@M_insert_o@21:

; 98   :     if (!__atend)
; 99   :       __new_finish = _STLP_PRIV __uninitialized_move(__pos, this->_M_finish, __new_finish, _TrivialUCopy(), _Movable()); // copy remainder
; 100  :   }
; 101  :   _STLP_UNWIND((_STLP_STD::_Destroy_Range(__new_start,__new_finish),
; 102  :                this->_M_end_of_storage.deallocate(__new_start,__len)))
; 103  :   _M_clear_after_move();

	mov	eax, ebp
	call	?_M_clear_after_move@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXXZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_M_clear_after_move

; 104  :   _M_set(__new_start, __new_finish, __new_start + __len);

	mov	eax, DWORD PTR ___len$[esp+32]
	mov	ecx, DWORD PTR ___new_start$[esp+32]
	pop	edi
	mov	DWORD PTR [ebp+4], esi
	lea	edx, DWORD PTR [eax+eax*2]
	pop	esi
	mov	DWORD PTR [ebp], ecx
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR tv227[esp+24]
	pop	ebp
	mov	DWORD PTR [ecx], eax
	pop	ebx

; 105  : }

	add	esp, 16					; 00000010H
	ret	8
?_M_insert_overflow_aux@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXPAUSRelcasePair@CObjectList@@ABU45@ABU__false_type@3@I_N@Z ENDP ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_M_insert_overflow_aux
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?_M_insert_overflow@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXPAUSRelcasePair@CObjectList@@ABU45@ABU__false_type@3@I_N@Z
_TEXT	SEGMENT
___pos$ = 8						; size = 4
?_M_insert_overflow@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXPAUSRelcasePair@CObjectList@@ABU45@ABU__false_type@3@I_N@Z PROC ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_M_insert_overflow, COMDAT
; _this$ = ecx
; ___x$ = eax

; 161  :   { _M_insert_overflow_aux(__pos, __x, _Movable(), __fill_len, __atend); }

	push	eax
	mov	eax, DWORD PTR ___pos$[esp]
	push	ecx
	call	?_M_insert_overflow_aux@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXPAUSRelcasePair@CObjectList@@ABU45@ABU__false_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_M_insert_overflow_aux
	ret	4
?_M_insert_overflow@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXPAUSRelcasePair@CObjectList@@ABU45@ABU__false_type@3@I_N@Z ENDP ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_M_insert_overflow
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?push_back@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEXABUSRelcasePair@CObjectList@@@Z
_TEXT	SEGMENT
?push_back@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEXABUSRelcasePair@CObjectList@@@Z PROC ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::push_back, COMDAT
; _this$ = esi
; ___x$ = ecx

; 361  : #endif /*!_STLP_DONT_SUP_DFLT_PARAM && !_STLP_NO_ANACHRONISMS*/
; 362  :     if (this->_M_finish != this->_M_end_of_storage._M_data) {

	mov	eax, DWORD PTR [esi+4]
	cmp	eax, DWORD PTR [esi+8]
	je	SHORT $LN2@push_back@28

; 363  :       _Copy_Construct(this->_M_finish, __x);

	test	eax, eax
	je	SHORT $LN7@push_back@28
	push	ecx
	mov	ecx, eax
	call	??0SRelcasePair@CObjectList@@QAE@ABU01@@Z
$LN7@push_back@28:

; 364  :       ++this->_M_finish;

	add	DWORD PTR [esi+4], 12			; 0000000cH

; 368  :   }

	ret	0
$LN2@push_back@28:

; 365  :     }
; 366  :     else
; 367  :       _M_insert_overflow(this->_M_finish, __x, _TrivialCopy(), 1UL, true);

	push	ecx
	push	esi
	call	?_M_insert_overflow_aux@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXPAUSRelcasePair@CObjectList@@ABU45@ABU__false_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_M_insert_overflow_aux

; 368  :   }

	ret	0
?push_back@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEXABUSRelcasePair@CObjectList@@@Z ENDP ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::push_back
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?erase@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@PAPAV3@0@Z
_TEXT	SEGMENT
?erase@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@PAPAV3@0@Z PROC ; stlp_std::vector<CObject *,xalloc<CObject *> >::erase, COMDAT
; _this$ = ebx
; ___first$ = edi
; ___last$ = eax

; 208  :     return cast_traits::to_value_type_ptr(_M_impl.erase(cast_traits::to_storage_type_ptr(__first),
; 209  :                                                         cast_traits::to_storage_type_ptr(__last)));

	cmp	edi, eax
	je	SHORT $LN12@erase@51
	push	esi
	mov	esi, DWORD PTR [ebx+4]
	sub	esi, eax
	je	SHORT $LN20@erase@51
	push	esi
	push	eax
	push	edi
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
	pop	esi
	push	edi
	mov	DWORD PTR [ebx+4], eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4

; 210  :   }

	ret	0

; 208  :     return cast_traits::to_value_type_ptr(_M_impl.erase(cast_traits::to_storage_type_ptr(__first),
; 209  :                                                         cast_traits::to_storage_type_ptr(__last)));

$LN20@erase@51:
	mov	eax, edi
	mov	DWORD PTR [ebx+4], eax
	pop	esi
$LN12@erase@51:
	push	edi
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4

; 210  :   }

	ret	0
?erase@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@PAPAV3@0@Z ENDP ; stlp_std::vector<CObject *,xalloc<CObject *> >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEXABUSRelcasePair@CObjectList@@@Z
_TEXT	SEGMENT
?push_back@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEXABUSRelcasePair@CObjectList@@@Z PROC ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::push_back, COMDAT
; _this$ = esi
; ___x$ = ecx

; 171  :   { _M_impl.push_back(cast_traits::to_storage_type_cref(__x)); }

	mov	eax, DWORD PTR [esi+4]
	cmp	eax, DWORD PTR [esi+8]
	je	SHORT $LN6@push_back@29
	test	eax, eax
	je	SHORT $LN11@push_back@29
	push	ecx
	mov	ecx, eax
	call	??0SRelcasePair@CObjectList@@QAE@ABU01@@Z
$LN11@push_back@29:
	add	DWORD PTR [esi+4], 12			; 0000000cH
	ret	0
$LN6@push_back@29:
	push	ecx
	push	esi
	call	?_M_insert_overflow_aux@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXPAUSRelcasePair@CObjectList@@ABU45@ABU__false_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_M_insert_overflow_aux
	ret	0
?push_back@?$vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@stlp_std@@QAEXABUSRelcasePair@CObjectList@@@Z ENDP ; stlp_std::vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::push_back
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?clear_not_free@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?clear_not_free@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEXXZ PROC ; xr_vector<CObject *,xalloc<CObject *> >::clear_not_free, COMDAT

; 129  : 	void	clear_not_free		()									{ erase(begin(),end());			}

	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+4]
	mov	eax, DWORD PTR [ebp+4]
	push	edi
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	mov	ecx, ebp
	mov	edi, eax
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	mov	ebx, eax
	cmp	ebx, edi
	je	SHORT $LN30@clear_not_@6
	push	esi
	mov	esi, DWORD PTR [ebp+4]
	sub	esi, edi
	je	SHORT $LN39@clear_not_@6
	push	esi
	push	edi
	push	ebx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN39@clear_not_@6:
	mov	DWORD PTR [ebp+4], eax
	pop	esi
$LN30@clear_not_@6:
	push	ebx
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	pop	edi
	pop	ebp
	pop	ebx
	ret	4
?clear_not_free@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEXXZ ENDP ; xr_vector<CObject *,xalloc<CObject *> >::clear_not_free
_TEXT	ENDS
PUBLIC	?dump_all_objects@CObjectList@@QAE_NXZ		; CObjectList::dump_all_objects
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_object_list.cpp
;	COMDAT ?dump_all_objects@CObjectList@@QAE_NXZ
_TEXT	SEGMENT
?dump_all_objects@CObjectList@@QAE_NXZ PROC		; CObjectList::dump_all_objects, COMDAT
; _this$ = ecx

; 545  : {

	push	esi
	mov	esi, ecx
	push	edi

; 546  : 	dump_list(destroy_queue,"destroy_queue");

	lea	edi, DWORD PTR [esi+262140]
	mov	ecx, edi
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	mov	eax, DWORD PTR [edi+4]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr

; 547  : 	dump_list(objects_active,"objects_active");

	lea	edi, DWORD PTR [esi+262152]
	add	esp, 4
	mov	ecx, edi
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	mov	ecx, DWORD PTR [edi+4]
	push	ecx
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr

; 548  : 	dump_list(objects_sleeping,"objects_sleeping");

	lea	edi, DWORD PTR [esi+262164]
	add	esp, 4
	mov	ecx, edi
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	mov	edx, DWORD PTR [edi+4]
	push	edx
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr

; 549  : 	dump_list(m_crows[0],"m_crows[0]");

	lea	edi, DWORD PTR [esi+262176]
	add	esp, 4
	mov	ecx, edi
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	mov	eax, DWORD PTR [edi+4]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr

; 550  : 	dump_list(m_crows[1],"m_crows[1]");

	add	esi, 262188				; 0004002cH
	add	esp, 4
	mov	ecx, esi
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	pop	edi

; 551  : 	return false;

	xor	al, al
	pop	esi

; 552  : }

	ret	0
?dump_all_objects@CObjectList@@QAE_NXZ ENDP		; CObjectList::dump_all_objects
_TEXT	ENDS
PUBLIC	?relcase_unregister@CObjectList@@QAEXPAH@Z	; CObjectList::relcase_unregister
; Function compile flags: /Ogtpy
;	COMDAT ?relcase_unregister@CObjectList@@QAEXPAH@Z
_TEXT	SEGMENT
_ID$ = 8						; size = 4
?relcase_unregister@CObjectList@@QAEXPAH@Z PROC		; CObjectList::relcase_unregister, COMDAT
; _this$ = ecx

; 521  : {

	push	ebx
	push	ebp
	push	esi

; 522  : 	VERIFY							(m_relcase_callbacks[*ID].m_ID==ID);
; 523  : 	m_relcase_callbacks[*ID]		= m_relcase_callbacks.back();

	lea	esi, DWORD PTR [ecx+262204]
	push	edi
	mov	ecx, esi
	call	?end@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEPAUSRelcasePair@CObjectList@@XZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::end
	mov	ebp, DWORD PTR _ID$[esp+12]
	mov	ebx, DWORD PTR [ebp]
	mov	edi, eax
	mov	ecx, esi
	sub	edi, 12					; 0000000cH
	call	?begin@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEPAUSRelcasePair@CObjectList@@XZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::begin
	lea	ecx, DWORD PTR [ebx+ebx*2]
	push	edi
	lea	ecx, DWORD PTR [eax+ecx*4]
	call	??4SRelcasePair@CObjectList@@QAEAAU01@ABU01@@Z

; 524  : 	*m_relcase_callbacks.back().m_ID= *ID;

	mov	ecx, esi
	call	?end@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEPAUSRelcasePair@CObjectList@@XZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::end
	mov	edx, DWORD PTR [eax-12]
	sub	eax, 12					; 0000000cH
	mov	eax, DWORD PTR [ebp]
	pop	edi
	mov	DWORD PTR [edx], eax

; 525  : 	m_relcase_callbacks.pop_back	();

	add	DWORD PTR [esi+4], -12			; fffffff4H
	pop	esi
	pop	ebp
	pop	ebx

; 526  : }

	ret	4
?relcase_unregister@CObjectList@@QAEXPAH@Z ENDP		; CObjectList::relcase_unregister
_TEXT	ENDS
PUBLIC	?relcase_register@CObjectList@@QAEXV?$FastDelegate1@PAVCObject@@X@fastdelegate@@PAH@Z ; CObjectList::relcase_register
; Function compile flags: /Ogtpy
;	COMDAT ?relcase_register@CObjectList@@QAEXV?$FastDelegate1@PAVCObject@@X@fastdelegate@@PAH@Z
_TEXT	SEGMENT
$T392544 = -20						; size = 8
$T392512 = -12						; size = 12
_cb$ = 8						; size = 8
_ID$ = 16						; size = 4
?relcase_register@CObjectList@@QAEXV?$FastDelegate1@PAVCObject@@X@fastdelegate@@PAH@Z PROC ; CObjectList::relcase_register, COMDAT
; _this$ = ecx

; 509  : {

	sub	esp, 20					; 00000014H
	push	esi

; 510  : #ifdef DEBUG
; 511  : 	RELCASE_CALLBACK_VEC::iterator It = std::find(	m_relcase_callbacks.begin(),
; 512  : 													m_relcase_callbacks.end(),
; 513  : 													cb);
; 514  : 	VERIFY(It==m_relcase_callbacks.end());
; 515  : #endif
; 516  : 	*ID								= m_relcase_callbacks.size();

	lea	esi, DWORD PTR [ecx+262204]
	push	edi
	mov	ecx, esi
	call	?size@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QBEIXZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::size
	mov	edi, DWORD PTR _ID$[esp+24]
	mov	DWORD PTR [edi], eax

; 517  : 	m_relcase_callbacks.push_back	(SRelcasePair(ID,cb));

	lea	eax, DWORD PTR _cb$[esp+24]
	push	eax
	lea	ecx, DWORD PTR $T392544[esp+32]
	call	??0?$FastDelegate1@PAVCObject@@X@fastdelegate@@QAE@ABV01@@Z ; fastdelegate::FastDelegate1<CObject *,void>::FastDelegate1<CObject *,void>
	lea	ecx, DWORD PTR $T392544[esp+28]
	push	ecx
	lea	ecx, DWORD PTR $T392512[esp+36]
	mov	DWORD PTR $T392512[esp+32], edi
	call	??0?$FastDelegate1@PAVCObject@@X@fastdelegate@@QAE@ABV01@@Z ; fastdelegate::FastDelegate1<CObject *,void>::FastDelegate1<CObject *,void>
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, DWORD PTR [esi+8]
	je	SHORT $LN36@relcase_re
	test	eax, eax
	je	SHORT $LN41@relcase_re
	lea	edx, DWORD PTR $T392512[esp+28]
	push	edx
	mov	ecx, eax
	call	??0SRelcasePair@CObjectList@@QAE@ABU01@@Z
$LN41@relcase_re:
	add	DWORD PTR [esi+4], 12			; 0000000cH
	pop	edi
	pop	esi

; 518  : }

	add	esp, 20					; 00000014H
	ret	12					; 0000000cH

; 517  : 	m_relcase_callbacks.push_back	(SRelcasePair(ID,cb));

$LN36@relcase_re:
	lea	ecx, DWORD PTR $T392512[esp+28]
	push	ecx
	push	esi
	call	?_M_insert_overflow_aux@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@AAEXPAUSRelcasePair@CObjectList@@ABU45@ABU__false_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_M_insert_overflow_aux
	pop	edi
	pop	esi

; 518  : }

	add	esp, 20					; 00000014H
	ret	12					; 0000000cH
?relcase_register@CObjectList@@QAEXV?$FastDelegate1@PAVCObject@@X@fastdelegate@@PAH@Z ENDP ; CObjectList::relcase_register
_TEXT	ENDS
PUBLIC	?clear_crow_vec@CObjectList@@CAXAAV?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@@Z ; CObjectList::clear_crow_vec
; Function compile flags: /Ogtpy
;	COMDAT ?clear_crow_vec@CObjectList@@CAXAAV?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@@Z
_TEXT	SEGMENT
_o$ = 8							; size = 4
?clear_crow_vec@CObjectList@@CAXAAV?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@@Z PROC ; CObjectList::clear_crow_vec, COMDAT

; 180  : {

	push	ebx
	push	ebp
	push	esi
	push	edi

; 181  : 	for (u32 _it=0; _it<o.size(); _it++) {

	mov	edi, DWORD PTR _o$[esp+12]
	mov	ecx, edi
	xor	esi, esi
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	test	eax, eax
	jbe	SHORT $LN1@clear_crow
	mov	ebx, -1073741825			; bfffffffH
	npad	6
$LL3@clear_crow:

; 182  : //		Msg				("[%d][0x%08x]IAmNotACrowAnyMore (clear_crow_vec)", Device.dwFrame, dynamic_cast<void*>(o[_it]));
; 183  : 		o[_it]->IAmNotACrowAnyMore();

	push	esi
	mov	ecx, edi
	call	??A?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEAAPAVCObject@@I@Z ; xr_vector<CObject *,xalloc<CObject *> >::operator[]
	mov	eax, DWORD PTR [eax]
	and	DWORD PTR [eax+164], ebx
	mov	ecx, edi
	add	esi, 1
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	cmp	esi, eax
	jb	SHORT $LL3@clear_crow
$LN1@clear_crow:

; 184  : 	}
; 185  : 	o.clear_not_free();

	mov	eax, DWORD PTR [edi+4]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	mov	ecx, edi
	mov	ebx, eax
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	mov	ebp, eax
	cmp	ebp, ebx
	je	SHORT $LN56@clear_crow
	mov	esi, DWORD PTR [edi+4]
	sub	esi, ebx
	je	SHORT $LN64@clear_crow
	push	esi
	push	ebx
	push	ebp
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
	push	ebp
	mov	DWORD PTR [edi+4], eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 186  : }

	ret	0

; 184  : 	}
; 185  : 	o.clear_not_free();

$LN64@clear_crow:
	mov	eax, ebp
	mov	DWORD PTR [edi+4], eax
$LN56@clear_crow:
	push	ebp
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 186  : }

	ret	0
?clear_crow_vec@CObjectList@@CAXAAV?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@@Z ENDP ; CObjectList::clear_crow_vec
_TEXT	ENDS
PUBLIC	??1CObjectList@@QAE@XZ				; CObjectList::~CObjectList
; Function compile flags: /Ogtpy
;	COMDAT ??1CObjectList@@QAE@XZ
_TEXT	SEGMENT
??1CObjectList@@QAE@XZ PROC				; CObjectList::~CObjectList, COMDAT
; _this$ = ecx

; 32   : 	R_ASSERT				( objects_active.empty()	);

	cmp	BYTE PTR ?ignore_always@?3???1CObjectList@@QAE@XZ@4_NA, 0
	push	ebx
	push	ebp
	push	esi
	mov	esi, DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
	push	edi
	mov	edi, ecx
	jne	SHORT $LN11@CObjectLis@2
	lea	ecx, DWORD PTR [edi+262152]
	call	?empty@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBE_NXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::empty
	test	al, al
	jne	SHORT $LN11@CObjectLis@2
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3???1CObjectList@@QAE@XZ@4_NA
	push	OFFSET ??_C@_0BK@DCIPJNGL@CObjectList?3?3?$HOCObjectList?$AA@
	push	32					; 00000020H
	push	OFFSET ??_C@_0DH@PPDLGENG@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BH@PDHHJNBL@objects_active?4empty?$CI?$CJ?$AA@
	call	esi
$LN11@CObjectLis@2:

; 33   : 	R_ASSERT				( objects_sleeping.empty()	);

	cmp	BYTE PTR ?ignore_always@?7???1CObjectList@@QAE@XZ@4_NA, 0
	jne	SHORT $LN7@CObjectLis@2
	lea	ecx, DWORD PTR [edi+262164]
	call	?empty@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBE_NXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::empty
	test	al, al
	jne	SHORT $LN7@CObjectLis@2
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?7???1CObjectList@@QAE@XZ@4_NA
	push	OFFSET ??_C@_0BK@DCIPJNGL@CObjectList?3?3?$HOCObjectList?$AA@
	push	33					; 00000021H
	push	OFFSET ??_C@_0DH@PPDLGENG@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BJ@IIMKBKBD@objects_sleeping?4empty?$CI?$CJ?$AA@
	call	esi
$LN7@CObjectLis@2:

; 34   : 	R_ASSERT				( destroy_queue.empty()		);

	cmp	BYTE PTR ?ignore_always@?M@???1CObjectList@@QAE@XZ@4_NA, 0
	jne	SHORT $LN3@CObjectLis@2
	lea	ecx, DWORD PTR [edi+262140]
	call	?empty@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBE_NXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::empty
	test	al, al
	jne	SHORT $LN3@CObjectLis@2
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?M@???1CObjectList@@QAE@XZ@4_NA
	push	OFFSET ??_C@_0BK@DCIPJNGL@CObjectList?3?3?$HOCObjectList?$AA@
	push	34					; 00000022H
	push	OFFSET ??_C@_0DH@PPDLGENG@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BG@HEEBHJNA@destroy_queue?4empty?$CI?$CJ?$AA@
	call	esi
$LN3@CObjectLis@2:

; 35   : //.	R_ASSERT				( map_NETID.empty()			);
; 36   : }

	lea	ecx, DWORD PTR [edi+262204]
	call	??1?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::~_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >
	mov	ebp, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	lea	esi, DWORD PTR [edi+262200]
	mov	ebx, 1
	npad	6
$LL32@CObjectLis@2:
	mov	eax, DWORD PTR [esi-12]
	sub	esi, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN72@CObjectLis@2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebp
$LN72@CObjectLis@2:
	sub	ebx, 1
	jns	SHORT $LL32@CObjectLis@2
	mov	eax, DWORD PTR [edi+262164]
	test	eax, eax
	je	SHORT $LN112@CObjectLis@2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebp
$LN112@CObjectLis@2:
	mov	eax, DWORD PTR [edi+262152]
	test	eax, eax
	je	SHORT $LN152@CObjectLis@2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebp
$LN152@CObjectLis@2:
	mov	edi, DWORD PTR [edi+262140]
	test	edi, edi
	je	SHORT $LN192@CObjectLis@2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	ebp
$LN192@CObjectLis@2:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
??1CObjectList@@QAE@XZ ENDP				; CObjectList::~CObjectList
PUBLIC	?Destroy@CObjectList@@QAEXPAVCObject@@@Z	; CObjectList::Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?Destroy@CObjectList@@QAEXPAVCObject@@@Z
_TEXT	SEGMENT
_e$127335 = -4						; size = 4
_O$ = 8							; size = 4
?Destroy@CObjectList@@QAEXPAVCObject@@@Z PROC		; CObjectList::Destroy, COMDAT
; _this$ = ecx

; 450  : {

	push	ecx

; 451  : 	if (0==O)								return;

	mov	eax, DWORD PTR _O$[esp]
	test	eax, eax
	push	ebp
	mov	ebp, ecx
	je	$LN322@Destroy@11

; 452  : 	net_Unregister							(O);

	movzx	eax, WORD PTR [eax+164]
	cmp	ax, 65535				; 0000ffffH
	jae	SHORT $LN34@Destroy@11
	movzx	eax, ax
	mov	DWORD PTR [ebp+eax*4], 0
$LN34@Destroy@11:

; 453  : 
; 454  : 	if ( !Device.Paused() ) {

	mov	ecx, DWORD PTR __imp_?g_pauseMngr@@3VpauseMngr@@A
	cmp	DWORD PTR [ecx+12], 0
	push	ebx
	push	esi
	push	edi
	jne	$LN30@Destroy@11

; 455  : 		if ( !m_crows[1].empty() ) {

	lea	esi, DWORD PTR [ebp+262188]
	mov	ecx, esi
	call	?empty@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBE_NXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::empty
	test	al, al
	jne	$LN18@Destroy@11

; 456  : 			Msg								( "assertion !m_crows[1].empty() failed: %d", m_crows[1].size() );

	mov	ecx, esi
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	push	eax
	push	OFFSET ??_C@_0CJ@JNMNJAJN@assertion?5?$CBm_crows?$FL1?$FN?4empty?$CI?$CJ?5fa@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ
	add	esp, 8

; 457  : 
; 458  : 			Objects::const_iterator i		= m_crows[1].begin( );

	mov	ecx, esi
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	mov	edi, eax

; 459  : 			Objects::const_iterator	const e	= m_crows[1].end( );

	mov	eax, DWORD PTR [ebp+262192]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4

; 460  : 			for (u32 j=0; i != e; ++i, ++j )

	xor	ebx, ebx
	cmp	edi, eax
	mov	DWORD PTR _e$127335[esp+20], eax
	je	SHORT $LN25@Destroy@11
	npad	8
$LL28@Destroy@11:

; 461  : 				Msg							( "%d %s", j, (*i)->cName().c_str() );

	mov	edx, DWORD PTR [edi]
	mov	esi, DWORD PTR [edx+168]
	test	esi, esi
	je	SHORT $LN84@Destroy@11
	add	DWORD PTR [esi], 1
	lea	eax, DWORD PTR [esi+16]
	jmp	SHORT $LN85@Destroy@11
$LN84@Destroy@11:
	xor	eax, eax
$LN85@Destroy@11:
	push	eax
	push	ebx
	push	OFFSET ??_C@_05OPEIBKFE@?$CFd?5?$CFs?$AA@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ
	add	esp, 12					; 0000000cH
	test	esi, esi
	je	SHORT $LN27@Destroy@11
	add	DWORD PTR [esi], -1
$LN27@Destroy@11:

; 460  : 			for (u32 j=0; i != e; ++i, ++j )

	add	edi, 4
	add	ebx, 1
	cmp	edi, DWORD PTR _e$127335[esp+20]
	jne	SHORT $LL28@Destroy@11
$LN25@Destroy@11:

; 462  : 			VERIFY							( Device.Paused() || m_crows[1].empty() );
; 463  : 			m_crows[1].clear_not_free		();

	mov	eax, DWORD PTR [ebp+262192]
	lea	esi, DWORD PTR [ebp+262188]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	mov	ecx, esi
	mov	edi, eax
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	mov	ebx, eax
	cmp	ebx, edi
	je	SHORT $LN121@Destroy@11
	mov	esi, DWORD PTR [esi+4]
	sub	esi, edi
	je	SHORT $LN129@Destroy@11
	push	esi
	push	edi
	push	ebx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
	push	ebx
	mov	DWORD PTR [ebp+262192], eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4

; 464  : 		}
; 465  : 	}
; 466  : 	else {

	jmp	SHORT $LN18@Destroy@11

; 462  : 			VERIFY							( Device.Paused() || m_crows[1].empty() );
; 463  : 			m_crows[1].clear_not_free		();

$LN129@Destroy@11:
	mov	eax, ebx
	mov	DWORD PTR [ebp+262192], eax
$LN121@Destroy@11:
	push	ebx
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4

; 464  : 		}
; 465  : 	}
; 466  : 	else {

	jmp	SHORT $LN18@Destroy@11
$LN30@Destroy@11:

; 467  : 		Objects& crows				= m_crows[1];
; 468  : 		Objects::iterator const i	= std::find(crows.begin(),crows.end(),O);

	mov	eax, DWORD PTR [ebp+262192]
	lea	ebx, DWORD PTR [ebp+262188]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	mov	ecx, ebx
	mov	esi, eax
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	lea	edi, DWORD PTR _O$[esp+16]
	call	??$__find@PAPAVCObject@@PAV1@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@0ABQAV2@ABUrandom_access_iterator_tag@1@@Z ; stlp_std::priv::__find<CObject * *,CObject *>
	mov	edi, eax

; 469  : 		if	( i != crows.end() ) {

	mov	eax, DWORD PTR [ebx+4]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	cmp	edi, eax
	je	SHORT $LN18@Destroy@11

; 470  : 			crows.erase				( i);

	mov	eax, ebx
	call	?erase@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@PAPAV3@@Z ; stlp_std::vector<CObject *,xalloc<CObject *> >::erase
$LN18@Destroy@11:

; 471  : 			VERIFY					( std::find(crows.begin(), crows.end(),O) == crows.end() );
; 472  : 		}
; 473  : 	}
; 474  : 
; 475  : 	Objects& crows				= m_crows[0];
; 476  : 	Objects::iterator _i0		= std::find(crows.begin(),crows.end(),O);

	mov	eax, DWORD PTR [ebp+262180]
	lea	ebx, DWORD PTR [ebp+262176]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	mov	ecx, ebx
	mov	esi, eax
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	lea	edi, DWORD PTR _O$[esp+16]
	call	??$__find@PAPAVCObject@@PAV1@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@0ABQAV2@ABUrandom_access_iterator_tag@1@@Z ; stlp_std::priv::__find<CObject * *,CObject *>
	mov	esi, eax

; 477  : 	if	(_i0!=crows.end()) {

	mov	eax, DWORD PTR [ebx+4]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	cmp	esi, eax
	je	SHORT $LN14@Destroy@11

; 478  : 		crows.erase				(_i0);

	mov	eax, DWORD PTR [ebx+4]
	lea	ecx, DWORD PTR [esi+4]
	cmp	ecx, eax
	je	SHORT $LN204@Destroy@11
	sub	eax, ecx
	je	SHORT $LN204@Destroy@11
	push	eax
	push	ecx
	push	esi
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
$LN204@Destroy@11:
	add	DWORD PTR [ebx+4], -4			; fffffffcH
	mov	ebx, DWORD PTR [ebx+4]
	push	ebx
	call	??$_Destroy@PAX@stlp_std@@YAXPAPAX@Z	; stlp_std::_Destroy<void *>
	push	esi
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 8
$LN14@Destroy@11:

; 479  : 		VERIFY					( std::find(crows.begin(), crows.end(),O) == crows.end() );
; 480  : 	}
; 481  : 
; 482  : 	// active/inactive
; 483  : 	Objects::iterator _i		= std::find(objects_active.begin(),objects_active.end(),O);

	mov	eax, DWORD PTR [ebp+262156]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	lea	ebx, DWORD PTR [ebp+262152]
	add	esp, 4
	mov	ecx, ebx
	mov	esi, eax
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	lea	edi, DWORD PTR _O$[esp+16]
	call	??$__find@PAPAVCObject@@PAV1@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@0ABQAV2@ABUrandom_access_iterator_tag@1@@Z ; stlp_std::priv::__find<CObject * *,CObject *>
	mov	esi, eax

; 484  : 	if	(_i!=objects_active.end()) {

	mov	eax, DWORD PTR [ebp+262156]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	cmp	esi, eax
	je	SHORT $LN13@Destroy@11

; 485  : 		objects_active.erase				(_i);

	mov	eax, DWORD PTR [ebx+4]
	lea	ecx, DWORD PTR [esi+4]
	cmp	ecx, eax
	je	SHORT $LN257@Destroy@11
	sub	eax, ecx
	je	SHORT $LN257@Destroy@11
	push	eax
	push	ecx
	push	esi
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
$LN257@Destroy@11:
	add	DWORD PTR [ebx+4], -4			; fffffffcH
	mov	ebx, DWORD PTR [ebx+4]
	push	ebx
	call	??$_Destroy@PAX@stlp_std@@YAXPAPAX@Z	; stlp_std::_Destroy<void *>
	push	esi
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 8

; 486  : 		VERIFY								( std::find(objects_active.begin(),objects_active.end(),O) == objects_active.end() );
; 487  : 		VERIFY								(
; 488  : 			std::find(
; 489  : 				objects_sleeping.begin(),
; 490  : 				objects_sleeping.end(),
; 491  : 				O
; 492  : 			) == objects_sleeping.end()
; 493  : 		);
; 494  : 	}
; 495  : 	else {

	jmp	$LN1@Destroy@11
$LN13@Destroy@11:

; 496  : 		Objects::iterator _ii	= std::find(objects_sleeping.begin(),objects_sleeping.end(),O);

	mov	eax, DWORD PTR [ebp+262168]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	lea	ebx, DWORD PTR [ebp+262164]
	add	esp, 4
	mov	ecx, ebx
	mov	esi, eax
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	lea	edi, DWORD PTR _O$[esp+16]
	call	??$__find@PAPAVCObject@@PAV1@@priv@stlp_std@@YAPAPAVCObject@@PAPAV2@0ABQAV2@ABUrandom_access_iterator_tag@1@@Z ; stlp_std::priv::__find<CObject * *,CObject *>

; 497  : 		if	(_ii!=objects_sleeping.end()) {

	mov	ebp, DWORD PTR [ebp+262168]
	push	ebp
	mov	esi, eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	cmp	esi, eax
	je	SHORT $LN5@Destroy@11

; 498  : 			objects_sleeping.erase			(_ii);

	mov	eax, DWORD PTR [ebx+4]
	lea	ecx, DWORD PTR [esi+4]
	cmp	ecx, eax
	je	SHORT $LN310@Destroy@11
	sub	eax, ecx
	je	SHORT $LN310@Destroy@11
	push	eax
	push	ecx
	push	esi
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
$LN310@Destroy@11:
	add	DWORD PTR [ebx+4], -4			; fffffffcH
	mov	ebx, DWORD PTR [ebx+4]
	push	ebx
	call	??$_Destroy@PAX@stlp_std@@YAXPAPAX@Z	; stlp_std::_Destroy<void *>
	push	esi
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 8

; 499  : 			VERIFY							( std::find(objects_sleeping.begin(),objects_sleeping.end(),O) == objects_sleeping.end() );
; 500  : 		}
; 501  : 		else

	jmp	SHORT $LN1@Destroy@11
$LN5@Destroy@11:

; 502  : 			FATAL							("! Unregistered object being destroyed");

	mov	eax, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ??_C@_0CG@KGGOBMNP@?$CB?5Unregistered?5object?5being?5dest@
	push	OFFSET ??_C@_0BF@DLMBKFFJ@CObjectList?3?3Destroy?$AA@
	push	502					; 000001f6H
	push	OFFSET ??_C@_0DH@PPDLGENG@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	eax
	call	DWORD PTR __imp_?fatal@xrDebug@@QAAXPBDH00ZZ
	add	esp, 20					; 00000014H
$LN1@Destroy@11:

; 503  : 	}
; 504  : 
; 505  : 	g_pGamePersistent->ObjectPool.destroy	(O);

	mov	edi, DWORD PTR _O$[esp+16]
	push	edi
	call	___RTCastToVoid
	mov	edx, DWORD PTR [edi]
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR [edx+4]
	push	0
	mov	ecx, edi
	call	eax
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	pop	edi
	pop	esi
	pop	ebx
$LN322@Destroy@11:
	pop	ebp

; 506  : }

	pop	ecx
	ret	4
?Destroy@CObjectList@@QAEXPAVCObject@@@Z ENDP		; CObjectList::Destroy
_TEXT	ENDS
PUBLIC	?Unload@CObjectList@@QAEXXZ			; CObjectList::Unload
; Function compile flags: /Ogtpy
;	COMDAT ?Unload@CObjectList@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Unload@CObjectList@@QAEXXZ PROC			; CObjectList::Unload, COMDAT
; _this$ = ecx

; 408  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx

; 409  : 	if (objects_sleeping.size() || objects_active.size())

	lea	ebp, DWORD PTR [esi+262164]
	push	edi
	mov	ecx, ebp
	mov	DWORD PTR _this$[esp+20], esi
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	test	eax, eax
	jne	SHORT $LN5@Unload@4
	lea	ecx, DWORD PTR [esi+262152]
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	test	eax, eax
	je	SHORT $LN246@Unload@4
$LN5@Unload@4:

; 410  : 		Msg			("! objects-leaked: %d",objects_sleeping.size() + objects_active.size());

	lea	ecx, DWORD PTR [esi+262152]
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	mov	ecx, ebp
	mov	edi, eax
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	add	edi, eax
	push	edi
	push	OFFSET ??_C@_0BF@NACOILDI@?$CB?5objects?9leaked?3?5?$CFd?$AA@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ
	add	esp, 8
$LN246@Unload@4:

; 411  : 
; 412  : 	// Destroy objects
; 413  : 	while (objects_sleeping.size())

	mov	ecx, ebp
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	test	eax, eax
	je	$LN247@Unload@4
	npad	1
$LL4@Unload@4:

; 414  : 	{
; 415  : 		CObject*	O	= objects_sleeping.back	();

	mov	eax, DWORD PTR [esi+262168]
	mov	esi, DWORD PTR [eax-4]

; 416  : 		Msg				("! [%x] s[%4d]-[%s]-[%s]", O, O->ID(), *O->cNameSect(), *O->cName());

	mov	ebx, DWORD PTR [esi+168]
	test	ebx, ebx
	je	SHORT $LN62@Unload@4
	add	DWORD PTR [ebx], 1
	lea	ecx, DWORD PTR [ebx+16]
	jmp	SHORT $LN63@Unload@4
$LN62@Unload@4:
	xor	ecx, ecx
$LN63@Unload@4:
	mov	edi, DWORD PTR [esi+172]
	test	edi, edi
	je	SHORT $LN77@Unload@4
	add	DWORD PTR [edi], 1
	lea	eax, DWORD PTR [edi+16]
	jmp	SHORT $LN78@Unload@4
$LN77@Unload@4:
	xor	eax, eax
$LN78@Unload@4:
	push	ecx
	movzx	ecx, WORD PTR [esi+164]
	push	eax
	push	ecx
	push	esi
	push	OFFSET ??_C@_0BI@OAINGCJB@?$CB?5?$FL?$CFx?$FN?5s?$FL?$CF4d?$FN?9?$FL?$CFs?$FN?9?$FL?$CFs?$FN?$AA@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ
	add	esp, 20					; 00000014H
	test	edi, edi
	je	SHORT $LN251@Unload@4
	add	DWORD PTR [edi], -1
$LN251@Unload@4:
	test	ebx, ebx
	je	SHORT $LN89@Unload@4
	add	DWORD PTR [ebx], -1
$LN89@Unload@4:

; 417  : 		O->setDestroy	( true );

	mov	eax, DWORD PTR [esi+164]
	test	eax, 67108864				; 04000000H
	jne	SHORT $LN93@Unload@4
	or	eax, 67108864				; 04000000H
	mov	DWORD PTR [esi+164], eax
	mov	ecx, DWORD PTR ?g_pGameLevel@@3PAVIGame_Level@@A ; g_pGameLevel
	push	esi
	add	ecx, 76					; 0000004cH
	call	?register_object_to_destroy@CObjectList@@QAEXPAVCObject@@@Z ; CObjectList::register_object_to_destroy
$LN93@Unload@4:

; 418  : 		
; 419  : #ifdef DEBUG
; 420  : 		if( debug_destroy )
; 421  : 			Msg				("Destroying object [%d][%s]",O->ID(),*O->cName());
; 422  : #endif
; 423  : 		O->net_Destroy	(   );

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+52]
	mov	ecx, esi
	call	eax

; 424  : 		Destroy			( O );

	mov	ecx, DWORD PTR _this$[esp+20]
	push	esi
	call	?Destroy@CObjectList@@QAEXPAVCObject@@@Z ; CObjectList::Destroy
	mov	ecx, ebp
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	test	eax, eax
	mov	esi, DWORD PTR _this$[esp+20]
	jne	$LL4@Unload@4
$LN247@Unload@4:

; 425  : 	}
; 426  : 	while (objects_active.size())

	lea	ecx, DWORD PTR [esi+262152]
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	test	eax, eax
	je	$LN1@Unload@4
	npad	8
$LL2@Unload@4:

; 427  : 	{
; 428  : 		CObject*	O	= objects_active.back	();

	mov	ecx, DWORD PTR [esi+262156]
	mov	esi, DWORD PTR [ecx-4]

; 429  : 		Msg				("! [%x] a[%4d]-[%s]-[%s]", O, O->ID(), *O->cNameSect(), *O->cName());

	mov	ebx, DWORD PTR [esi+168]
	test	ebx, ebx
	je	SHORT $LN130@Unload@4
	add	DWORD PTR [ebx], 1
	lea	ecx, DWORD PTR [ebx+16]
	jmp	SHORT $LN131@Unload@4
$LN130@Unload@4:
	xor	ecx, ecx
$LN131@Unload@4:
	mov	edi, DWORD PTR [esi+172]
	test	edi, edi
	je	SHORT $LN145@Unload@4
	add	DWORD PTR [edi], 1
	lea	eax, DWORD PTR [edi+16]
	jmp	SHORT $LN146@Unload@4
$LN145@Unload@4:
	xor	eax, eax
$LN146@Unload@4:
	movzx	edx, WORD PTR [esi+164]
	push	ecx
	push	eax
	push	edx
	push	esi
	push	OFFSET ??_C@_0BI@CDOAGLCL@?$CB?5?$FL?$CFx?$FN?5a?$FL?$CF4d?$FN?9?$FL?$CFs?$FN?9?$FL?$CFs?$FN?$AA@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ
	add	esp, 20					; 00000014H
	test	edi, edi
	je	SHORT $LN253@Unload@4
	add	DWORD PTR [edi], -1
$LN253@Unload@4:
	test	ebx, ebx
	je	SHORT $LN157@Unload@4
	add	DWORD PTR [ebx], -1
$LN157@Unload@4:

; 430  : 		O->setDestroy	( true );

	mov	eax, DWORD PTR [esi+164]
	test	eax, 67108864				; 04000000H
	jne	SHORT $LN161@Unload@4
	or	eax, 67108864				; 04000000H
	mov	DWORD PTR [esi+164], eax
	mov	ecx, DWORD PTR ?g_pGameLevel@@3PAVIGame_Level@@A ; g_pGameLevel
	push	esi
	add	ecx, 76					; 0000004cH
	call	?register_object_to_destroy@CObjectList@@QAEXPAVCObject@@@Z ; CObjectList::register_object_to_destroy
$LN161@Unload@4:

; 431  : 
; 432  : #ifdef DEBUG
; 433  : 		if( debug_destroy )
; 434  : 			Msg				("Destroying object [%d][%s]",O->ID(),*O->cName());
; 435  : #endif
; 436  : 		O->net_Destroy	(   );

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+52]
	mov	ecx, esi
	call	edx

; 437  : 		Destroy			( O );

	push	esi
	mov	esi, DWORD PTR _this$[esp+24]
	mov	ecx, esi
	call	?Destroy@CObjectList@@QAEXPAVCObject@@@Z ; CObjectList::Destroy
	lea	ecx, DWORD PTR [esi+262152]
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	test	eax, eax
	jne	$LL2@Unload@4
$LN1@Unload@4:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 438  : 	}
; 439  : }

	pop	ecx
	ret	0
?Unload@CObjectList@@QAEXXZ ENDP			; CObjectList::Unload
_TEXT	ENDS
PUBLIC	?net_Import@CObjectList@@QAEXPAVNET_Packet@@@Z	; CObjectList::net_Import
; Function compile flags: /Ogtpy
;	COMDAT ?net_Import@CObjectList@@QAEXPAVNET_Packet@@@Z
_TEXT	SEGMENT
_ID$127279 = -8						; size = 2
_this$ = -4						; size = 4
_size$127280 = 8					; size = 1
_Packet$ = 8						; size = 4
?net_Import@CObjectList@@QAEXPAVNET_Packet@@@Z PROC	; CObjectList::net_Import, COMDAT
; _this$ = ecx

; 370  : {

	sub	esp, 8

; 371  : 	if (g_Dump_Import_Obj) Msg("---- net_import --- ");

	cmp	DWORD PTR ?g_Dump_Import_Obj@@3HA, 0	; g_Dump_Import_Obj
	mov	DWORD PTR _this$[esp+8], ecx
	je	SHORT $LN35@net_Import
	push	OFFSET ??_C@_0BF@GNCDHGOC@?9?9?9?9?5net_import?5?9?9?9?5?$AA@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ
	add	esp, 4
$LN35@net_Import:
	push	edi

; 372  : 
; 373  : 	while (!Packet->r_eof())

	mov	edi, DWORD PTR _Packet$[esp+8]
	mov	ecx, edi
	call	DWORD PTR __imp_?r_eof@NET_Packet@@QAEHXZ
	test	eax, eax
	jne	$LN5@net_Import
	push	ebx
	push	ebp
	push	esi
$LL6@net_Import:

; 374  : 	{
; 375  : 		u16 ID;		Packet->r_u16	(ID);

	lea	eax, DWORD PTR _ID$127279[esp+24]
	push	eax
	mov	ecx, edi
	call	DWORD PTR __imp_?r_u16@NET_Packet@@QAEXAAG@Z

; 376  : 		u8  size;	Packet->r_u8	(size);

	lea	ecx, DWORD PTR _size$127280[esp+20]
	push	ecx
	mov	ecx, edi
	call	DWORD PTR __imp_?r_u8@NET_Packet@@QAEXAAE@Z

; 377  : 		CObject* P  = net_Find		(ID);

	mov	ax, WORD PTR _ID$127279[esp+24]
	cmp	ax, 65535				; 0000ffffH
	je	SHORT $LN4@net_Import
	movzx	edx, ax
	mov	eax, DWORD PTR _this$[esp+24]
	mov	esi, DWORD PTR [eax+edx*4]

; 378  : 		if (P)		

	test	esi, esi
	je	SHORT $LN4@net_Import

; 379  : 		{
; 380  : 
; 381  : 			u32 rsize = Packet->r_tell();			

	mov	ecx, edi
	call	DWORD PTR __imp_?r_tell@NET_Packet@@QAEIXZ

; 382  : 			
; 383  : 			P->net_Import	(*Packet);

	mov	edx, DWORD PTR [esi]
	mov	ebp, eax
	mov	eax, DWORD PTR [edx+60]
	push	edi
	mov	ecx, esi
	call	eax

; 384  : 
; 385  : 			if (g_Dump_Import_Obj) Msg("* %s : %d - %d", *(P->cNameSect()), size, Packet->r_tell() - rsize);

	cmp	DWORD PTR ?g_Dump_Import_Obj@@3HA, 0	; g_Dump_Import_Obj
	je	SHORT $LN36@net_Import
	mov	esi, DWORD PTR [esi+172]
	test	esi, esi
	je	SHORT $LN26@net_Import
	add	DWORD PTR [esi], 1
	lea	ebx, DWORD PTR [esi+16]
	jmp	SHORT $LN27@net_Import
$LN26@net_Import:
	xor	ebx, ebx
$LN27@net_Import:
	mov	ecx, edi
	call	DWORD PTR __imp_?r_tell@NET_Packet@@QAEIXZ
	movzx	ecx, BYTE PTR _size$127280[esp+20]
	sub	eax, ebp
	push	eax
	push	ecx
	push	ebx
	push	OFFSET ??_C@_0P@ODAMBMPO@?$CK?5?$CFs?5?3?5?$CFd?5?9?5?$CFd?$AA@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ
	add	esp, 16					; 00000010H
	test	esi, esi
	je	SHORT $LN36@net_Import
	add	DWORD PTR [esi], -1

; 386  : 
; 387  : 		}

	jmp	SHORT $LN36@net_Import
$LN4@net_Import:

; 388  : 		else		Packet->r_advance(size);

	movzx	edx, BYTE PTR _size$127280[esp+20]
	push	edx
	mov	ecx, edi
	call	DWORD PTR __imp_?r_advance@NET_Packet@@QAEXI@Z
$LN36@net_Import:
	mov	ecx, edi
	call	DWORD PTR __imp_?r_eof@NET_Packet@@QAEHXZ
	test	eax, eax
	je	$LL6@net_Import
	pop	esi
	pop	ebp
	pop	ebx
$LN5@net_Import:

; 389  : 	}
; 390  : 
; 391  : 	if (g_Dump_Import_Obj) Msg("------------------- ");

	cmp	DWORD PTR ?g_Dump_Import_Obj@@3HA, 0	; g_Dump_Import_Obj
	pop	edi
	je	SHORT $LN1@net_Import
	push	OFFSET ??_C@_0BF@PBNKDANJ@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?5?$AA@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ
	add	esp, 4
$LN1@net_Import:

; 392  : }

	add	esp, 8
	ret	4
?net_Import@CObjectList@@QAEXPAVNET_Packet@@@Z ENDP	; CObjectList::net_Import
_TEXT	ENDS
PUBLIC	?net_Export@CObjectList@@QAEIPAVNET_Packet@@II@Z ; CObjectList::net_Export
; Function compile flags: /Ogtpy
;	COMDAT ?net_Export@CObjectList@@QAEIPAVNET_Packet@@II@Z
_TEXT	SEGMENT
_position$ = -8						; size = 4
tv225 = -4						; size = 4
__Packet$ = 8						; size = 4
_start$ = 12						; size = 4
_max_object_size$ = 16					; size = 4
?net_Export@CObjectList@@QAEIPAVNET_Packet@@II@Z PROC	; CObjectList::net_Export, COMDAT
; _this$ = ecx

; 331  : {

	sub	esp, 8

; 332  : 	if (g_Dump_Export_Obj) Msg("---- net_export --- ");

	cmp	DWORD PTR ?g_Dump_Export_Obj@@3HA, 0	; g_Dump_Export_Obj
	push	ebp
	push	esi
	push	edi
	mov	esi, ecx
	je	SHORT $LN96@net_Export
	push	OFFSET ??_C@_0BF@LHIIFDOK@?9?9?9?9?5net_export?5?9?9?9?5?$AA@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ
	add	esp, 4
$LN96@net_Export:

; 333  : 
; 334  : 	NET_Packet& Packet	= *_Packet;
; 335  : 	u32			position;
; 336  : 	for (; start<objects_active.size() + objects_sleeping.size(); start++)			{

	lea	ebp, DWORD PTR [esi+262152]
	lea	edi, DWORD PTR [esi+262164]
	mov	ecx, ebp
	mov	DWORD PTR tv225[esp+20], edi
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	mov	ecx, edi
	mov	esi, eax
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	mov	edi, DWORD PTR _start$[esp+16]
	add	esi, eax
	cmp	edi, esi
	jae	$LN97@net_Export
	push	ebx
	mov	ebx, DWORD PTR __Packet$[esp+20]
$LL7@net_Export:

; 337  : 		CObject* P = (start<objects_active.size()) ? objects_active[start] : objects_sleeping[start-objects_active.size()];

	mov	ecx, ebp
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	cmp	edi, eax
	mov	ecx, ebp
	jae	SHORT $LN11@net_Export
	push	edi
	jmp	SHORT $LN99@net_Export
$LN11@net_Export:
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	mov	ecx, edi
	sub	ecx, eax
	push	ecx
	mov	ecx, DWORD PTR tv225[esp+28]
$LN99@net_Export:
	call	??A?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEAAPAVCObject@@I@Z ; xr_vector<CObject *,xalloc<CObject *> >::operator[]
	mov	esi, DWORD PTR [eax]

; 338  : 		if (P->net_Relevant() && !P->getDestroy())	{			

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+68]
	mov	ecx, esi
	call	eax
	test	eax, eax
	je	$LN6@net_Export
	test	DWORD PTR [esi+164], 67108864		; 04000000H
	jne	$LN6@net_Export

; 339  : 			Packet.w_u16			(u16(P->ID())	);

	movzx	ecx, WORD PTR [esi+164]
	push	ecx
	mov	ecx, ebx
	call	DWORD PTR __imp_?w_u16@NET_Packet@@QAEXG@Z

; 340  : 			Packet.w_chunk_open8	(position);

	lea	edx, DWORD PTR _position$[esp+24]
	push	edx
	mov	ecx, ebx
	call	DWORD PTR __imp_?w_chunk_open8@NET_Packet@@QAEXAAI@Z

; 341  : 			//Msg						("cl_export: %d '%s'",P->ID(),*P->cName());
; 342  : 			P->net_Export			(Packet);

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+56]
	push	ebx
	mov	ecx, esi
	call	edx

; 343  : 
; 344  : #ifdef DEBUG
; 345  : 			u32 size				= u32		(Packet.w_tell()-position)-sizeof(u8);
; 346  : 			if				(size>=256)			{
; 347  : 				Debug.fatal	(DEBUG_INFO,"Object [%s][%d] exceed network-data limit\n size=%d, Pend=%d, Pstart=%d",
; 348  : 					*P->cName(), P->ID(), size, Packet.w_tell(), position);
; 349  : 			}
; 350  : #endif
; 351  : 			if (g_Dump_Export_Obj)

	cmp	DWORD PTR ?g_Dump_Export_Obj@@3HA, 0	; g_Dump_Export_Obj
	je	SHORT $LN86@net_Export

; 352  : 			{
; 353  : 				u32 size				= u32		(Packet.w_tell()-position)-sizeof(u8);

	mov	eax, DWORD PTR [ebx+16388]
	sub	eax, DWORD PTR _position$[esp+24]

; 354  : 				Msg("* %s : %d", *(P->cNameSect()), size);

	mov	esi, DWORD PTR [esi+172]
	sub	eax, 1
	test	esi, esi
	je	SHORT $LN82@net_Export
	add	DWORD PTR [esi], 1
	lea	ecx, DWORD PTR [esi+16]
	jmp	SHORT $LN83@net_Export
$LN82@net_Export:
	xor	ecx, ecx
$LN83@net_Export:
	push	eax
	push	ecx
	push	OFFSET ??_C@_09NJPFAADA@?$CK?5?$CFs?5?3?5?$CFd?$AA@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ
	add	esp, 12					; 0000000cH
	test	esi, esi
	je	SHORT $LN86@net_Export
	add	DWORD PTR [esi], -1
$LN86@net_Export:

; 355  : 			}
; 356  : 			Packet.w_chunk_close8	(position);

	mov	eax, DWORD PTR _position$[esp+24]
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?w_chunk_close8@NET_Packet@@QAEXI@Z

; 357  : //			if (0==(--count))		
; 358  : //				break;
; 359  : 			if (max_object_size >= (NET_PacketSizeLimit - Packet.w_tell()))

	mov	ecx, 16384				; 00004000H
	sub	ecx, DWORD PTR [ebx+16388]
	cmp	DWORD PTR _max_object_size$[esp+20], ecx
	jae	SHORT $LN98@net_Export
$LN6@net_Export:

; 333  : 
; 334  : 	NET_Packet& Packet	= *_Packet;
; 335  : 	u32			position;
; 336  : 	for (; start<objects_active.size() + objects_sleeping.size(); start++)			{

	mov	ecx, ebp
	add	edi, 1
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	mov	ecx, DWORD PTR tv225[esp+24]
	mov	esi, eax
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	add	esi, eax
	cmp	edi, esi
	jb	$LL7@net_Export
$LN98@net_Export:
	pop	ebx
$LN97@net_Export:

; 360  : 				break;
; 361  : 		}
; 362  : 	}
; 363  : 	if (g_Dump_Export_Obj) Msg("------------------- ");

	cmp	DWORD PTR ?g_Dump_Export_Obj@@3HA, 0	; g_Dump_Export_Obj
	je	SHORT $LN95@net_Export
	push	OFFSET ??_C@_0BF@PBNKDANJ@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?5?$AA@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ
	add	esp, 4
$LN95@net_Export:

; 364  : 	return	start+1;

	lea	eax, DWORD PTR [edi+1]
	pop	edi
	pop	esi
	pop	ebp

; 365  : }

	add	esp, 8
	ret	12					; 0000000cH
?net_Export@CObjectList@@QAEIPAVNET_Packet@@II@Z ENDP	; CObjectList::net_Export
_TEXT	ENDS
PUBLIC	?SingleUpdate@CObjectList@@QAEXPAVCObject@@@Z	; CObjectList::SingleUpdate
; Function compile flags: /Ogtpy
;	COMDAT ?SingleUpdate@CObjectList@@QAEXPAVCObject@@@Z
_TEXT	SEGMENT
_v$461022 = 8						; size = 4
_O$ = 8							; size = 4
?SingleUpdate@CObjectList@@QAEXPAVCObject@@@Z PROC	; CObjectList::SingleUpdate, COMDAT
; _this$ = ecx

; 95   : 	if ( Device.dwFrame == O->dwFrame_UpdateCL ) {

	mov	eax, DWORD PTR ?Device@@3VCRenderDevice@@A+24
	push	esi
	mov	esi, DWORD PTR _O$[esp]
	cmp	eax, DWORD PTR [esi+252]
	je	$LN96@SingleUpda

; 96   : #ifdef DEBUG
; 97   : //		if (O->getDestroy())
; 98   : //			Msg					("- !!!processing_enabled ->destroy_queue.push_back %s[%d] frame [%d]",O->cName().c_str(), O->ID(), Device.dwFrame);
; 99   : #endif // #ifdef DEBUG
; 100  : 
; 101  : 		return;
; 102  : 	}
; 103  : 
; 104  : 	if ( !O->processing_enabled() ) {

	cmp	BYTE PTR [esi+166], 0
	je	$LN96@SingleUpda

; 105  : #ifdef DEBUG
; 106  : //		if (O->getDestroy())
; 107  : //			Msg					("- !!!processing_enabled ->destroy_queue.push_back %s[%d] frame [%d]",O->cName().c_str(), O->ID(), Device.dwFrame);
; 108  : #endif // #ifdef DEBUG
; 109  : 
; 110  : 		return;
; 111  : 	}
; 112  : 
; 113  : 	if (O->H_Parent())

	mov	eax, DWORD PTR [esi+180]
	test	eax, eax
	je	SHORT $LN6@SingleUpda

; 114  : 		SingleUpdate			(O->H_Parent());

	push	eax
	call	?SingleUpdate@CObjectList@@QAEXPAVCObject@@@Z ; CObjectList::SingleUpdate
$LN6@SingleUpda:

; 115  : 
; 116  : 	Device.Statistic->UpdateClient_updated	++;

	mov	eax, DWORD PTR ?Device@@3VCRenderDevice@@A+920
	add	DWORD PTR [eax+480], 1

; 117  : 	O->dwFrame_UpdateCL			= Device.dwFrame;

	mov	ecx, DWORD PTR ?Device@@3VCRenderDevice@@A+24

; 118  : 
; 119  : //	Msg							("[%d][0x%08x]IAmNotACrowAnyMore (CObjectList::SingleUpdate)", Device.dwFrame, dynamic_cast<void*>(O));
; 120  : 
; 121  : 	O->UpdateCL					();

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR [esi+252], ecx
	push	edi
	mov	ecx, esi
	call	eax

; 122  : 
; 123  : 	VERIFY3						(O->dbg_update_cl == Device.dwFrame, "Broken sequence of calls to 'UpdateCL'",*O->cName());
; 124  : #if 0//ndef DEBUG
; 125  : 	__try
; 126  : 	{
; 127  : #endif
; 128  : 		if (O->H_Parent() && (O->H_Parent()->getDestroy() || O->H_Root()->getDestroy()) )	

	mov	edi, DWORD PTR [esi+180]
	test	edi, edi
	je	$LN100@SingleUpda
	push	ebx
	mov	ebx, 67108864				; 04000000H
	test	DWORD PTR [edi+164], ebx
	jne	SHORT $LN1@SingleUpda
	mov	ecx, edi
	call	?H_Root@CObject@@QAEPAV1@XZ		; CObject::H_Root
	test	DWORD PTR [eax+164], ebx
	je	$LN101@SingleUpda
$LN1@SingleUpda:

; 129  : 		{
; 130  : 			// Push to destroy-queue if it isn't here already
; 131  : 			Msg	("! ERROR: incorrect destroy sequence for object[%d:%s], section[%s], parent[%d:%s]",O->ID(),*O->cName(),*O->cNameSect(),O->H_Parent()->ID(),*O->H_Parent()->cName());

	mov	edi, DWORD PTR [edi+168]
	test	edi, edi
	push	ebp
	mov	DWORD PTR _v$461022[esp+12], edi
	je	SHORT $LN44@SingleUpda
	add	DWORD PTR [edi], 1
	lea	ebp, DWORD PTR [edi+16]
	jmp	SHORT $LN45@SingleUpda
$LN44@SingleUpda:
	xor	ebp, ebp
$LN45@SingleUpda:
	mov	ebx, DWORD PTR [esi+172]
	test	ebx, ebx
	mov	ecx, DWORD PTR [esi+180]
	movzx	edx, WORD PTR [ecx+164]
	je	SHORT $LN63@SingleUpda
	add	DWORD PTR [ebx], 1
	lea	ecx, DWORD PTR [ebx+16]
	jmp	SHORT $LN64@SingleUpda
$LN63@SingleUpda:
	xor	ecx, ecx
$LN64@SingleUpda:
	mov	edi, DWORD PTR [esi+168]
	test	edi, edi
	je	SHORT $LN78@SingleUpda
	add	DWORD PTR [edi], 1
	lea	eax, DWORD PTR [edi+16]
	jmp	SHORT $LN79@SingleUpda
$LN78@SingleUpda:
	xor	eax, eax
$LN79@SingleUpda:
	push	ebp
	movzx	edx, dx
	push	edx
	push	ecx
	push	eax
	movzx	eax, WORD PTR [esi+164]
	push	eax
	push	OFFSET ??_C@_0FC@IACAKAM@?$CB?5ERROR?3?5incorrect?5destroy?5seque@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ
	add	esp, 24					; 00000018H
	test	edi, edi
	pop	ebp
	je	SHORT $LN84@SingleUpda
	add	DWORD PTR [edi], -1
$LN84@SingleUpda:
	test	ebx, ebx
	je	SHORT $LN90@SingleUpda
	add	DWORD PTR [ebx], -1
$LN90@SingleUpda:
	mov	eax, DWORD PTR _v$461022[esp+8]
	test	eax, eax
	je	SHORT $LN101@SingleUpda
	add	DWORD PTR [eax], -1
$LN101@SingleUpda:
	pop	ebx
$LN100@SingleUpda:
	pop	edi
$LN96@SingleUpda:
	pop	esi

; 132  : 		}
; 133  : #if 0//ndef DEBUG
; 134  : 	}
; 135  : 	__except (EXCEPTION_EXECUTE_HANDLER)
; 136  : 	{
; 137  : 		CObject* parent_obj = O->H_Parent();
; 138  : 		CObject* root_obj	= O->H_Root();
; 139  : 		Msg	("! ERROR: going to crush: [%d:%s], section[%s], parent_obj_addr[0x%08x], root_obj_addr[0x%08x]",O->ID(),*O->cName(),*O->cNameSect(), *((u32*)&parent_obj), *((u32*)&root_obj));
; 140  : 		if (parent_obj)
; 141  : 		{
; 142  : 			__try
; 143  : 			{
; 144  : 				Msg("! Parent object: [%d:%s], section[%s]", 
; 145  : 					parent_obj->ID(), 
; 146  : 					parent_obj->cName().c_str(),
; 147  : 					parent_obj->cNameSect().c_str());
; 148  : 
; 149  : 			}
; 150  : 			__except (EXCEPTION_EXECUTE_HANDLER)
; 151  : 			{
; 152  : 				Msg("! Failed to get parent object info.");
; 153  : 			}
; 154  : 		}
; 155  : 		if (root_obj)
; 156  : 		{
; 157  : 			__try
; 158  : 			{
; 159  : 				Msg("! Root object: [%d:%s], section[%s]", 
; 160  : 					root_obj->ID(), 
; 161  : 					root_obj->cName().c_str(),
; 162  : 					root_obj->cNameSect().c_str());
; 163  : 			}
; 164  : 			__except (EXCEPTION_EXECUTE_HANDLER)
; 165  : 			{
; 166  : 				Msg("! Failed to get root object info.");
; 167  : 			}
; 168  : 		}
; 169  : 		R_ASSERT(false);
; 170  : 	} //end of __except
; 171  : #endif
; 172  : 
; 173  : #ifdef DEBUG
; 174  : //	if (O->getDestroy())
; 175  : //		Msg						("- !!!processing_enabled ->destroy_queue.push_back %s[%d] frame [%d]",O->cName().c_str(), O->ID(), Device.dwFrame);
; 176  : #endif // #ifdef DEBUG
; 177  : }

	ret	4
?SingleUpdate@CObjectList@@QAEXPAVCObject@@@Z ENDP	; CObjectList::SingleUpdate
_TEXT	ENDS
PUBLIC	?FindObjectByName@CObjectList@@QAEPAVCObject@@Vshared_str@@@Z ; CObjectList::FindObjectByName
; Function compile flags: /Ogtpy
;	COMDAT ?FindObjectByName@CObjectList@@QAEPAVCObject@@Vshared_str@@@Z
_TEXT	SEGMENT
_name$ = 8						; size = 4
?FindObjectByName@CObjectList@@QAEPAVCObject@@Vshared_str@@@Z PROC ; CObjectList::FindObjectByName, COMDAT
; _this$ = ecx

; 39   : {

	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 40   : 	for (Objects::iterator I=objects_active.begin(); I!=objects_active.end(); I++)

	lea	ecx, DWORD PTR [edi+262152]
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	mov	esi, eax
	mov	eax, DWORD PTR [edi+262156]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	mov	ebx, DWORD PTR _name$[esp+12]
	add	esp, 4
	cmp	esi, eax
	je	SHORT $LN105@FindObject@2
	npad	7
$LL8@FindObject@2:

; 41   : 		if ((*I)->cName().equal(name))	return (*I);

	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+168]
	test	eax, eax
	je	SHORT $LN34@FindObject@2
	add	DWORD PTR [eax], 1
$LN34@FindObject@2:
	cmp	eax, ebx
	sete	cl
	test	eax, eax
	je	SHORT $LN42@FindObject@2
	add	DWORD PTR [eax], -1
$LN42@FindObject@2:
	test	cl, cl
	jne	SHORT $LN101@FindObject@2
	mov	eax, DWORD PTR [edi+262156]
	push	eax
	add	esi, 4
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	cmp	esi, eax
	jne	SHORT $LL8@FindObject@2
$LN105@FindObject@2:

; 42   : 	for (Objects::iterator I=objects_sleeping.begin(); I!=objects_sleeping.end(); I++)

	lea	ecx, DWORD PTR [edi+262164]
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	mov	esi, eax
	mov	eax, DWORD PTR [edi+262168]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	cmp	esi, eax
	je	SHORT $LN106@FindObject@2
$LL4@FindObject@2:

; 43   : 		if ((*I)->cName().equal(name))	return (*I);

	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx+168]
	test	eax, eax
	je	SHORT $LN75@FindObject@2
	add	DWORD PTR [eax], 1
$LN75@FindObject@2:
	cmp	eax, ebx
	sete	cl
	test	eax, eax
	je	SHORT $LN83@FindObject@2
	add	DWORD PTR [eax], -1
$LN83@FindObject@2:
	test	cl, cl
	jne	SHORT $LN101@FindObject@2
	mov	eax, DWORD PTR [edi+262168]
	push	eax
	add	esi, 4
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	cmp	esi, eax
	jne	SHORT $LL4@FindObject@2
$LN106@FindObject@2:

; 44   : 	return	NULL;

	test	ebx, ebx
	je	SHORT $LN95@FindObject@2
	add	DWORD PTR [ebx], -1
$LN95@FindObject@2:
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx

; 45   : }

	ret	4
$LN101@FindObject@2:

; 41   : 		if ((*I)->cName().equal(name))	return (*I);

	test	ebx, ebx
	mov	esi, DWORD PTR [esi]
	je	SHORT $LN48@FindObject@2
	add	DWORD PTR [ebx], -1
$LN48@FindObject@2:
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx

; 45   : }

	ret	4
?FindObjectByName@CObjectList@@QAEPAVCObject@@Vshared_str@@@Z ENDP ; CObjectList::FindObjectByName
_TEXT	ENDS
PUBLIC	??0CObjectList@@QAE@XZ				; CObjectList::CObjectList
; Function compile flags: /Ogtpy
;	COMDAT ??0CObjectList@@QAE@XZ
_TEXT	SEGMENT
$T461689 = -1						; size = 1
??0CObjectList@@QAE@XZ PROC				; CObjectList::CObjectList, COMDAT
; _this$ = ecx

; 26   : {

	push	ecx
	push	esi
	mov	esi, ecx
	push	edi
	xor	edi, edi
	mov	DWORD PTR [esi+262140], edi
	mov	DWORD PTR [esi+262144], edi
	mov	DWORD PTR [esi+262148], edi
	mov	DWORD PTR [esi+262152], edi
	mov	DWORD PTR [esi+262156], edi
	mov	DWORD PTR [esi+262160], edi
	mov	DWORD PTR [esi+262164], edi
	mov	DWORD PTR [esi+262168], edi
	mov	DWORD PTR [esi+262172], edi
	mov	DWORD PTR [esi+262176], edi
	mov	DWORD PTR [esi+262180], edi
	mov	DWORD PTR [esi+262184], edi
	mov	DWORD PTR [esi+262188], edi
	mov	DWORD PTR [esi+262192], edi
	mov	DWORD PTR [esi+262196], edi
	call	DWORD PTR __imp__GetCurrentThreadId@0
	mov	DWORD PTR [esi+262200], eax
	push	edi
	lea	eax, DWORD PTR $T461689[esp+16]
	push	eax
	lea	ecx, DWORD PTR [esi+262212]
	mov	DWORD PTR [esi+262204], edi
	mov	DWORD PTR [esi+262208], edi
	call	??0?$_STLP_alloc_proxy@PAUSRelcasePair@CObjectList@@U12@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USRelcasePair@CObjectList@@@@PAUSRelcasePair@CObjectList@@@Z ; stlp_std::priv::_STLP_alloc_proxy<CObjectList::SRelcasePair *,CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::_STLP_alloc_proxy<CObjectList::SRelcasePair *,CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >

; 27   : 	ZeroMemory				(map_NETID, 0xffff*sizeof(CObject*));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	edx, DWORD PTR [ecx+12]
	push	262140					; 0003fffcH
	push	edi
	push	esi
	call	edx
	pop	edi

; 28   : }

	mov	eax, esi
	pop	esi
	pop	ecx
	ret	0
??0CObjectList@@QAE@XZ ENDP				; CObjectList::CObjectList
; Function compile flags: /Ogtpy
;	COMDAT ?register_object_to_destroy@CObjectList@@QAEXPAVCObject@@@Z
_TEXT	SEGMENT
_object_to_destroy$ = 8					; size = 4
?register_object_to_destroy@CObjectList@@QAEXPAVCObject@@@Z PROC ; CObjectList::register_object_to_destroy, COMDAT
; _this$ = ecx

; 555  : {

	push	ebx
	push	esi
	mov	ebx, ecx

; 556  : 	VERIFY					(!registered_object_to_destroy(object_to_destroy));
; 557  : //	Msg("CObjectList::register_object_to_destroy [%x]", object_to_destroy);
; 558  : 	destroy_queue.push_back	(object_to_destroy);

	mov	eax, DWORD PTR [ebx+262144]
	cmp	eax, DWORD PTR [ebx+262148]
	push	edi
	lea	edi, DWORD PTR [ebx+262140]
	je	SHORT $LN21@register_o
	lea	ecx, DWORD PTR _object_to_destroy$[esp+8]
	push	ecx
	push	eax
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [edi+4], 4
	jmp	SHORT $LN20@register_o
$LN21@register_o:
	push	1
	push	1
	push	eax
	lea	eax, DWORD PTR _object_to_destroy$[esp+20]
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
$LN20@register_o:
	push	ebp

; 559  : 
; 560  : 	Objects::iterator it	= objects_active.begin();

	lea	ecx, DWORD PTR [ebx+262152]
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	mov	edi, eax

; 561  : 	Objects::iterator it_e	= objects_active.end();

	mov	eax, DWORD PTR [ebx+262156]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	mov	ebp, eax
	add	esp, 4

; 562  : 	for(;it!=it_e;++it)

	cmp	edi, ebp
	je	SHORT $LN6@register_o
	npad	2
$LL8@register_o:

; 563  : 	{
; 564  : 		CObject* O = *it;

	mov	esi, DWORD PTR [edi]

; 565  : 		if(!O->getDestroy() && O->H_Parent()==object_to_destroy)

	test	DWORD PTR [esi+164], 67108864		; 04000000H
	jne	SHORT $LN54@register_o
	mov	eax, DWORD PTR _object_to_destroy$[esp+12]
	cmp	DWORD PTR [esi+180], eax
	jne	SHORT $LN54@register_o

; 566  : 		{
; 567  : 			Msg("setDestroy called, but not-destroyed child found parent[%d] child[%d]",object_to_destroy->ID(), O->ID(), Device.dwFrame);

	mov	edx, DWORD PTR ?Device@@3VCRenderDevice@@A+24
	movzx	ecx, WORD PTR [esi+164]
	push	edx
	movzx	edx, WORD PTR [eax+164]
	push	ecx
	push	edx
	push	OFFSET ??_C@_0EG@POHPENJE@setDestroy?5called?0?5but?5not?9destr@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ

; 568  : 			O->setDestroy(TRUE);

	mov	eax, DWORD PTR [esi+164]
	add	esp, 16					; 00000010H
	test	eax, 67108864				; 04000000H
	jne	SHORT $LN54@register_o
	or	eax, 67108864				; 04000000H
	mov	DWORD PTR [esi+164], eax
	mov	ecx, DWORD PTR ?g_pGameLevel@@3PAVIGame_Level@@A ; g_pGameLevel
	push	esi
	add	ecx, 76					; 0000004cH
	call	?register_object_to_destroy@CObjectList@@QAEXPAVCObject@@@Z ; CObjectList::register_object_to_destroy
$LN54@register_o:
	add	edi, 4
	cmp	edi, ebp
	jne	SHORT $LL8@register_o
$LN6@register_o:

; 569  : 		}
; 570  : 	}
; 571  : 
; 572  : 	it		= objects_sleeping.begin();

	lea	ecx, DWORD PTR [ebx+262164]
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	mov	edi, eax

; 573  : 	it_e	= objects_sleeping.end();

	mov	eax, DWORD PTR [ebx+262168]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	mov	ebx, eax

; 574  : 	for(;it!=it_e;++it)

	cmp	edi, ebx
	pop	ebp
	je	SHORT $LN2@register_o
$LL4@register_o:

; 575  : 	{
; 576  : 		CObject* O = *it;

	mov	esi, DWORD PTR [edi]

; 577  : 		if(!O->getDestroy() && O->H_Parent()==object_to_destroy)

	test	DWORD PTR [esi+164], 67108864		; 04000000H
	jne	SHORT $LN86@register_o
	mov	eax, DWORD PTR _object_to_destroy$[esp+8]
	cmp	DWORD PTR [esi+180], eax
	jne	SHORT $LN86@register_o

; 578  : 		{
; 579  : 			Msg("setDestroy called, but not-destroyed child found parent[%d] child[%d]",object_to_destroy->ID(), O->ID(), Device.dwFrame);

	mov	ecx, DWORD PTR ?Device@@3VCRenderDevice@@A+24
	movzx	edx, WORD PTR [esi+164]
	movzx	eax, WORD PTR [eax+164]
	push	ecx
	push	edx
	push	eax
	push	OFFSET ??_C@_0EG@POHPENJE@setDestroy?5called?0?5but?5not?9destr@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ

; 580  : 			O->setDestroy(TRUE);

	mov	eax, DWORD PTR [esi+164]
	add	esp, 16					; 00000010H
	test	eax, 67108864				; 04000000H
	jne	SHORT $LN86@register_o
	or	eax, 67108864				; 04000000H
	mov	DWORD PTR [esi+164], eax
	mov	ecx, DWORD PTR ?g_pGameLevel@@3PAVIGame_Level@@A ; g_pGameLevel
	push	esi
	add	ecx, 76					; 0000004cH
	call	?register_object_to_destroy@CObjectList@@QAEXPAVCObject@@@Z ; CObjectList::register_object_to_destroy
$LN86@register_o:
	add	edi, 4
	cmp	edi, ebx
	jne	SHORT $LL4@register_o
$LN2@register_o:
	pop	edi
	pop	esi
	pop	ebx

; 581  : 		}
; 582  : 	}
; 583  : }

	ret	4
?register_object_to_destroy@CObjectList@@QAEXPAVCObject@@@Z ENDP ; CObjectList::register_object_to_destroy
_TEXT	ENDS
PUBLIC	?Create@CObjectList@@QAEPAVCObject@@PBD@Z	; CObjectList::Create
; Function compile flags: /Ogtpy
;	COMDAT ?Create@CObjectList@@QAEPAVCObject@@PBD@Z
_TEXT	SEGMENT
_O$ = 8							; size = 4
_name$ = 8						; size = 4
?Create@CObjectList@@QAEPAVCObject@@PBD@Z PROC		; CObjectList::Create, COMDAT
; _this$ = ecx

; 443  : 	CObject*	O				= g_pGamePersistent->ObjectPool.create(name);

	mov	eax, DWORD PTR _name$[esp-4]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR ?g_pGamePersistent@@3PAVIGame_Persistent@@A ; g_pGamePersistent
	push	edi
	push	eax
	add	ecx, 1112				; 00000458H
	call	?create@IGame_ObjectPool@@QAEPAVCObject@@PBD@Z ; IGame_ObjectPool::create

; 444  : //	Msg("CObjectList::Create [%x]%s", O, name);
; 445  : 	objects_sleeping.push_back	(O);

	lea	edi, DWORD PTR [esi+262164]
	mov	DWORD PTR _O$[esp+4], eax
	mov	eax, DWORD PTR [edi+4]
	cmp	eax, DWORD PTR [edi+8]
	je	SHORT $LN10@Create@2
	lea	ecx, DWORD PTR _O$[esp+4]
	push	ecx
	push	eax
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>

; 446  : 	return						O;

	mov	eax, DWORD PTR _O$[esp+12]
	add	esp, 8
	add	DWORD PTR [edi+4], 4
	pop	edi
	pop	esi

; 447  : }

	ret	4

; 444  : //	Msg("CObjectList::Create [%x]%s", O, name);
; 445  : 	objects_sleeping.push_back	(O);

$LN10@Create@2:
	push	1
	push	1
	push	eax
	lea	eax, DWORD PTR _O$[esp+16]
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow

; 446  : 	return						O;

	mov	eax, DWORD PTR _O$[esp+4]
	pop	edi
	pop	esi

; 447  : }

	ret	4
?Create@CObjectList@@QAEPAVCObject@@PBD@Z ENDP		; CObjectList::Create
_TEXT	ENDS
PUBLIC	?Update@CObjectList@@QAEX_N@Z			; CObjectList::Update
; Function compile flags: /Ogtpy
;	COMDAT ?Update@CObjectList@@QAEX_N@Z
_TEXT	SEGMENT
tv600 = -12						; size = 4
_Ite$127204 = -12					; size = 4
tv783 = -8						; size = 4
_objects$127162 = -8					; size = 4
_crows1$127152 = -8					; size = 4
_this$ = -4						; size = 4
$T499338 = 8						; size = 4
_it$127216 = 8						; size = 4
_dIte$127212 = 8					; size = 4
_it$127199 = 8						; size = 4
_it$127195 = 8						; size = 4
_it$127187 = 8						; size = 4
_workload$127158 = 8					; size = 4
_bForce$ = 8						; size = 1
?Update@CObjectList@@QAEX_N@Z PROC			; CObjectList::Update, COMDAT
; _this$ = ecx

; 189  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 190  : 	if ( !Device.Paused() || bForce )

	mov	eax, DWORD PTR __imp_?g_pauseMngr@@3VpauseMngr@@A
	cmp	DWORD PTR [eax+12], 0
	mov	al, BYTE PTR _bForce$[ebp]
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _this$[ebp], esi
	je	SHORT $LN39@Update@5
	test	al, al
	je	$LN166@Update@5
$LN39@Update@5:

; 191  : 	{
; 192  : 		// Clients
; 193  : 		if (Device.fTimeDelta>EPS_S || bForce)			

	movss	xmm0, DWORD PTR ?Device@@3VCRenderDevice@@A+28
	comiss	xmm0, DWORD PTR _EPS_S
	ja	SHORT $LN37@Update@5
	test	al, al
	je	$LN166@Update@5
$LN37@Update@5:

; 194  : 		{
; 195  : 			// Select Crow-Mode
; 196  : 			Device.Statistic->UpdateClient_updated	= 0;

	mov	ecx, DWORD PTR ?Device@@3VCRenderDevice@@A+920

; 197  : 
; 198  : 			Objects& crows				= m_crows[0];
; 199  : 
; 200  : 			{
; 201  : 				Objects& crows1			= m_crows[1];

	lea	eax, DWORD PTR [esi+262188]
	mov	DWORD PTR [ecx+480], 0
	mov	DWORD PTR _crows1$127152[ebp], eax

; 202  : 				crows.insert			(crows.end(), crows1.begin(), crows1.end());

	mov	eax, DWORD PTR [eax+4]
	push	eax
	lea	edi, DWORD PTR [esi+262176]
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	mov	ebx, eax
	mov	eax, DWORD PTR [edi+4]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	mov	ecx, DWORD PTR _crows1$127152[ebp]
	add	esp, 8
	mov	DWORD PTR $T499338[ebp], eax
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	cmp	eax, ebx
	je	SHORT $LN81@Update@5
	mov	edx, DWORD PTR [edi+8]
	sub	edx, DWORD PTR [edi+4]
	mov	ecx, ebx
	sub	ecx, eax
	sar	ecx, 2
	push	ecx
	sar	edx, 2
	cmp	edx, ecx
	push	ebx
	push	eax
	jb	SHORT $LN82@Update@5
	mov	eax, DWORD PTR $T499338[ebp]
	push	eax
	mov	eax, edi
	call	??$_M_range_insert_aux@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1IABU__false_type@2@@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert_aux<CObject * *>
	jmp	SHORT $LN81@Update@5
$LN82@Update@5:
	mov	ebx, DWORD PTR $T499338[ebp]
	mov	esi, edi
	call	??$_M_range_insert_realloc@PAPAVCObject@@@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXPAPAVCObject@@1I@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_range_insert_realloc<CObject * *>
	mov	esi, DWORD PTR _this$[ebp]
$LN81@Update@5:

; 203  : 				crows1.clear_not_free	();

	mov	ecx, DWORD PTR _crows1$127152[ebp]
	push	ecx
	call	?clear_not_free@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEXXZ ; xr_vector<CObject *,xalloc<CObject *> >::clear_not_free

; 204  : 			}
; 205  : 
; 206  : #if 0
; 207  : 			std::sort					(crows.begin(), crows.end());
; 208  : 			crows.erase					(
; 209  : 				std::unique(
; 210  : 					crows.begin(),
; 211  : 					crows.end()
; 212  : 				),
; 213  : 				crows.end()
; 214  : 			);
; 215  : #else
; 216  : #	ifdef DEBUG
; 217  : 			std::sort					(crows.begin(), crows.end());
; 218  : 			VERIFY						(
; 219  : 				std::unique(
; 220  : 					crows.begin(),
; 221  : 					crows.end()
; 222  : 				) == crows.end()
; 223  : 			);
; 224  : #	endif // ifdef DEBUG
; 225  : #endif
; 226  : 
; 227  : 			Device.Statistic->UpdateClient_crows	= crows.size	();

	mov	ecx, edi
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	mov	edx, DWORD PTR ?Device@@3VCRenderDevice@@A+920

; 228  : 			Objects* workload			= 0;
; 229  : 			if (!psDeviceFlags.test(rsDisableObjectsAsCrows))	

	push	2048					; 00000800H
	mov	ecx, OFFSET ?psDeviceFlags@@3U?$_flags@I@@A ; psDeviceFlags
	mov	DWORD PTR [edx+484], eax
	call	?test@?$_flags@I@@QBEHI@Z		; _flags<unsigned int>::test
	test	eax, eax
	jne	SHORT $LN36@Update@5

; 230  : 				workload				= &crows;

	mov	DWORD PTR _workload$127158[ebp], edi

; 231  : 			else {

	jmp	SHORT $LN35@Update@5
$LN36@Update@5:

; 232  : 				workload				= &objects_active;

	lea	eax, DWORD PTR [esi+262152]

; 233  : 				clear_crow_vec			(crows);

	push	edi
	mov	DWORD PTR _workload$127158[ebp], eax
	call	?clear_crow_vec@CObjectList@@CAXAAV?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@@Z ; CObjectList::clear_crow_vec
	add	esp, 4
$LN35@Update@5:

; 234  : 			}
; 235  : 
; 236  : 			Device.Statistic->UpdateClient.Begin	();

	mov	ebx, DWORD PTR ?Device@@3VCRenderDevice@@A+920
	mov	ecx, DWORD PTR __imp_?g_bEnableStatGather@@3HA
	add	ebx, 408				; 00000198H
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN102@Update@5
	add	DWORD PTR [ebx+68], 1
	cmp	DWORD PTR [ebx+24], 0
	jne	SHORT $LN102@Update@5
	call	DWORD PTR __imp_?QPC@CPU@@YA_KXZ
	sub	eax, DWORD PTR [ebx+16]
	sbb	edx, DWORD PTR [ebx+20]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	mov	DWORD PTR [ebx+4], edx
	mov	DWORD PTR [ebx+40], eax
	mov	DWORD PTR [ebx+44], eax
	mov	DWORD PTR [ebx+48], eax
	mov	DWORD PTR [ebx+52], eax
$LN102@Update@5:

; 237  : 			Device.Statistic->UpdateClient_active	= objects_active.size();

	lea	ebx, DWORD PTR [esi+262152]
	mov	ecx, ebx
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	mov	edx, DWORD PTR ?Device@@3VCRenderDevice@@A+920

; 238  : 			Device.Statistic->UpdateClient_total	= objects_active.size() + objects_sleeping.size();

	lea	ecx, DWORD PTR [esi+262164]
	mov	DWORD PTR [edx+488], eax
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	mov	ecx, ebx
	mov	DWORD PTR tv783[ebp], eax
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	mov	ecx, DWORD PTR tv783[ebp]

; 239  : 
; 240  : 			u32 const objects_count		= workload->size();

	mov	ebx, DWORD PTR _workload$127158[ebp]
	add	ecx, eax
	mov	eax, DWORD PTR ?Device@@3VCRenderDevice@@A+920
	mov	DWORD PTR [eax+492], ecx
	mov	ecx, ebx
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size

; 241  : 			CObject** objects			= (CObject**)_alloca(objects_count*sizeof(CObject*));

	add	eax, eax
	add	eax, eax
	mov	DWORD PTR tv600[ebp], eax
	call	__alloca_probe_16

; 242  : 			std::copy					( workload->begin(), workload->end(), objects );

	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR _objects$127162[ebp], esp
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	mov	ecx, DWORD PTR _workload$127158[ebp]
	add	esp, 4
	mov	ebx, eax
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	sub	ebx, eax
	je	SHORT $LN358@Update@5
	push	ebx
	mov	ebx, DWORD PTR _objects$127162[ebp]
	push	eax
	push	ebx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN161@Update@5
$LN358@Update@5:
	mov	ebx, DWORD PTR _objects$127162[ebp]
$LN161@Update@5:

; 243  : 
; 244  : 			crows.clear_not_free		();

	push	edi
	call	?clear_not_free@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEXXZ ; xr_vector<CObject *,xalloc<CObject *> >::clear_not_free

; 245  : 
; 246  : 			CObject** b					= objects;
; 247  : 			CObject** e					= objects + objects_count;

	mov	ecx, DWORD PTR tv600[ebp]
	lea	edi, DWORD PTR [ecx+ebx]

; 248  : 			for (CObject** i = b; i != e; ++i) {

	cmp	ebx, edi
	mov	eax, ebx
	je	SHORT $LN29@Update@5
	or	edx, -1
	npad	13
$LL34@Update@5:

; 249  : 				(*i)->IAmNotACrowAnyMore();

	mov	ecx, DWORD PTR [eax]
	and	DWORD PTR [ecx+164], -1073741825	; bfffffffH

; 250  : 				(*i)->dwFrame_AsCrow	= u32(-1);

	mov	ecx, DWORD PTR [eax]
	add	eax, 4
	cmp	eax, edi
	mov	DWORD PTR [ecx+256], edx
	jne	SHORT $LL34@Update@5

; 251  : 			}
; 252  : 
; 253  : 			for (CObject** i = b; i != e; ++i)

	cmp	ebx, edi
	je	SHORT $LN29@Update@5
	npad	1
$LL31@Update@5:

; 254  : 				SingleUpdate			(*i);

	mov	edx, DWORD PTR [ebx]
	push	edx
	mov	ecx, esi
	call	?SingleUpdate@CObjectList@@QAEXPAVCObject@@@Z ; CObjectList::SingleUpdate
	add	ebx, 4
	cmp	ebx, edi
	jne	SHORT $LL31@Update@5
$LN29@Update@5:

; 255  : 
; 256  : 			Device.Statistic->UpdateClient.End		();

	mov	edi, DWORD PTR ?Device@@3VCRenderDevice@@A+920
	mov	eax, DWORD PTR __imp_?g_bEnableStatGather@@3HA
	add	edi, 408				; 00000198H
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN166@Update@5
	mov	ecx, edi
	call	DWORD PTR __imp_?GetElapsed_ticks@CTimer@@QBE_KXZ
	add	DWORD PTR [edi+56], eax
	adc	DWORD PTR [edi+60], edx
$LN166@Update@5:

; 257  : 		}
; 258  : 	}
; 259  : 
; 260  : 	// Destroy
; 261  : 	if (!destroy_queue.empty()) 

	lea	ebx, DWORD PTR [esi+262140]
	mov	ecx, ebx
	call	?empty@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBE_NXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::empty
	test	al, al
	jne	$LN329@Update@5

; 262  : 	{
; 263  : 		// Info
; 264  : 		for (Objects::iterator oit=objects_active.begin(); oit!=objects_active.end(); oit++)

	lea	ecx, DWORD PTR [esi+262152]
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	mov	edi, eax
	mov	eax, DWORD PTR [esi+262156]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	cmp	edi, eax
	je	SHORT $LN25@Update@5
	npad	6
$LL27@Update@5:

; 265  : 			for (int it = destroy_queue.size()-1; it>=0; it--){	

	mov	ecx, ebx
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	sub	eax, 1
	mov	DWORD PTR _it$127187[ebp], eax
	js	SHORT $LN26@Update@5
	jmp	SHORT $LN24@Update@5
$LL360@Update@5:
	mov	eax, DWORD PTR _it$127187[ebp]
$LN24@Update@5:

; 266  : 				(*oit)->net_Relcase		(destroy_queue[it]);

	mov	ecx, DWORD PTR [edi]
	mov	esi, DWORD PTR [ecx]
	push	eax
	mov	ecx, ebx
	add	esi, 80					; 00000050H
	call	??A?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEAAPAVCObject@@I@Z ; xr_vector<CObject *,xalloc<CObject *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [esi]
	push	edx
	call	eax
	sub	DWORD PTR _it$127187[ebp], 1
	jns	SHORT $LL360@Update@5

; 265  : 			for (int it = destroy_queue.size()-1; it>=0; it--){	

	mov	esi, DWORD PTR _this$[ebp]
$LN26@Update@5:

; 262  : 	{
; 263  : 		// Info
; 264  : 		for (Objects::iterator oit=objects_active.begin(); oit!=objects_active.end(); oit++)

	mov	eax, DWORD PTR [esi+262156]
	push	eax
	add	edi, 4
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	cmp	edi, eax
	jne	SHORT $LL27@Update@5
$LN25@Update@5:

; 267  : 			}
; 268  : 		for (Objects::iterator oit=objects_sleeping.begin(); oit!=objects_sleeping.end(); oit++)

	lea	ecx, DWORD PTR [esi+262164]
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	mov	edi, eax
	mov	eax, DWORD PTR [esi+262168]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	cmp	edi, eax
	je	SHORT $LN19@Update@5
	npad	5
$LL21@Update@5:

; 269  : 			for (int it = destroy_queue.size()-1; it>=0; it--)	(*oit)->net_Relcase	(destroy_queue[it]);

	mov	ecx, ebx
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	sub	eax, 1
	mov	DWORD PTR _it$127195[ebp], eax
	js	SHORT $LN20@Update@5
	jmp	SHORT $LN18@Update@5
$LL361@Update@5:
	mov	eax, DWORD PTR _it$127195[ebp]
$LN18@Update@5:
	mov	ecx, DWORD PTR [edi]
	mov	esi, DWORD PTR [ecx]
	push	eax
	mov	ecx, ebx
	add	esi, 80					; 00000050H
	call	??A?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEAAPAVCObject@@I@Z ; xr_vector<CObject *,xalloc<CObject *> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [esi]
	push	edx
	call	eax
	sub	DWORD PTR _it$127195[ebp], 1
	jns	SHORT $LL361@Update@5
	mov	esi, DWORD PTR _this$[ebp]
$LN20@Update@5:

; 267  : 			}
; 268  : 		for (Objects::iterator oit=objects_sleeping.begin(); oit!=objects_sleeping.end(); oit++)

	mov	eax, DWORD PTR [esi+262168]
	push	eax
	add	edi, 4
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	cmp	edi, eax
	jne	SHORT $LL21@Update@5
$LN19@Update@5:

; 270  : 
; 271  : 		for (int it = destroy_queue.size()-1; it>=0; it--)	Sound->object_relcase	(destroy_queue[it]);

	mov	ecx, ebx
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	sub	eax, 1
	mov	DWORD PTR _it$127199[ebp], eax
	js	SHORT $LN13@Update@5
	jmp	SHORT $LN15@Update@5
	npad	4
$LL363@Update@5:
	mov	eax, DWORD PTR _it$127199[ebp]
$LN15@Update@5:
	mov	ecx, DWORD PTR __imp_?Sound@@3PAVCSound_manager_interface@@A
	mov	edx, DWORD PTR [ecx]
	mov	edi, DWORD PTR [edx]
	push	eax
	mov	ecx, ebx
	add	edi, 96					; 00000060H
	call	??A?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEAAPAVCObject@@I@Z ; xr_vector<CObject *,xalloc<CObject *> >::operator[]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __imp_?Sound@@3PAVCSound_manager_interface@@A
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edi]
	push	eax
	call	edx
	sub	DWORD PTR _it$127199[ebp], 1
	jns	SHORT $LL363@Update@5
$LN13@Update@5:

; 272  : 		
; 273  : 		RELCASE_CALLBACK_VEC::iterator It	= m_relcase_callbacks.begin();

	lea	ecx, DWORD PTR [esi+262204]
	call	?begin@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEPAUSRelcasePair@CObjectList@@XZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::begin

; 274  : 		RELCASE_CALLBACK_VEC::iterator Ite	= m_relcase_callbacks.end();

	lea	ecx, DWORD PTR [esi+262204]
	mov	edi, eax
	call	?end@?$_Impl_vector@USRelcasePair@CObjectList@@V?$xalloc@USRelcasePair@CObjectList@@@@@priv@stlp_std@@QAEPAUSRelcasePair@CObjectList@@XZ ; stlp_std::priv::_Impl_vector<CObjectList::SRelcasePair,xalloc<CObjectList::SRelcasePair> >::end

; 275  : 		for(;It!=Ite; ++It)	{

	cmp	edi, eax
	mov	DWORD PTR _Ite$127204[ebp], eax
	je	SHORT $LN10@Update@5
	npad	4
$LL12@Update@5:

; 276  : 			VERIFY			(*(*It).m_ID==(It-m_relcase_callbacks.begin()));
; 277  : 			Objects::iterator dIt	= destroy_queue.begin();

	mov	ecx, ebx
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin
	mov	esi, eax

; 278  : 			Objects::iterator dIte	= destroy_queue.end();

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+262144]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4

; 279  : 			for (;dIt!=dIte; ++dIt) {

	cmp	esi, eax
	mov	DWORD PTR _dIte$127212[ebp], eax
	je	SHORT $LN11@Update@5
$LL6@Update@5:

; 280  : 				(*It).m_Callback(*dIt);

	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi+8]
	push	ecx
	push	edx
	call	eax

; 281  : 				g_hud->net_Relcase	(*dIt);

	mov	ecx, DWORD PTR ?g_hud@@3PAVCCustomHUD@@A ; g_hud
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [edx+40]
	push	eax
	call	edx
	add	esi, 4
	cmp	esi, DWORD PTR _dIte$127212[ebp]
	jne	SHORT $LL6@Update@5
$LN11@Update@5:

; 275  : 		for(;It!=Ite; ++It)	{

	add	edi, 12					; 0000000cH
	cmp	edi, DWORD PTR _Ite$127204[ebp]
	jne	SHORT $LL12@Update@5
	mov	esi, DWORD PTR _this$[ebp]
$LN10@Update@5:

; 282  : 			}
; 283  : 		}
; 284  : 
; 285  : 		// Destroy
; 286  : 		for (int it = destroy_queue.size()-1; it>=0; it--)

	mov	ecx, ebx
	call	?size@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QBEIXZ ; xr_vector<CObject *,xalloc<CObject *> >::size
	sub	eax, 1
	mov	DWORD PTR _it$127216[ebp], eax
	js	SHORT $LN1@Update@5
	jmp	SHORT $LN3@Update@5
$LL362@Update@5:
	mov	eax, DWORD PTR _it$127216[ebp]
$LN3@Update@5:

; 287  : 		{
; 288  : 			CObject*		O	= destroy_queue[it];

	push	eax
	mov	ecx, ebx
	call	??A?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEAAPAVCObject@@I@Z ; xr_vector<CObject *,xalloc<CObject *> >::operator[]
	mov	edi, DWORD PTR [eax]

; 289  : //			Msg				("Object [%x]", O);
; 290  : #ifdef DEBUG
; 291  : 			if( debug_destroy )
; 292  : 				Msg			("Destroying object[%x][%x] [%d][%s] frame[%d]",dynamic_cast<void*>(O), O, O->ID(),*O->cName(), Device.dwFrame);
; 293  : #endif // DEBUG
; 294  : 			O->net_Destroy	( );

	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+52]
	mov	ecx, edi
	call	edx

; 295  : 			Destroy			(O);

	push	edi
	mov	ecx, esi
	call	?Destroy@CObjectList@@QAEXPAVCObject@@@Z ; CObjectList::Destroy
	sub	DWORD PTR _it$127216[ebp], 1
	jns	SHORT $LL362@Update@5
$LN1@Update@5:

; 296  : 		}
; 297  : 		destroy_queue.clear	();

	mov	ecx, DWORD PTR [ebx+4]
	mov	eax, DWORD PTR [ebx]
	cmp	eax, ecx
	je	SHORT $LN329@Update@5
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN335@Update@5
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN335@Update@5:
	mov	DWORD PTR [ebx+4], eax
$LN329@Update@5:

; 298  : 	}
; 299  : }

	lea	esp, DWORD PTR [ebp-24]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Update@CObjectList@@QAEX_N@Z ENDP			; CObjectList::Update
_TEXT	ENDS
PUBLIC	?FindObjectByName@CObjectList@@QAEPAVCObject@@PBD@Z ; CObjectList::FindObjectByName
; Function compile flags: /Ogtpy
;	COMDAT ?FindObjectByName@CObjectList@@QAEPAVCObject@@PBD@Z
_TEXT	SEGMENT
_name$ = 8						; size = 4
?FindObjectByName@CObjectList@@QAEPAVCObject@@PBD@Z PROC ; CObjectList::FindObjectByName, COMDAT
; _this$ = ecx

; 48   : 	return	FindObjectByName				(shared_str(name));

	mov	eax, DWORD PTR _name$[esp-4]
	push	esi
	push	edi
	push	ecx
	mov	edi, ecx
	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	esi, esp
	mov	DWORD PTR [esi], 0
	mov	ecx, DWORD PTR [ecx]
	push	eax
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	test	eax, eax
	je	SHORT $LN5@FindObject@3
	add	DWORD PTR [eax], 1
$LN5@FindObject@3:
	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN8@FindObject@3
	add	DWORD PTR [ecx], -1
	mov	edx, DWORD PTR [esi]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN8@FindObject@3
	mov	DWORD PTR [esi], 0
$LN8@FindObject@3:
	mov	ecx, edi
	mov	DWORD PTR [esi], eax
	call	?FindObjectByName@CObjectList@@QAEPAVCObject@@Vshared_str@@@Z ; CObjectList::FindObjectByName

; 49   : }

	pop	edi
	pop	esi
	ret	4
?FindObjectByName@CObjectList@@QAEPAVCObject@@PBD@Z ENDP ; CObjectList::FindObjectByName
PUBLIC	?o_sleep@CObjectList@@QAEXPAVCObject@@@Z	; CObjectList::o_sleep
; Function compile flags: /Ogtpy
;	COMDAT ?o_sleep@CObjectList@@QAEXPAVCObject@@@Z
_TEXT	SEGMENT
_O$ = 8							; size = 4
?o_sleep@CObjectList@@QAEXPAVCObject@@@Z PROC		; CObjectList::o_sleep, COMDAT
; _this$ = ecx

; 87   : 	VERIFY	(O && !O->processing_enabled());
; 88   : 	o_remove					(objects_active,O);

	mov	eax, DWORD PTR _O$[esp-4]
	push	esi
	push	edi
	mov	esi, ecx
	push	eax
	lea	ecx, DWORD PTR [esi+262152]
	push	ecx
	mov	ecx, esi
	call	?o_remove@CObjectList@@QAEXAAV?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@PAVCObject@@@Z ; CObjectList::o_remove

; 89   : 	objects_sleeping.push_back	(O);

	mov	eax, DWORD PTR [esi+262168]
	cmp	eax, DWORD PTR [esi+262172]
	lea	edi, DWORD PTR [esi+262164]
	je	SHORT $LN13@o_sleep
	lea	edx, DWORD PTR _O$[esp+4]
	push	edx
	push	eax
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [edi+4], 4
	jmp	SHORT $LN12@o_sleep
$LN13@o_sleep:
	push	1
	push	1
	push	eax
	lea	eax, DWORD PTR _O$[esp+16]
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
$LN12@o_sleep:

; 90   : 	O->MakeMeCrow				();

	mov	eax, DWORD PTR _O$[esp+4]
	test	DWORD PTR [eax+164], 1073741824		; 40000000H
	lea	ecx, DWORD PTR [eax+164]
	mov	edi, eax
	jne	SHORT $LN28@o_sleep
	cmp	BYTE PTR [eax+166], 0
	je	SHORT $LN28@o_sleep
	mov	edx, DWORD PTR ?Device@@3VCRenderDevice@@A+24
	lea	esi, DWORD PTR [eax+256]
	mov	eax, DWORD PTR [esi]
	push	ebx
	mov	ebx, edx
	lock	 cmpxchg DWORD PTR [esi], ebx
	cmp	eax, edx
	pop	ebx
	je	SHORT $LN28@o_sleep
	or	DWORD PTR [ecx], 1073741824		; 40000000H
	mov	ecx, DWORD PTR ?g_pGameLevel@@3PAVIGame_Level@@A ; g_pGameLevel
	push	edi
	add	ecx, 76					; 0000004cH
	call	?o_crow@CObjectList@@QAEXPAVCObject@@@Z	; CObjectList::o_crow
$LN28@o_sleep:
	pop	edi
	pop	esi

; 91   : }

	ret	4
?o_sleep@CObjectList@@QAEXPAVCObject@@@Z ENDP		; CObjectList::o_sleep
_TEXT	ENDS
PUBLIC	?o_activate@CObjectList@@QAEXPAVCObject@@@Z	; CObjectList::o_activate
; Function compile flags: /Ogtpy
;	COMDAT ?o_activate@CObjectList@@QAEXPAVCObject@@@Z
_TEXT	SEGMENT
_O$ = 8							; size = 4
?o_activate@CObjectList@@QAEXPAVCObject@@@Z PROC	; CObjectList::o_activate, COMDAT
; _this$ = ecx

; 80   : 	VERIFY						(O && O->processing_enabled());
; 81   : 	o_remove					(objects_sleeping,O);

	mov	eax, DWORD PTR _O$[esp-4]
	push	esi
	push	edi
	mov	esi, ecx
	push	eax
	lea	ecx, DWORD PTR [esi+262164]
	push	ecx
	mov	ecx, esi
	call	?o_remove@CObjectList@@QAEXAAV?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@PAVCObject@@@Z ; CObjectList::o_remove

; 82   : 	objects_active.push_back	(O);

	mov	eax, DWORD PTR [esi+262156]
	cmp	eax, DWORD PTR [esi+262160]
	lea	edi, DWORD PTR [esi+262152]
	je	SHORT $LN13@o_activate
	lea	edx, DWORD PTR _O$[esp+4]
	push	edx
	push	eax
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [edi+4], 4
	jmp	SHORT $LN12@o_activate
$LN13@o_activate:
	push	1
	push	1
	push	eax
	lea	eax, DWORD PTR _O$[esp+16]
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
$LN12@o_activate:

; 83   : 	O->MakeMeCrow				();

	mov	eax, DWORD PTR _O$[esp+4]
	test	DWORD PTR [eax+164], 1073741824		; 40000000H
	lea	ecx, DWORD PTR [eax+164]
	mov	edi, eax
	jne	SHORT $LN28@o_activate
	cmp	BYTE PTR [eax+166], 0
	je	SHORT $LN28@o_activate
	mov	edx, DWORD PTR ?Device@@3VCRenderDevice@@A+24
	lea	esi, DWORD PTR [eax+256]
	mov	eax, DWORD PTR [esi]
	push	ebx
	mov	ebx, edx
	lock	 cmpxchg DWORD PTR [esi], ebx
	cmp	eax, edx
	pop	ebx
	je	SHORT $LN28@o_activate
	or	DWORD PTR [ecx], 1073741824		; 40000000H
	mov	ecx, DWORD PTR ?g_pGameLevel@@3PAVIGame_Level@@A ; g_pGameLevel
	push	edi
	add	ecx, 76					; 0000004cH
	call	?o_crow@CObjectList@@QAEXPAVCObject@@@Z	; CObjectList::o_crow
$LN28@o_activate:
	pop	edi
	pop	esi

; 84   : }

	ret	4
?o_activate@CObjectList@@QAEXPAVCObject@@@Z ENDP	; CObjectList::o_activate
END
