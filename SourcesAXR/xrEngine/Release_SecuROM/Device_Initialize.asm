; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\CLEARSKY\sources\engine\xrEngine\Device_Initialize.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BH@CCDPCAPM@Initializing?5Engine?4?4?4?$AA@ ; `string'
PUBLIC	??_C@_09CBCIBEOJ@_XRAY_1?45?$AA@		; `string'
PUBLIC	??_C@_0CA@EAHKCLDA@S?4T?4A?4L?4K?4E?4R?4?3?5Call?5of?5Pripyat?$AA@ ; `string'
EXTRN	__imp__AdjustWindowRect@12:PROC
EXTRN	__imp__GetWindowLongA@8:PROC
EXTRN	__imp__LoadIconA@8:PROC
;	COMDAT ??_C@_0CA@EAHKCLDA@S?4T?4A?4L?4K?4E?4R?4?3?5Call?5of?5Pripyat?$AA@
CONST	SEGMENT
??_C@_0CA@EAHKCLDA@S?4T?4A?4L?4K?4E?4R?4?3?5Call?5of?5Pripyat?$AA@ DB 'S.'
	DB	'T.A.L.K.E.R.: Call of Pripyat', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CBCIBEOJ@_XRAY_1?45?$AA@
CONST	SEGMENT
??_C@_09CBCIBEOJ@_XRAY_1?45?$AA@ DB '_XRAY_1.5', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CCDPCAPM@Initializing?5Engine?4?4?4?$AA@
CONST	SEGMENT
??_C@_0BH@CCDPCAPM@Initializing?5Engine?4?4?4?$AA@ DB 'Initializing Engin'
	DB	'e...', 00H					; `string'
PUBLIC	?Initialize@CRenderDevice@@QAEXXZ		; CRenderDevice::Initialize
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\device_initialize.cpp
;	COMDAT ?Initialize@CRenderDevice@@QAEXXZ
_TEXT	SEGMENT
_rc$114865 = -56					; size = 16
_wndClass$114857 = -40					; size = 40
?Initialize@CRenderDevice@@QAEXXZ PROC			; CRenderDevice::Initialize, COMDAT
; _this$ = ecx

; 37   : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 60					; 0000003cH
	push	ebx
	push	esi
	push	edi

; 38   : 	Log("Initializing Engine...");

	push	OFFSET ??_C@_0BH@CCDPCAPM@Initializing?5Engine?4?4?4?$AA@
	mov	esi, ecx
	call	DWORD PTR __imp_?Log@@YAXPBD@Z

; 39   : 	TimerGlobal.Start			();

	mov	ebx, DWORD PTR __imp_?QPC@CPU@@YA_KXZ
	xor	edi, edi
	add	esp, 4
	cmp	DWORD PTR [esi+608], edi
	jne	SHORT $LN5@Initialize@6
	call	ebx
	sub	eax, DWORD PTR [esi+600]
	mov	DWORD PTR [esi+624], edi
	sbb	edx, DWORD PTR [esi+604]
	mov	DWORD PTR [esi+584], eax
	mov	DWORD PTR [esi+588], edx
	mov	DWORD PTR [esi+628], edi
	mov	DWORD PTR [esi+632], edi
	mov	DWORD PTR [esi+636], edi
$LN5@Initialize@6:

; 40   : 	TimerMM.Start				();

	cmp	DWORD PTR [esi+824], edi
	jne	SHORT $LN11@Initialize@6
	call	ebx
	sub	eax, DWORD PTR [esi+816]
	mov	DWORD PTR [esi+840], edi
	sbb	edx, DWORD PTR [esi+820]
	mov	DWORD PTR [esi+800], eax
	mov	DWORD PTR [esi+804], edx
	mov	DWORD PTR [esi+844], edi
	mov	DWORD PTR [esi+848], edi
	mov	DWORD PTR [esi+852], edi
$LN11@Initialize@6:

; 41   : 
; 42   : #ifdef INGAME_EDITOR
; 43   : 	if (strstr(Core.Params,"-editor"))
; 44   : 		initialize_editor		();
; 45   : #endif // #ifdef INGAME_EDITOR
; 46   : 
; 47   : 	// Unless a substitute hWnd has been specified, create a window to render into
; 48   :     if( m_hWnd == NULL)

	cmp	DWORD PTR [esi+760], edi
	jne	$LN1@Initialize@6

; 49   :     {
; 50   : 		const char*	wndclass ="_XRAY_1.5";
; 51   : 
; 52   :         // Register the windows class
; 53   : 		HINSTANCE hInstance = (HINSTANCE)GetModuleHandle(0);

	push	edi
	call	DWORD PTR __imp__GetModuleHandleA@4
	mov	ebx, eax

; 54   :         WNDCLASS wndClass = { 0, WndProc, 0, 0, hInstance,
; 55   :                               LoadIcon( hInstance, MAKEINTRESOURCE(IDI_ICON1) ),

	push	111					; 0000006fH
	push	ebx
	mov	DWORD PTR _wndClass$114857[esp+80], edi
	mov	DWORD PTR _wndClass$114857[esp+84], OFFSET ?WndProc@@YGJPAUHWND__@@IIJ@Z ; WndProc
	mov	DWORD PTR _wndClass$114857[esp+88], edi
	mov	DWORD PTR _wndClass$114857[esp+92], edi
	mov	DWORD PTR _wndClass$114857[esp+96], ebx
	call	DWORD PTR __imp__LoadIconA@8

; 56   :                               LoadCursor( NULL, IDC_ARROW ),

	push	32512					; 00007f00H
	push	edi
	mov	DWORD PTR _wndClass$114857[esp+100], eax
	call	DWORD PTR __imp__LoadCursorA@8

; 57   :                               (HBRUSH)GetStockObject(BLACK_BRUSH),

	push	4
	mov	DWORD PTR _wndClass$114857[esp+100], eax
	call	DWORD PTR __imp__GetStockObject@4
	mov	DWORD PTR _wndClass$114857[esp+100], eax

; 58   :                               NULL, wndclass };
; 59   :         RegisterClass( &wndClass );

	lea	eax, DWORD PTR _wndClass$114857[esp+72]
	push	eax
	mov	DWORD PTR _wndClass$114857[esp+108], edi
	mov	DWORD PTR _wndClass$114857[esp+112], OFFSET ??_C@_09CBCIBEOJ@_XRAY_1?45?$AA@
	call	DWORD PTR __imp__RegisterClassA@4

; 60   : 
; 61   :         // Set the window's initial style
; 62   :         m_dwWindowStyle = WS_BORDER |WS_DLGFRAME;
; 63   : 
; 64   :         // Set the window's initial width
; 65   :         RECT rc;
; 66   :         SetRect			( &rc, 0, 0, 640, 480 );

	push	480					; 000001e0H
	push	640					; 00000280H
	push	edi
	push	edi
	lea	ecx, DWORD PTR _rc$114865[esp+88]
	push	ecx
	mov	DWORD PTR [esi+764], 12582912		; 00c00000H
	call	DWORD PTR __imp__SetRect@20

; 67   :         AdjustWindowRect( &rc, m_dwWindowStyle, FALSE );

	mov	edx, DWORD PTR [esi+764]
	push	edi
	push	edx
	lea	eax, DWORD PTR _rc$114865[esp+80]
	push	eax
	call	DWORD PTR __imp__AdjustWindowRect@12

; 68   : 
; 69   :         // Create the render window
; 70   : 		m_hWnd = CreateWindow( wndclass, "S.T.A.L.K.E.R.: Call of Pripyat", m_dwWindowStyle,
; 71   :                                /*rc.left, rc.top, */CW_USEDEFAULT, CW_USEDEFAULT,
; 72   :                                (rc.right-rc.left), (rc.bottom-rc.top), 0L,
; 73   :                                0, hInstance, 0L );

	mov	ecx, DWORD PTR _rc$114865[esp+84]
	sub	ecx, DWORD PTR _rc$114865[esp+76]
	mov	edx, DWORD PTR _rc$114865[esp+80]
	sub	edx, DWORD PTR _rc$114865[esp+72]
	mov	eax, DWORD PTR [esi+764]
	push	edi
	push	ebx
	push	edi
	push	edi
	push	ecx
	push	edx
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	eax
	push	OFFSET ??_C@_0CA@EAHKCLDA@S?4T?4A?4L?4K?4E?4R?4?3?5Call?5of?5Pripyat?$AA@
	push	OFFSET ??_C@_09CBCIBEOJ@_XRAY_1?45?$AA@
	push	edi
	call	DWORD PTR __imp__CreateWindowExA@48
	mov	DWORD PTR [esi+760], eax
$LN1@Initialize@6:

; 74   :     }
; 75   : 
; 76   :     // Save window properties
; 77   :     m_dwWindowStyle = GetWindowLong( m_hWnd, GWL_STYLE );

	mov	ecx, DWORD PTR [esi+760]
	push	-16					; fffffff0H
	push	ecx
	call	DWORD PTR __imp__GetWindowLongA@8

; 78   :     GetWindowRect	( m_hWnd, &m_rcWindowBounds );

	lea	edx, DWORD PTR [esi+768]
	mov	DWORD PTR [esi+764], eax
	mov	eax, DWORD PTR [esi+760]
	push	edx
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8

; 79   :     GetClientRect	( m_hWnd, &m_rcWindowClient );

	mov	edx, DWORD PTR [esi+760]
	lea	ecx, DWORD PTR [esi+784]
	push	ecx
	push	edx
	call	DWORD PTR __imp__GetClientRect@8

; 80   : 
; 81   : 	/*
; 82   : 	if (strstr(lpCmdLine,"-gpu_sw")!=NULL)		HW.Caps.bForceGPU_SW		= TRUE;
; 83   : 	else										HW.Caps.bForceGPU_SW		= FALSE;
; 84   : 	if (strstr(lpCmdLine,"-gpu_nopure")!=NULL)	HW.Caps.bForceGPU_NonPure	= TRUE;
; 85   : 	else										HW.Caps.bForceGPU_NonPure	= FALSE;
; 86   : 	if (strstr(lpCmdLine,"-gpu_ref")!=NULL)		HW.Caps.bForceGPU_REF		= TRUE;
; 87   : 	else										HW.Caps.bForceGPU_REF		= FALSE;
; 88   : 	*/
; 89   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Initialize@CRenderDevice@@QAEXXZ ENDP			; CRenderDevice::Initialize
END
