; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\CLEARSKY\sources\engine\xrEngine\GameMtlLib.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??0?$xalloc@PAUSGameMtl@@@@QAE@XZ		; xalloc<SGameMtl *>::xalloc<SGameMtl *>
PUBLIC	??$?0PAUSGameMtl@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAUSGameMtl@@@@@Z ; xalloc<void *>::xalloc<void *><SGameMtl *>
PUBLIC	??0?$vector@PAUSGameMtl@@V?$xalloc@PAUSGameMtl@@@@@stlp_std@@QAE@ABV?$xalloc@PAUSGameMtl@@@@@Z ; stlp_std::vector<SGameMtl *,xalloc<SGameMtl *> >::vector<SGameMtl *,xalloc<SGameMtl *> >
PUBLIC	??0?$xr_vector@PAUSGameMtl@@V?$xalloc@PAUSGameMtl@@@@@@QAE@XZ ; xr_vector<SGameMtl *,xalloc<SGameMtl *> >::xr_vector<SGameMtl *,xalloc<SGameMtl *> >
PUBLIC	??0?$xalloc@PAUSGameMtlPair@@@@QAE@XZ		; xalloc<SGameMtlPair *>::xalloc<SGameMtlPair *>
PUBLIC	??$?0PAUSGameMtlPair@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAUSGameMtlPair@@@@@Z ; xalloc<void *>::xalloc<void *><SGameMtlPair *>
PUBLIC	??0?$vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@stlp_std@@QAE@ABV?$xalloc@PAUSGameMtlPair@@@@@Z ; stlp_std::vector<SGameMtlPair *,xalloc<SGameMtlPair *> >::vector<SGameMtlPair *,xalloc<SGameMtlPair *> >
PUBLIC	??0?$xr_vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@@QAE@XZ ; xr_vector<SGameMtlPair *,xalloc<SGameMtlPair *> >::xr_vector<SGameMtlPair *,xalloc<SGameMtlPair *> >
PUBLIC	?empty@?$vector@PAUSGameMtl@@V?$xalloc@PAUSGameMtl@@@@@stlp_std@@QBE_NXZ ; stlp_std::vector<SGameMtl *,xalloc<SGameMtl *> >::empty
PUBLIC	?to_storage_type_cref@?$_CastTraits@PAXPAUSGameMtl@@@priv@stlp_std@@SAABQAXABQAUSGameMtl@@@Z ; stlp_std::priv::_CastTraits<void *,SGameMtl *>::to_storage_type_cref
PUBLIC	?push_back@?$vector@PAUSGameMtl@@V?$xalloc@PAUSGameMtl@@@@@stlp_std@@QAEXABQAUSGameMtl@@@Z ; stlp_std::vector<SGameMtl *,xalloc<SGameMtl *> >::push_back
PUBLIC	?empty@?$vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@stlp_std@@QBE_NXZ ; stlp_std::vector<SGameMtlPair *,xalloc<SGameMtlPair *> >::empty
PUBLIC	?push_back@?$vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@stlp_std@@QAEXABQAUSGameMtlPair@@@Z ; stlp_std::vector<SGameMtlPair *,xalloc<SGameMtlPair *> >::push_back
PUBLIC	?to_storage_type_cref@?$_CastTraits@PAXPAUSGameMtlPair@@@priv@stlp_std@@SAABQAXABQAUSGameMtlPair@@@Z ; stlp_std::priv::_CastTraits<void *,SGameMtlPair *>::to_storage_type_cref
PUBLIC	?resize@?$vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@stlp_std@@QAEXIABQAUSGameMtlPair@@@Z ; stlp_std::vector<SGameMtlPair *,xalloc<SGameMtlPair *> >::resize
PUBLIC	??$xr_new@USGameMtl@@@@YAPAUSGameMtl@@XZ	; xr_new<SGameMtl>
PUBLIC	??$xr_new@USGameMtlPair@@PAVCGameMtlLibrary@@@@YAPAUSGameMtlPair@@ABQAVCGameMtlLibrary@@@Z ; xr_new<SGameMtlPair,CGameMtlLibrary *>
PUBLIC	??_C@_0DB@DBCDNIOE@d?3?2clearsky?2sources?2engine?2xreng@ ; `string'
PUBLIC	??_C@_0P@IJNIFDGG@SGameMtl?3?3Load?$AA@		; `string'
PUBLIC	??_C@_0DD@PHNOMFOC@D?3?2CLEARSKY?2sources?2engine?2xrEng@ ; `string'
PUBLIC	??_C@_0CC@KAIANBKP@fs?4find_chunk?$CIGAMEMTL_CHUNK_MAIN@ ; `string'
PUBLIC	??_C@_0CD@KIAIAPKK@fs?4find_chunk?$CIGAMEMTL_CHUNK_FLAG@ ; `string'
PUBLIC	??_C@_0CF@HMGNBJJ@fs?4find_chunk?$CIGAMEMTL_CHUNK_PHYS@ ; `string'
PUBLIC	??_C@_0CF@HOBNMHCL@fs?4find_chunk?$CIGAMEMTL_CHUNK_FACT@ ; `string'
PUBLIC	??_C@_0L@MHIDGIOF@gamemtl?4xr?$AA@		; `string'
PUBLIC	??_C@_0M@FDPKAAFL@$game_data$?$AA@		; `string'
PUBLIC	??_C@_0CC@PJHKMBOD@?$CB?5Can?8t?5find?5game?5material?5file?3@ ; `string'
PUBLIC	??_C@_0BG@KDCFJELG@CGameMtlLibrary?3?3Load?$AA@	; `string'
PUBLIC	??_C@_0BH@LFOBBKBD@material_pairs?4empty?$CI?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BC@CPAPOEEP@materials?4empty?$CI?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0CG@GELBCFFE@fs?4find_chunk?$CIGAMEMTLS_CHUNK_VER@ ; `string'
PUBLIC	??_C@_0DG@HFAKPBPF@CGameMtlLibrary?3?5invalid?5version@ ; `string'
PUBLIC	??_C@_0CG@HHALDICL@fs?4find_chunk?$CIGAMEMTLS_CHUNK_AUT@ ; `string'
EXTRN	__imp_?PGMLib@@3PAVCGameMtlLibrary@@A:DWORD
EXTRN	__imp_?close@IReader@@QAEXXZ:PROC
EXTRN	__imp_?open_chunk@IReader@@QAEPAV1@I@Z:PROC
EXTRN	__imp_?open_chunk_iterator@IReader@@QAEPAV1@AAIPAV1@@Z:PROC
;	COMDAT ?ignore_always@?3??Load@SGameMtl@@QAEXAAVIReader@@@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3??Load@SGameMtl@@QAEXAAVIReader@@@Z@4_NA DB 01H DUP (?) ; `SGameMtl::Load'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?L@??Load@SGameMtl@@QAEXAAVIReader@@@Z@4_NA
_BSS	SEGMENT
?ignore_always@?L@??Load@SGameMtl@@QAEXAAVIReader@@@Z@4_NA DB 01H DUP (?) ; `SGameMtl::Load'::`11'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?P@??Load@SGameMtl@@QAEXAAVIReader@@@Z@4_NA
_BSS	SEGMENT
?ignore_always@?P@??Load@SGameMtl@@QAEXAAVIReader@@@Z@4_NA DB 01H DUP (?) ; `SGameMtl::Load'::`15'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BD@??Load@SGameMtl@@QAEXAAVIReader@@@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BD@??Load@SGameMtl@@QAEXAAVIReader@@@Z@4_NA DB 01H DUP (?) ; `SGameMtl::Load'::`19'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?6??Load@CGameMtlLibrary@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?6??Load@CGameMtlLibrary@@QAEXXZ@4_NA DB 01H DUP (?) ; `CGameMtlLibrary::Load'::`7'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?L@??Load@CGameMtlLibrary@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?L@??Load@CGameMtlLibrary@@QAEXXZ@4_NA DB 01H DUP (?) ; `CGameMtlLibrary::Load'::`11'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?P@??Load@CGameMtlLibrary@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?P@??Load@CGameMtlLibrary@@QAEXXZ@4_NA DB 01H DUP (?) ; `CGameMtlLibrary::Load'::`15'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BG@??Load@CGameMtlLibrary@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?BG@??Load@CGameMtlLibrary@@QAEXXZ@4_NA DB 01H DUP (?) ; `CGameMtlLibrary::Load'::`22'::ignore_always
;	COMDAT ??_C@_0CG@HHALDICL@fs?4find_chunk?$CIGAMEMTLS_CHUNK_AUT@
CONST	SEGMENT
??_C@_0CG@HHALDICL@fs?4find_chunk?$CIGAMEMTLS_CHUNK_AUT@ DB 'fs.find_chun'
	DB	'k(GAMEMTLS_CHUNK_AUTOINC)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@HFAKPBPF@CGameMtlLibrary?3?5invalid?5version@
CONST	SEGMENT
??_C@_0DG@HFAKPBPF@CGameMtlLibrary?3?5invalid?5version@ DB 'CGameMtlLibra'
	DB	'ry: invalid version. Library can''t load.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@GELBCFFE@fs?4find_chunk?$CIGAMEMTLS_CHUNK_VER@
CONST	SEGMENT
??_C@_0CG@GELBCFFE@fs?4find_chunk?$CIGAMEMTLS_CHUNK_VER@ DB 'fs.find_chun'
	DB	'k(GAMEMTLS_CHUNK_VERSION)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CPAPOEEP@materials?4empty?$CI?$CJ?$AA@
CONST	SEGMENT
??_C@_0BC@CPAPOEEP@materials?4empty?$CI?$CJ?$AA@ DB 'materials.empty()', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LFOBBKBD@material_pairs?4empty?$CI?$CJ?$AA@
CONST	SEGMENT
??_C@_0BH@LFOBBKBD@material_pairs?4empty?$CI?$CJ?$AA@ DB 'material_pairs.'
	DB	'empty()', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KDCFJELG@CGameMtlLibrary?3?3Load?$AA@
CONST	SEGMENT
??_C@_0BG@KDCFJELG@CGameMtlLibrary?3?3Load?$AA@ DB 'CGameMtlLibrary::Load'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@PJHKMBOD@?$CB?5Can?8t?5find?5game?5material?5file?3@
CONST	SEGMENT
??_C@_0CC@PJHKMBOD@?$CB?5Can?8t?5find?5game?5material?5file?3@ DB '! Can'''
	DB	't find game material file: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FDPKAAFL@$game_data$?$AA@
CONST	SEGMENT
??_C@_0M@FDPKAAFL@$game_data$?$AA@ DB '$game_data$', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MHIDGIOF@gamemtl?4xr?$AA@
CONST	SEGMENT
??_C@_0L@MHIDGIOF@gamemtl?4xr?$AA@ DB 'gamemtl.xr', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@HOBNMHCL@fs?4find_chunk?$CIGAMEMTL_CHUNK_FACT@
CONST	SEGMENT
??_C@_0CF@HOBNMHCL@fs?4find_chunk?$CIGAMEMTL_CHUNK_FACT@ DB 'fs.find_chun'
	DB	'k(GAMEMTL_CHUNK_FACTORS)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@HMGNBJJ@fs?4find_chunk?$CIGAMEMTL_CHUNK_PHYS@
CONST	SEGMENT
??_C@_0CF@HMGNBJJ@fs?4find_chunk?$CIGAMEMTL_CHUNK_PHYS@ DB 'fs.find_chunk'
	DB	'(GAMEMTL_CHUNK_PHYSICS)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@KIAIAPKK@fs?4find_chunk?$CIGAMEMTL_CHUNK_FLAG@
CONST	SEGMENT
??_C@_0CD@KIAIAPKK@fs?4find_chunk?$CIGAMEMTL_CHUNK_FLAG@ DB 'fs.find_chun'
	DB	'k(GAMEMTL_CHUNK_FLAGS)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@KAIANBKP@fs?4find_chunk?$CIGAMEMTL_CHUNK_MAIN@
CONST	SEGMENT
??_C@_0CC@KAIANBKP@fs?4find_chunk?$CIGAMEMTL_CHUNK_MAIN@ DB 'fs.find_chun'
	DB	'k(GAMEMTL_CHUNK_MAIN)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@PHNOMFOC@D?3?2CLEARSKY?2sources?2engine?2xrEng@
CONST	SEGMENT
??_C@_0DD@PHNOMFOC@D?3?2CLEARSKY?2sources?2engine?2xrEng@ DB 'D:\CLEARSKY'
	DB	'\sources\engine\xrEngine\GameMtlLib.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IJNIFDGG@SGameMtl?3?3Load?$AA@
CONST	SEGMENT
??_C@_0P@IJNIFDGG@SGameMtl?3?3Load?$AA@ DB 'SGameMtl::Load', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@DBCDNIOE@d?3?2clearsky?2sources?2engine?2xreng@
CONST	SEGMENT
??_C@_0DB@DBCDNIOE@d?3?2clearsky?2sources?2engine?2xreng@ DB 'd:\clearsky'
	DB	'\sources\engine\xrengine\GameMtlLib.h', 00H	; `string'
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
;	COMDAT ??$?0PAUSGameMtlPair@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAUSGameMtlPair@@@@@Z
_TEXT	SEGMENT
??$?0PAUSGameMtlPair@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAUSGameMtlPair@@@@@Z PROC ; xalloc<void *>::xalloc<void *><SGameMtlPair *>, COMDAT
; _this$ = eax

; 79   : 	template<class _Other>							xalloc			(const xalloc<_Other>&)					{	}

	ret	0
??$?0PAUSGameMtlPair@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAUSGameMtlPair@@@@@Z ENDP ; xalloc<void *>::xalloc<void *><SGameMtlPair *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0PAUSGameMtl@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAUSGameMtl@@@@@Z
_TEXT	SEGMENT
??$?0PAUSGameMtl@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAUSGameMtl@@@@@Z PROC ; xalloc<void *>::xalloc<void *><SGameMtl *>, COMDAT
; _this$ = eax

; 79   : 	template<class _Other>							xalloc			(const xalloc<_Other>&)					{	}

	ret	0
??$?0PAUSGameMtl@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAUSGameMtl@@@@@Z ENDP ; xalloc<void *>::xalloc<void *><SGameMtl *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xalloc@PAUSGameMtlPair@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xalloc@PAUSGameMtlPair@@@@QAE@XZ PROC		; xalloc<SGameMtlPair *>::xalloc<SGameMtlPair *>, COMDAT
; _this$ = eax

; 77   : 													xalloc			()										{	}

	ret	0
??0?$xalloc@PAUSGameMtlPair@@@@QAE@XZ ENDP		; xalloc<SGameMtlPair *>::xalloc<SGameMtlPair *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xalloc@PAUSGameMtl@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xalloc@PAUSGameMtl@@@@QAE@XZ PROC			; xalloc<SGameMtl *>::xalloc<SGameMtl *>, COMDAT
; _this$ = eax

; 77   : 													xalloc			()										{	}

	ret	0
??0?$xalloc@PAUSGameMtl@@@@QAE@XZ ENDP			; xalloc<SGameMtl *>::xalloc<SGameMtl *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
;	COMDAT ?to_storage_type_cref@?$_CastTraits@PAXPAUSGameMtlPair@@@priv@stlp_std@@SAABQAXABQAUSGameMtlPair@@@Z
_TEXT	SEGMENT
?to_storage_type_cref@?$_CastTraits@PAXPAUSGameMtlPair@@@priv@stlp_std@@SAABQAXABQAUSGameMtlPair@@@Z PROC ; stlp_std::priv::_CastTraits<void *,SGameMtlPair *>::to_storage_type_cref, COMDAT
; ___ref$ = eax

; 224  :   { return cv_traits::uncv_cref(__REINTERPRET_CAST(void_cv_type const&, __ref)); }

	ret	0
?to_storage_type_cref@?$_CastTraits@PAXPAUSGameMtlPair@@@priv@stlp_std@@SAABQAXABQAUSGameMtlPair@@@Z ENDP ; stlp_std::priv::_CastTraits<void *,SGameMtlPair *>::to_storage_type_cref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_storage_type_cref@?$_CastTraits@PAXPAUSGameMtl@@@priv@stlp_std@@SAABQAXABQAUSGameMtl@@@Z
_TEXT	SEGMENT
?to_storage_type_cref@?$_CastTraits@PAXPAUSGameMtl@@@priv@stlp_std@@SAABQAXABQAUSGameMtl@@@Z PROC ; stlp_std::priv::_CastTraits<void *,SGameMtl *>::to_storage_type_cref, COMDAT
; ___ref$ = eax

; 224  :   { return cv_traits::uncv_cref(__REINTERPRET_CAST(void_cv_type const&, __ref)); }

	ret	0
?to_storage_type_cref@?$_CastTraits@PAXPAUSGameMtl@@@priv@stlp_std@@SAABQAXABQAUSGameMtl@@@Z ENDP ; stlp_std::priv::_CastTraits<void *,SGameMtl *>::to_storage_type_cref
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?empty@?$vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@stlp_std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@stlp_std@@QBE_NXZ PROC ; stlp_std::vector<SGameMtlPair *,xalloc<SGameMtlPair *> >::empty, COMDAT
; _this$ = ecx

; 93   :   bool empty() const            { return _M_impl.empty(); }

	jmp	?empty@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBE_NXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::empty
?empty@?$vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@stlp_std@@QBE_NXZ ENDP ; stlp_std::vector<SGameMtlPair *,xalloc<SGameMtlPair *> >::empty
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?empty@?$vector@PAUSGameMtl@@V?$xalloc@PAUSGameMtl@@@@@stlp_std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@PAUSGameMtl@@V?$xalloc@PAUSGameMtl@@@@@stlp_std@@QBE_NXZ PROC ; stlp_std::vector<SGameMtl *,xalloc<SGameMtl *> >::empty, COMDAT
; _this$ = ecx

; 93   :   bool empty() const            { return _M_impl.empty(); }

	jmp	?empty@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBE_NXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::empty
?empty@?$vector@PAUSGameMtl@@V?$xalloc@PAUSGameMtl@@@@@stlp_std@@QBE_NXZ ENDP ; stlp_std::vector<SGameMtl *,xalloc<SGameMtl *> >::empty
_TEXT	ENDS
PUBLIC	?Load@SGameMtl@@QAEXAAVIReader@@@Z		; SGameMtl::Load
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\gamemtllib.cpp
;	COMDAT ?Load@SGameMtl@@QAEXAAVIReader@@@Z
_TEXT	SEGMENT
_fs$ = 8						; size = 4
?Load@SGameMtl@@QAEXAAVIReader@@@Z PROC			; SGameMtl::Load, COMDAT
; _this$ = ecx

; 25   : 	R_ASSERT(fs.find_chunk(GAMEMTL_CHUNK_MAIN));

	cmp	BYTE PTR ?ignore_always@?3??Load@SGameMtl@@QAEXAAVIReader@@@Z@4_NA, 0
	push	ebx
	mov	ebx, DWORD PTR __imp_?find_chunk@IReader@@QAEIIPAH@Z
	push	esi
	mov	esi, DWORD PTR _fs$[esp+4]
	push	edi
	mov	edi, ecx
	jne	SHORT $LN21@Load@3
	push	0
	push	4096					; 00001000H
	mov	ecx, esi
	call	ebx
	test	eax, eax
	jne	SHORT $LN21@Load@3
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??Load@SGameMtl@@QAEXAAVIReader@@@Z@4_NA
	push	OFFSET ??_C@_0P@IJNIFDGG@SGameMtl?3?3Load?$AA@
	push	25					; 00000019H
	push	OFFSET ??_C@_0DD@PHNOMFOC@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0CC@KAIANBKP@fs?4find_chunk?$CIGAMEMTL_CHUNK_MAIN@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN21@Load@3:
	push	ebp

; 26   : 	ID						= fs.r_u32();

	mov	ecx, esi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 27   :     fs.r_stringZ			(m_Name);

	mov	ebp, DWORD PTR __imp_?r_stringZ@IReader@@QAEXAAVshared_str@@@Z
	mov	DWORD PTR [edi], eax
	lea	eax, DWORD PTR [edi+4]
	push	eax
	mov	ecx, esi
	call	ebp

; 28   : 
; 29   :     if (fs.find_chunk(GAMEMTL_CHUNK_DESC)){

	push	0
	push	4101					; 00001005H
	mov	ecx, esi
	call	ebx
	test	eax, eax
	je	SHORT $LN17@Load@3

; 30   : 		fs.r_stringZ		(m_Desc);

	lea	ecx, DWORD PTR [edi+8]
	push	ecx
	mov	ecx, esi
	call	ebp
$LN17@Load@3:

; 31   :     }
; 32   :     
; 33   : 	R_ASSERT(fs.find_chunk(GAMEMTL_CHUNK_FLAGS));

	cmp	BYTE PTR ?ignore_always@?L@??Load@SGameMtl@@QAEXAAVIReader@@@Z@4_NA, 0
	pop	ebp
	jne	SHORT $LN16@Load@3
	push	0
	push	4097					; 00001001H
	mov	ecx, esi
	call	ebx
	test	eax, eax
	jne	SHORT $LN16@Load@3
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?L@??Load@SGameMtl@@QAEXAAVIReader@@@Z@4_NA
	push	OFFSET ??_C@_0P@IJNIFDGG@SGameMtl?3?3Load?$AA@
	push	33					; 00000021H
	push	OFFSET ??_C@_0DD@PHNOMFOC@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0CD@KIAIAPKK@fs?4find_chunk?$CIGAMEMTL_CHUNK_FLAG@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN16@Load@3:

; 34   :     Flags.assign			(fs.r_u32());

	mov	ecx, esi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ
	mov	DWORD PTR [edi+12], eax

; 35   : 
; 36   : 	R_ASSERT(fs.find_chunk(GAMEMTL_CHUNK_PHYSICS));

	cmp	BYTE PTR ?ignore_always@?P@??Load@SGameMtl@@QAEXAAVIReader@@@Z@4_NA, 0
	jne	SHORT $LN12@Load@3
	push	0
	push	4098					; 00001002H
	mov	ecx, esi
	call	ebx
	test	eax, eax
	jne	SHORT $LN12@Load@3
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?P@??Load@SGameMtl@@QAEXAAVIReader@@@Z@4_NA
	push	OFFSET ??_C@_0P@IJNIFDGG@SGameMtl?3?3Load?$AA@
	push	36					; 00000024H
	push	OFFSET ??_C@_0DD@PHNOMFOC@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0CF@HMGNBJJ@fs?4find_chunk?$CIGAMEMTL_CHUNK_PHYS@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN12@Load@3:

; 37   :     fPHFriction				= fs.r_float();

	mov	ecx, esi
	call	DWORD PTR __imp_?r_float@?$IReaderBase@VIReader@@@@QAEMXZ
	fstp	DWORD PTR [edi+16]

; 38   :     fPHDamping				= fs.r_float();

	mov	ecx, esi
	call	DWORD PTR __imp_?r_float@?$IReaderBase@VIReader@@@@QAEMXZ
	fstp	DWORD PTR [edi+20]

; 39   :     fPHSpring				= fs.r_float();

	mov	ecx, esi
	call	DWORD PTR __imp_?r_float@?$IReaderBase@VIReader@@@@QAEMXZ
	fstp	DWORD PTR [edi+24]

; 40   :     fPHBounceStartVelocity 	= fs.r_float();

	mov	ecx, esi
	call	DWORD PTR __imp_?r_float@?$IReaderBase@VIReader@@@@QAEMXZ
	fstp	DWORD PTR [edi+28]

; 41   :     fPHBouncing				= fs.r_float();

	mov	ecx, esi
	call	DWORD PTR __imp_?r_float@?$IReaderBase@VIReader@@@@QAEMXZ
	fstp	DWORD PTR [edi+32]

; 42   : 
; 43   : 	R_ASSERT(fs.find_chunk(GAMEMTL_CHUNK_FACTORS));

	cmp	BYTE PTR ?ignore_always@?BD@??Load@SGameMtl@@QAEXAAVIReader@@@Z@4_NA, 0
	jne	SHORT $LN8@Load@3
	push	0
	push	4099					; 00001003H
	mov	ecx, esi
	call	ebx
	test	eax, eax
	jne	SHORT $LN8@Load@3
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BD@??Load@SGameMtl@@QAEXAAVIReader@@@Z@4_NA
	push	OFFSET ??_C@_0P@IJNIFDGG@SGameMtl?3?3Load?$AA@
	push	43					; 0000002bH
	push	OFFSET ??_C@_0DD@PHNOMFOC@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0CF@HOBNMHCL@fs?4find_chunk?$CIGAMEMTL_CHUNK_FACT@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN8@Load@3:

; 44   :     fShootFactor			= fs.r_float();

	mov	ecx, esi
	call	DWORD PTR __imp_?r_float@?$IReaderBase@VIReader@@@@QAEMXZ
	fstp	DWORD PTR [edi+40]

; 45   :     fBounceDamageFactor		= fs.r_float();

	mov	ecx, esi
	call	DWORD PTR __imp_?r_float@?$IReaderBase@VIReader@@@@QAEMXZ
	fstp	DWORD PTR [edi+48]

; 46   :     fVisTransparencyFactor	= fs.r_float();

	mov	ecx, esi
	call	DWORD PTR __imp_?r_float@?$IReaderBase@VIReader@@@@QAEMXZ
	fstp	DWORD PTR [edi+56]

; 47   :     fSndOcclusionFactor		= fs.r_float();

	mov	ecx, esi
	call	DWORD PTR __imp_?r_float@?$IReaderBase@VIReader@@@@QAEMXZ
	fstp	DWORD PTR [edi+60]

; 48   : 
; 49   : 
; 50   : 	if(fs.find_chunk(GAMEMTL_CHUNK_FACTORS_MP))

	push	0
	push	4104					; 00001008H
	mov	ecx, esi
	call	ebx
	test	eax, eax
	je	SHORT $LN5@Load@3

; 51   : 	    fShootFactorMP	    = fs.r_float();

	mov	ecx, esi
	call	DWORD PTR __imp_?r_float@?$IReaderBase@VIReader@@@@QAEMXZ

; 52   :     else

	jmp	SHORT $LN33@Load@3
$LN5@Load@3:

; 53   : 	    fShootFactorMP	    = fShootFactor;

	fld	DWORD PTR [edi+40]
$LN33@Load@3:

; 54   : 
; 55   : 	if(fs.find_chunk(GAMEMTL_CHUNK_FLOTATION))

	push	0
	fstp	DWORD PTR [edi+44]
	push	4100					; 00001004H
	mov	ecx, esi
	call	ebx
	test	eax, eax
	je	SHORT $LN3@Load@3

; 56   : 	    fFlotationFactor	= fs.r_float();

	mov	ecx, esi
	call	DWORD PTR __imp_?r_float@?$IReaderBase@VIReader@@@@QAEMXZ
	fstp	DWORD PTR [edi+36]
$LN3@Load@3:

; 57   : 
; 58   :     if(fs.find_chunk(GAMEMTL_CHUNK_INJURIOUS))

	push	0
	push	4102					; 00001006H
	mov	ecx, esi
	call	ebx
	test	eax, eax
	je	SHORT $LN2@Load@3

; 59   :     	fInjuriousSpeed		= fs.r_float();

	mov	ecx, esi
	call	DWORD PTR __imp_?r_float@?$IReaderBase@VIReader@@@@QAEMXZ
	fstp	DWORD PTR [edi+52]
$LN2@Load@3:

; 60   :     
; 61   : 	if(fs.find_chunk(GAMEMTL_CHUNK_DENSITY))

	push	0
	push	4103					; 00001007H
	mov	ecx, esi
	call	ebx
	test	eax, eax
	je	SHORT $LN1@Load@3

; 62   :     	fDensityFactor		= fs.r_float();

	mov	ecx, esi
	call	DWORD PTR __imp_?r_float@?$IReaderBase@VIReader@@@@QAEMXZ
	fstp	DWORD PTR [edi+64]
$LN1@Load@3:
	pop	edi
	pop	esi
	pop	ebx

; 63   : }

	ret	4
?Load@SGameMtl@@QAEXAAVIReader@@@Z ENDP			; SGameMtl::Load
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
;	COMDAT ??0?$vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@stlp_std@@QAE@ABV?$xalloc@PAUSGameMtlPair@@@@@Z
_TEXT	SEGMENT
??0?$vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@stlp_std@@QAE@ABV?$xalloc@PAUSGameMtlPair@@@@@Z PROC ; stlp_std::vector<SGameMtlPair *,xalloc<SGameMtlPair *> >::vector<SGameMtlPair *,xalloc<SGameMtlPair *> >, COMDAT
; _this$ = eax

; 106  :   explicit vector(const allocator_type& __a = allocator_type())

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@stlp_std@@QAE@ABV?$xalloc@PAUSGameMtlPair@@@@@Z ENDP ; stlp_std::vector<SGameMtlPair *,xalloc<SGameMtlPair *> >::vector<SGameMtlPair *,xalloc<SGameMtlPair *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$vector@PAUSGameMtl@@V?$xalloc@PAUSGameMtl@@@@@stlp_std@@QAE@ABV?$xalloc@PAUSGameMtl@@@@@Z
_TEXT	SEGMENT
??0?$vector@PAUSGameMtl@@V?$xalloc@PAUSGameMtl@@@@@stlp_std@@QAE@ABV?$xalloc@PAUSGameMtl@@@@@Z PROC ; stlp_std::vector<SGameMtl *,xalloc<SGameMtl *> >::vector<SGameMtl *,xalloc<SGameMtl *> >, COMDAT
; _this$ = eax

; 106  :   explicit vector(const allocator_type& __a = allocator_type())

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$vector@PAUSGameMtl@@V?$xalloc@PAUSGameMtl@@@@@stlp_std@@QAE@ABV?$xalloc@PAUSGameMtl@@@@@Z ENDP ; stlp_std::vector<SGameMtl *,xalloc<SGameMtl *> >::vector<SGameMtl *,xalloc<SGameMtl *> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
;	COMDAT ??0?$xr_vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xr_vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@@QAE@XZ PROC ; xr_vector<SGameMtlPair *,xalloc<SGameMtlPair *> >::xr_vector<SGameMtlPair *,xalloc<SGameMtlPair *> >, COMDAT
; _this$ = eax

; 123  : 			xr_vector			()									: inherited	()					{}

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$xr_vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@@QAE@XZ ENDP ; xr_vector<SGameMtlPair *,xalloc<SGameMtlPair *> >::xr_vector<SGameMtlPair *,xalloc<SGameMtlPair *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xr_vector@PAUSGameMtl@@V?$xalloc@PAUSGameMtl@@@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xr_vector@PAUSGameMtl@@V?$xalloc@PAUSGameMtl@@@@@@QAE@XZ PROC ; xr_vector<SGameMtl *,xalloc<SGameMtl *> >::xr_vector<SGameMtl *,xalloc<SGameMtl *> >, COMDAT
; _this$ = eax

; 123  : 			xr_vector			()									: inherited	()					{}

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$xr_vector@PAUSGameMtl@@V?$xalloc@PAUSGameMtl@@@@@@QAE@XZ ENDP ; xr_vector<SGameMtl *,xalloc<SGameMtl *> >::xr_vector<SGameMtl *,xalloc<SGameMtl *> >
_TEXT	ENDS
PUBLIC	??0CGameMtlLibrary@@QAE@XZ			; CGameMtlLibrary::CGameMtlLibrary
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\gamemtllib.cpp
;	COMDAT ??0CGameMtlLibrary@@QAE@XZ
_TEXT	SEGMENT
??0CGameMtlLibrary@@QAE@XZ PROC				; CGameMtlLibrary::CGameMtlLibrary, COMDAT
; _this$ = ecx

; 14   : 	{

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], ecx
	mov	DWORD PTR [eax+24], ecx
	mov	DWORD PTR [eax+28], ecx
	mov	DWORD PTR [eax+36], ecx
	mov	DWORD PTR [eax+40], ecx
	mov	DWORD PTR [eax+44], ecx

; 15   : 	    material_index 		= 0;

	mov	DWORD PTR [eax], ecx

; 16   : 	    material_pair_index = 0;

	mov	DWORD PTR [eax+4], ecx

; 17   : #ifndef _EDITOR
; 18   :         material_count	    = 0;

	mov	DWORD PTR [eax+32], ecx

; 19   : #endif
; 20   : 		PGMLib = &GMLib;

	mov	ecx, DWORD PTR __imp_?PGMLib@@3PAVCGameMtlLibrary@@A
	mov	DWORD PTR [ecx], OFFSET ?GMLib@@3VCGameMtlLibrary@@A ; GMLib

; 21   :     }

	ret	0
??0CGameMtlLibrary@@QAE@XZ ENDP				; CGameMtlLibrary::CGameMtlLibrary
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
;	COMDAT ??$xr_new@USGameMtl@@@@YAPAUSGameMtl@@XZ
_TEXT	SEGMENT
??$xr_new@USGameMtl@@@@YAPAUSGameMtl@@XZ PROC		; xr_new<SGameMtl>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	68					; 00000044H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	test	eax, eax
	je	SHORT $LN3@xr_new@30
	mov	ecx, eax
	jmp	??0SGameMtl@@QAE@XZ			; SGameMtl::SGameMtl
$LN3@xr_new@30:
	xor	eax, eax

; 70   : }

	ret	0
??$xr_new@USGameMtl@@@@YAPAUSGameMtl@@XZ ENDP		; xr_new<SGameMtl>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@stlp_std@@QAEXABQAUSGameMtlPair@@@Z
_TEXT	SEGMENT
?push_back@?$vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@stlp_std@@QAEXABQAUSGameMtlPair@@@Z PROC ; stlp_std::vector<SGameMtlPair *,xalloc<SGameMtlPair *> >::push_back, COMDAT
; _this$ = ecx
; ___x$ = eax

; 171  :   { _M_impl.push_back(cast_traits::to_storage_type_cref(__x)); }

	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [edi+4]
	cmp	ecx, DWORD PTR [edi+8]
	je	SHORT $LN8@push_back@43
	push	eax
	push	ecx
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [edi+4], 4
	pop	edi
	ret	0
$LN8@push_back@43:
	push	1
	push	1
	push	ecx
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
	pop	edi
	ret	0
?push_back@?$vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@stlp_std@@QAEXABQAUSGameMtlPair@@@Z ENDP ; stlp_std::vector<SGameMtlPair *,xalloc<SGameMtlPair *> >::push_back
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@PAUSGameMtl@@V?$xalloc@PAUSGameMtl@@@@@stlp_std@@QAEXABQAUSGameMtl@@@Z
_TEXT	SEGMENT
?push_back@?$vector@PAUSGameMtl@@V?$xalloc@PAUSGameMtl@@@@@stlp_std@@QAEXABQAUSGameMtl@@@Z PROC ; stlp_std::vector<SGameMtl *,xalloc<SGameMtl *> >::push_back, COMDAT
; _this$ = ecx
; ___x$ = eax

; 171  :   { _M_impl.push_back(cast_traits::to_storage_type_cref(__x)); }

	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [edi+4]
	cmp	ecx, DWORD PTR [edi+8]
	je	SHORT $LN8@push_back@44
	push	eax
	push	ecx
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [edi+4], 4
	pop	edi
	ret	0
$LN8@push_back@44:
	push	1
	push	1
	push	ecx
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
	pop	edi
	ret	0
?push_back@?$vector@PAUSGameMtl@@V?$xalloc@PAUSGameMtl@@@@@stlp_std@@QAEXABQAUSGameMtl@@@Z ENDP ; stlp_std::vector<SGameMtl *,xalloc<SGameMtl *> >::push_back
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@stlp_std@@QAEXIABQAUSGameMtlPair@@@Z
_TEXT	SEGMENT
?resize@?$vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@stlp_std@@QAEXIABQAUSGameMtlPair@@@Z PROC ; stlp_std::vector<SGameMtlPair *,xalloc<SGameMtlPair *> >::resize, COMDAT
; _this$ = edx
; ___new_size$ = ecx
; ___x$ = eax

; 217  :   { _M_impl.resize(__new_size, cast_traits::to_storage_type_cref(__x)); }

	jmp	?resize@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXIABQAX@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::resize
?resize@?$vector@PAUSGameMtlPair@@V?$xalloc@PAUSGameMtlPair@@@@@stlp_std@@QAEXIABQAUSGameMtlPair@@@Z ENDP ; stlp_std::vector<SGameMtlPair *,xalloc<SGameMtlPair *> >::resize
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
;	COMDAT ??$xr_new@USGameMtlPair@@PAVCGameMtlLibrary@@@@YAPAUSGameMtlPair@@ABQAVCGameMtlLibrary@@@Z
_TEXT	SEGMENT
_p1$ = 8						; size = 4
??$xr_new@USGameMtlPair@@PAVCGameMtlLibrary@@@@YAPAUSGameMtlPair@@ABQAVCGameMtlLibrary@@@Z PROC ; xr_new<SGameMtlPair,CGameMtlLibrary *>, COMDAT

; 74   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	76					; 0000004cH
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 75   : 	return new (ptr) T(p1);

	test	eax, eax
	je	SHORT $LN3@xr_new@42
	mov	ecx, DWORD PTR _p1$[esp-4]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, eax
	call	??0SGameMtlPair@@QAE@PAVCGameMtlLibrary@@@Z ; SGameMtlPair::SGameMtlPair

; 76   : }

	ret	0
$LN3@xr_new@42:

; 75   : 	return new (ptr) T(p1);

	xor	eax, eax

; 76   : }

	ret	0
??$xr_new@USGameMtlPair@@PAVCGameMtlLibrary@@@@YAPAUSGameMtlPair@@ABQAVCGameMtlLibrary@@@Z ENDP ; xr_new<SGameMtlPair,CGameMtlLibrary *>
_TEXT	ENDS
PUBLIC	?Load@CGameMtlLibrary@@QAEXXZ			; CGameMtlLibrary::Load
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\gamemtllib.cpp
;	COMDAT ?Load@CGameMtlLibrary@@QAEXXZ
_TEXT	SEGMENT
$T529992 = -540						; size = 4
$T529866 = -540						; size = 4
$T529740 = -540						; size = 4
$T529614 = -540						; size = 4
$T529003 = -540						; size = 4
_count$116756 = -540					; size = 4
_fs$ = -540						; size = 4
_S$116775 = -536					; size = 4
_M$116761 = -536					; size = 4
_M$116750 = -536					; size = 4
_p_it$116771 = -532					; size = 4
_OBJ$ = -532						; size = 4
$T529867 = -528						; size = 2
$T529615 = -528						; size = 2
_count$116745 = -528					; size = 4
_F$ = -524						; size = 4
_name$ = -520						; size = 520
?Load@CGameMtlLibrary@@QAEXXZ PROC			; CGameMtlLibrary::Load, COMDAT
; _this$ = ecx

; 66   : {

	sub	esp, 540				; 0000021cH
	push	esi

; 67   : 	string_path			name;
; 68   : 	if (!FS.exist(name,	_game_data_,GAMEMTL_FILENAME)){

	push	OFFSET ??_C@_0L@MHIDGIOF@gamemtl?4xr?$AA@
	mov	esi, ecx
	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [ecx]
	push	OFFSET ??_C@_0M@FDPKAAFL@$game_data$?$AA@
	lea	eax, DWORD PTR _name$[esp+552]
	push	eax
	call	DWORD PTR __imp_?exist@CLocatorAPI@@QAEPBUfile@1@AAY0CAI@DPBD1@Z
	test	eax, eax
	jne	SHORT $LN28@Load@11

; 69   :     	Log				("! Can't find game material file: ",name);

	lea	edx, DWORD PTR _name$[esp+544]
	push	edx
	push	OFFSET ??_C@_0CC@PJHKMBOD@?$CB?5Can?8t?5find?5game?5material?5file?3@
	call	DWORD PTR __imp_?Log@@YAXPBD0@Z
	add	esp, 8
	pop	esi

; 137  : }

	add	esp, 540				; 0000021cH
	ret	0
$LN28@Load@11:

; 70   :     	return;
; 71   :     }
; 72   : 
; 73   :     R_ASSERT			(material_pairs.empty());

	cmp	BYTE PTR ?ignore_always@?6??Load@CGameMtlLibrary@@QAEXXZ@4_NA, 0
	push	ebx
	mov	ebx, DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
	jne	SHORT $LN27@Load@11
	lea	ecx, DWORD PTR [esi+20]
	call	?empty@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBE_NXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::empty
	test	al, al
	jne	SHORT $LN27@Load@11
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?6??Load@CGameMtlLibrary@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BG@KDCFJELG@CGameMtlLibrary?3?3Load?$AA@
	push	73					; 00000049H
	push	OFFSET ??_C@_0DD@PHNOMFOC@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BH@LFOBBKBD@material_pairs?4empty?$CI?$CJ?$AA@
	call	ebx
$LN27@Load@11:

; 74   :     R_ASSERT			(materials.empty());

	cmp	BYTE PTR ?ignore_always@?L@??Load@CGameMtlLibrary@@QAEXXZ@4_NA, 0
	jne	SHORT $LN23@Load@11
	lea	ecx, DWORD PTR [esi+8]
	call	?empty@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBE_NXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::empty
	test	al, al
	jne	SHORT $LN23@Load@11
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?L@??Load@CGameMtlLibrary@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BG@KDCFJELG@CGameMtlLibrary?3?3Load?$AA@
	push	74					; 0000004aH
	push	OFFSET ??_C@_0DD@PHNOMFOC@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BC@CPAPOEEP@materials?4empty?$CI?$CJ?$AA@
	call	ebx
$LN23@Load@11:

; 75   : 
; 76   : 	IReader*	F		= FS.r_open(name);

	mov	eax, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [eax]
	push	ebp
	push	edi
	lea	edx, DWORD PTR _name$[esp+556]
	push	edx
	push	0
	call	DWORD PTR __imp_?r_open@CLocatorAPI@@QAEPAVIReader@@PBD0@Z

; 77   :     IReader& fs			= *F;
; 78   : 
; 79   :     R_ASSERT(fs.find_chunk(GAMEMTLS_CHUNK_VERSION));

	cmp	BYTE PTR ?ignore_always@?P@??Load@CGameMtlLibrary@@QAEXXZ@4_NA, 0
	mov	ebp, DWORD PTR __imp_?find_chunk@IReader@@QAEIIPAH@Z
	mov	edi, eax
	mov	DWORD PTR _F$[esp+556], eax
	mov	DWORD PTR _fs$[esp+556], edi
	jne	SHORT $LN19@Load@11
	push	0
	push	4096					; 00001000H
	mov	ecx, eax
	call	ebp
	test	eax, eax
	jne	SHORT $LN19@Load@11
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?P@??Load@CGameMtlLibrary@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BG@KDCFJELG@CGameMtlLibrary?3?3Load?$AA@
	push	79					; 0000004fH
	push	OFFSET ??_C@_0DD@PHNOMFOC@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0CG@GELBCFFE@fs?4find_chunk?$CIGAMEMTLS_CHUNK_VER@
	call	ebx
$LN19@Load@11:

; 80   :     u16 version			= fs.r_u16();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u16@?$IReaderBase@VIReader@@@@QAEGXZ

; 81   :     if (GAMEMTL_CURRENT_VERSION!=version){

	cmp	ax, 1
	je	SHORT $LN15@Load@11

; 82   :         Log				("CGameMtlLibrary: invalid version. Library can't load.");

	push	OFFSET ??_C@_0DG@HFAKPBPF@CGameMtlLibrary?3?5invalid?5version@
	call	DWORD PTR __imp_?Log@@YAXPBD@Z

; 83   : 		FS.r_close		(F);

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [ecx]
	add	esp, 4
	lea	eax, DWORD PTR _F$[esp+556]
	push	eax

; 125  :     }
; 126  : #endif
; 127  : 
; 128  : /*
; 129  : 	for (GameMtlPairIt p_it=material_pairs.begin(); material_pairs.end() != p_it; ++p_it){
; 130  : 		SGameMtlPair* S	= *p_it;
; 131  : 		for (int k=0; k<S->StepSounds.size(); k++){
; 132  : 			Msg("%40s - 0x%x", S->StepSounds[k].handle->file_name(), S->StepSounds[k].g_type);
; 133  : 		}
; 134  : 	}
; 135  : */
; 136  : 	FS.r_close		(F);

	call	DWORD PTR __imp_?r_close@CLocatorAPI@@QAEXAAPAVIReader@@@Z
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi

; 137  : }

	add	esp, 540				; 0000021cH
	ret	0
$LN15@Load@11:

; 84   :     	return;
; 85   :     }
; 86   : 
; 87   :     R_ASSERT(fs.find_chunk(GAMEMTLS_CHUNK_AUTOINC));

	cmp	BYTE PTR ?ignore_always@?BG@??Load@CGameMtlLibrary@@QAEXXZ@4_NA, 0
	jne	SHORT $LN14@Load@11
	push	0
	push	4097					; 00001001H
	mov	ecx, edi
	call	ebp
	test	eax, eax
	jne	SHORT $LN14@Load@11
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BG@??Load@CGameMtlLibrary@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BG@KDCFJELG@CGameMtlLibrary?3?3Load?$AA@
	push	87					; 00000057H
	push	OFFSET ??_C@_0DD@PHNOMFOC@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0CG@HHALDICL@fs?4find_chunk?$CIGAMEMTLS_CHUNK_AUT@
	call	ebx
$LN14@Load@11:

; 88   :     material_index		= fs.r_u32();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 89   :     material_pair_index	= fs.r_u32();

	mov	ecx, edi
	mov	DWORD PTR [esi], eax
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 90   : 
; 91   :     materials.clear		();

	lea	ebx, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+4], eax
	mov	eax, DWORD PTR [ebx+4]
	mov	ecx, DWORD PTR [ebx]
	cmp	ecx, eax
	je	SHORT $LN57@Load@11
	mov	ebp, eax
	sub	ebp, eax
	je	SHORT $LN63@Load@11
	push	ebp
	push	eax
	push	ecx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, ebp
	jmp	SHORT $LN64@Load@11
$LN63@Load@11:
	mov	eax, ecx
$LN64@Load@11:
	mov	DWORD PTR [ebx+4], eax
$LN57@Load@11:

; 92   :     material_pairs.clear();

	mov	ecx, DWORD PTR [esi+24]
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, ecx
	je	SHORT $LN80@Load@11
	mov	ebp, ecx
	sub	ebp, ecx
	je	SHORT $LN86@Load@11
	push	ebp
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, ebp
$LN86@Load@11:
	mov	DWORD PTR [esi+24], eax
$LN80@Load@11:

; 93   : 
; 94   :     IReader* OBJ 		= fs.open_chunk(GAMEMTLS_CHUNK_MTLS);

	push	4098					; 00001002H
	mov	ecx, edi
	call	DWORD PTR __imp_?open_chunk@IReader@@QAEPAV1@I@Z
	mov	edi, eax

; 95   :     if (OBJ) {

	test	edi, edi
	mov	DWORD PTR _OBJ$[esp+556], edi
	je	$LN378@Load@11

; 96   :         u32				count;
; 97   :         for (IReader* O = OBJ->open_chunk_iterator(count); O; O = OBJ->open_chunk_iterator(count,O)) {

	push	0
	lea	edx, DWORD PTR _count$116745[esp+560]
	push	edx
	mov	ecx, edi
	call	DWORD PTR __imp_?open_chunk_iterator@IReader@@QAEPAV1@AAIPAV1@@Z
	mov	ebp, eax
	test	ebp, ebp
	je	SHORT $LN377@Load@11
	npad	5
$LL10@Load@11:

; 98   :         	SGameMtl*	M = xr_new<SGameMtl> ();

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	68					; 00000044H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	test	eax, eax
	je	SHORT $LN90@Load@11
	mov	ecx, eax
	call	??0SGameMtl@@QAE@XZ			; SGameMtl::SGameMtl
	jmp	SHORT $LN385@Load@11
$LN90@Load@11:
	xor	eax, eax
$LN385@Load@11:

; 99   : 	        M->Load		(*O);

	push	ebp
	mov	ecx, eax
	mov	DWORD PTR _M$116750[esp+560], eax
	call	?Load@SGameMtl@@QAEXAAVIReader@@@Z	; SGameMtl::Load

; 100  :         	materials.push_back(M);

	mov	eax, DWORD PTR [ebx+4]
	cmp	eax, DWORD PTR [ebx+8]
	je	SHORT $LN101@Load@11
	lea	ecx, DWORD PTR _M$116750[esp+556]
	push	ecx
	push	eax
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [ebx+4], 4
	jmp	SHORT $LN9@Load@11
$LN101@Load@11:
	push	1
	push	1
	push	eax
	lea	eax, DWORD PTR _M$116750[esp+568]
	mov	edi, ebx
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
	mov	edi, DWORD PTR _OBJ$[esp+556]
$LN9@Load@11:
	push	ebp
	lea	edx, DWORD PTR _count$116745[esp+560]
	push	edx
	mov	ecx, edi
	call	DWORD PTR __imp_?open_chunk_iterator@IReader@@QAEPAV1@AAIPAV1@@Z
	mov	ebp, eax
	test	ebp, ebp
	jne	SHORT $LL10@Load@11
$LN377@Load@11:

; 101  :         }
; 102  :         OBJ->close		();

	mov	ecx, edi
	call	DWORD PTR __imp_?close@IReader@@QAEXXZ
$LN378@Load@11:

; 103  :     }
; 104  : 
; 105  :     OBJ 				= fs.open_chunk(GAMEMTLS_CHUNK_MTLS_PAIR);

	mov	ecx, DWORD PTR _fs$[esp+556]
	push	4099					; 00001003H
	call	DWORD PTR __imp_?open_chunk@IReader@@QAEPAV1@I@Z
	mov	edi, eax

; 106  :     if (OBJ){

	test	edi, edi
	mov	DWORD PTR _OBJ$[esp+556], edi
	je	$LN7@Load@11

; 107  :         u32				count;
; 108  :         for (IReader* O = OBJ->open_chunk_iterator(count); O; O = OBJ->open_chunk_iterator(count,O)) {

	push	0
	lea	eax, DWORD PTR _count$116756[esp+560]
	push	eax
	mov	ecx, edi
	call	DWORD PTR __imp_?open_chunk_iterator@IReader@@QAEPAV1@AAIPAV1@@Z
	mov	ebp, eax
	test	ebp, ebp
	je	$LN4@Load@11
	npad	5
$LL379@Load@11:

; 109  :         	SGameMtlPair* M	= xr_new<SGameMtlPair> (this);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	76					; 0000004cH
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	test	eax, eax
	je	SHORT $LN112@Load@11
	push	esi
	mov	ecx, eax
	call	??0SGameMtlPair@@QAE@PAVCGameMtlLibrary@@@Z ; SGameMtlPair::SGameMtlPair
	jmp	SHORT $LN386@Load@11
$LN112@Load@11:
	xor	eax, eax
$LN386@Load@11:

; 110  : 	        M->Load		(*O);

	push	ebp
	mov	ecx, eax
	mov	DWORD PTR _M$116761[esp+560], eax
	call	?Load@SGameMtlPair@@QAEXAAVIReader@@@Z	; SGameMtlPair::Load

; 111  :         	material_pairs.push_back(M);

	mov	eax, DWORD PTR [esi+24]
	cmp	eax, DWORD PTR [esi+28]
	lea	edi, DWORD PTR [esi+20]
	je	SHORT $LN123@Load@11
	lea	ecx, DWORD PTR _M$116761[esp+556]
	push	ecx
	push	eax
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [edi+4], 4
	jmp	SHORT $LN5@Load@11
$LN123@Load@11:
	push	1
	push	1
	push	eax
	lea	eax, DWORD PTR _M$116761[esp+568]
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
$LN5@Load@11:
	mov	ecx, DWORD PTR _OBJ$[esp+556]
	push	ebp
	lea	edx, DWORD PTR _count$116756[esp+560]
	push	edx
	call	DWORD PTR __imp_?open_chunk_iterator@IReader@@QAEPAV1@AAIPAV1@@Z
	mov	ebp, eax
	test	ebp, ebp
	jne	SHORT $LL379@Load@11

; 107  :         u32				count;
; 108  :         for (IReader* O = OBJ->open_chunk_iterator(count); O; O = OBJ->open_chunk_iterator(count,O)) {

	mov	edi, DWORD PTR _OBJ$[esp+556]
$LN4@Load@11:

; 112  :         }
; 113  :         OBJ->close		();

	mov	ecx, edi
	call	DWORD PTR __imp_?close@IReader@@QAEXXZ
$LN7@Load@11:

; 114  :     }
; 115  : 
; 116  : #ifndef _EDITOR
; 117  : 	material_count		= (u32)materials.size();

	mov	ecx, DWORD PTR [ebx+4]
	sub	ecx, DWORD PTR [ebx]

; 118  :     material_pairs_rt.resize(material_count*material_count,0);

	lea	edx, DWORD PTR [esi+36]
	sar	ecx, 2
	mov	DWORD PTR [esi+32], ecx
	imul	ecx, ecx
	lea	eax, DWORD PTR $T529003[esp+556]
	mov	DWORD PTR $T529003[esp+556], 0
	call	?resize@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXIABQAX@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::resize

; 119  :     for (GameMtlPairIt p_it=material_pairs.begin(); material_pairs.end() != p_it; ++p_it){

	mov	eax, DWORD PTR [esi+20]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	edi, eax
	mov	DWORD PTR _p_it$116771[esp+560], eax
	mov	eax, DWORD PTR [esi+24]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 8
	cmp	eax, edi
	je	$LN1@Load@11
	jmp	SHORT $LN3@Load@11
$LL376@Load@11:
	mov	edi, DWORD PTR _p_it$116771[esp+556]
$LN3@Load@11:

; 120  : 		SGameMtlPair* S	= *p_it;

	mov	edi, DWORD PTR [edi]

; 121  :     	int idx0		= GetMaterialIdx(S->mtl0)*material_count+GetMaterialIdx(S->mtl1);

	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR $T529614[esp+556], eax
	mov	eax, DWORD PTR [ebx]
	push	eax
	mov	DWORD PTR _S$116775[esp+560], edi
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	ebp, eax
	mov	eax, DWORD PTR [esi+12]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 8
	cmp	eax, ebp
	je	SHORT $LN166@Load@11
	npad	5
$LL168@Load@11:
	mov	ecx, DWORD PTR [ebp]
	mov	edx, DWORD PTR $T529614[esp+556]
	cmp	DWORD PTR [ecx], edx
	je	SHORT $LN162@Load@11
	mov	eax, DWORD PTR [esi+12]
	push	eax
	add	ebp, 4
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	cmp	eax, ebp
	jne	SHORT $LL168@Load@11
$LN166@Load@11:
	mov	eax, DWORD PTR [esi+12]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	mov	ebp, eax
$LN162@Load@11:
	mov	eax, DWORD PTR [ebx]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	ecx, DWORD PTR [edi+8]
	sub	ebp, eax
	sar	ebp, 2
	movzx	eax, bp
	mov	DWORD PTR $T529615[esp+560], eax
	mov	eax, DWORD PTR [ebx]
	push	eax
	mov	DWORD PTR $T529740[esp+564], ecx
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	ebp, eax
	mov	eax, DWORD PTR [esi+12]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 12					; 0000000cH
	cmp	eax, ebp
	je	SHORT $LN209@Load@11
$LL211@Load@11:
	mov	edx, DWORD PTR [ebp]
	mov	eax, DWORD PTR $T529740[esp+556]
	cmp	DWORD PTR [edx], eax
	je	SHORT $LN205@Load@11
	mov	eax, DWORD PTR [esi+12]
	push	eax
	add	ebp, 4
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	cmp	eax, ebp
	jne	SHORT $LL211@Load@11
$LN209@Load@11:
	mov	eax, DWORD PTR [esi+12]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	mov	ebp, eax
$LN205@Load@11:
	mov	eax, DWORD PTR [ebx]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr

; 122  :     	int idx1		= GetMaterialIdx(S->mtl1)*material_count+GetMaterialIdx(S->mtl0);

	mov	edx, DWORD PTR [edi+8]
	sub	ebp, eax
	sar	ebp, 2
	movzx	eax, bp
	movzx	ebp, WORD PTR $T529615[esp+560]
	imul	ebp, DWORD PTR [esi+32]
	movzx	ecx, ax
	mov	eax, DWORD PTR [ebx]
	push	eax
	add	ebp, ecx
	mov	DWORD PTR $T529866[esp+564], edx
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	edi, eax
	mov	eax, DWORD PTR [esi+12]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 12					; 0000000cH
	cmp	eax, edi
	je	SHORT $LN252@Load@11
	npad	4
$LL254@Load@11:
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR $T529866[esp+556]
	cmp	DWORD PTR [eax], ecx
	je	SHORT $LN248@Load@11
	mov	eax, DWORD PTR [esi+12]
	push	eax
	add	edi, 4
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	cmp	eax, edi
	jne	SHORT $LL254@Load@11
$LN252@Load@11:
	mov	eax, DWORD PTR [esi+12]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	mov	edi, eax
$LN248@Load@11:
	mov	eax, DWORD PTR [ebx]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	sub	edi, eax
	mov	eax, DWORD PTR _S$116775[esp+560]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ebx]
	sar	edi, 2
	movzx	edx, di
	push	eax
	mov	DWORD PTR $T529867[esp+564], edx
	mov	DWORD PTR $T529992[esp+564], ecx
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	edi, eax
	mov	eax, DWORD PTR [esi+12]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 12					; 0000000cH
	cmp	eax, edi
	je	SHORT $LN295@Load@11
$LL297@Load@11:
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR $T529992[esp+556]
	cmp	DWORD PTR [edx], eax
	je	SHORT $LN291@Load@11
	mov	eax, DWORD PTR [esi+12]
	push	eax
	add	edi, 4
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	cmp	eax, edi
	jne	SHORT $LL297@Load@11
$LN295@Load@11:
	mov	eax, DWORD PTR [esi+12]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	mov	edi, eax
$LN291@Load@11:
	mov	eax, DWORD PTR [ebx]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	sub	edi, eax
	sar	edi, 2
	movzx	eax, di
	movzx	edi, WORD PTR $T529867[esp+560]
	imul	edi, DWORD PTR [esi+32]
	movzx	ecx, ax

; 123  : 	    material_pairs_rt[idx0]=S;

	mov	eax, DWORD PTR [esi+36]
	push	eax
	add	edi, ecx
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	edx, DWORD PTR _S$116775[esp+564]
	mov	DWORD PTR [eax+ebp*4], edx

; 124  : 	    material_pairs_rt[idx1]=S;

	mov	eax, DWORD PTR [esi+36]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	ecx, DWORD PTR _S$116775[esp+568]
	mov	DWORD PTR [eax+edi*4], ecx
	mov	edi, DWORD PTR _p_it$116771[esp+568]
	mov	eax, DWORD PTR [esi+24]
	add	edi, 4
	push	eax
	mov	DWORD PTR _p_it$116771[esp+572], edi
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 16					; 00000010H
	cmp	eax, edi
	jne	$LL376@Load@11
$LN1@Load@11:

; 125  :     }
; 126  : #endif
; 127  : 
; 128  : /*
; 129  : 	for (GameMtlPairIt p_it=material_pairs.begin(); material_pairs.end() != p_it; ++p_it){
; 130  : 		SGameMtlPair* S	= *p_it;
; 131  : 		for (int k=0; k<S->StepSounds.size(); k++){
; 132  : 			Msg("%40s - 0x%x", S->StepSounds[k].handle->file_name(), S->StepSounds[k].g_type);
; 133  : 		}
; 134  : 	}
; 135  : */
; 136  : 	FS.r_close		(F);

	mov	eax, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR _F$[esp+556]
	push	edx
	call	DWORD PTR __imp_?r_close@CLocatorAPI@@QAEXAAPAVIReader@@@Z
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi

; 137  : }

	add	esp, 540				; 0000021cH
	ret	0
?Load@CGameMtlLibrary@@QAEXXZ ENDP			; CGameMtlLibrary::Load
; Function compile flags: /Ogtpy
;	COMDAT ??__EGMLib@@YAXXZ
text$yc	SEGMENT
??__EGMLib@@YAXXZ PROC					; `dynamic initializer for 'GMLib'', COMDAT

; 8    : CGameMtlLibrary GMLib;

	mov	eax, DWORD PTR __imp_?PGMLib@@3PAVCGameMtlLibrary@@A
	push	OFFSET ??__FGMLib@@YAXXZ		; `dynamic atexit destructor for 'GMLib''
	mov	DWORD PTR [eax], OFFSET ?GMLib@@3VCGameMtlLibrary@@A ; GMLib
	call	_atexit
	pop	ecx
	ret	0
??__EGMLib@@YAXXZ ENDP					; `dynamic initializer for 'GMLib''
; Function compile flags: /Ogtpy
;	COMDAT ??__FGMLib@@YAXXZ
text$yd	SEGMENT
??__FGMLib@@YAXXZ PROC					; `dynamic atexit destructor for 'GMLib'', COMDAT
	mov	eax, DWORD PTR ?GMLib@@3VCGameMtlLibrary@@A+36
	test	eax, eax
	push	esi
	mov	esi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	je	SHORT $LN42@dynamic@4
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	esi
$LN42@dynamic@4:
	mov	eax, DWORD PTR ?GMLib@@3VCGameMtlLibrary@@A+20
	test	eax, eax
	je	SHORT $LN82@dynamic@4
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	esi
$LN82@dynamic@4:
	mov	eax, DWORD PTR ?GMLib@@3VCGameMtlLibrary@@A+8
	test	eax, eax
	je	SHORT $LN122@dynamic@4
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	esi
$LN122@dynamic@4:
	pop	esi
	ret	0
??__FGMLib@@YAXXZ ENDP					; `dynamic atexit destructor for 'GMLib''
PUBLIC	?GMLib@@3VCGameMtlLibrary@@A			; GMLib
?GMLib@@3VCGameMtlLibrary@@A DB 030H DUP (?)		; GMLib
_GMLib$initializer$ DD FLAT:??__EGMLib@@YAXXZ
END
