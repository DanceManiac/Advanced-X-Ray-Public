; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\CLEARSKY\sources\engine\xrEngine\IGame_ObjectPool.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??0?$xalloc@PAVCObject@@@@QAE@XZ		; xalloc<CObject *>::xalloc<CObject *>
PUBLIC	??$?0PAVCObject@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAVCObject@@@@@Z ; xalloc<void *>::xalloc<void *><CObject *>
PUBLIC	??0?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAE@ABV?$xalloc@PAVCObject@@@@@Z ; stlp_std::vector<CObject *,xalloc<CObject *> >::vector<CObject *,xalloc<CObject *> >
PUBLIC	??0?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAE@XZ ; xr_vector<CObject *,xalloc<CObject *> >::xr_vector<CObject *,xalloc<CObject *> >
PUBLIC	?end@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::end
PUBLIC	?clear@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEXXZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::clear
PUBLIC	?clear_and_free@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEXXZ ; xr_vector<CObject *,xalloc<CObject *> >::clear_and_free
PUBLIC	?clear@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEXXZ ; xr_vector<CObject *,xalloc<CObject *> >::clear
PUBLIC	?begin@?$_Impl_vector@UItem@CInifile@@V?$xalloc@UItem@CInifile@@@@@priv@stlp_std@@QBEPBUItem@CInifile@@XZ ; stlp_std::priv::_Impl_vector<CInifile::Item,xalloc<CInifile::Item> >::begin
PUBLIC	?begin@?$vector@UItem@CInifile@@V?$xalloc@UItem@CInifile@@@@@stlp_std@@QBEPBUItem@CInifile@@XZ ; stlp_std::vector<CInifile::Item,xalloc<CInifile::Item> >::begin
PUBLIC	?end@?$_Impl_vector@UItem@CInifile@@V?$xalloc@UItem@CInifile@@@@@priv@stlp_std@@QBEPBUItem@CInifile@@XZ ; stlp_std::priv::_Impl_vector<CInifile::Item,xalloc<CInifile::Item> >::end
PUBLIC	?to_value_type_cptr@?$_CastTraits@UItem@CInifile@@U12@@priv@stlp_std@@SAPBUItem@CInifile@@PBU45@@Z ; stlp_std::priv::_CastTraits<CInifile::Item,CInifile::Item>::to_value_type_cptr
PUBLIC	?end@?$vector@UItem@CInifile@@V?$xalloc@UItem@CInifile@@@@@stlp_std@@QBEPBUItem@CInifile@@XZ ; stlp_std::vector<CInifile::Item,xalloc<CInifile::Item> >::end
PUBLIC	?empty@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QBE_NXZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::empty
PUBLIC	?to_storage_type_cref@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAABQAXABQAVCObject@@@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_storage_type_cref
PUBLIC	?push_back@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEXABQAVCObject@@@Z ; stlp_std::vector<CObject *,xalloc<CObject *> >::push_back
PUBLIC	??R?$xr_special_free@$00VCObject@@@@QAEXAAPAVCObject@@@Z ; xr_special_free<1,CObject>::operator()
PUBLIC	??$xr_delete@VCObject@@@@YAXAAPAVCObject@@@Z	; xr_delete<CObject>
PUBLIC	??_C@_0CE@CNMPJBPG@IGame_ObjectPool?3?3?$HOIGame_ObjectP@ ; `string'
PUBLIC	??_C@_0DJ@LEBDJMNM@D?3?2CLEARSKY?2sources?2engine?2xrEng@ ; `string'
PUBLIC	??_C@_0BK@PBCIDJAH@m_PrefetchObjects?4empty?$CI?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BL@FFNAJAEC@IGame_ObjectPool?3?3prefetch?$AA@ ; `string'
PUBLIC	??_C@_0BC@HKJPBBON@prefetch_objects_?$AA@	; `string'
PUBLIC	??_C@_05ENKANFLO@class?$AA@			; `string'
EXTRN	__imp_?r_section@CInifile@@QBEAAUSect@1@PBD@Z:PROC
EXTRN	__imp_?r_clsid@CInifile@@QBE_KPBD0@Z:PROC
;	COMDAT ?ignore_always@?3???1IGame_ObjectPool@@UAE@XZ@4_NA
_BSS	SEGMENT
?ignore_always@?3???1IGame_ObjectPool@@UAE@XZ@4_NA DB 01H DUP (?) ; `IGame_ObjectPool::~IGame_ObjectPool'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?3??prefetch@IGame_ObjectPool@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?3??prefetch@IGame_ObjectPool@@QAEXXZ@4_NA DB 01H DUP (?) ; `IGame_ObjectPool::prefetch'::`4'::ignore_always
;	COMDAT ??_C@_05ENKANFLO@class?$AA@
CONST	SEGMENT
??_C@_05ENKANFLO@class?$AA@ DB 'class', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HKJPBBON@prefetch_objects_?$AA@
CONST	SEGMENT
??_C@_0BC@HKJPBBON@prefetch_objects_?$AA@ DB 'prefetch_objects_', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FFNAJAEC@IGame_ObjectPool?3?3prefetch?$AA@
CONST	SEGMENT
??_C@_0BL@FFNAJAEC@IGame_ObjectPool?3?3prefetch?$AA@ DB 'IGame_ObjectPool'
	DB	'::prefetch', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PBCIDJAH@m_PrefetchObjects?4empty?$CI?$CJ?$AA@
CONST	SEGMENT
??_C@_0BK@PBCIDJAH@m_PrefetchObjects?4empty?$CI?$CJ?$AA@ DB 'm_PrefetchOb'
	DB	'jects.empty()', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@LEBDJMNM@D?3?2CLEARSKY?2sources?2engine?2xrEng@
CONST	SEGMENT
??_C@_0DJ@LEBDJMNM@D?3?2CLEARSKY?2sources?2engine?2xrEng@ DB 'D:\CLEARSKY'
	DB	'\sources\engine\xrEngine\IGame_ObjectPool.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@CNMPJBPG@IGame_ObjectPool?3?3?$HOIGame_ObjectP@
CONST	SEGMENT
??_C@_0CE@CNMPJBPG@IGame_ObjectPool?3?3?$HOIGame_ObjectP@ DB 'IGame_Objec'
	DB	'tPool::~IGame_ObjectPool', 00H		; `string'
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
;	COMDAT ??R?$xr_special_free@$00VCObject@@@@QAEXAAPAVCObject@@@Z
_TEXT	SEGMENT
??R?$xr_special_free@$00VCObject@@@@QAEXAAPAVCObject@@@Z PROC ; xr_special_free<1,CObject>::operator(), COMDAT
; _ptr$ = esi

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	mov	eax, DWORD PTR [esi]
	push	edi
	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx]
	add	esp, 4
	mov	edi, eax
	mov	eax, DWORD PTR [edx+4]
	push	0
	call	eax

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	pop	edi

; 135  : 	}

	ret	0
??R?$xr_special_free@$00VCObject@@@@QAEXAAPAVCObject@@@Z ENDP ; xr_special_free<1,CObject>::operator()
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??$?0PAVCObject@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAVCObject@@@@@Z
_TEXT	SEGMENT
??$?0PAVCObject@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAVCObject@@@@@Z PROC ; xalloc<void *>::xalloc<void *><CObject *>, COMDAT
; _this$ = eax

; 79   : 	template<class _Other>							xalloc			(const xalloc<_Other>&)					{	}

	ret	0
??$?0PAVCObject@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAVCObject@@@@@Z ENDP ; xalloc<void *>::xalloc<void *><CObject *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
_TEXT	ENDS
;	COMDAT ??$xr_delete@VCObject@@@@YAXAAPAVCObject@@@Z
_TEXT	SEGMENT
??$xr_delete@VCObject@@@@YAXAAPAVCObject@@@Z PROC	; xr_delete<CObject>, COMDAT
; _ptr$ = esi

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN1@xr_delete@15
	push	edi

; 152  : 	{
; 153  : 		xr_special_free<is_polymorphic<T>::result,T>()(ptr);

	push	eax
	call	___RTCastToVoid
	mov	ecx, DWORD PTR [esi]
	mov	edi, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	add	esp, 4
	push	0
	call	edx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 154  : 		ptr = NULL;

	mov	DWORD PTR [esi], 0
	pop	edi
$LN1@xr_delete@15:

; 155  : 	}
; 156  : }

	ret	0
??$xr_delete@VCObject@@@@YAXAAPAVCObject@@@Z ENDP	; xr_delete<CObject>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_TEXT	ENDS
;	COMDAT ?to_value_type_cptr@?$_CastTraits@UItem@CInifile@@U12@@priv@stlp_std@@SAPBUItem@CInifile@@PBU45@@Z
_TEXT	SEGMENT
?to_value_type_cptr@?$_CastTraits@UItem@CInifile@@U12@@priv@stlp_std@@SAPBUItem@CInifile@@PBU45@@Z PROC ; stlp_std::priv::_CastTraits<CInifile::Item,CInifile::Item>::to_value_type_cptr, COMDAT
; ___ptr$ = eax

; 239  :   { return __ptr; }

	ret	0
?to_value_type_cptr@?$_CastTraits@UItem@CInifile@@U12@@priv@stlp_std@@SAPBUItem@CInifile@@PBU45@@Z ENDP ; stlp_std::priv::_CastTraits<CInifile::Item,CInifile::Item>::to_value_type_cptr
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xalloc@PAVCObject@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xalloc@PAVCObject@@@@QAE@XZ PROC			; xalloc<CObject *>::xalloc<CObject *>, COMDAT
; _this$ = eax

; 77   : 													xalloc			()										{	}

	ret	0
??0?$xalloc@PAVCObject@@@@QAE@XZ ENDP			; xalloc<CObject *>::xalloc<CObject *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?end@?$_Impl_vector@UItem@CInifile@@V?$xalloc@UItem@CInifile@@@@@priv@stlp_std@@QBEPBUItem@CInifile@@XZ
_TEXT	SEGMENT
?end@?$_Impl_vector@UItem@CInifile@@V?$xalloc@UItem@CInifile@@@@@priv@stlp_std@@QBEPBUItem@CInifile@@XZ PROC ; stlp_std::priv::_Impl_vector<CInifile::Item,xalloc<CInifile::Item> >::end, COMDAT
; _this$ = eax

; 173  :   const_iterator end() const   { return this->_M_finish; }

	mov	eax, DWORD PTR [eax+4]
	ret	0
?end@?$_Impl_vector@UItem@CInifile@@V?$xalloc@UItem@CInifile@@@@@priv@stlp_std@@QBEPBUItem@CInifile@@XZ ENDP ; stlp_std::priv::_Impl_vector<CInifile::Item,xalloc<CInifile::Item> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$_Impl_vector@UItem@CInifile@@V?$xalloc@UItem@CInifile@@@@@priv@stlp_std@@QBEPBUItem@CInifile@@XZ
_TEXT	SEGMENT
?begin@?$_Impl_vector@UItem@CInifile@@V?$xalloc@UItem@CInifile@@@@@priv@stlp_std@@QBEPBUItem@CInifile@@XZ PROC ; stlp_std::priv::_Impl_vector<CInifile::Item,xalloc<CInifile::Item> >::begin, COMDAT
; _this$ = eax

; 171  :   const_iterator begin() const { return this->_M_start; }

	mov	eax, DWORD PTR [eax]
	ret	0
?begin@?$_Impl_vector@UItem@CInifile@@V?$xalloc@UItem@CInifile@@@@@priv@stlp_std@@QBEPBUItem@CInifile@@XZ ENDP ; stlp_std::priv::_Impl_vector<CInifile::Item,xalloc<CInifile::Item> >::begin
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?end@?$vector@UItem@CInifile@@V?$xalloc@UItem@CInifile@@@@@stlp_std@@QBEPBUItem@CInifile@@XZ
_TEXT	SEGMENT
?end@?$vector@UItem@CInifile@@V?$xalloc@UItem@CInifile@@@@@stlp_std@@QBEPBUItem@CInifile@@XZ PROC ; stlp_std::vector<CInifile::Item,xalloc<CInifile::Item> >::end, COMDAT
; _this$ = eax

; 82   :   const_iterator end() const   { return cast_traits::to_value_type_cptr(_M_impl.end()); }

	mov	eax, DWORD PTR [eax+4]
	ret	0
?end@?$vector@UItem@CInifile@@V?$xalloc@UItem@CInifile@@@@@stlp_std@@QBEPBUItem@CInifile@@XZ ENDP ; stlp_std::vector<CInifile::Item,xalloc<CInifile::Item> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@UItem@CInifile@@V?$xalloc@UItem@CInifile@@@@@stlp_std@@QBEPBUItem@CInifile@@XZ
_TEXT	SEGMENT
?begin@?$vector@UItem@CInifile@@V?$xalloc@UItem@CInifile@@@@@stlp_std@@QBEPBUItem@CInifile@@XZ PROC ; stlp_std::vector<CInifile::Item,xalloc<CInifile::Item> >::begin, COMDAT
; _this$ = eax

; 80   :   const_iterator begin() const { return cast_traits::to_value_type_cptr(_M_impl.begin()); }

	mov	eax, DWORD PTR [eax]
	ret	0
?begin@?$vector@UItem@CInifile@@V?$xalloc@UItem@CInifile@@@@@stlp_std@@QBEPBUItem@CInifile@@XZ ENDP ; stlp_std::vector<CInifile::Item,xalloc<CInifile::Item> >::begin
_TEXT	ENDS
PUBLIC	?destroy@IGame_ObjectPool@@QAEXPAVCObject@@@Z	; IGame_ObjectPool::destroy
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\igame_objectpool.cpp
;	COMDAT ?destroy@IGame_ObjectPool@@QAEXPAVCObject@@@Z
_TEXT	SEGMENT
_O$ = 8							; size = 4
?destroy@IGame_ObjectPool@@QAEXPAVCObject@@@Z PROC	; IGame_ObjectPool::destroy, COMDAT
; _this$ = ecx

; 61   : {

	push	esi

; 62   : 	xr_delete				(O);

	mov	esi, DWORD PTR _O$[esp]
	test	esi, esi
	je	SHORT $LN3@destroy@2
	push	edi
	push	esi
	call	___RTCastToVoid
	mov	edi, eax
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+4]
	add	esp, 4
	push	0
	mov	ecx, esi
	call	edx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	pop	edi
$LN3@destroy@2:
	pop	esi

; 63   : }

	ret	4
?destroy@IGame_ObjectPool@@QAEXPAVCObject@@@Z ENDP	; IGame_ObjectPool::destroy
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
;	COMDAT ?to_storage_type_cref@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAABQAXABQAVCObject@@@Z
_TEXT	SEGMENT
?to_storage_type_cref@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAABQAXABQAVCObject@@@Z PROC ; stlp_std::priv::_CastTraits<void *,CObject *>::to_storage_type_cref, COMDAT
; ___ref$ = eax

; 224  :   { return cv_traits::uncv_cref(__REINTERPRET_CAST(void_cv_type const&, __ref)); }

	ret	0
?to_storage_type_cref@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAABQAXABQAVCObject@@@Z ENDP ; stlp_std::priv::_CastTraits<void *,CObject *>::to_storage_type_cref
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?empty@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QBE_NXZ PROC ; stlp_std::vector<CObject *,xalloc<CObject *> >::empty, COMDAT
; _this$ = ecx

; 93   :   bool empty() const            { return _M_impl.empty(); }

	jmp	?empty@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBE_NXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::empty
?empty@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QBE_NXZ ENDP ; stlp_std::vector<CObject *,xalloc<CObject *> >::empty
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ
_TEXT	SEGMENT
?end@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ PROC ; stlp_std::vector<CObject *,xalloc<CObject *> >::end, COMDAT
; _this$ = eax

; 81   :   iterator end()               { return cast_traits::to_value_type_ptr(_M_impl.end()); }

	mov	eax, DWORD PTR [eax+4]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	add	esp, 4
	ret	0
?end@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ENDP ; stlp_std::vector<CObject *,xalloc<CObject *> >::end
; Function compile flags: /Ogtpy
;	COMDAT ??0?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAE@ABV?$xalloc@PAVCObject@@@@@Z
_TEXT	SEGMENT
??0?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAE@ABV?$xalloc@PAVCObject@@@@@Z PROC ; stlp_std::vector<CObject *,xalloc<CObject *> >::vector<CObject *,xalloc<CObject *> >, COMDAT
; _this$ = eax

; 106  :   explicit vector(const allocator_type& __a = allocator_type())

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAE@ABV?$xalloc@PAVCObject@@@@@Z ENDP ; stlp_std::vector<CObject *,xalloc<CObject *> >::vector<CObject *,xalloc<CObject *> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
;	COMDAT ??0?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAE@XZ PROC ; xr_vector<CObject *,xalloc<CObject *> >::xr_vector<CObject *,xalloc<CObject *> >, COMDAT
; _this$ = ecx

; 123  : 			xr_vector			()									: inherited	()					{}

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAE@XZ ENDP ; xr_vector<CObject *,xalloc<CObject *> >::xr_vector<CObject *,xalloc<CObject *> >
_TEXT	ENDS
PUBLIC	?create@IGame_ObjectPool@@QAEPAVCObject@@PBD@Z	; IGame_ObjectPool::create
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\igame_objectpool.cpp
;	COMDAT ?create@IGame_ObjectPool@@QAEPAVCObject@@PBD@Z
_TEXT	SEGMENT
_name$ = 8						; size = 4
?create@IGame_ObjectPool@@QAEPAVCObject@@PBD@Z PROC	; IGame_ObjectPool::create, COMDAT
; _this$ = ecx

; 53   : 	CLASS_ID CLS		=	pSettings->r_clsid		(name,"class");

	mov	eax, DWORD PTR __imp_?pSettings@@3PBVCInifile@@B
	mov	ecx, DWORD PTR [eax]
	push	esi
	push	edi
	mov	edi, DWORD PTR _name$[esp+4]
	push	OFFSET ??_C@_05ENKANFLO@class?$AA@
	push	edi
	call	DWORD PTR __imp_?r_clsid@CInifile@@QBE_KPBD0@Z

; 54   : 	CObject* O			=	(CObject*) NEW_INSTANCE	(CLS);

	push	edx
	push	eax
	call	DWORD PTR ?Engine@@3VCEngine@@A+16

; 55   : 	O->cNameSect_set	(name);

	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	ecx, DWORD PTR [ecx]
	add	esp, 8
	push	edi
	mov	esi, eax
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	test	eax, eax
	je	SHORT $LN16@create@5
	add	DWORD PTR [eax], 1
	test	eax, eax
	je	SHORT $LN16@create@5
	add	DWORD PTR [eax], 1
$LN16@create@5:
	mov	ecx, DWORD PTR [esi+172]
	test	ecx, ecx
	je	SHORT $LN19@create@5
	add	DWORD PTR [ecx], -1
	mov	edx, DWORD PTR [esi+172]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN19@create@5
	mov	DWORD PTR [esi+172], 0
$LN19@create@5:
	test	eax, eax
	mov	DWORD PTR [esi+172], eax
	je	SHORT $LN25@create@5
	add	DWORD PTR [eax], -1
$LN25@create@5:

; 56   : 	O->Load				(name);

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+40]
	push	edi
	mov	ecx, esi
	call	edx
	pop	edi

; 57   : 	return				O;

	mov	eax, esi
	pop	esi

; 58   : }

	ret	4
?create@IGame_ObjectPool@@QAEPAVCObject@@PBD@Z ENDP	; IGame_ObjectPool::create
_TEXT	ENDS
PUBLIC	??1IGame_ObjectPool@@UAE@XZ			; IGame_ObjectPool::~IGame_ObjectPool
; Function compile flags: /Ogtpy
;	COMDAT ??1IGame_ObjectPool@@UAE@XZ
_TEXT	SEGMENT
??1IGame_ObjectPool@@UAE@XZ PROC			; IGame_ObjectPool::~IGame_ObjectPool, COMDAT
; _this$ = ecx

; 12   : {

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IGame_ObjectPool@@6B@

; 13   : 	R_ASSERT			(m_PrefetchObjects.empty());

	cmp	BYTE PTR ?ignore_always@?3???1IGame_ObjectPool@@UAE@XZ@4_NA, 0
	jne	SHORT $LN3@IGame_Obje
	lea	ecx, DWORD PTR [esi+4]
	call	?empty@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBE_NXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::empty
	test	al, al
	jne	SHORT $LN3@IGame_Obje
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3???1IGame_ObjectPool@@UAE@XZ@4_NA
	push	OFFSET ??_C@_0CE@CNMPJBPG@IGame_ObjectPool?3?3?$HOIGame_ObjectP@
	push	13					; 0000000dH
	push	OFFSET ??_C@_0DJ@LEBDJMNM@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BK@PBCIDJAH@m_PrefetchObjects?4empty?$CI?$CJ?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN3@IGame_Obje:

; 14   : }

	mov	esi, DWORD PTR [esi+4]
	test	esi, esi
	je	SHORT $LN48@IGame_Obje
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN48@IGame_Obje:
	pop	esi
	ret	0
??1IGame_ObjectPool@@UAE@XZ ENDP			; IGame_ObjectPool::~IGame_ObjectPool
_TEXT	ENDS
PUBLIC	??0IGame_ObjectPool@@QAE@XZ			; IGame_ObjectPool::IGame_ObjectPool
; Function compile flags: /Ogtpy
;	COMDAT ??0IGame_ObjectPool@@QAE@XZ
_TEXT	SEGMENT
??0IGame_ObjectPool@@QAE@XZ PROC			; IGame_ObjectPool::IGame_ObjectPool, COMDAT
; _this$ = ecx

; 8    : {

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], OFFSET ??_7IGame_ObjectPool@@6B@
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 9    : }

	ret	0
??0IGame_ObjectPool@@QAE@XZ ENDP			; IGame_ObjectPool::IGame_ObjectPool
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
;	COMDAT ?clear@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEXXZ PROC ; stlp_std::vector<CObject *,xalloc<CObject *> >::clear, COMDAT
; _this$ = edi

; 223  :   void clear() { _M_impl.clear(); }

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN12@clear@63
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN18@clear@63
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN18@clear@63:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN12@clear@63:
	ret	0
?clear@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEXXZ ENDP ; stlp_std::vector<CObject *,xalloc<CObject *> >::clear
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?clear_and_free@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEXXZ
_TEXT	SEGMENT
?clear_and_free@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEXXZ PROC ; xr_vector<CObject *,xalloc<CObject *> >::clear_and_free, COMDAT
; _this$ = edi

; 128  : 	void	clear_and_free		()									{ inherited::clear();			}

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN14@clear_and_@23
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN20@clear_and_@23
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN20@clear_and_@23:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN14@clear_and_@23:
	ret	0
?clear_and_free@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEXXZ ENDP ; xr_vector<CObject *,xalloc<CObject *> >::clear_and_free
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEXABQAVCObject@@@Z
_TEXT	SEGMENT
?push_back@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEXABQAVCObject@@@Z PROC ; stlp_std::vector<CObject *,xalloc<CObject *> >::push_back, COMDAT
; _this$ = ecx
; ___x$ = eax

; 171  :   { _M_impl.push_back(cast_traits::to_storage_type_cref(__x)); }

	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [edi+4]
	cmp	ecx, DWORD PTR [edi+8]
	je	SHORT $LN8@push_back@57
	push	eax
	push	ecx
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [edi+4], 4
	pop	edi
	ret	0
$LN8@push_back@57:
	push	1
	push	1
	push	ecx
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
	pop	edi
	ret	0
?push_back@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEXABQAVCObject@@@Z ENDP ; stlp_std::vector<CObject *,xalloc<CObject *> >::push_back
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?clear@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEXXZ
_TEXT	SEGMENT
?clear@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEXXZ PROC ; xr_vector<CObject *,xalloc<CObject *> >::clear, COMDAT
; _this$ = edi

; 133  : 	void	clear				()									{ clear_and_free	();			}

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN16@clear@64
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN22@clear@64
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN22@clear@64:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN16@clear@64:
	ret	0
?clear@?$xr_vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@@QAEXXZ ENDP ; xr_vector<CObject *,xalloc<CObject *> >::clear
_TEXT	ENDS
PUBLIC	?clear@IGame_ObjectPool@@QAEXXZ			; IGame_ObjectPool::clear
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\igame_objectpool.cpp
;	COMDAT ?clear@IGame_ObjectPool@@QAEXXZ
_TEXT	SEGMENT
tv192 = -4						; size = 4
?clear@IGame_ObjectPool@@QAEXXZ PROC			; IGame_ObjectPool::clear, COMDAT
; _this$ = ecx

; 42   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx

; 43   : 	// Clear POOL
; 44   : 	ObjectVecIt it			= m_PrefetchObjects.begin();

	lea	ebx, DWORD PTR [edi+4]
	mov	ecx, ebx
	mov	DWORD PTR tv192[esp+20], ebx
	call	?begin@?$vector@PAVCObject@@V?$xalloc@PAVCObject@@@@@stlp_std@@QAEPAPAVCObject@@XZ ; stlp_std::vector<CObject *,xalloc<CObject *> >::begin

; 45   : 	ObjectVecIt itE			= m_PrefetchObjects.end();

	mov	edi, DWORD PTR [edi+8]
	push	edi
	mov	esi, eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAVCObject@@@priv@stlp_std@@SAPAPAVCObject@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CObject *>::to_value_type_ptr
	mov	ebp, eax
	add	esp, 4

; 46   : 	for (; it!=itE; it++)	

	cmp	esi, ebp
	je	SHORT $LN1@clear@65
	mov	ebx, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	npad	1
$LL3@clear@65:

; 47   : 		xr_delete			(*it);

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@clear@65
	push	eax
	call	___RTCastToVoid
	mov	ecx, DWORD PTR [esi]
	mov	edi, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	add	esp, 4
	push	0
	call	edx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	ebx
	mov	DWORD PTR [esi], 0
$LN2@clear@65:
	add	esi, 4
	cmp	esi, ebp
	jne	SHORT $LL3@clear@65

; 46   : 	for (; it!=itE; it++)	

	mov	ebx, DWORD PTR tv192[esp+20]
$LN1@clear@65:

; 48   : 	m_PrefetchObjects.clear	(); 

	mov	ecx, DWORD PTR [ebx+4]
	mov	eax, DWORD PTR [ebx]
	cmp	eax, ecx
	je	SHORT $LN42@clear@65
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN48@clear@65
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN48@clear@65:
	mov	DWORD PTR [ebx+4], eax
$LN42@clear@65:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 49   : }

	pop	ecx
	ret	0
?clear@IGame_ObjectPool@@QAEXXZ ENDP			; IGame_ObjectPool::clear
_TEXT	ENDS
PUBLIC	?prefetch@IGame_ObjectPool@@QAEXXZ		; IGame_ObjectPool::prefetch
; Function compile flags: /Ogtpy
;	COMDAT ?prefetch@IGame_ObjectPool@@QAEXXZ
_TEXT	SEGMENT
_pObject$126973 = -276					; size = 4
_I$126966 = -272					; size = 4
$T462832 = -268						; size = 4
___old_size$462994 = -264				; size = 4
_sect$ = -260						; size = 4
_section$ = -256					; size = 256
?prefetch@IGame_ObjectPool@@QAEXXZ PROC			; IGame_ObjectPool::prefetch, COMDAT
; _this$ = ecx

; 17   : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 280				; 00000118H

; 18   : 	R_ASSERT			(m_PrefetchObjects.empty());

	cmp	BYTE PTR ?ignore_always@?3??prefetch@IGame_ObjectPool@@QAEXXZ@4_NA, 0
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx
	jne	SHORT $LN9@prefetch
	lea	ecx, DWORD PTR [edi+4]
	call	?empty@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBE_NXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::empty
	test	al, al
	jne	SHORT $LN9@prefetch
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??prefetch@IGame_ObjectPool@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BL@FFNAJAEC@IGame_ObjectPool?3?3prefetch?$AA@
	push	18					; 00000012H
	push	OFFSET ??_C@_0DJ@LEBDJMNM@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BK@PBCIDJAH@m_PrefetchObjects?4empty?$CI?$CJ?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN9@prefetch:

; 19   : 
; 20   : 	int	p_count			= 0;
; 21   : 	::Render->model_Logging	(FALSE);

	mov	eax, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+160]
	push	0
	call	eax

; 22   : 
; 23   : 	string256				section;
; 24   : 	// prefetch objects
; 25   : 	strconcat				(sizeof(section),section,"prefetch_objects_",g_pGamePersistent->m_game_params.m_game_type);

	mov	ecx, DWORD PTR ?g_pGamePersistent@@3PAVIGame_Persistent@@A ; g_pGamePersistent
	add	ecx, 292				; 00000124H
	push	ecx
	push	OFFSET ??_C@_0BC@HKJPBBON@prefetch_objects_?$AA@
	lea	edx, DWORD PTR _section$[esp+304]
	push	edx
	push	256					; 00000100H
	call	DWORD PTR __imp_?strconcat@@YAPADHPADPBD1@Z

; 26   : 	CInifile::Sect const & sect	= pSettings->r_section(section);

	mov	ecx, DWORD PTR __imp_?pSettings@@3PBVCInifile@@B
	mov	ecx, DWORD PTR [ecx]
	add	esp, 16					; 00000010H
	lea	eax, DWORD PTR _section$[esp+296]
	push	eax
	call	DWORD PTR __imp_?r_section@CInifile@@QBEAAUSect@1@PBD@Z
	mov	ebp, eax

; 27   : 	for (CInifile::SectCIt I=sect.Data.begin(); I!=sect.Data.end(); I++)	{

	mov	ebx, DWORD PTR [ebp+4]
	cmp	ebx, DWORD PTR [ebp+8]
	mov	DWORD PTR _sect$[esp+296], ebp
	mov	DWORD PTR _I$126966[esp+296], ebx
	je	$LN4@prefetch
$LN6@prefetch:

; 28   : 		const CInifile::Item& item= *I;
; 29   : 		CLASS_ID CLS		= pSettings->r_clsid(item.first.c_str(),"class");

	mov	eax, DWORD PTR [ebx]
	test	eax, eax
	je	SHORT $LN31@prefetch
	add	eax, 16					; 00000010H
	jmp	SHORT $LN32@prefetch
$LN31@prefetch:
	xor	eax, eax
$LN32@prefetch:
	mov	edx, DWORD PTR __imp_?pSettings@@3PBVCInifile@@B
	mov	ecx, DWORD PTR [edx]
	push	OFFSET ??_C@_05ENKANFLO@class?$AA@
	push	eax
	call	DWORD PTR __imp_?r_clsid@CInifile@@QBE_KPBD0@Z

; 30   : 		p_count				++;
; 31   : 		CObject* pObject	= (CObject*) NEW_INSTANCE(CLS);

	push	edx
	push	eax
	call	DWORD PTR ?Engine@@3VCEngine@@A+16

; 32   : 		pObject->Load		(item.first.c_str());

	mov	edx, DWORD PTR [ebx]
	add	esp, 8
	test	edx, edx
	mov	DWORD PTR _pObject$126973[esp+296], eax
	je	SHORT $LN35@prefetch
	add	edx, 16					; 00000010H
	jmp	SHORT $LN36@prefetch
$LN35@prefetch:
	xor	edx, edx
$LN36@prefetch:
	mov	esi, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [esi+40]
	push	edx
	call	eax

; 33   : 		VERIFY2				(pObject->cNameSect().c_str(),item.first.c_str());
; 34   : 		m_PrefetchObjects.push_back	(pObject);

	mov	esi, DWORD PTR [edi+8]
	cmp	esi, DWORD PTR [edi+12]
	je	SHORT $LN44@prefetch
	lea	ecx, DWORD PTR _pObject$126973[esp+296]
	push	ecx
	push	esi
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [edi+8], 4
	jmp	$LN5@prefetch
$LN44@prefetch:
	mov	edx, esi
	sub	edx, DWORD PTR [edi+4]
	lea	eax, DWORD PTR $T462832[esp+296]
	push	eax
	lea	ecx, DWORD PTR ___old_size$462994[esp+300]
	sar	edx, 2
	push	ecx
	mov	DWORD PTR $T462832[esp+304], 1
	mov	DWORD PTR ___old_size$462994[esp+304], edx
	call	??$max@I@stlp_std@@YAABIABI0@Z		; stlp_std::max<unsigned int>
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR ___old_size$462994[esp+304]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	add	esp, 8
	lea	ebp, DWORD PTR [eax*4]
	push	ebp
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	mov	ebx, eax
	mov	eax, DWORD PTR [edi+4]
	sub	esi, eax
	je	SHORT $LN74@prefetch
	push	esi
	push	eax
	push	ebx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
	jmp	SHORT $LN75@prefetch
$LN74@prefetch:
	mov	eax, ebx
$LN75@prefetch:
	mov	ecx, DWORD PTR $T462832[esp+296]
	test	ecx, ecx
	mov	esi, eax
	jbe	SHORT $LN76@prefetch
$LL78@prefetch:
	mov	edx, DWORD PTR _pObject$126973[esp+296]
	mov	DWORD PTR [esi], edx
	sub	ecx, 1
	add	esi, 4
	test	ecx, ecx
	ja	SHORT $LL78@prefetch
$LN76@prefetch:
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN115@prefetch
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN115@prefetch:
	add	ebp, ebx
	mov	DWORD PTR [edi+4], ebx
	mov	ebx, DWORD PTR _I$126966[esp+296]
	mov	DWORD PTR [edi+12], ebp
	mov	ebp, DWORD PTR _sect$[esp+296]
	mov	DWORD PTR [edi+8], esi
$LN5@prefetch:
	add	ebx, 8
	cmp	ebx, DWORD PTR [ebp+8]
	mov	DWORD PTR _I$126966[esp+296], ebx
	jne	$LN6@prefetch
$LN4@prefetch:

; 35   : 	}
; 36   : 
; 37   : 	// out statistic
; 38   : 	::Render->model_Logging	(TRUE);

	mov	eax, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+160]
	push	1
	call	eax

; 39   : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?prefetch@IGame_ObjectPool@@QAEXXZ ENDP			; IGame_ObjectPool::prefetch
END
