; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\CLEARSKY\sources\engine\xrEngine\GameMtlLib_Engine.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??D?$FactoryPtr@VIWallMarkArray@@@@QBEAAVIWallMarkArray@@XZ ; FactoryPtr<IWallMarkArray>::operator*
PUBLIC	?end@?$vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@stlp_std@@QAEPAUref_sound@@XZ ; stlp_std::vector<ref_sound,xalloc<ref_sound> >::end
PUBLIC	??$_GetItem@$0IA@@@YAPADPBDHAAY0IA@DD0_N@Z	; _GetItem<128>
PUBLIC	??_C@_0DN@KNCKFJOG@d?3?2clearsky?2sources?2engine?2xreng@ ; `string'
PUBLIC	??_C@_0N@FIMHNKKC@CreateSounds?$AA@		; `string'
PUBLIC	??_C@_0DK@LINGALBM@D?3?2CLEARSKY?2sources?2engine?2xrEng@ ; `string'
PUBLIC	??_C@_0BN@DOGKACAN@cnt?$DM?$DNGAMEMTL_SUBITEM_COUNT?$CL2?$AA@ ; `string'
PUBLIC	??_C@_0M@HOOJDAPF@CreateMarks?$AA@		; `string'
PUBLIC	??_C@_0BL@CEMALPE@cnt?$DM?$DNGAMEMTL_SUBITEM_COUNT?$AA@ ; `string'
PUBLIC	??_C@_09GCODCLGD@CreatePSs?$AA@			; `string'
PUBLIC	??_C@_0BD@NAPBJFND@SGameMtlPair?3?3Load?$AA@	; `string'
PUBLIC	??_C@_0CG@ONMCBDDI@fs?4find_chunk?$CIGAMEMTLPAIR_CHUNK_@ ; `string'
PUBLIC	??_C@_0CK@OBIAOFNK@fs?4find_chunk?$CIGAMEMTLPAIR_CHUNK_@ ; `string'
PUBLIC	??_C@_0CG@IKAEBCLC@fs?4find_chunk?$CIGAMEMTLPAIR_CHUNK_@ ; `string'
PUBLIC	??_C@_0CJ@GKINBOOG@fs?4find_chunk?$CIGAMEMTLPAIR_CHUNK_@ ; `string'
;	COMDAT ?ignore_always@?3??CreateSounds@@YAXAAV?$xr_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@@PBD@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3??CreateSounds@@YAXAAV?$xr_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@@PBD@Z@4_NA DB 01H DUP (?) ; `CreateSounds'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?3??CreateMarks@@YAXPAVIWallMarkArray@@PBD@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3??CreateMarks@@YAXPAVIWallMarkArray@@PBD@Z@4_NA DB 01H DUP (?) ; `CreateMarks'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?3??CreatePSs@@YAXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PBD@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3??CreatePSs@@YAXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PBD@Z@4_NA DB 01H DUP (?) ; `CreatePSs'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?3??Load@SGameMtlPair@@QAEXAAVIReader@@@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3??Load@SGameMtlPair@@QAEXAAVIReader@@@Z@4_NA DB 01H DUP (?) ; `SGameMtlPair::Load'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?7??Load@SGameMtlPair@@QAEXAAVIReader@@@Z@4_NA
_BSS	SEGMENT
?ignore_always@?7??Load@SGameMtlPair@@QAEXAAVIReader@@@Z@4_NA DB 01H DUP (?) ; `SGameMtlPair::Load'::`8'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?M@??Load@SGameMtlPair@@QAEXAAVIReader@@@Z@4_NA
_BSS	SEGMENT
?ignore_always@?M@??Load@SGameMtlPair@@QAEXAAVIReader@@@Z@4_NA DB 01H DUP (?) ; `SGameMtlPair::Load'::`12'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BA@??Load@SGameMtlPair@@QAEXAAVIReader@@@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BA@??Load@SGameMtlPair@@QAEXAAVIReader@@@Z@4_NA DB 01H DUP (?) ; `SGameMtlPair::Load'::`16'::ignore_always
;	COMDAT ??_C@_0CJ@GKINBOOG@fs?4find_chunk?$CIGAMEMTLPAIR_CHUNK_@
CONST	SEGMENT
??_C@_0CJ@GKINBOOG@fs?4find_chunk?$CIGAMEMTLPAIR_CHUNK_@ DB 'fs.find_chun'
	DB	'k(GAMEMTLPAIR_CHUNK_COLLIDE)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@IKAEBCLC@fs?4find_chunk?$CIGAMEMTLPAIR_CHUNK_@
CONST	SEGMENT
??_C@_0CG@IKAEBCLC@fs?4find_chunk?$CIGAMEMTLPAIR_CHUNK_@ DB 'fs.find_chun'
	DB	'k(GAMEMTLPAIR_CHUNK_STEP)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@OBIAOFNK@fs?4find_chunk?$CIGAMEMTLPAIR_CHUNK_@
CONST	SEGMENT
??_C@_0CK@OBIAOFNK@fs?4find_chunk?$CIGAMEMTLPAIR_CHUNK_@ DB 'fs.find_chun'
	DB	'k(GAMEMTLPAIR_CHUNK_BREAKING)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@ONMCBDDI@fs?4find_chunk?$CIGAMEMTLPAIR_CHUNK_@
CONST	SEGMENT
??_C@_0CG@ONMCBDDI@fs?4find_chunk?$CIGAMEMTLPAIR_CHUNK_@ DB 'fs.find_chun'
	DB	'k(GAMEMTLPAIR_CHUNK_PAIR)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NAPBJFND@SGameMtlPair?3?3Load?$AA@
CONST	SEGMENT
??_C@_0BD@NAPBJFND@SGameMtlPair?3?3Load?$AA@ DB 'SGameMtlPair::Load', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GCODCLGD@CreatePSs?$AA@
CONST	SEGMENT
??_C@_09GCODCLGD@CreatePSs?$AA@ DB 'CreatePSs', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CEMALPE@cnt?$DM?$DNGAMEMTL_SUBITEM_COUNT?$AA@
CONST	SEGMENT
??_C@_0BL@CEMALPE@cnt?$DM?$DNGAMEMTL_SUBITEM_COUNT?$AA@ DB 'cnt<=GAMEMTL_'
	DB	'SUBITEM_COUNT', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HOOJDAPF@CreateMarks?$AA@
CONST	SEGMENT
??_C@_0M@HOOJDAPF@CreateMarks?$AA@ DB 'CreateMarks', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DOGKACAN@cnt?$DM?$DNGAMEMTL_SUBITEM_COUNT?$CL2?$AA@
CONST	SEGMENT
??_C@_0BN@DOGKACAN@cnt?$DM?$DNGAMEMTL_SUBITEM_COUNT?$CL2?$AA@ DB 'cnt<=GA'
	DB	'MEMTL_SUBITEM_COUNT+2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@LINGALBM@D?3?2CLEARSKY?2sources?2engine?2xrEng@
CONST	SEGMENT
??_C@_0DK@LINGALBM@D?3?2CLEARSKY?2sources?2engine?2xrEng@ DB 'D:\CLEARSKY'
	DB	'\sources\engine\xrEngine\GameMtlLib_Engine.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FIMHNKKC@CreateSounds?$AA@
CONST	SEGMENT
??_C@_0N@FIMHNKKC@CreateSounds?$AA@ DB 'CreateSounds', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@KNCKFJOG@d?3?2clearsky?2sources?2engine?2xreng@
CONST	SEGMENT
??_C@_0DN@KNCKFJOG@d?3?2clearsky?2sources?2engine?2xreng@ DB 'd:\clearsky'
	DB	'\sources\engine\xrengine\../xrEngine/GameMtlLib.h', 00H ; `string'
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xr_trims.h
;	COMDAT ??$_GetItem@$0IA@@@YAPADPBDHAAY0IA@DD0_N@Z
_TEXT	SEGMENT
??$_GetItem@$0IA@@@YAPADPBDHAAY0IA@DD0_N@Z PROC		; _GetItem<128>, COMDAT
; _src$ = edx
; _index$ = ecx
; _dst$ = eax

; 27   : 	return					_GetItem(src,index,dst,count,separator,def,trim);

	push	1
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	44					; 0000002cH
	push	128					; 00000080H
	push	eax
	push	ecx
	push	edx
	call	DWORD PTR __imp_?_GetItem@@YAPADPBDHPADID0_N@Z
	add	esp, 28					; 0000001cH

; 28   : }

	ret	0
??$_GetItem@$0IA@@@YAPADPBDHAAY0IA@DD0_N@Z ENDP		; _GetItem<128>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\include\xrrender\factoryptr.h
_TEXT	ENDS
;	COMDAT ??D?$FactoryPtr@VIWallMarkArray@@@@QBEAAVIWallMarkArray@@XZ
_TEXT	SEGMENT
??D?$FactoryPtr@VIWallMarkArray@@@@QBEAAVIWallMarkArray@@XZ PROC ; FactoryPtr<IWallMarkArray>::operator*, COMDAT
; _this$ = eax

; 39   : 	T& operator*() const {return *m_pObject;}

	mov	eax, DWORD PTR [eax]
	ret	0
??D?$FactoryPtr@VIWallMarkArray@@@@QBEAAVIWallMarkArray@@XZ ENDP ; FactoryPtr<IWallMarkArray>::operator*
_TEXT	ENDS
PUBLIC	?DestroyPSs@@YAXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z ; DestroyPSs
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\gamemtllib_engine.cpp
;	COMDAT ?DestroyPSs@@YAXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z
_TEXT	SEGMENT
?DestroyPSs@@YAXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z PROC ; DestroyPSs, COMDAT

; 22   : //	for (PSIt it=lst.begin(); lst.end() != it; ++it)
; 23   : //		Device.Resources->Delete(*it);
; 24   : }

	ret	0
?DestroyPSs@@YAXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z ENDP ; DestroyPSs
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
;	COMDAT ?end@?$vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@stlp_std@@QAEPAUref_sound@@XZ
_TEXT	SEGMENT
?end@?$vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@stlp_std@@QAEPAUref_sound@@XZ PROC ; stlp_std::vector<ref_sound,xalloc<ref_sound> >::end, COMDAT
; _this$ = ecx

; 81   :   iterator end()               { return cast_traits::to_value_type_ptr(_M_impl.end()); }

	jmp	?end@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEPAUref_sound@@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::end
?end@?$vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@stlp_std@@QAEPAUref_sound@@XZ ENDP ; stlp_std::vector<ref_sound,xalloc<ref_sound> >::end
_TEXT	ENDS
PUBLIC	?CreateMarks@@YAXPAVIWallMarkArray@@PBD@Z	; CreateMarks
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\gamemtllib_engine.cpp
;	COMDAT ?CreateMarks@@YAXPAVIWallMarkArray@@PBD@Z
_TEXT	SEGMENT
_tmp$ = -256						; size = 256
_buf$ = 8						; size = 4
?CreateMarks@@YAXPAVIWallMarkArray@@PBD@Z PROC		; CreateMarks, COMDAT
; _pMarks$ = edi

; 48   : {

	sub	esp, 256				; 00000100H
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _buf$[esp+260]
	push	esi

; 49   : 	string256	tmp;
; 50   : 	int cnt		=_GetItemCount(buf);	R_ASSERT(cnt<=GAMEMTL_SUBITEM_COUNT);

	push	44					; 0000002cH
	push	ebp
	call	DWORD PTR __imp_?_GetItemCount@@YAHPBDD@Z
	add	esp, 8
	cmp	BYTE PTR ?ignore_always@?3??CreateMarks@@YAXPAVIWallMarkArray@@PBD@Z@4_NA, 0
	mov	ebx, eax
	jne	SHORT $LN6@CreateMark
	cmp	ebx, 4
	jle	SHORT $LN6@CreateMark
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??CreateMarks@@YAXPAVIWallMarkArray@@PBD@Z@4_NA
	push	OFFSET ??_C@_0M@HOOJDAPF@CreateMarks?$AA@
	push	50					; 00000032H
	push	OFFSET ??_C@_0DK@LINGALBM@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BL@CEMALPE@cnt?$DM?$DNGAMEMTL_SUBITEM_COUNT?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN6@CreateMark:

; 51   : 	for (int k=0; k<cnt; ++k)

	xor	esi, esi
	test	ebx, ebx
	jle	SHORT $LN1@CreateMark
$LL3@CreateMark:

; 52   : 		pMarks->AppendMark(_GetItem(buf,k,tmp));

	push	1
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	44					; 0000002cH
	push	256					; 00000100H
	lea	eax, DWORD PTR _tmp$[esp+284]
	push	eax
	push	esi
	push	ebp
	call	DWORD PTR __imp_?_GetItem@@YAPADPBDHPADID0_N@Z
	mov	edx, DWORD PTR [edi]
	add	esp, 28					; 0000001cH
	push	eax
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, edi
	call	eax
	add	esi, 1
	cmp	esi, ebx
	jl	SHORT $LL3@CreateMark
$LN1@CreateMark:
	pop	esi
	pop	ebp
	pop	ebx

; 53   : }

	add	esp, 256				; 00000100H
	ret	0
?CreateMarks@@YAXPAVIWallMarkArray@@PBD@Z ENDP		; CreateMarks
PUBLIC	?DestroySounds@@YAXAAV?$xr_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@@@Z ; DestroySounds
; Function compile flags: /Ogtpy
;	COMDAT ?DestroySounds@@YAXAAV?$xr_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@@@Z
_TEXT	SEGMENT
?DestroySounds@@YAXAAV?$xr_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@@@Z PROC ; DestroySounds, COMDAT
; _lst$ = edi

; 8    : {

	push	esi

; 9    : 	for (SoundIt it=lst.begin(); lst.end() != it; ++it)	

	mov	ecx, edi
	call	?begin@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEPAUref_sound@@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::begin
	mov	ecx, edi
	mov	esi, eax
	call	?end@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEPAUref_sound@@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::end
	cmp	eax, esi
	je	SHORT $LN1@DestroySou
$LL3@DestroySou:

; 10   : 		it->destroy();

	mov	eax, DWORD PTR __imp_?Sound@@3PAVCSound_manager_interface@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+40]
	push	esi
	call	eax
	mov	ecx, edi
	add	esi, 4
	call	?end@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEPAUref_sound@@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::end
	cmp	eax, esi
	jne	SHORT $LL3@DestroySou
$LN1@DestroySou:
	pop	esi

; 11   : }

	ret	0
?DestroySounds@@YAXAAV?$xr_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@@@Z ENDP ; DestroySounds
PUBLIC	??1SGameMtlPair@@QAE@XZ				; SGameMtlPair::~SGameMtlPair
; Function compile flags: /Ogtpy
;	COMDAT ??1SGameMtlPair@@QAE@XZ
_TEXT	SEGMENT
??1SGameMtlPair@@QAE@XZ PROC				; SGameMtlPair::~SGameMtlPair, COMDAT
; _this$ = ecx

; 65   : {

	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx
	push	edi

; 66   : 	// destroy all media
; 67   : 	DestroySounds	(BreakingSounds);

	lea	ebp, DWORD PTR [esi+24]
	mov	edi, ebp
	call	?DestroySounds@@YAXAAV?$xr_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@@@Z ; DestroySounds

; 68   : 	DestroySounds	(StepSounds);

	lea	ebx, DWORD PTR [esi+36]
	mov	edi, ebx
	call	?DestroySounds@@YAXAAV?$xr_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@@@Z ; DestroySounds

; 69   : 	DestroySounds	(CollideSounds);

	lea	edi, DWORD PTR [esi+48]
	call	?DestroySounds@@YAXAAV?$xr_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@@@Z ; DestroySounds

; 70   : 	DestroyPSs		(CollideParticles);
; 71   : //	DestroyMarks	(CollideMarks);
; 72   : 	//RenderFactory->DestroyGameMtlPair(m_pCollideMarks);
; 73   : 	//m_pCollideMarks->
; 74   : }

	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [esi+72]
	mov	edx, DWORD PTR [edx+52]
	push	eax
	call	edx
	mov	DWORD PTR [esi+72], 0
	mov	ecx, DWORD PTR [esi+64]
	mov	eax, DWORD PTR [esi+60]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	esi, DWORD PTR [esi+60]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN38@SGameMtlPa
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN38@SGameMtlPa:
	push	ecx
	push	esp
	mov	ecx, edi
	call	?rend@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUref_sound@@@3@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::rend
	push	ecx
	push	esp
	mov	ecx, edi
	call	?rbegin@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUref_sound@@@3@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::rbegin
	call	??$_Destroy_Range@V?$reverse_iterator@PAUref_sound@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUref_sound@@@0@0@Z ; stlp_std::_Destroy_Range<stlp_std::reverse_iterator<ref_sound *> >
	mov	eax, DWORD PTR [edi]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN71@SGameMtlPa
	mov	ecx, DWORD PTR [edi+8]
	add	edi, 8
	sub	ecx, eax
	sar	ecx, 2
	push	ecx
	push	eax
	mov	ecx, edi
	call	?deallocate@?$xalloc@Uref_sound@@@@QBEXPAUref_sound@@I@Z ; xalloc<ref_sound>::deallocate
$LN71@SGameMtlPa:
	push	ecx
	push	esp
	mov	ecx, ebx
	call	?rend@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUref_sound@@@3@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::rend
	push	ecx
	push	esp
	mov	ecx, ebx
	call	?rbegin@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUref_sound@@@3@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::rbegin
	call	??$_Destroy_Range@V?$reverse_iterator@PAUref_sound@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUref_sound@@@0@0@Z ; stlp_std::_Destroy_Range<stlp_std::reverse_iterator<ref_sound *> >
	mov	eax, DWORD PTR [ebx]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN109@SGameMtlPa
	mov	edx, DWORD PTR [ebx+8]
	add	ebx, 8
	sub	edx, eax
	sar	edx, 2
	push	edx
	push	eax
	mov	ecx, ebx
	call	?deallocate@?$xalloc@Uref_sound@@@@QBEXPAUref_sound@@I@Z ; xalloc<ref_sound>::deallocate
$LN109@SGameMtlPa:
	push	ecx
	push	esp
	mov	ecx, ebp
	call	?rend@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUref_sound@@@3@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::rend
	push	ecx
	push	esp
	mov	ecx, ebp
	call	?rbegin@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUref_sound@@@3@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::rbegin
	call	??$_Destroy_Range@V?$reverse_iterator@PAUref_sound@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUref_sound@@@0@0@Z ; stlp_std::_Destroy_Range<stlp_std::reverse_iterator<ref_sound *> >
	mov	eax, DWORD PTR [ebp]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN147@SGameMtlPa
	mov	edx, DWORD PTR [ebp+8]
	lea	ecx, DWORD PTR [ebp+8]
	sub	edx, eax
	sar	edx, 2
	push	edx
	push	eax
	call	?deallocate@?$xalloc@Uref_sound@@@@QBEXPAUref_sound@@I@Z ; xalloc<ref_sound>::deallocate
$LN147@SGameMtlPa:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
??1SGameMtlPair@@QAE@XZ ENDP				; SGameMtlPair::~SGameMtlPair
_TEXT	ENDS
PUBLIC	?CreateSounds@@YAXAAV?$xr_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@@PBD@Z ; CreateSounds
; Function compile flags: /Ogtpy
;	COMDAT ?CreateSounds@@YAXAAV?$xr_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@@PBD@Z
_TEXT	SEGMENT
$T438984 = -133						; size = 1
$T438933 = -132						; size = 4
_tmp$ = -128						; size = 128
_lst$ = 8						; size = 4
_buf$ = 12						; size = 4
?CreateSounds@@YAXAAV?$xr_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@@PBD@Z PROC ; CreateSounds, COMDAT

; 28   : 	string128 tmp;
; 29   : 	int cnt			=	_GetItemCount(buf);	R_ASSERT(cnt<=GAMEMTL_SUBITEM_COUNT+2);

	mov	eax, DWORD PTR _buf$[esp-4]
	sub	esp, 136				; 00000088H
	push	ebx
	push	esi
	push	edi
	push	44					; 0000002cH
	push	eax
	call	DWORD PTR __imp_?_GetItemCount@@YAHPBDD@Z
	add	esp, 8
	cmp	BYTE PTR ?ignore_always@?3??CreateSounds@@YAXAAV?$xr_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@@PBD@Z@4_NA, 0
	mov	ebx, eax
	jne	SHORT $LN6@CreateSoun
	cmp	ebx, 6
	jle	SHORT $LN6@CreateSoun
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??CreateSounds@@YAXAAV?$xr_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@@PBD@Z@4_NA
	push	OFFSET ??_C@_0N@FIMHNKKC@CreateSounds?$AA@
	push	29					; 0000001dH
	push	OFFSET ??_C@_0DK@LINGALBM@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BN@DOGKACAN@cnt?$DM?$DNGAMEMTL_SUBITEM_COUNT?$CL2?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN6@CreateSoun:

; 30   : 	lst.resize		(cnt);

	mov	esi, DWORD PTR _lst$[esp+144]
	xor	edi, edi
	lea	eax, DWORD PTR $T438933[esp+148]
	mov	ecx, ebx
	mov	DWORD PTR $T438933[esp+148], edi
	call	?resize@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEXIABUref_sound@@@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::resize
	mov	eax, DWORD PTR $T438933[esp+148]
	cmp	eax, edi
	je	SHORT $LN26@CreateSoun
	add	DWORD PTR [eax+4], -1
	mov	ecx, DWORD PTR $T438933[esp+148]
	cmp	DWORD PTR [ecx+4], edi
	jne	SHORT $LN26@CreateSoun
	lea	edx, DWORD PTR $T438933[esp+148]
	push	edx
	lea	ecx, DWORD PTR $T438984[esp+152]
	mov	BYTE PTR $T438984[esp+152], 0
	call	??R?$xr_special_free@$00Vref_sound_data@@@@QAEXAAPAVref_sound_data@@@Z ; xr_special_free<1,ref_sound_data>::operator()
$LN26@CreateSoun:

; 31   : 	for (int k=0; k<cnt; ++k)

	cmp	ebx, edi
	jle	SHORT $LN1@CreateSoun
	mov	esi, DWORD PTR __imp_?_GetItem@@YAPADPBDHPADID0_N@Z
	push	ebp
	npad	10
$LL51@CreateSoun:

; 32   : 		lst[k].create	(_GetItem(buf,k,tmp),st_Effect,sg_SourceType);

	mov	ecx, DWORD PTR _buf$[esp+148]
	push	1
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	44					; 0000002cH
	push	128					; 00000080H
	lea	eax, DWORD PTR _tmp$[esp+168]
	push	eax
	push	edi
	push	ecx
	call	esi
	mov	ecx, DWORD PTR _lst$[esp+176]
	add	esp, 28					; 0000001cH
	mov	ebp, eax
	call	?begin@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEPAUref_sound@@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::begin
	mov	edx, DWORD PTR __imp_?Sound@@3PAVCSound_manager_interface@@A
	mov	ecx, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+28]
	push	-1
	push	0
	push	ebp
	lea	eax, DWORD PTR [eax+edi*4]
	push	eax
	call	edx
	add	edi, 1
	cmp	edi, ebx
	jl	SHORT $LL51@CreateSoun
	pop	ebp
$LN1@CreateSoun:
	pop	edi
	pop	esi
	pop	ebx

; 33   : }

	add	esp, 136				; 00000088H
	ret	0
?CreateSounds@@YAXAAV?$xr_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@@PBD@Z ENDP ; CreateSounds
PUBLIC	?CreatePSs@@YAXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PBD@Z ; CreatePSs
; Function compile flags: /Ogtpy
;	COMDAT ?CreatePSs@@YAXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PBD@Z
_TEXT	SEGMENT
$T488854 = -264						; size = 4
_cnt$ = -260						; size = 4
_tmp$ = -256						; size = 256
_lst$ = 8						; size = 4
?CreatePSs@@YAXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PBD@Z PROC ; CreatePSs, COMDAT
; _buf$ = ebx

; 57   : {

	sub	esp, 264				; 00000108H

; 58   : 	string256 tmp;
; 59   : 	int cnt=_GetItemCount(buf);	R_ASSERT(cnt<=GAMEMTL_SUBITEM_COUNT);

	push	44					; 0000002cH
	push	ebx
	call	DWORD PTR __imp_?_GetItemCount@@YAHPBDD@Z
	add	esp, 8
	cmp	BYTE PTR ?ignore_always@?3??CreatePSs@@YAXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PBD@Z@4_NA, 0
	mov	DWORD PTR _cnt$[esp+264], eax
	jne	SHORT $LN6@CreatePSs
	cmp	eax, 4
	jle	SHORT $LN6@CreatePSs
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??CreatePSs@@YAXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PBD@Z@4_NA
	push	OFFSET ??_C@_09GCODCLGD@CreatePSs?$AA@
	push	59					; 0000003bH
	push	OFFSET ??_C@_0DK@LINGALBM@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BL@CEMALPE@cnt?$DM?$DNGAMEMTL_SUBITEM_COUNT?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
	mov	eax, DWORD PTR _cnt$[esp+264]
$LN6@CreatePSs:
	push	esi

; 60   : 	for (int k=0; k<cnt; ++k)

	xor	esi, esi
	test	eax, eax
	jle	$LN1@CreatePSs
	push	ebp
	mov	ebp, DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	push	edi
	mov	edi, DWORD PTR __imp_?_GetItem@@YAPADPBDHPADID0_N@Z
$LL3@CreatePSs:

; 61   : 		lst.push_back	(_GetItem(buf,k,tmp));

	push	1
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	44					; 0000002cH
	push	256					; 00000100H
	lea	eax, DWORD PTR _tmp$[esp+292]
	push	eax
	push	esi
	push	ebx
	call	edi
	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	add	esp, 28					; 0000001cH
	mov	DWORD PTR $T488854[esp+276], 0
	mov	ecx, DWORD PTR [ecx]
	push	eax
	call	ebp
	test	eax, eax
	je	SHORT $LN14@CreatePSs
	add	DWORD PTR [eax], 1
$LN14@CreatePSs:
	mov	ecx, DWORD PTR $T488854[esp+276]
	test	ecx, ecx
	je	SHORT $LN17@CreatePSs
	add	DWORD PTR [ecx], -1
$LN17@CreatePSs:
	mov	ecx, DWORD PTR _lst$[esp+272]
	lea	edx, DWORD PTR $T488854[esp+276]
	push	edx
	mov	DWORD PTR $T488854[esp+280], eax
	call	?push_back@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXABVshared_str@@@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::push_back
	mov	eax, DWORD PTR $T488854[esp+276]
	test	eax, eax
	je	SHORT $LN2@CreatePSs
	add	DWORD PTR [eax], -1
	mov	eax, DWORD PTR $T488854[esp+276]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN2@CreatePSs
	mov	DWORD PTR $T488854[esp+276], 0
$LN2@CreatePSs:

; 60   : 	for (int k=0; k<cnt; ++k)

	add	esi, 1
	cmp	esi, DWORD PTR _cnt$[esp+276]
	jl	SHORT $LL3@CreatePSs
	pop	edi
	pop	ebp
$LN1@CreatePSs:
	pop	esi

; 62   : }

	add	esp, 264				; 00000108H
	ret	0
?CreatePSs@@YAXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PBD@Z ENDP ; CreatePSs
PUBLIC	?Load@SGameMtlPair@@QAEXAAVIReader@@@Z		; SGameMtlPair::Load
; Function compile flags: /Ogtpy
;	COMDAT ?Load@SGameMtlPair@@QAEXAAVIReader@@@Z
_TEXT	SEGMENT
_buf$ = -4						; size = 4
_fs$ = 8						; size = 4
?Load@SGameMtlPair@@QAEXAAVIReader@@@Z PROC		; SGameMtlPair::Load, COMDAT
; _this$ = ecx

; 77   : {

	push	ecx

; 78   : 	shared_str				buf;
; 79   : 
; 80   : 	R_ASSERT(fs.find_chunk(GAMEMTLPAIR_CHUNK_PAIR));

	cmp	BYTE PTR ?ignore_always@?3??Load@SGameMtlPair@@QAEXAAVIReader@@@Z@4_NA, 0
	push	ebx
	mov	ebx, DWORD PTR __imp_?find_chunk@IReader@@QAEIIPAH@Z
	push	ebp
	push	esi
	mov	esi, DWORD PTR _fs$[esp+12]
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _buf$[esp+20], 0
	jne	SHORT $LN15@Load@10
	push	0
	push	4096					; 00001000H
	mov	ecx, esi
	call	ebx
	test	eax, eax
	jne	SHORT $LN15@Load@10
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??Load@SGameMtlPair@@QAEXAAVIReader@@@Z@4_NA
	push	OFFSET ??_C@_0BD@NAPBJFND@SGameMtlPair?3?3Load?$AA@
	push	80					; 00000050H
	push	OFFSET ??_C@_0DK@LINGALBM@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0CG@ONMCBDDI@fs?4find_chunk?$CIGAMEMTLPAIR_CHUNK_@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN15@Load@10:

; 81   :     mtl0				= fs.r_u32();

	mov	ecx, esi
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 82   :     mtl1				= fs.r_u32();

	mov	ecx, esi
	mov	DWORD PTR [edi+4], eax
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 83   :     ID					= fs.r_u32();

	mov	ecx, esi
	mov	DWORD PTR [edi+8], eax
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 84   :     ID_parent			= fs.r_u32();

	mov	ecx, esi
	mov	DWORD PTR [edi+12], eax
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ

; 85   :     OwnProps.assign		(fs.r_u32());

	mov	ecx, esi
	mov	DWORD PTR [edi+16], eax
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ
	mov	DWORD PTR [edi+20], eax

; 86   :  
; 87   :     R_ASSERT(fs.find_chunk(GAMEMTLPAIR_CHUNK_BREAKING));

	cmp	BYTE PTR ?ignore_always@?7??Load@SGameMtlPair@@QAEXAAVIReader@@@Z@4_NA, 0
	jne	SHORT $LN11@Load@10
	push	0
	push	4098					; 00001002H
	mov	ecx, esi
	call	ebx
	test	eax, eax
	jne	SHORT $LN11@Load@10
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?7??Load@SGameMtlPair@@QAEXAAVIReader@@@Z@4_NA
	push	OFFSET ??_C@_0BD@NAPBJFND@SGameMtlPair?3?3Load?$AA@
	push	87					; 00000057H
	push	OFFSET ??_C@_0DK@LINGALBM@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0CK@OBIAOFNK@fs?4find_chunk?$CIGAMEMTLPAIR_CHUNK_@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN11@Load@10:

; 88   :     fs.r_stringZ			(buf); 		CreateSounds		(BreakingSounds,*buf);

	mov	ebp, DWORD PTR __imp_?r_stringZ@IReader@@QAEXAAVshared_str@@@Z
	lea	eax, DWORD PTR _buf$[esp+20]
	push	eax
	mov	ecx, esi
	call	ebp
	mov	eax, DWORD PTR _buf$[esp+20]
	test	eax, eax
	je	SHORT $LN25@Load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN26@Load@10
$LN25@Load@10:
	xor	eax, eax
$LN26@Load@10:
	push	eax
	lea	ecx, DWORD PTR [edi+24]
	push	ecx
	call	?CreateSounds@@YAXAAV?$xr_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@@PBD@Z ; CreateSounds
	add	esp, 8

; 89   :     
; 90   :     R_ASSERT(fs.find_chunk(GAMEMTLPAIR_CHUNK_STEP));

	cmp	BYTE PTR ?ignore_always@?M@??Load@SGameMtlPair@@QAEXAAVIReader@@@Z@4_NA, 0
	jne	SHORT $LN7@Load@10
	push	0
	push	4099					; 00001003H
	mov	ecx, esi
	call	ebx
	test	eax, eax
	jne	SHORT $LN7@Load@10
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?M@??Load@SGameMtlPair@@QAEXAAVIReader@@@Z@4_NA
	push	OFFSET ??_C@_0BD@NAPBJFND@SGameMtlPair?3?3Load?$AA@
	push	90					; 0000005aH
	push	OFFSET ??_C@_0DK@LINGALBM@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0CG@IKAEBCLC@fs?4find_chunk?$CIGAMEMTLPAIR_CHUNK_@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN7@Load@10:

; 91   :     fs.r_stringZ			(buf);		CreateSounds		(StepSounds,*buf);

	lea	edx, DWORD PTR _buf$[esp+20]
	push	edx
	mov	ecx, esi
	call	ebp
	mov	eax, DWORD PTR _buf$[esp+20]
	test	eax, eax
	je	SHORT $LN29@Load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN30@Load@10
$LN29@Load@10:
	xor	eax, eax
$LN30@Load@10:
	push	eax
	lea	eax, DWORD PTR [edi+36]
	push	eax
	call	?CreateSounds@@YAXAAV?$xr_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@@PBD@Z ; CreateSounds
	add	esp, 8

; 92   :     
; 93   : 	R_ASSERT(fs.find_chunk(GAMEMTLPAIR_CHUNK_COLLIDE));

	cmp	BYTE PTR ?ignore_always@?BA@??Load@SGameMtlPair@@QAEXAAVIReader@@@Z@4_NA, 0
	jne	SHORT $LN3@Load@10
	push	0
	push	4101					; 00001005H
	mov	ecx, esi
	call	ebx
	test	eax, eax
	jne	SHORT $LN3@Load@10
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BA@??Load@SGameMtlPair@@QAEXAAVIReader@@@Z@4_NA
	push	OFFSET ??_C@_0BD@NAPBJFND@SGameMtlPair?3?3Load?$AA@
	push	93					; 0000005dH
	push	OFFSET ??_C@_0DK@LINGALBM@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0CJ@GKINBOOG@fs?4find_chunk?$CIGAMEMTLPAIR_CHUNK_@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN3@Load@10:

; 94   :     fs.r_stringZ			(buf);		CreateSounds		(CollideSounds,*buf);

	lea	ecx, DWORD PTR _buf$[esp+20]
	push	ecx
	mov	ecx, esi
	call	ebp
	mov	eax, DWORD PTR _buf$[esp+20]
	test	eax, eax
	je	SHORT $LN33@Load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN34@Load@10
$LN33@Load@10:
	xor	eax, eax
$LN34@Load@10:
	push	eax
	lea	edx, DWORD PTR [edi+48]
	push	edx
	call	?CreateSounds@@YAXAAV?$xr_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@@PBD@Z ; CreateSounds
	add	esp, 8

; 95   :     fs.r_stringZ			(buf);		CreatePSs			(CollideParticles,*buf);

	lea	eax, DWORD PTR _buf$[esp+20]
	push	eax
	mov	ecx, esi
	call	ebp
	mov	eax, DWORD PTR _buf$[esp+20]
	test	eax, eax
	je	SHORT $LN37@Load@10
	lea	ebx, DWORD PTR [eax+16]
	jmp	SHORT $LN38@Load@10
$LN37@Load@10:
	xor	ebx, ebx
$LN38@Load@10:
	lea	ecx, DWORD PTR [edi+60]
	push	ecx
	call	?CreatePSs@@YAXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@PBD@Z ; CreatePSs
	add	esp, 4

; 96   :     fs.r_stringZ			(buf);		

	lea	edx, DWORD PTR _buf$[esp+20]
	push	edx
	mov	ecx, esi
	call	ebp

; 97   : 	//CreateMarks			(CollideMarks,*buf);
; 98   : 	CreateMarks			(&*m_pCollideMarks,*buf);

	mov	eax, DWORD PTR _buf$[esp+20]
	test	eax, eax
	je	SHORT $LN41@Load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN42@Load@10
$LN41@Load@10:
	xor	eax, eax
$LN42@Load@10:
	mov	edi, DWORD PTR [edi+72]
	push	eax
	call	?CreateMarks@@YAXPAVIWallMarkArray@@PBD@Z ; CreateMarks

; 99   : }

	mov	eax, DWORD PTR _buf$[esp+24]
	add	esp, 4
	test	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	je	SHORT $LN47@Load@10
	add	DWORD PTR [eax], -1
$LN47@Load@10:
	pop	ecx
	ret	4
?Load@SGameMtlPair@@QAEXAAVIReader@@@Z ENDP		; SGameMtlPair::Load
END
