; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\CLEARSKY\sources\engine\xrEngine\xr_ioc_cmd.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	?Info@CCC_HideConsole@@UAEXAAY0BAA@D@Z		; CCC_HideConsole::Info
PUBLIC	?Status@CCC_HideConsole@@UAEXAAY0BAA@D@Z	; CCC_HideConsole::Status
PUBLIC	?Execute@CCC_HideConsole@@UAEXPBD@Z		; CCC_HideConsole::Execute
PUBLIC	??_ECCC_HideConsole@@UAEPAXI@Z			; CCC_HideConsole::`vector deleting destructor'
PUBLIC	??_R4CCC_HideConsole@@6B@			; CCC_HideConsole::`RTTI Complete Object Locator'
PUBLIC	??_R3CCC_HideConsole@@8				; CCC_HideConsole::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCC_HideConsole@@8				; CCC_HideConsole::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCC_HideConsole@@8		; CCC_HideConsole::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCC_HideConsole@@@8			; CCC_HideConsole `RTTI Type Descriptor'
PUBLIC	??_R4CCC_ExclusiveMode@@6B@			; CCC_ExclusiveMode::`RTTI Complete Object Locator'
PUBLIC	??_R3CCC_ExclusiveMode@@8			; CCC_ExclusiveMode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCC_ExclusiveMode@@8			; CCC_ExclusiveMode::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCC_ExclusiveMode@@8		; CCC_ExclusiveMode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCC_ExclusiveMode@@@8			; CCC_ExclusiveMode `RTTI Type Descriptor'
PUBLIC	??_R4CCC_soundDevice@@6B@			; CCC_soundDevice::`RTTI Complete Object Locator'
PUBLIC	??_R3CCC_soundDevice@@8				; CCC_soundDevice::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCC_soundDevice@@8				; CCC_soundDevice::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCC_soundDevice@@8		; CCC_soundDevice::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCC_soundDevice@@@8			; CCC_soundDevice `RTTI Type Descriptor'
PUBLIC	??_R4CCC_r2@@6B@				; CCC_r2::`RTTI Complete Object Locator'
PUBLIC	??_R3CCC_r2@@8					; CCC_r2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCC_r2@@8					; CCC_r2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCC_r2@@8				; CCC_r2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCC_r2@@@8				; CCC_r2 `RTTI Type Descriptor'
PUBLIC	??_R4CCC_Gamma@@6B@				; CCC_Gamma::`RTTI Complete Object Locator'
PUBLIC	??_R3CCC_Gamma@@8				; CCC_Gamma::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCC_Gamma@@8				; CCC_Gamma::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCC_Gamma@@8			; CCC_Gamma::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCC_Gamma@@@8				; CCC_Gamma `RTTI Type Descriptor'
PUBLIC	??_R4CCC_SND_Restart@@6B@			; CCC_SND_Restart::`RTTI Complete Object Locator'
PUBLIC	??_R3CCC_SND_Restart@@8				; CCC_SND_Restart::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCC_SND_Restart@@8				; CCC_SND_Restart::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCC_SND_Restart@@8		; CCC_SND_Restart::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCC_SND_Restart@@@8			; CCC_SND_Restart `RTTI Type Descriptor'
PUBLIC	??_R4CCC_VidMode@@6B@				; CCC_VidMode::`RTTI Complete Object Locator'
PUBLIC	??_R3CCC_VidMode@@8				; CCC_VidMode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCC_VidMode@@8				; CCC_VidMode::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCC_VidMode@@8			; CCC_VidMode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCC_VidMode@@@8				; CCC_VidMode `RTTI Type Descriptor'
PUBLIC	??_R4CCC_VID_Reset@@6B@				; CCC_VID_Reset::`RTTI Complete Object Locator'
PUBLIC	??_R3CCC_VID_Reset@@8				; CCC_VID_Reset::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCC_VID_Reset@@8				; CCC_VID_Reset::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCC_VID_Reset@@8			; CCC_VID_Reset::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCC_VID_Reset@@@8			; CCC_VID_Reset `RTTI Type Descriptor'
PUBLIC	??_R4CCC_Disconnect@@6B@			; CCC_Disconnect::`RTTI Complete Object Locator'
PUBLIC	??_R3CCC_Disconnect@@8				; CCC_Disconnect::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCC_Disconnect@@8				; CCC_Disconnect::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCC_Disconnect@@8			; CCC_Disconnect::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCC_Disconnect@@@8			; CCC_Disconnect `RTTI Type Descriptor'
PUBLIC	??_R4CCC_Start@@6B@				; CCC_Start::`RTTI Complete Object Locator'
PUBLIC	??_R3CCC_Start@@8				; CCC_Start::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCC_Start@@8				; CCC_Start::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCC_Start@@8			; CCC_Start::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCC_Start@@@8				; CCC_Start `RTTI Type Descriptor'
PUBLIC	??_R4CCC_SaveCFG@@6B@				; CCC_SaveCFG::`RTTI Complete Object Locator'
PUBLIC	??_R3CCC_SaveCFG@@8				; CCC_SaveCFG::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCC_SaveCFG@@8				; CCC_SaveCFG::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCC_SaveCFG@@8			; CCC_SaveCFG::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCC_SaveCFG@@@8				; CCC_SaveCFG `RTTI Type Descriptor'
PUBLIC	??_R4CCC_Help@@6B@				; CCC_Help::`RTTI Complete Object Locator'
PUBLIC	??_R3CCC_Help@@8				; CCC_Help::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCC_Help@@8				; CCC_Help::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCC_Help@@8			; CCC_Help::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCC_Help@@@8				; CCC_Help `RTTI Type Descriptor'
PUBLIC	??_R4CCC_Quit@@6B@				; CCC_Quit::`RTTI Complete Object Locator'
PUBLIC	??_R3CCC_Quit@@8				; CCC_Quit::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCC_Quit@@8				; CCC_Quit::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCC_Quit@@8			; CCC_Quit::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCC_Quit@@@8				; CCC_Quit `RTTI Type Descriptor'
PUBLIC	??_C@_02MLODCJFF@32?$AA@			; `string'
PUBLIC	??_C@_02KMALDIDP@16?$AA@			; `string'
PUBLIC	?allow@CCC_LoadCFG_custom@@UAE_NPBD@Z		; CCC_LoadCFG_custom::allow
PUBLIC	?Execute@CCC_LoadCFG@@UAEXPBD@Z			; CCC_LoadCFG::Execute
PUBLIC	?add_to_LRU@IConsole_Command@@UAEXABVshared_str@@@Z ; IConsole_Command::add_to_LRU
PUBLIC	?Execute@CCC_Quit@@UAEXPBD@Z			; CCC_Quit::Execute
PUBLIC	??_GCCC_Quit@@UAEPAXI@Z				; CCC_Quit::`scalar deleting destructor'
PUBLIC	??0CCC_Quit@@QAE@PBD@Z				; CCC_Quit::CCC_Quit
PUBLIC	?Execute@CCC_Help@@UAEXPBD@Z			; CCC_Help::Execute
PUBLIC	??_GCCC_Help@@UAEPAXI@Z				; CCC_Help::`scalar deleting destructor'
PUBLIC	??0CCC_Help@@QAE@PBD@Z				; CCC_Help::CCC_Help
PUBLIC	??0?$_Rb_tree_iterator@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@U?$_MapTraitsT@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<char const * const,IConsole_Command *>,stlp_std::priv::_MapTraitsT<stlp_std::pair<char const * const,IConsole_Command *> > >::_Rb_tree_iterator<stlp_std::pair<char const * const,IConsole_Command *>,stlp_std::priv::_MapTraitsT<stlp_std::pair<char const * const,IConsole_Command *> > >
PUBLIC	??E?$_Rb_tree_iterator@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@U?$_MapTraitsT@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE?AU012@H@Z ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<char const * const,IConsole_Command *>,stlp_std::priv::_MapTraitsT<stlp_std::pair<char const * const,IConsole_Command *> > >::operator++
PUBLIC	?Execute@CCC_SaveCFG@@UAEXPBD@Z			; CCC_SaveCFG::Execute
PUBLIC	??_GCCC_SaveCFG@@UAEPAXI@Z			; CCC_SaveCFG::`scalar deleting destructor'
PUBLIC	??0CCC_SaveCFG@@QAE@PBD@Z			; CCC_SaveCFG::CCC_SaveCFG
PUBLIC	?parse@CCC_Start@@AAEXPADPBD1@Z			; CCC_Start::parse
PUBLIC	?protect_Name_strlwr@CCC_Start@@AAEXPAD@Z	; CCC_Start::protect_Name_strlwr
PUBLIC	??$xr_strcpy@$0BAAA@@@YAHAAY0BAAA@DPBD@Z	; xr_strcpy<4096>
PUBLIC	?Execute@CCC_Start@@UAEXPBD@Z			; CCC_Start::Execute
PUBLIC	??_GCCC_Start@@UAEPAXI@Z			; CCC_Start::`scalar deleting destructor'
PUBLIC	??0CCC_Start@@QAE@PBD@Z				; CCC_Start::CCC_Start
PUBLIC	?Execute@CCC_Disconnect@@UAEXPBD@Z		; CCC_Disconnect::Execute
PUBLIC	??_GCCC_Disconnect@@UAEPAXI@Z			; CCC_Disconnect::`scalar deleting destructor'
PUBLIC	??0CCC_Disconnect@@QAE@PBD@Z			; CCC_Disconnect::CCC_Disconnect
PUBLIC	?Execute@CCC_VID_Reset@@UAEXPBD@Z		; CCC_VID_Reset::Execute
PUBLIC	??_GCCC_VID_Reset@@UAEPAXI@Z			; CCC_VID_Reset::`scalar deleting destructor'
PUBLIC	??0CCC_VID_Reset@@QAE@PBD@Z			; CCC_VID_Reset::CCC_VID_Reset
PUBLIC	?Execute@CCC_VidMode@@UAEXPBD@Z			; CCC_VidMode::Execute
PUBLIC	?Status@CCC_VidMode@@UAEXAAY0BAA@D@Z		; CCC_VidMode::Status
PUBLIC	?GetToken@CCC_VidMode@@UAEPAUxr_token@@XZ	; CCC_VidMode::GetToken
PUBLIC	?Info@CCC_VidMode@@UAEXAAY0BAA@D@Z		; CCC_VidMode::Info
PUBLIC	?fill_tips@CCC_VidMode@@UAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@I@Z ; CCC_VidMode::fill_tips
PUBLIC	??_GCCC_VidMode@@UAEPAXI@Z			; CCC_VidMode::`scalar deleting destructor'
PUBLIC	??0CCC_VidMode@@QAE@PBD@Z			; CCC_VidMode::CCC_VidMode
PUBLIC	?Execute@CCC_SND_Restart@@UAEXPBD@Z		; CCC_SND_Restart::Execute
PUBLIC	??_GCCC_SND_Restart@@UAEPAXI@Z			; CCC_SND_Restart::`scalar deleting destructor'
PUBLIC	??0CCC_SND_Restart@@QAE@PBD@Z			; CCC_SND_Restart::CCC_SND_Restart
PUBLIC	?Execute@CCC_Gamma@@UAEXPBD@Z			; CCC_Gamma::Execute
PUBLIC	??_GCCC_Gamma@@UAEPAXI@Z			; CCC_Gamma::`scalar deleting destructor'
PUBLIC	??0CCC_Gamma@@QAE@PBDPAM@Z			; CCC_Gamma::CCC_Gamma
PUBLIC	??0CCC_r2@@QAE@PBD@Z				; CCC_r2::CCC_r2
PUBLIC	??0CCC_soundDevice@@QAE@PBD@Z			; CCC_soundDevice::CCC_soundDevice
PUBLIC	?Execute@CCC_ExclusiveMode@@UAEXPBD@Z		; CCC_ExclusiveMode::Execute
PUBLIC	?Save@CCC_ExclusiveMode@@UAEXPAVIWriter@@@Z	; CCC_ExclusiveMode::Save
PUBLIC	??_GCCC_ExclusiveMode@@UAEPAXI@Z		; CCC_ExclusiveMode::`scalar deleting destructor'
PUBLIC	??0CCC_ExclusiveMode@@QAE@PBD@Z			; CCC_ExclusiveMode::CCC_ExclusiveMode
PUBLIC	??1CCC_Help@@UAE@XZ				; CCC_Help::~CCC_Help
PUBLIC	??1CCC_Quit@@UAE@XZ				; CCC_Quit::~CCC_Quit
PUBLIC	??1CCC_Start@@UAE@XZ				; CCC_Start::~CCC_Start
PUBLIC	??1CCC_Disconnect@@UAE@XZ			; CCC_Disconnect::~CCC_Disconnect
PUBLIC	??1CCC_SaveCFG@@UAE@XZ				; CCC_SaveCFG::~CCC_SaveCFG
PUBLIC	??1CCC_Gamma@@UAE@XZ				; CCC_Gamma::~CCC_Gamma
PUBLIC	??1CCC_VidMode@@UAE@XZ				; CCC_VidMode::~CCC_VidMode
PUBLIC	??1CCC_VID_Reset@@UAE@XZ			; CCC_VID_Reset::~CCC_VID_Reset
PUBLIC	??1CCC_SND_Restart@@UAE@XZ			; CCC_SND_Restart::~CCC_SND_Restart
PUBLIC	?Execute@CCC_r2@@UAEXPBD@Z			; CCC_r2::Execute
PUBLIC	?Save@CCC_r2@@UAEXPAVIWriter@@@Z		; CCC_r2::Save
PUBLIC	?GetToken@CCC_r2@@UAEPAUxr_token@@XZ		; CCC_r2::GetToken
PUBLIC	??_GCCC_r2@@UAEPAXI@Z				; CCC_r2::`scalar deleting destructor'
PUBLIC	??1CCC_r2@@UAE@XZ				; CCC_r2::~CCC_r2
PUBLIC	?Execute@CCC_soundDevice@@UAEXPBD@Z		; CCC_soundDevice::Execute
PUBLIC	?Status@CCC_soundDevice@@UAEXAAY0BAA@D@Z	; CCC_soundDevice::Status
PUBLIC	?GetToken@CCC_soundDevice@@UAEPAUxr_token@@XZ	; CCC_soundDevice::GetToken
PUBLIC	?Save@CCC_soundDevice@@UAEXPAVIWriter@@@Z	; CCC_soundDevice::Save
PUBLIC	??_GCCC_soundDevice@@UAEPAXI@Z			; CCC_soundDevice::`scalar deleting destructor'
PUBLIC	??1CCC_soundDevice@@UAE@XZ			; CCC_soundDevice::~CCC_soundDevice
PUBLIC	??1CCC_ExclusiveMode@@UAE@XZ			; CCC_ExclusiveMode::~CCC_ExclusiveMode
PUBLIC	??$__find@PAVshared_str@@V1@@priv@stlp_std@@YAPAVshared_str@@PAV2@0ABV2@ABUrandom_access_iterator_tag@1@@Z ; stlp_std::priv::__find<shared_str *,shared_str>
PUBLIC	??$find@PAVshared_str@@V1@@stlp_std@@YAPAVshared_str@@PAV1@0ABV1@@Z ; stlp_std::find<shared_str *,shared_str>
PUBLIC	?rend@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAE?AV?$reverse_iterator@PAVshared_str@@@2@XZ ; stlp_std::vector<shared_str,xalloc<shared_str> >::rend
PUBLIC	?vid_quality_token@@3PAUxr_token@@A		; vid_quality_token
PUBLIC	?vid_bpp_token@@3PAUxr_token@@A			; vid_bpp_token
PUBLIC	??_C@_0CB@FLFCKEEI@?9?5?9?9?9?5Command?5listing?3?5start?5?9?9?9@ ; `string'
PUBLIC	??_C@_0BF@DLPBLNAG@?$CF?920s?5?$CI?$CF?910s?$CJ?5?9?9?9?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0CG@PKEECIED@Key?3?5Ctrl?5?$CL?5A?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Select@ ; `string'
PUBLIC	??_C@_0CN@IIELMMBE@Key?3?5Ctrl?5?$CL?5C?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Copy?5t@ ; `string'
PUBLIC	??_C@_0DA@FFFIGPOK@Key?3?5Ctrl?5?$CL?5V?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Paste?5@ ; `string'
PUBLIC	??_C@_0CM@MDKMMKFE@Key?3?5Ctrl?5?$CL?5X?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Cut?5to@ ; `string'
PUBLIC	??_C@_0CA@MDNPCKPM@Key?3?5Ctrl?5?$CL?5Z?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Undo?5?$AA@ ; `string'
PUBLIC	??_C@_0CN@DHJIICFK@Key?3?5Ctrl?5?$CL?5Insert?5?5?5?5?$DN?$DN?$DN?5Copy?5t@ ; `string'
PUBLIC	??_C@_0DA@KBBHADK@Key?3?5Shift?5?$CL?5Insert?5?5?5?$DN?$DN?$DN?5Paste?5@ ; `string'
PUBLIC	??_C@_0CM@GMDFMEFI@Key?3?5Shift?5?$CL?5Delete?5?5?5?$DN?$DN?$DN?5Cut?5to@ ; `string'
PUBLIC	??_C@_0DA@GBGCAEJL@Key?3?5Insert?5?5?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Toggle@ ; `string'
PUBLIC	??_C@_0DM@NENFPGPC@Key?3?5Back?5?1?5Delete?5?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5@ ; `string'
PUBLIC	??_C@_0EC@JPEJGBBL@Key?3?5Up?5?5?5?1?5Down?5?5?5?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5@ ; `string'
PUBLIC	??_C@_0EA@LNKGHKIK@Key?3?5Ctrl?5?$CL?5Up?5?1?5Ctrl?5?$CL?5Down?5?$DN?$DN?$DN@ ; `string'
PUBLIC	??_C@_0EJ@BCKPHAJC@Key?3?5Left?0?5Right?0?5Home?0?5End?5?$HL?$CLSh@ ; `string'
PUBLIC	??_C@_0DD@CKLBCLHB@Key?3?5PageUp?5?1?5PageDown?5?5?5?5?5?5?$DN?$DN?$DN?5@ ; `string'
PUBLIC	??_C@_0EH@HHEBIHGB@Key?3?5Tab?5?5?1?5Shift?5?$CL?5Tab?5?5?5?5?5?$DN?$DN?$DN?5@ ; `string'
PUBLIC	??_C@_0DJ@NHHKHNPG@Key?3?5Enter?5?5?1?5NumEnter?5?5?5?5?5?5?$DN?$DN?$DN?5@ ; `string'
PUBLIC	??_C@_0CA@CPGDOMOO@?9?5?9?9?9?5Command?5listing?3?5end?5?9?9?9?9?$AA@ ; `string'
PUBLIC	??_C@_0CE@EBCMBFJA@Config?9file?5?$FL?$CFs?$FN?5saved?5successfu@ ; `string'
PUBLIC	??_C@_0BP@KNFIPKKP@?$CBCannot?5store?5config?5file?5?$FL?$CFs?$FN?$AA@ ; `string'
PUBLIC	??_C@_0CA@CPDPKIFK@Executing?5config?9script?5?$CC?$CFs?$CC?4?4?4?$AA@ ; `string'
PUBLIC	??_C@_09BOCFEJAJ@$fs_root$?$AA@			; `string'
PUBLIC	??_C@_0BK@LKIFGDAB@?$FL?$CFs?$FN?5successfully?5loaded?4?$AA@ ; `string'
PUBLIC	??_C@_0BP@MHIFGMEG@?$CB?5Cannot?5open?5script?5file?5?$FL?$CFs?$FN?$AA@ ; `string'
PUBLIC	??_C@_07DBLJAEGM@?$CI?$CF?$FL?$FO?$CJ?$FN?$CJ?$AA@ ; `string'
PUBLIC	??_C@_05DFCJAACA@name?$DN?$AA@			; `string'
PUBLIC	??_C@_06HJHJCKIO@server?$AA@			; `string'
PUBLIC	??_C@_06DGDLPBAN@client?$AA@			; `string'
PUBLIC	??_C@_04PLPNPBEF@demo?$AA@			; `string'
PUBLIC	??_C@_06EJFMBPJF@single?$AA@			; `string'
PUBLIC	??_C@_09IPAEKDAI@localhost?$AA@			; `string'
PUBLIC	??_C@_0DE@LJJJDKPI@?$CB?5Can?8t?5start?5game?5without?5clien@ ; `string'
PUBLIC	??_C@_05OEHCLJIP@?$CFdx?$CFd?$AA@		; `string'
PUBLIC	??_C@_0BI@CBOMLCNK@?$CB?5Wrong?5video?5mode?5?$FL?$CFs?$FN?$AA@ ; `string'
PUBLIC	??_C@_0BN@NENACDLB@change?5screen?5resolution?5WxH?$AA@ ; `string'
PUBLIC	?ps_gamma@@3MA					; ps_gamma
PUBLIC	?ps_brightness@@3MA				; ps_brightness
PUBLIC	?ps_contrast@@3MA				; ps_contrast
PUBLIC	?r2_sun_static@@3HA				; r2_sun_static
PUBLIC	?r2_advanced_pp@@3HA				; r2_advanced_pp
PUBLIC	?renderer_value@@3IA				; renderer_value
PUBLIC	??_C@_05LAPONLG@false?$AA@			; `string'
PUBLIC	??_C@_0N@NBKGGLGI@hide?5console?$AA@		; `string'
PUBLIC	?psHUD_FOV@@3MA					; psHUD_FOV
PUBLIC	?ps_r__Supersample@@3HA				; ps_r__Supersample
PUBLIC	??_C@_04PCJFHION@help?$AA@			; `string'
PUBLIC	??_C@_05FAGFPHJG@start?$AA@			; `string'
PUBLIC	??_C@_0L@KKPFIJOL@disconnect?$AA@		; `string'
PUBLIC	??_C@_08KOFGEFOI@cfg_load?$AA@			; `string'
PUBLIC	??_C@_0P@EGAINIKO@r__supersample?$AA@		; `string'
PUBLIC	??_C@_09HNFNCICC@rs_v_sync?$AA@			; `string'
PUBLIC	??_C@_0O@JAOOLNDK@rs_fullscreen?$AA@		; `string'
PUBLIC	??_C@_0BA@DBEMGCDM@rs_refresh_60hz?$AA@		; `string'
PUBLIC	??_C@_08GFHFEMJA@rs_stats?$AA@			; `string'
PUBLIC	??_C@_0BA@DKBCLJG@rs_vis_distance?$AA@		; `string'
PUBLIC	??_C@_0L@NDIJLHDO@rs_cam_pos?$AA@		; `string'
PUBLIC	??_C@_0L@ENFMGHEP@rs_c_gamma?$AA@		; `string'
PUBLIC	??_C@_0BA@FALFAFPG@rs_c_brightness?$AA@		; `string'
PUBLIC	??_C@_0O@NHMODHDA@rs_c_contrast?$AA@		; `string'
PUBLIC	??_C@_0M@IEODBMNE@texture_lod?$AA@		; `string'
PUBLIC	??_C@_0BE@EHAIBNEJ@net_dedicated_sleep?$AA@	; `string'
PUBLIC	??_C@_0P@MDCKIMGM@particle_level?$AA@		; `string'
PUBLIC	??_C@_08ICHJJAPN@vid_mode?$AA@			; `string'
PUBLIC	??_C@_0M@DIIAMDPB@vid_restart?$AA@		; `string'
PUBLIC	??_C@_0P@OLGMFOIM@snd_volume_eff?$AA@		; `string'
PUBLIC	??_C@_0BB@LOOHEAIB@snd_volume_music?$AA@	; `string'
PUBLIC	??_C@_0M@IJBIKBGC@snd_restart?$AA@		; `string'
PUBLIC	??_C@_0BB@LLPLMIHM@snd_acceleration?$AA@	; `string'
PUBLIC	??_C@_07ONOJNHFG@snd_efx?$AA@			; `string'
PUBLIC	??_C@_0M@JDIKMPCD@snd_targets?$AA@		; `string'
PUBLIC	??_C@_0P@PEPLPDFL@snd_cache_size?$AA@		; `string'
PUBLIC	??_C@_0N@KBPHGAAB@mouse_invert?$AA@		; `string'
PUBLIC	??_C@_0L@GHLIFCGJ@mouse_sens?$AA@		; `string'
PUBLIC	??_C@_09OKOJABGK@cam_inert?$AA@			; `string'
PUBLIC	??_C@_0BA@JMADABMJ@cam_slide_inert?$AA@		; `string'
PUBLIC	??_C@_0L@PEHIMOIC@snd_device?$AA@		; `string'
PUBLIC	??_C@_0BA@HPFNHPOG@occlusion_scale?$AA@		; `string'
PUBLIC	??_C@_0BI@GNDPDAH@net_dbg_dump_export_obj?$AA@	; `string'
PUBLIC	??_C@_0BI@MNEOCLGM@net_dbg_dump_import_obj?$AA@	; `string'
PUBLIC	??_C@_0BF@BKKKKOKD@input_exclusive_mode?$AA@	; `string'
PUBLIC	??_C@_0BH@PGNLFEHC@sv_console_update_rate?$AA@	; `string'
PUBLIC	??_C@_0CA@ODBOMBIN@sv_dedicated_server_update_rate?$AA@ ; `string'
PUBLIC	??_C@_04IBOFHAPJ@hide?$AA@			; `string'
PUBLIC	??_7CCC_Quit@@6B@				; CCC_Quit::`vftable'
PUBLIC	??_7CCC_Help@@6B@				; CCC_Help::`vftable'
PUBLIC	??_7CCC_SaveCFG@@6B@				; CCC_SaveCFG::`vftable'
PUBLIC	??_7CCC_Start@@6B@				; CCC_Start::`vftable'
PUBLIC	??_7CCC_Disconnect@@6B@				; CCC_Disconnect::`vftable'
PUBLIC	??_7CCC_VID_Reset@@6B@				; CCC_VID_Reset::`vftable'
PUBLIC	??_7CCC_VidMode@@6B@				; CCC_VidMode::`vftable'
PUBLIC	??_7CCC_SND_Restart@@6B@			; CCC_SND_Restart::`vftable'
PUBLIC	??_7CCC_Gamma@@6B@				; CCC_Gamma::`vftable'
PUBLIC	??_7CCC_r2@@6B@					; CCC_r2::`vftable'
PUBLIC	??_7CCC_soundDevice@@6B@			; CCC_soundDevice::`vftable'
PUBLIC	??_7CCC_ExclusiveMode@@6B@			; CCC_ExclusiveMode::`vftable'
PUBLIC	??_7CCC_HideConsole@@6B@			; CCC_HideConsole::`vftable'
PUBLIC	??_C@_04LOAJBDKD@true?$AA@			; `string'
EXTRN	__imp_?psSoundVEffects@@3MA:DWORD
EXTRN	__imp_?psSoundVMusic@@3MA:DWORD
EXTRN	__imp_?psSoundOcclusionScale@@3MA:DWORD
EXTRN	__imp_?psSoundFlags@@3U?$_flags@I@@A:DWORD
EXTRN	__imp_?psSoundTargets@@3HA:DWORD
EXTRN	__imp_?psSoundCacheSizeMB@@3HA:DWORD
EXTRN	??_ECCC_Quit@@UAEPAXI@Z:PROC			; CCC_Quit::`vector deleting destructor'
EXTRN	??_ECCC_Help@@UAEPAXI@Z:PROC			; CCC_Help::`vector deleting destructor'
EXTRN	__imp__SetFileAttributesA@8:PROC
EXTRN	??_ECCC_SaveCFG@@UAEPAXI@Z:PROC			; CCC_SaveCFG::`vector deleting destructor'
EXTRN	__imp__strchr:PROC
EXTRN	??_ECCC_Start@@UAEPAXI@Z:PROC			; CCC_Start::`vector deleting destructor'
EXTRN	??_ECCC_Disconnect@@UAEPAXI@Z:PROC		; CCC_Disconnect::`vector deleting destructor'
EXTRN	??_ECCC_VID_Reset@@UAEPAXI@Z:PROC		; CCC_VID_Reset::`vector deleting destructor'
EXTRN	__imp_?vid_mode_token@@3PAUxr_token@@A:DWORD
EXTRN	??_ECCC_VidMode@@UAEPAXI@Z:PROC			; CCC_VidMode::`vector deleting destructor'
EXTRN	??_ECCC_SND_Restart@@UAEPAXI@Z:PROC		; CCC_SND_Restart::`vector deleting destructor'
EXTRN	??_ECCC_Gamma@@UAEPAXI@Z:PROC			; CCC_Gamma::`vector deleting destructor'
EXTRN	__imp_?snd_device_id@@3IA:DWORD
EXTRN	??_ECCC_ExclusiveMode@@UAEPAXI@Z:PROC		; CCC_ExclusiveMode::`vector deleting destructor'
EXTRN	??_ECCC_r2@@UAEPAXI@Z:PROC			; CCC_r2::`vector deleting destructor'
EXTRN	__imp_?snd_devices_token@@3PAUxr_token@@A:DWORD
EXTRN	??_ECCC_soundDevice@@UAEPAXI@Z:PROC		; CCC_soundDevice::`vector deleting destructor'
EXTRN	__imp_?impl@?$IReaderBase@VIReader@@@@QBEABVIReader@@XZ:PROC
EXTRN	__imp_?elapsed@IReader@@QBEHXZ:PROC
EXTRN	__imp_?eof@?$IReaderBase@VIReader@@@@QBEHXZ:PROC
?vid_quality_token@@3PAUxr_token@@A DD 01H DUP (?)	; vid_quality_token
?r2_advanced_pp@@3HA DD 01H DUP (?)			; r2_advanced_pp
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT
??_C@_04LOAJBDKD@true?$AA@ DB 'true', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CCC_HideConsole@@6B@
CONST	SEGMENT
??_7CCC_HideConsole@@6B@ DD FLAT:??_R4CCC_HideConsole@@6B@ ; CCC_HideConsole::`vftable'
	DD	FLAT:??_ECCC_HideConsole@@UAEPAXI@Z
	DD	FLAT:?Execute@CCC_HideConsole@@UAEXPBD@Z
	DD	FLAT:?Status@CCC_HideConsole@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Info@CCC_HideConsole@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Save@IConsole_Command@@UAEXPAVIWriter@@@Z
	DD	FLAT:?fill_tips@IConsole_Command@@UAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@I@Z
	DD	FLAT:?add_to_LRU@IConsole_Command@@UAEXABVshared_str@@@Z
CONST	ENDS
;	COMDAT ??_R4CCC_HideConsole@@6B@
rdata$r	SEGMENT
??_R4CCC_HideConsole@@6B@ DD 00H			; CCC_HideConsole::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCC_HideConsole@@@8
	DD	FLAT:??_R3CCC_HideConsole@@8
rdata$r	ENDS
;	COMDAT ??_R3CCC_HideConsole@@8
rdata$r	SEGMENT
??_R3CCC_HideConsole@@8 DD 00H				; CCC_HideConsole::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCC_HideConsole@@8
rdata$r	ENDS
;	COMDAT ??_R2CCC_HideConsole@@8
rdata$r	SEGMENT
??_R2CCC_HideConsole@@8 DD FLAT:??_R1A@?0A@EA@CCC_HideConsole@@8 ; CCC_HideConsole::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IConsole_Command@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCC_HideConsole@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCC_HideConsole@@8 DD FLAT:??_R0?AVCCC_HideConsole@@@8 ; CCC_HideConsole::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCC_HideConsole@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCC_HideConsole@@@8
_DATA	SEGMENT
??_R0?AVCCC_HideConsole@@@8 DD FLAT:??_7type_info@@6B@	; CCC_HideConsole `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCC_HideConsole@@', 00H
_DATA	ENDS
;	COMDAT ??_7CCC_ExclusiveMode@@6B@
CONST	SEGMENT
??_7CCC_ExclusiveMode@@6B@ DD FLAT:??_R4CCC_ExclusiveMode@@6B@ ; CCC_ExclusiveMode::`vftable'
	DD	FLAT:??_ECCC_ExclusiveMode@@UAEPAXI@Z
	DD	FLAT:?Execute@CCC_ExclusiveMode@@UAEXPBD@Z
	DD	FLAT:?Status@IConsole_Command@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Info@IConsole_Command@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Save@CCC_ExclusiveMode@@UAEXPAVIWriter@@@Z
	DD	FLAT:?fill_tips@IConsole_Command@@UAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@I@Z
	DD	FLAT:?add_to_LRU@IConsole_Command@@UAEXABVshared_str@@@Z
CONST	ENDS
;	COMDAT ??_R4CCC_ExclusiveMode@@6B@
rdata$r	SEGMENT
??_R4CCC_ExclusiveMode@@6B@ DD 00H			; CCC_ExclusiveMode::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCC_ExclusiveMode@@@8
	DD	FLAT:??_R3CCC_ExclusiveMode@@8
rdata$r	ENDS
;	COMDAT ??_R3CCC_ExclusiveMode@@8
rdata$r	SEGMENT
??_R3CCC_ExclusiveMode@@8 DD 00H			; CCC_ExclusiveMode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCC_ExclusiveMode@@8
rdata$r	ENDS
;	COMDAT ??_R2CCC_ExclusiveMode@@8
rdata$r	SEGMENT
??_R2CCC_ExclusiveMode@@8 DD FLAT:??_R1A@?0A@EA@CCC_ExclusiveMode@@8 ; CCC_ExclusiveMode::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IConsole_Command@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCC_ExclusiveMode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCC_ExclusiveMode@@8 DD FLAT:??_R0?AVCCC_ExclusiveMode@@@8 ; CCC_ExclusiveMode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCC_ExclusiveMode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCC_ExclusiveMode@@@8
_DATA	SEGMENT
??_R0?AVCCC_ExclusiveMode@@@8 DD FLAT:??_7type_info@@6B@ ; CCC_ExclusiveMode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCC_ExclusiveMode@@', 00H
_DATA	ENDS
;	COMDAT ??_7CCC_soundDevice@@6B@
CONST	SEGMENT
??_7CCC_soundDevice@@6B@ DD FLAT:??_R4CCC_soundDevice@@6B@ ; CCC_soundDevice::`vftable'
	DD	FLAT:??_ECCC_soundDevice@@UAEPAXI@Z
	DD	FLAT:?Execute@CCC_soundDevice@@UAEXPBD@Z
	DD	FLAT:?Status@CCC_soundDevice@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Info@CCC_Token@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Save@CCC_soundDevice@@UAEXPAVIWriter@@@Z
	DD	FLAT:?fill_tips@CCC_Token@@UAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@I@Z
	DD	FLAT:?add_to_LRU@IConsole_Command@@UAEXABVshared_str@@@Z
	DD	FLAT:?GetToken@CCC_soundDevice@@UAEPAUxr_token@@XZ
CONST	ENDS
;	COMDAT ??_R4CCC_soundDevice@@6B@
rdata$r	SEGMENT
??_R4CCC_soundDevice@@6B@ DD 00H			; CCC_soundDevice::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCC_soundDevice@@@8
	DD	FLAT:??_R3CCC_soundDevice@@8
rdata$r	ENDS
;	COMDAT ??_R3CCC_soundDevice@@8
rdata$r	SEGMENT
??_R3CCC_soundDevice@@8 DD 00H				; CCC_soundDevice::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CCC_soundDevice@@8
rdata$r	ENDS
;	COMDAT ??_R2CCC_soundDevice@@8
rdata$r	SEGMENT
??_R2CCC_soundDevice@@8 DD FLAT:??_R1A@?0A@EA@CCC_soundDevice@@8 ; CCC_soundDevice::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCC_Token@@8
	DD	FLAT:??_R1A@?0A@EA@IConsole_Command@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCC_soundDevice@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCC_soundDevice@@8 DD FLAT:??_R0?AVCCC_soundDevice@@@8 ; CCC_soundDevice::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCC_soundDevice@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCC_soundDevice@@@8
_DATA	SEGMENT
??_R0?AVCCC_soundDevice@@@8 DD FLAT:??_7type_info@@6B@	; CCC_soundDevice `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCC_soundDevice@@', 00H
_DATA	ENDS
;	COMDAT ??_7CCC_r2@@6B@
CONST	SEGMENT
??_7CCC_r2@@6B@ DD FLAT:??_R4CCC_r2@@6B@		; CCC_r2::`vftable'
	DD	FLAT:??_ECCC_r2@@UAEPAXI@Z
	DD	FLAT:?Execute@CCC_r2@@UAEXPBD@Z
	DD	FLAT:?Status@CCC_Token@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Info@CCC_Token@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Save@CCC_r2@@UAEXPAVIWriter@@@Z
	DD	FLAT:?fill_tips@CCC_Token@@UAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@I@Z
	DD	FLAT:?add_to_LRU@IConsole_Command@@UAEXABVshared_str@@@Z
	DD	FLAT:?GetToken@CCC_r2@@UAEPAUxr_token@@XZ
CONST	ENDS
;	COMDAT ??_R4CCC_r2@@6B@
rdata$r	SEGMENT
??_R4CCC_r2@@6B@ DD 00H					; CCC_r2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCC_r2@@@8
	DD	FLAT:??_R3CCC_r2@@8
rdata$r	ENDS
;	COMDAT ??_R3CCC_r2@@8
rdata$r	SEGMENT
??_R3CCC_r2@@8 DD 00H					; CCC_r2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CCC_r2@@8
rdata$r	ENDS
;	COMDAT ??_R2CCC_r2@@8
rdata$r	SEGMENT
??_R2CCC_r2@@8 DD FLAT:??_R1A@?0A@EA@CCC_r2@@8		; CCC_r2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCC_Token@@8
	DD	FLAT:??_R1A@?0A@EA@IConsole_Command@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCC_r2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCC_r2@@8 DD FLAT:??_R0?AVCCC_r2@@@8	; CCC_r2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCC_r2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCC_r2@@@8
_DATA	SEGMENT
??_R0?AVCCC_r2@@@8 DD FLAT:??_7type_info@@6B@		; CCC_r2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCC_r2@@', 00H
_DATA	ENDS
;	COMDAT ??_7CCC_Gamma@@6B@
CONST	SEGMENT
??_7CCC_Gamma@@6B@ DD FLAT:??_R4CCC_Gamma@@6B@		; CCC_Gamma::`vftable'
	DD	FLAT:??_ECCC_Gamma@@UAEPAXI@Z
	DD	FLAT:?Execute@CCC_Gamma@@UAEXPBD@Z
	DD	FLAT:?Status@CCC_Float@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Info@CCC_Float@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Save@IConsole_Command@@UAEXPAVIWriter@@@Z
	DD	FLAT:?fill_tips@CCC_Float@@UAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@I@Z
	DD	FLAT:?add_to_LRU@IConsole_Command@@UAEXABVshared_str@@@Z
CONST	ENDS
;	COMDAT ??_R4CCC_Gamma@@6B@
rdata$r	SEGMENT
??_R4CCC_Gamma@@6B@ DD 00H				; CCC_Gamma::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCC_Gamma@@@8
	DD	FLAT:??_R3CCC_Gamma@@8
rdata$r	ENDS
;	COMDAT ??_R3CCC_Gamma@@8
rdata$r	SEGMENT
??_R3CCC_Gamma@@8 DD 00H				; CCC_Gamma::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CCC_Gamma@@8
rdata$r	ENDS
;	COMDAT ??_R2CCC_Gamma@@8
rdata$r	SEGMENT
??_R2CCC_Gamma@@8 DD FLAT:??_R1A@?0A@EA@CCC_Gamma@@8	; CCC_Gamma::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCC_Float@@8
	DD	FLAT:??_R1A@?0A@EA@IConsole_Command@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCC_Gamma@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCC_Gamma@@8 DD FLAT:??_R0?AVCCC_Gamma@@@8 ; CCC_Gamma::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCC_Gamma@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCC_Gamma@@@8
_DATA	SEGMENT
??_R0?AVCCC_Gamma@@@8 DD FLAT:??_7type_info@@6B@	; CCC_Gamma `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCC_Gamma@@', 00H
_DATA	ENDS
;	COMDAT ??_7CCC_SND_Restart@@6B@
CONST	SEGMENT
??_7CCC_SND_Restart@@6B@ DD FLAT:??_R4CCC_SND_Restart@@6B@ ; CCC_SND_Restart::`vftable'
	DD	FLAT:??_ECCC_SND_Restart@@UAEPAXI@Z
	DD	FLAT:?Execute@CCC_SND_Restart@@UAEXPBD@Z
	DD	FLAT:?Status@IConsole_Command@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Info@IConsole_Command@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Save@IConsole_Command@@UAEXPAVIWriter@@@Z
	DD	FLAT:?fill_tips@IConsole_Command@@UAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@I@Z
	DD	FLAT:?add_to_LRU@IConsole_Command@@UAEXABVshared_str@@@Z
CONST	ENDS
;	COMDAT ??_R4CCC_SND_Restart@@6B@
rdata$r	SEGMENT
??_R4CCC_SND_Restart@@6B@ DD 00H			; CCC_SND_Restart::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCC_SND_Restart@@@8
	DD	FLAT:??_R3CCC_SND_Restart@@8
rdata$r	ENDS
;	COMDAT ??_R3CCC_SND_Restart@@8
rdata$r	SEGMENT
??_R3CCC_SND_Restart@@8 DD 00H				; CCC_SND_Restart::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCC_SND_Restart@@8
rdata$r	ENDS
;	COMDAT ??_R2CCC_SND_Restart@@8
rdata$r	SEGMENT
??_R2CCC_SND_Restart@@8 DD FLAT:??_R1A@?0A@EA@CCC_SND_Restart@@8 ; CCC_SND_Restart::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IConsole_Command@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCC_SND_Restart@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCC_SND_Restart@@8 DD FLAT:??_R0?AVCCC_SND_Restart@@@8 ; CCC_SND_Restart::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCC_SND_Restart@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCC_SND_Restart@@@8
_DATA	SEGMENT
??_R0?AVCCC_SND_Restart@@@8 DD FLAT:??_7type_info@@6B@	; CCC_SND_Restart `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCC_SND_Restart@@', 00H
_DATA	ENDS
;	COMDAT ??_7CCC_VidMode@@6B@
CONST	SEGMENT
??_7CCC_VidMode@@6B@ DD FLAT:??_R4CCC_VidMode@@6B@	; CCC_VidMode::`vftable'
	DD	FLAT:??_ECCC_VidMode@@UAEPAXI@Z
	DD	FLAT:?Execute@CCC_VidMode@@UAEXPBD@Z
	DD	FLAT:?Status@CCC_VidMode@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Info@CCC_VidMode@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Save@IConsole_Command@@UAEXPAVIWriter@@@Z
	DD	FLAT:?fill_tips@CCC_VidMode@@UAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@I@Z
	DD	FLAT:?add_to_LRU@IConsole_Command@@UAEXABVshared_str@@@Z
	DD	FLAT:?GetToken@CCC_VidMode@@UAEPAUxr_token@@XZ
CONST	ENDS
;	COMDAT ??_R4CCC_VidMode@@6B@
rdata$r	SEGMENT
??_R4CCC_VidMode@@6B@ DD 00H				; CCC_VidMode::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCC_VidMode@@@8
	DD	FLAT:??_R3CCC_VidMode@@8
rdata$r	ENDS
;	COMDAT ??_R3CCC_VidMode@@8
rdata$r	SEGMENT
??_R3CCC_VidMode@@8 DD 00H				; CCC_VidMode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CCC_VidMode@@8
rdata$r	ENDS
;	COMDAT ??_R2CCC_VidMode@@8
rdata$r	SEGMENT
??_R2CCC_VidMode@@8 DD FLAT:??_R1A@?0A@EA@CCC_VidMode@@8 ; CCC_VidMode::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCC_Token@@8
	DD	FLAT:??_R1A@?0A@EA@IConsole_Command@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCC_VidMode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCC_VidMode@@8 DD FLAT:??_R0?AVCCC_VidMode@@@8 ; CCC_VidMode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCC_VidMode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCC_VidMode@@@8
_DATA	SEGMENT
??_R0?AVCCC_VidMode@@@8 DD FLAT:??_7type_info@@6B@	; CCC_VidMode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCC_VidMode@@', 00H
_DATA	ENDS
;	COMDAT ??_7CCC_VID_Reset@@6B@
CONST	SEGMENT
??_7CCC_VID_Reset@@6B@ DD FLAT:??_R4CCC_VID_Reset@@6B@	; CCC_VID_Reset::`vftable'
	DD	FLAT:??_ECCC_VID_Reset@@UAEPAXI@Z
	DD	FLAT:?Execute@CCC_VID_Reset@@UAEXPBD@Z
	DD	FLAT:?Status@IConsole_Command@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Info@IConsole_Command@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Save@IConsole_Command@@UAEXPAVIWriter@@@Z
	DD	FLAT:?fill_tips@IConsole_Command@@UAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@I@Z
	DD	FLAT:?add_to_LRU@IConsole_Command@@UAEXABVshared_str@@@Z
CONST	ENDS
;	COMDAT ??_R4CCC_VID_Reset@@6B@
rdata$r	SEGMENT
??_R4CCC_VID_Reset@@6B@ DD 00H				; CCC_VID_Reset::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCC_VID_Reset@@@8
	DD	FLAT:??_R3CCC_VID_Reset@@8
rdata$r	ENDS
;	COMDAT ??_R3CCC_VID_Reset@@8
rdata$r	SEGMENT
??_R3CCC_VID_Reset@@8 DD 00H				; CCC_VID_Reset::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCC_VID_Reset@@8
rdata$r	ENDS
;	COMDAT ??_R2CCC_VID_Reset@@8
rdata$r	SEGMENT
??_R2CCC_VID_Reset@@8 DD FLAT:??_R1A@?0A@EA@CCC_VID_Reset@@8 ; CCC_VID_Reset::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IConsole_Command@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCC_VID_Reset@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCC_VID_Reset@@8 DD FLAT:??_R0?AVCCC_VID_Reset@@@8 ; CCC_VID_Reset::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCC_VID_Reset@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCC_VID_Reset@@@8
_DATA	SEGMENT
??_R0?AVCCC_VID_Reset@@@8 DD FLAT:??_7type_info@@6B@	; CCC_VID_Reset `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCC_VID_Reset@@', 00H
_DATA	ENDS
;	COMDAT ??_7CCC_Disconnect@@6B@
CONST	SEGMENT
??_7CCC_Disconnect@@6B@ DD FLAT:??_R4CCC_Disconnect@@6B@ ; CCC_Disconnect::`vftable'
	DD	FLAT:??_ECCC_Disconnect@@UAEPAXI@Z
	DD	FLAT:?Execute@CCC_Disconnect@@UAEXPBD@Z
	DD	FLAT:?Status@IConsole_Command@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Info@IConsole_Command@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Save@IConsole_Command@@UAEXPAVIWriter@@@Z
	DD	FLAT:?fill_tips@IConsole_Command@@UAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@I@Z
	DD	FLAT:?add_to_LRU@IConsole_Command@@UAEXABVshared_str@@@Z
CONST	ENDS
;	COMDAT ??_R4CCC_Disconnect@@6B@
rdata$r	SEGMENT
??_R4CCC_Disconnect@@6B@ DD 00H				; CCC_Disconnect::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCC_Disconnect@@@8
	DD	FLAT:??_R3CCC_Disconnect@@8
rdata$r	ENDS
;	COMDAT ??_R3CCC_Disconnect@@8
rdata$r	SEGMENT
??_R3CCC_Disconnect@@8 DD 00H				; CCC_Disconnect::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCC_Disconnect@@8
rdata$r	ENDS
;	COMDAT ??_R2CCC_Disconnect@@8
rdata$r	SEGMENT
??_R2CCC_Disconnect@@8 DD FLAT:??_R1A@?0A@EA@CCC_Disconnect@@8 ; CCC_Disconnect::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IConsole_Command@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCC_Disconnect@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCC_Disconnect@@8 DD FLAT:??_R0?AVCCC_Disconnect@@@8 ; CCC_Disconnect::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCC_Disconnect@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCC_Disconnect@@@8
_DATA	SEGMENT
??_R0?AVCCC_Disconnect@@@8 DD FLAT:??_7type_info@@6B@	; CCC_Disconnect `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCC_Disconnect@@', 00H
_DATA	ENDS
;	COMDAT ??_7CCC_Start@@6B@
CONST	SEGMENT
??_7CCC_Start@@6B@ DD FLAT:??_R4CCC_Start@@6B@		; CCC_Start::`vftable'
	DD	FLAT:??_ECCC_Start@@UAEPAXI@Z
	DD	FLAT:?Execute@CCC_Start@@UAEXPBD@Z
	DD	FLAT:?Status@IConsole_Command@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Info@IConsole_Command@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Save@IConsole_Command@@UAEXPAVIWriter@@@Z
	DD	FLAT:?fill_tips@IConsole_Command@@UAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@I@Z
	DD	FLAT:?add_to_LRU@IConsole_Command@@UAEXABVshared_str@@@Z
CONST	ENDS
;	COMDAT ??_R4CCC_Start@@6B@
rdata$r	SEGMENT
??_R4CCC_Start@@6B@ DD 00H				; CCC_Start::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCC_Start@@@8
	DD	FLAT:??_R3CCC_Start@@8
rdata$r	ENDS
;	COMDAT ??_R3CCC_Start@@8
rdata$r	SEGMENT
??_R3CCC_Start@@8 DD 00H				; CCC_Start::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCC_Start@@8
rdata$r	ENDS
;	COMDAT ??_R2CCC_Start@@8
rdata$r	SEGMENT
??_R2CCC_Start@@8 DD FLAT:??_R1A@?0A@EA@CCC_Start@@8	; CCC_Start::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IConsole_Command@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCC_Start@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCC_Start@@8 DD FLAT:??_R0?AVCCC_Start@@@8 ; CCC_Start::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCC_Start@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCC_Start@@@8
_DATA	SEGMENT
??_R0?AVCCC_Start@@@8 DD FLAT:??_7type_info@@6B@	; CCC_Start `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCC_Start@@', 00H
_DATA	ENDS
;	COMDAT ??_7CCC_SaveCFG@@6B@
CONST	SEGMENT
??_7CCC_SaveCFG@@6B@ DD FLAT:??_R4CCC_SaveCFG@@6B@	; CCC_SaveCFG::`vftable'
	DD	FLAT:??_ECCC_SaveCFG@@UAEPAXI@Z
	DD	FLAT:?Execute@CCC_SaveCFG@@UAEXPBD@Z
	DD	FLAT:?Status@IConsole_Command@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Info@IConsole_Command@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Save@IConsole_Command@@UAEXPAVIWriter@@@Z
	DD	FLAT:?fill_tips@IConsole_Command@@UAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@I@Z
	DD	FLAT:?add_to_LRU@IConsole_Command@@UAEXABVshared_str@@@Z
CONST	ENDS
;	COMDAT ??_R4CCC_SaveCFG@@6B@
rdata$r	SEGMENT
??_R4CCC_SaveCFG@@6B@ DD 00H				; CCC_SaveCFG::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCC_SaveCFG@@@8
	DD	FLAT:??_R3CCC_SaveCFG@@8
rdata$r	ENDS
;	COMDAT ??_R3CCC_SaveCFG@@8
rdata$r	SEGMENT
??_R3CCC_SaveCFG@@8 DD 00H				; CCC_SaveCFG::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCC_SaveCFG@@8
rdata$r	ENDS
;	COMDAT ??_R2CCC_SaveCFG@@8
rdata$r	SEGMENT
??_R2CCC_SaveCFG@@8 DD FLAT:??_R1A@?0A@EA@CCC_SaveCFG@@8 ; CCC_SaveCFG::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IConsole_Command@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCC_SaveCFG@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCC_SaveCFG@@8 DD FLAT:??_R0?AVCCC_SaveCFG@@@8 ; CCC_SaveCFG::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCC_SaveCFG@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCC_SaveCFG@@@8
_DATA	SEGMENT
??_R0?AVCCC_SaveCFG@@@8 DD FLAT:??_7type_info@@6B@	; CCC_SaveCFG `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCC_SaveCFG@@', 00H
_DATA	ENDS
;	COMDAT ??_7CCC_Help@@6B@
CONST	SEGMENT
??_7CCC_Help@@6B@ DD FLAT:??_R4CCC_Help@@6B@		; CCC_Help::`vftable'
	DD	FLAT:??_ECCC_Help@@UAEPAXI@Z
	DD	FLAT:?Execute@CCC_Help@@UAEXPBD@Z
	DD	FLAT:?Status@IConsole_Command@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Info@IConsole_Command@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Save@IConsole_Command@@UAEXPAVIWriter@@@Z
	DD	FLAT:?fill_tips@IConsole_Command@@UAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@I@Z
	DD	FLAT:?add_to_LRU@IConsole_Command@@UAEXABVshared_str@@@Z
CONST	ENDS
;	COMDAT ??_R4CCC_Help@@6B@
rdata$r	SEGMENT
??_R4CCC_Help@@6B@ DD 00H				; CCC_Help::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCC_Help@@@8
	DD	FLAT:??_R3CCC_Help@@8
rdata$r	ENDS
;	COMDAT ??_R3CCC_Help@@8
rdata$r	SEGMENT
??_R3CCC_Help@@8 DD 00H					; CCC_Help::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCC_Help@@8
rdata$r	ENDS
;	COMDAT ??_R2CCC_Help@@8
rdata$r	SEGMENT
??_R2CCC_Help@@8 DD FLAT:??_R1A@?0A@EA@CCC_Help@@8	; CCC_Help::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IConsole_Command@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCC_Help@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCC_Help@@8 DD FLAT:??_R0?AVCCC_Help@@@8	; CCC_Help::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCC_Help@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCC_Help@@@8
_DATA	SEGMENT
??_R0?AVCCC_Help@@@8 DD FLAT:??_7type_info@@6B@		; CCC_Help `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCC_Help@@', 00H
_DATA	ENDS
;	COMDAT ??_7CCC_Quit@@6B@
CONST	SEGMENT
??_7CCC_Quit@@6B@ DD FLAT:??_R4CCC_Quit@@6B@		; CCC_Quit::`vftable'
	DD	FLAT:??_ECCC_Quit@@UAEPAXI@Z
	DD	FLAT:?Execute@CCC_Quit@@UAEXPBD@Z
	DD	FLAT:?Status@IConsole_Command@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Info@IConsole_Command@@UAEXAAY0BAA@D@Z
	DD	FLAT:?Save@IConsole_Command@@UAEXPAVIWriter@@@Z
	DD	FLAT:?fill_tips@IConsole_Command@@UAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@I@Z
	DD	FLAT:?add_to_LRU@IConsole_Command@@UAEXABVshared_str@@@Z
CONST	ENDS
;	COMDAT ??_R4CCC_Quit@@6B@
rdata$r	SEGMENT
??_R4CCC_Quit@@6B@ DD 00H				; CCC_Quit::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCC_Quit@@@8
	DD	FLAT:??_R3CCC_Quit@@8
rdata$r	ENDS
;	COMDAT ??_R3CCC_Quit@@8
rdata$r	SEGMENT
??_R3CCC_Quit@@8 DD 00H					; CCC_Quit::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCC_Quit@@8
rdata$r	ENDS
;	COMDAT ??_R2CCC_Quit@@8
rdata$r	SEGMENT
??_R2CCC_Quit@@8 DD FLAT:??_R1A@?0A@EA@CCC_Quit@@8	; CCC_Quit::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IConsole_Command@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCC_Quit@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCC_Quit@@8 DD FLAT:??_R0?AVCCC_Quit@@@8	; CCC_Quit::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCC_Quit@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCC_Quit@@@8
_DATA	SEGMENT
??_R0?AVCCC_Quit@@@8 DD FLAT:??_7type_info@@6B@		; CCC_Quit `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCC_Quit@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_04IBOFHAPJ@hide?$AA@
CONST	SEGMENT
??_C@_04IBOFHAPJ@hide?$AA@ DB 'hide', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@ODBOMBIN@sv_dedicated_server_update_rate?$AA@
CONST	SEGMENT
??_C@_0CA@ODBOMBIN@sv_dedicated_server_update_rate?$AA@ DB 'sv_dedicated_'
	DB	'server_update_rate', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PGNLFEHC@sv_console_update_rate?$AA@
CONST	SEGMENT
??_C@_0BH@PGNLFEHC@sv_console_update_rate?$AA@ DB 'sv_console_update_rate'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BKKKKOKD@input_exclusive_mode?$AA@
CONST	SEGMENT
??_C@_0BF@BKKKKOKD@input_exclusive_mode?$AA@ DB 'input_exclusive_mode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MNEOCLGM@net_dbg_dump_import_obj?$AA@
CONST	SEGMENT
??_C@_0BI@MNEOCLGM@net_dbg_dump_import_obj?$AA@ DB 'net_dbg_dump_import_o'
	DB	'bj', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GNDPDAH@net_dbg_dump_export_obj?$AA@
CONST	SEGMENT
??_C@_0BI@GNDPDAH@net_dbg_dump_export_obj?$AA@ DB 'net_dbg_dump_export_ob'
	DB	'j', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HPFNHPOG@occlusion_scale?$AA@
CONST	SEGMENT
??_C@_0BA@HPFNHPOG@occlusion_scale?$AA@ DB 'occlusion_scale', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PEHIMOIC@snd_device?$AA@
CONST	SEGMENT
??_C@_0L@PEHIMOIC@snd_device?$AA@ DB 'snd_device', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JMADABMJ@cam_slide_inert?$AA@
CONST	SEGMENT
??_C@_0BA@JMADABMJ@cam_slide_inert?$AA@ DB 'cam_slide_inert', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09OKOJABGK@cam_inert?$AA@
CONST	SEGMENT
??_C@_09OKOJABGK@cam_inert?$AA@ DB 'cam_inert', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GHLIFCGJ@mouse_sens?$AA@
CONST	SEGMENT
??_C@_0L@GHLIFCGJ@mouse_sens?$AA@ DB 'mouse_sens', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KBPHGAAB@mouse_invert?$AA@
CONST	SEGMENT
??_C@_0N@KBPHGAAB@mouse_invert?$AA@ DB 'mouse_invert', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PEPLPDFL@snd_cache_size?$AA@
CONST	SEGMENT
??_C@_0P@PEPLPDFL@snd_cache_size?$AA@ DB 'snd_cache_size', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JDIKMPCD@snd_targets?$AA@
CONST	SEGMENT
??_C@_0M@JDIKMPCD@snd_targets?$AA@ DB 'snd_targets', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07ONOJNHFG@snd_efx?$AA@
CONST	SEGMENT
??_C@_07ONOJNHFG@snd_efx?$AA@ DB 'snd_efx', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LLPLMIHM@snd_acceleration?$AA@
CONST	SEGMENT
??_C@_0BB@LLPLMIHM@snd_acceleration?$AA@ DB 'snd_acceleration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IJBIKBGC@snd_restart?$AA@
CONST	SEGMENT
??_C@_0M@IJBIKBGC@snd_restart?$AA@ DB 'snd_restart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LOOHEAIB@snd_volume_music?$AA@
CONST	SEGMENT
??_C@_0BB@LOOHEAIB@snd_volume_music?$AA@ DB 'snd_volume_music', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OLGMFOIM@snd_volume_eff?$AA@
CONST	SEGMENT
??_C@_0P@OLGMFOIM@snd_volume_eff?$AA@ DB 'snd_volume_eff', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DIIAMDPB@vid_restart?$AA@
CONST	SEGMENT
??_C@_0M@DIIAMDPB@vid_restart?$AA@ DB 'vid_restart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08ICHJJAPN@vid_mode?$AA@
CONST	SEGMENT
??_C@_08ICHJJAPN@vid_mode?$AA@ DB 'vid_mode', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MDCKIMGM@particle_level?$AA@
CONST	SEGMENT
??_C@_0P@MDCKIMGM@particle_level?$AA@ DB 'particle_level', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EHAIBNEJ@net_dedicated_sleep?$AA@
CONST	SEGMENT
??_C@_0BE@EHAIBNEJ@net_dedicated_sleep?$AA@ DB 'net_dedicated_sleep', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IEODBMNE@texture_lod?$AA@
CONST	SEGMENT
??_C@_0M@IEODBMNE@texture_lod?$AA@ DB 'texture_lod', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NHMODHDA@rs_c_contrast?$AA@
CONST	SEGMENT
??_C@_0O@NHMODHDA@rs_c_contrast?$AA@ DB 'rs_c_contrast', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FALFAFPG@rs_c_brightness?$AA@
CONST	SEGMENT
??_C@_0BA@FALFAFPG@rs_c_brightness?$AA@ DB 'rs_c_brightness', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ENFMGHEP@rs_c_gamma?$AA@
CONST	SEGMENT
??_C@_0L@ENFMGHEP@rs_c_gamma?$AA@ DB 'rs_c_gamma', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NDIJLHDO@rs_cam_pos?$AA@
CONST	SEGMENT
??_C@_0L@NDIJLHDO@rs_cam_pos?$AA@ DB 'rs_cam_pos', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DKBCLJG@rs_vis_distance?$AA@
CONST	SEGMENT
??_C@_0BA@DKBCLJG@rs_vis_distance?$AA@ DB 'rs_vis_distance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08GFHFEMJA@rs_stats?$AA@
CONST	SEGMENT
??_C@_08GFHFEMJA@rs_stats?$AA@ DB 'rs_stats', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DBEMGCDM@rs_refresh_60hz?$AA@
CONST	SEGMENT
??_C@_0BA@DBEMGCDM@rs_refresh_60hz?$AA@ DB 'rs_refresh_60hz', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JAOOLNDK@rs_fullscreen?$AA@
CONST	SEGMENT
??_C@_0O@JAOOLNDK@rs_fullscreen?$AA@ DB 'rs_fullscreen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HNFNCICC@rs_v_sync?$AA@
CONST	SEGMENT
??_C@_09HNFNCICC@rs_v_sync?$AA@ DB 'rs_v_sync', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EGAINIKO@r__supersample?$AA@
CONST	SEGMENT
??_C@_0P@EGAINIKO@r__supersample?$AA@ DB 'r__supersample', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08KOFGEFOI@cfg_load?$AA@
CONST	SEGMENT
??_C@_08KOFGEFOI@cfg_load?$AA@ DB 'cfg_load', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KKPFIJOL@disconnect?$AA@
CONST	SEGMENT
??_C@_0L@KKPFIJOL@disconnect?$AA@ DB 'disconnect', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05FAGFPHJG@start?$AA@
CONST	SEGMENT
??_C@_05FAGFPHJG@start?$AA@ DB 'start', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PCJFHION@help?$AA@
CONST	SEGMENT
??_C@_04PCJFHION@help?$AA@ DB 'help', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NBKGGLGI@hide?5console?$AA@
CONST	SEGMENT
??_C@_0N@NBKGGLGI@hide?5console?$AA@ DB 'hide console', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT
??_C@_05LAPONLG@false?$AA@ DB 'false', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@NENACDLB@change?5screen?5resolution?5WxH?$AA@
CONST	SEGMENT
??_C@_0BN@NENACDLB@change?5screen?5resolution?5WxH?$AA@ DB 'change screen'
	DB	' resolution WxH', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CBOMLCNK@?$CB?5Wrong?5video?5mode?5?$FL?$CFs?$FN?$AA@
CONST	SEGMENT
??_C@_0BI@CBOMLCNK@?$CB?5Wrong?5video?5mode?5?$FL?$CFs?$FN?$AA@ DB '! Wro'
	DB	'ng video mode [%s]', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05OEHCLJIP@?$CFdx?$CFd?$AA@
CONST	SEGMENT
??_C@_05OEHCLJIP@?$CFdx?$CFd?$AA@ DB '%dx%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@LJJJDKPI@?$CB?5Can?8t?5start?5game?5without?5clien@
CONST	SEGMENT
??_C@_0DE@LJJJDKPI@?$CB?5Can?8t?5start?5game?5without?5clien@ DB '! Can'''
	DB	't start game without client. Arguments: ''%s''.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09IPAEKDAI@localhost?$AA@
CONST	SEGMENT
??_C@_09IPAEKDAI@localhost?$AA@ DB 'localhost', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06EJFMBPJF@single?$AA@
CONST	SEGMENT
??_C@_06EJFMBPJF@single?$AA@ DB 'single', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PLPNPBEF@demo?$AA@
CONST	SEGMENT
??_C@_04PLPNPBEF@demo?$AA@ DB 'demo', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06DGDLPBAN@client?$AA@
CONST	SEGMENT
??_C@_06DGDLPBAN@client?$AA@ DB 'client', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HJHJCKIO@server?$AA@
CONST	SEGMENT
??_C@_06HJHJCKIO@server?$AA@ DB 'server', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05DFCJAACA@name?$DN?$AA@
CONST	SEGMENT
??_C@_05DFCJAACA@name?$DN?$AA@ DB 'name=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DBLJAEGM@?$CI?$CF?$FL?$FO?$CJ?$FN?$CJ?$AA@
CONST	SEGMENT
??_C@_07DBLJAEGM@?$CI?$CF?$FL?$FO?$CJ?$FN?$CJ?$AA@ DB '(%[^)])', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MHIFGMEG@?$CB?5Cannot?5open?5script?5file?5?$FL?$CFs?$FN?$AA@
CONST	SEGMENT
??_C@_0BP@MHIFGMEG@?$CB?5Cannot?5open?5script?5file?5?$FL?$CFs?$FN?$AA@ DB '!'
	DB	' Cannot open script file [%s]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LKIFGDAB@?$FL?$CFs?$FN?5successfully?5loaded?4?$AA@
CONST	SEGMENT
??_C@_0BK@LKIFGDAB@?$FL?$CFs?$FN?5successfully?5loaded?4?$AA@ DB '[%s] su'
	DB	'ccessfully loaded.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09BOCFEJAJ@$fs_root$?$AA@
CONST	SEGMENT
??_C@_09BOCFEJAJ@$fs_root$?$AA@ DB '$fs_root$', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CPDPKIFK@Executing?5config?9script?5?$CC?$CFs?$CC?4?4?4?$AA@
CONST	SEGMENT
??_C@_0CA@CPDPKIFK@Executing?5config?9script?5?$CC?$CFs?$CC?4?4?4?$AA@ DB 'E'
	DB	'xecuting config-script "%s"...', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KNFIPKKP@?$CBCannot?5store?5config?5file?5?$FL?$CFs?$FN?$AA@
CONST	SEGMENT
??_C@_0BP@KNFIPKKP@?$CBCannot?5store?5config?5file?5?$FL?$CFs?$FN?$AA@ DB '!'
	DB	'Cannot store config file [%s]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@EBCMBFJA@Config?9file?5?$FL?$CFs?$FN?5saved?5successfu@
CONST	SEGMENT
??_C@_0CE@EBCMBFJA@Config?9file?5?$FL?$CFs?$FN?5saved?5successfu@ DB 'Con'
	DB	'fig-file [%s] saved successfully', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CPGDOMOO@?9?5?9?9?9?5Command?5listing?3?5end?5?9?9?9?9?$AA@
CONST	SEGMENT
??_C@_0CA@CPGDOMOO@?9?5?9?9?9?5Command?5listing?3?5end?5?9?9?9?9?$AA@ DB '-'
	DB	' --- Command listing: end ----', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@NHHKHNPG@Key?3?5Enter?5?5?1?5NumEnter?5?5?5?5?5?5?$DN?$DN?$DN?5@
CONST	SEGMENT
??_C@_0DJ@NHHKHNPG@Key?3?5Enter?5?5?1?5NumEnter?5?5?5?5?5?5?$DN?$DN?$DN?5@ DB 'K'
	DB	'ey: Enter  / NumEnter      === Execute current command ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@HHEBIHGB@Key?3?5Tab?5?5?1?5Shift?5?$CL?5Tab?5?5?5?5?5?$DN?$DN?$DN?5@
CONST	SEGMENT
??_C@_0EH@HHEBIHGB@Key?3?5Tab?5?5?1?5Shift?5?$CL?5Tab?5?5?5?5?5?$DN?$DN?$DN?5@ DB 'K'
	DB	'ey: Tab  / Shift + Tab     === Next / Prev possible command f'
	DB	'rom list', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@CKLBCLHB@Key?3?5PageUp?5?1?5PageDown?5?5?5?5?5?5?$DN?$DN?$DN?5@
CONST	SEGMENT
??_C@_0DD@CKLBCLHB@Key?3?5PageUp?5?1?5PageDown?5?5?5?5?5?5?$DN?$DN?$DN?5@ DB 'K'
	DB	'ey: PageUp / PageDown      === Scrolling history ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@BCKPHAJC@Key?3?5Left?0?5Right?0?5Home?0?5End?5?$HL?$CLSh@
CONST	SEGMENT
??_C@_0EJ@BCKPHAJC@Key?3?5Left?0?5Right?0?5Home?0?5End?5?$HL?$CLSh@ DB 'K'
	DB	'ey: Left, Right, Home, End {+Shift/+Ctrl}       === Navigatio'
	DB	'n in text ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@LNKGHKIK@Key?3?5Ctrl?5?$CL?5Up?5?1?5Ctrl?5?$CL?5Down?5?$DN?$DN?$DN@
CONST	SEGMENT
??_C@_0EA@LNKGHKIK@Key?3?5Ctrl?5?$CL?5Up?5?1?5Ctrl?5?$CL?5Down?5?$DN?$DN?$DN@ DB 'K'
	DB	'ey: Ctrl + Up / Ctrl + Down === Prev / Next executing command'
	DB	' ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@JPEJGBBL@Key?3?5Up?5?5?5?1?5Down?5?5?5?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5@
CONST	SEGMENT
??_C@_0EC@JPEJGBBL@Key?3?5Up?5?5?5?1?5Down?5?5?5?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5@ DB 'K'
	DB	'ey: Up   / Down            === Prev / Next command in tips li'
	DB	'st ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@NENFPGPC@Key?3?5Back?5?1?5Delete?5?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5@
CONST	SEGMENT
??_C@_0DM@NENFPGPC@Key?3?5Back?5?1?5Delete?5?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5@ DB 'K'
	DB	'ey: Back / Delete          === Delete symbol left / right ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@GBGCAEJL@Key?3?5Insert?5?5?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Toggle@
CONST	SEGMENT
??_C@_0DA@GBGCAEJL@Key?3?5Insert?5?5?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Toggle@ DB 'K'
	DB	'ey: Insert           === Toggle mode <Insert> ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@GMDFMEFI@Key?3?5Shift?5?$CL?5Delete?5?5?5?$DN?$DN?$DN?5Cut?5to@
CONST	SEGMENT
??_C@_0CM@GMDFMEFI@Key?3?5Shift?5?$CL?5Delete?5?5?5?$DN?$DN?$DN?5Cut?5to@ DB 'K'
	DB	'ey: Shift + Delete   === Cut to clipboard ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@KBBHADK@Key?3?5Shift?5?$CL?5Insert?5?5?5?$DN?$DN?$DN?5Paste?5@
CONST	SEGMENT
??_C@_0DA@KBBHADK@Key?3?5Shift?5?$CL?5Insert?5?5?5?$DN?$DN?$DN?5Paste?5@ DB 'K'
	DB	'ey: Shift + Insert   === Paste from clipboard ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@DHJIICFK@Key?3?5Ctrl?5?$CL?5Insert?5?5?5?5?$DN?$DN?$DN?5Copy?5t@
CONST	SEGMENT
??_C@_0CN@DHJIICFK@Key?3?5Ctrl?5?$CL?5Insert?5?5?5?5?$DN?$DN?$DN?5Copy?5t@ DB 'K'
	DB	'ey: Ctrl + Insert    === Copy to clipboard ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MDNPCKPM@Key?3?5Ctrl?5?$CL?5Z?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Undo?5?$AA@
CONST	SEGMENT
??_C@_0CA@MDNPCKPM@Key?3?5Ctrl?5?$CL?5Z?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Undo?5?$AA@ DB 'K'
	DB	'ey: Ctrl + Z         === Undo ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@MDKMMKFE@Key?3?5Ctrl?5?$CL?5X?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Cut?5to@
CONST	SEGMENT
??_C@_0CM@MDKMMKFE@Key?3?5Ctrl?5?$CL?5X?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Cut?5to@ DB 'K'
	DB	'ey: Ctrl + X         === Cut to clipboard ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@FFFIGPOK@Key?3?5Ctrl?5?$CL?5V?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Paste?5@
CONST	SEGMENT
??_C@_0DA@FFFIGPOK@Key?3?5Ctrl?5?$CL?5V?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Paste?5@ DB 'K'
	DB	'ey: Ctrl + V         === Paste from clipboard ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@IIELMMBE@Key?3?5Ctrl?5?$CL?5C?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Copy?5t@
CONST	SEGMENT
??_C@_0CN@IIELMMBE@Key?3?5Ctrl?5?$CL?5C?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Copy?5t@ DB 'K'
	DB	'ey: Ctrl + C         === Copy to clipboard ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@PKEECIED@Key?3?5Ctrl?5?$CL?5A?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Select@
CONST	SEGMENT
??_C@_0CG@PKEECIED@Key?3?5Ctrl?5?$CL?5A?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Select@ DB 'K'
	DB	'ey: Ctrl + A         === Select all ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DLPBLNAG@?$CF?920s?5?$CI?$CF?910s?$CJ?5?9?9?9?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BF@DLPBLNAG@?$CF?920s?5?$CI?$CF?910s?$CJ?5?9?9?9?5?$CFs?$AA@ DB '%'
	DB	'-20s (%-10s) --- %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@FLFCKEEI@?9?5?9?9?9?5Command?5listing?3?5start?5?9?9?9@
CONST	SEGMENT
??_C@_0CB@FLFCKEEI@?9?5?9?9?9?5Command?5listing?3?5start?5?9?9?9@ DB '- -'
	DB	'-- Command listing: start ---', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02MLODCJFF@32?$AA@
CONST	SEGMENT
??_C@_02MLODCJFF@32?$AA@ DB '32', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KMALDIDP@16?$AA@
CONST	SEGMENT
??_C@_02KMALDIDP@16?$AA@ DB '16', 00H			; `string'
?ps_gamma@@3MA DD 03f800000r			; 1	; ps_gamma
?ps_brightness@@3MA DD 03f800000r		; 1	; ps_brightness
?ps_contrast@@3MA DD 03f800000r			; 1	; ps_contrast
	ORG $+1
?vid_bpp_token@@3PAUxr_token@@A DD FLAT:??_C@_02KMALDIDP@16?$AA@ ; vid_bpp_token
	DD	010H
	DD	FLAT:??_C@_02MLODCJFF@32?$AA@
	DD	020H
	DD	00H
	DD	00H
?r2_sun_static@@3HA DD 01H				; r2_sun_static
?renderer_value@@3IA DD 03H				; renderer_value
?psHUD_FOV@@3MA DD 03ee66666r			; 0.45	; psHUD_FOV
?ps_r__Supersample@@3HA DD 01H				; ps_r__Supersample
_EPS	DD	03727c5acr			; 1e-005
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_ioc_cmd.cpp
;	COMDAT ?Status@CCC_HideConsole@@UAEXAAY0BAA@D@Z
_TEXT	SEGMENT
_S$ = 8							; size = 4
?Status@CCC_HideConsole@@UAEXAAY0BAA@D@Z PROC		; CCC_HideConsole::Status, COMDAT
; _this$ = ecx

; 658  : 		S[0]			= 0;

	mov	eax, DWORD PTR _S$[esp-4]
	mov	BYTE PTR [eax], 0

; 659  : 	}

	ret	4
?Status@CCC_HideConsole@@UAEXAAY0BAA@D@Z ENDP		; CCC_HideConsole::Status
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Save@CCC_ExclusiveMode@@UAEXPAVIWriter@@@Z
_TEXT	SEGMENT
_F$ = 8							; size = 4
?Save@CCC_ExclusiveMode@@UAEXPAVIWriter@@@Z PROC	; CCC_ExclusiveMode::Save, COMDAT
; _this$ = ecx

; 641  : 	}

	ret	4
?Save@CCC_ExclusiveMode@@UAEXPAVIWriter@@@Z ENDP	; CCC_ExclusiveMode::Save
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Execute@CCC_SND_Restart@@UAEXPBD@Z
_TEXT	SEGMENT
_args$ = 8						; size = 4
?Execute@CCC_SND_Restart@@UAEXPBD@Z PROC		; CCC_SND_Restart::Execute, COMDAT
; _this$ = ecx

; 446  : 		Sound->_restart();

	mov	eax, DWORD PTR __imp_?Sound@@3PAVCSound_manager_interface@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 447  : 	}

	ret	4
?Execute@CCC_SND_Restart@@UAEXPBD@Z ENDP		; CCC_SND_Restart::Execute
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetToken@CCC_VidMode@@UAEPAUxr_token@@XZ
_TEXT	SEGMENT
?GetToken@CCC_VidMode@@UAEPAUxr_token@@XZ PROC		; CCC_VidMode::GetToken, COMDAT
; _this$ = ecx

; 404  : 	virtual xr_token* GetToken()				{return vid_mode_token;}

	mov	eax, DWORD PTR __imp_?vid_mode_token@@3PAUxr_token@@A
	mov	eax, DWORD PTR [eax]
	ret	0
?GetToken@CCC_VidMode@@UAEPAUxr_token@@XZ ENDP		; CCC_VidMode::GetToken
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Execute@CCC_VidMode@@UAEXPBD@Z
_TEXT	SEGMENT
__h$ = -4						; size = 4
__w$ = 8						; size = 4
_args$ = 8						; size = 4
?Execute@CCC_VidMode@@UAEXPBD@Z PROC			; CCC_VidMode::Execute, COMDAT
; _this$ = ecx

; 389  : 	virtual void	Execute(LPCSTR args){

	push	ecx
	push	esi

; 390  : 		u32 _w, _h;
; 391  : 		int cnt = sscanf		(args,"%dx%d",&_w,&_h);

	mov	esi, DWORD PTR _args$[esp+4]
	lea	eax, DWORD PTR __h$[esp+8]
	push	eax
	lea	ecx, DWORD PTR __w$[esp+8]
	push	ecx
	push	OFFSET ??_C@_05OEHCLJIP@?$CFdx?$CFd?$AA@
	push	esi
	call	DWORD PTR __imp__sscanf
	add	esp, 16					; 00000010H

; 392  : 		if(cnt==2){

	cmp	eax, 2
	jne	SHORT $LN2@Execute

; 393  : 			psCurrentVidMode[0] = _w;

	mov	edx, DWORD PTR __w$[esp+4]

; 394  : 			psCurrentVidMode[1] = _h;

	mov	eax, DWORD PTR __h$[esp+8]
	mov	DWORD PTR ?psCurrentVidMode@@3PAIA, edx
	mov	DWORD PTR ?psCurrentVidMode@@3PAIA+4, eax
	pop	esi

; 397  : 			return;
; 398  : 		}
; 399  : 	}

	pop	ecx
	ret	4
$LN2@Execute:

; 395  : 		}else{
; 396  : 			Msg("! Wrong video mode [%s]", args);

	push	esi
	push	OFFSET ??_C@_0BI@CBOMLCNK@?$CB?5Wrong?5video?5mode?5?$FL?$CFs?$FN?$AA@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ
	add	esp, 8
	pop	esi

; 397  : 			return;
; 398  : 		}
; 399  : 	}

	pop	ecx
	ret	4
?Execute@CCC_VidMode@@UAEXPBD@Z ENDP			; CCC_VidMode::Execute
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?allow@CCC_LoadCFG_custom@@UAE_NPBD@Z
_TEXT	SEGMENT
_cmd$ = 8						; size = 4
?allow@CCC_LoadCFG_custom@@UAE_NPBD@Z PROC		; CCC_LoadCFG_custom::allow, COMDAT
; _this$ = ecx

; 281  : {

	push	esi

; 282  : 	return (cmd == strstr(cmd, m_cmd) );

	mov	esi, DWORD PTR _cmd$[esp]
	add	ecx, 24					; 00000018H
	push	ecx
	push	esi
	call	DWORD PTR __imp__strstr
	add	esp, 8
	xor	ecx, ecx
	cmp	esi, eax
	sete	cl
	mov	al, cl
	pop	esi

; 283  : };

	ret	4
?allow@CCC_LoadCFG_custom@@UAE_NPBD@Z ENDP		; CCC_LoadCFG_custom::allow
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.c
;	COMDAT ??$__find@PAVshared_str@@V1@@priv@stlp_std@@YAPAVshared_str@@PAV2@0ABV2@ABUrandom_access_iterator_tag@1@@Z
_TEXT	SEGMENT
??$__find@PAVshared_str@@V1@@priv@stlp_std@@YAPAVshared_str@@PAV2@0ABV2@ABUrandom_access_iterator_tag@1@@Z PROC ; stlp_std::priv::__find<shared_str *,shared_str>, COMDAT
; ___first$ = eax
; ___last$ = esi
; ___val$ = edi

; 108  :   _STLP_DIFFERENCE_TYPE(_RandomAccessIter) __trip_count = (__last - __first) >> 2;

	mov	ecx, esi
	sub	ecx, eax
	sar	ecx, 4

; 109  : 
; 110  :   for ( ; __trip_count > 0 ; --__trip_count) {

	test	ecx, ecx
	jle	SHORT $LN14@find@5
	mov	edx, DWORD PTR [edi]
	npad	3
$LL16@find@5:

; 111  :     if (*__first == __val) return __first;

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN8@find@5

; 112  :     ++__first;

	add	eax, 4

; 113  : 
; 114  :     if (*__first == __val) return __first;

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN8@find@5

; 115  :     ++__first;

	add	eax, 4

; 116  : 
; 117  :     if (*__first == __val) return __first;

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN8@find@5

; 118  :     ++__first;

	add	eax, 4

; 119  : 
; 120  :     if (*__first == __val) return __first;

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN8@find@5
	sub	ecx, 1

; 121  :     ++__first;

	add	eax, 4
	test	ecx, ecx
	jg	SHORT $LL16@find@5
$LN14@find@5:

; 122  :   }
; 123  : 
; 124  :   switch (__last - __first) {

	mov	ecx, esi
	sub	ecx, eax
	sar	ecx, 2
	sub	ecx, 1
	je	SHORT $LN3@find@5
	sub	ecx, 1
	je	SHORT $LN5@find@5
	sub	ecx, 1
	jne	SHORT $LN2@find@5

; 125  :   case 3:
; 126  :     if (*__first == __val) return __first;

	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [edi]
	je	SHORT $LN8@find@5

; 127  :     ++__first;

	add	eax, 4
$LN5@find@5:

; 128  :   case 2:
; 129  :     if (*__first == __val) return __first;

	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [edi]
	je	SHORT $LN8@find@5

; 130  :     ++__first;

	add	eax, 4
$LN3@find@5:

; 131  :   case 1:
; 132  :     if (*__first == __val) return __first;

	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [edi]
	je	SHORT $LN8@find@5
$LN2@find@5:

; 133  :     //++__first;
; 134  :   case 0:
; 135  :   default:
; 136  :     return __last;

	mov	eax, esi
$LN8@find@5:

; 137  :   }
; 138  : }

	ret	0
??$__find@PAVshared_str@@V1@@priv@stlp_std@@YAPAVshared_str@@PAV2@0ABV2@ABUrandom_access_iterator_tag@1@@Z ENDP ; stlp_std::priv::__find<shared_str *,shared_str>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_std_extensions.h
_TEXT	ENDS
;	COMDAT ??$xr_strcpy@$0BAAA@@@YAHAAY0BAAA@DPBD@Z
_TEXT	SEGMENT
??$xr_strcpy@$0BAAA@@@YAHAAY0BAAA@DPBD@Z PROC		; xr_strcpy<4096>, COMDAT
; _destination$ = eax

; 257  : 	return						xr_strcpy( destination, count, source );

	push	4096					; 00001000H
	push	OFFSET ??_C@_09IPAEKDAI@localhost?$AA@
	push	4096					; 00001000H
	push	eax
	call	DWORD PTR __imp__strncpy_s
	add	esp, 16					; 00000010H

; 258  : }

	ret	0
??$xr_strcpy@$0BAAA@@@YAHAAY0BAAA@DPBD@Z ENDP		; xr_strcpy<4096>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.c
_TEXT	ENDS
;	COMDAT ??$find@PAVshared_str@@V1@@stlp_std@@YAPAVshared_str@@PAV1@0ABV1@@Z
_TEXT	SEGMENT
??$find@PAVshared_str@@V1@@stlp_std@@YAPAVshared_str@@PAV1@0ABV1@@Z PROC ; stlp_std::find<shared_str *,shared_str>, COMDAT
; ___first$ = eax
; ___last$ = esi
; ___val$ = edi

; 215  :   _STLP_DEBUG_CHECK(_STLP_PRIV __check_range(__first, __last))
; 216  :   return _STLP_PRIV __find(__first, __last, __val, _STLP_ITERATOR_CATEGORY(__first, _InputIter));

	jmp	??$__find@PAVshared_str@@V1@@priv@stlp_std@@YAPAVshared_str@@PAV2@0ABV2@ABUrandom_access_iterator_tag@1@@Z ; stlp_std::priv::__find<shared_str *,shared_str>
??$find@PAVshared_str@@V1@@stlp_std@@YAPAVshared_str@@PAV1@0ABV1@@Z ENDP ; stlp_std::find<shared_str *,shared_str>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.h
_TEXT	ENDS
;	COMDAT ??0?$_Rb_tree_iterator@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@U?$_MapTraitsT@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Rb_tree_iterator@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@U?$_MapTraitsT@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE@XZ PROC ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<char const * const,IConsole_Command *>,stlp_std::priv::_MapTraitsT<stlp_std::pair<char const * const,IConsole_Command *> > >::_Rb_tree_iterator<stlp_std::pair<char const * const,IConsole_Command *>,stlp_std::priv::_MapTraitsT<stlp_std::pair<char const * const,IConsole_Command *> > >, COMDAT
; _this$ = eax

; 159  :   _Rb_tree_iterator() {}

	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Rb_tree_iterator@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@U?$_MapTraitsT@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE@XZ ENDP ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<char const * const,IConsole_Command *>,stlp_std::priv::_MapTraitsT<stlp_std::pair<char const * const,IConsole_Command *> > >::_Rb_tree_iterator<stlp_std::pair<char const * const,IConsole_Command *>,stlp_std::priv::_MapTraitsT<stlp_std::pair<char const * const,IConsole_Command *> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_ioc_cmd.cpp
_TEXT	ENDS
;	COMDAT ?Info@CCC_HideConsole@@UAEXAAY0BAA@D@Z
_TEXT	SEGMENT
_I$ = 8							; size = 4
?Info@CCC_HideConsole@@UAEXAAY0BAA@D@Z PROC		; CCC_HideConsole::Info, COMDAT
; _this$ = ecx

; 662  : 		xr_sprintf		(I,sizeof(I),"hide console");

	mov	eax, DWORD PTR _I$[esp-4]
	push	OFFSET ??_C@_0N@NBKGGLGI@hide?5console?$AA@
	push	eax
	mov	eax, 256				; 00000100H
	call	?xr_sprintf@@YAHPADIPBDZZ		; xr_sprintf
	add	esp, 8

; 663  : 	}

	ret	4
?Info@CCC_HideConsole@@UAEXAAY0BAA@D@Z ENDP		; CCC_HideConsole::Info
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Save@CCC_soundDevice@@UAEXPAVIWriter@@@Z
_TEXT	SEGMENT
_S$238551 = -256					; size = 256
_F$ = 8							; size = 4
?Save@CCC_soundDevice@@UAEXPAVIWriter@@@Z PROC		; CCC_soundDevice::Save, COMDAT
; _this$ = ecx

; 601  : 	{

	sub	esp, 256				; 00000100H
	push	esi
	mov	esi, ecx

; 602  : 		GetToken				();

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+28]
	call	edx

; 603  : 		if(!tokens)				return;

	cmp	DWORD PTR [esi+28], 0
	je	SHORT $LN4@Save@3

; 604  : 		inherited::Save			(F);

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	lea	ecx, DWORD PTR _S$238551[esp+260]
	push	ecx
	mov	ecx, esi
	call	edx
	cmp	BYTE PTR _S$238551[esp+260], 0
	je	SHORT $LN4@Save@3
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR _F$[esp+256]
	lea	eax, DWORD PTR _S$238551[esp+260]
	push	eax
	push	ecx
	push	OFFSET ??_C@_07HDPLFHPL@?$CFs?5?$CFs?$AN?6?$AA@
	push	edx
	call	DWORD PTR __imp_?w_printf@IWriter@@QAAXPBDZZ
	add	esp, 16					; 00000010H
$LN4@Save@3:
	pop	esi

; 605  : 	}

	add	esp, 256				; 00000100H
	ret	4
?Save@CCC_soundDevice@@UAEXPAVIWriter@@@Z ENDP		; CCC_soundDevice::Save
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetToken@CCC_soundDevice@@UAEPAUxr_token@@XZ
_TEXT	SEGMENT
?GetToken@CCC_soundDevice@@UAEPAUxr_token@@XZ PROC	; CCC_soundDevice::GetToken, COMDAT
; _this$ = ecx

; 596  : 		tokens					= snd_devices_token;

	mov	eax, DWORD PTR __imp_?snd_devices_token@@3PAUxr_token@@A
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+28], eax

; 597  : 		return inherited::GetToken();
; 598  : 	}

	ret	0
?GetToken@CCC_soundDevice@@UAEPAUxr_token@@XZ ENDP	; CCC_soundDevice::GetToken
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Status@CCC_soundDevice@@UAEXAAY0BAA@D@Z
_TEXT	SEGMENT
_S$ = 8							; size = 4
?Status@CCC_soundDevice@@UAEXAAY0BAA@D@Z PROC		; CCC_soundDevice::Status, COMDAT
; _this$ = ecx

; 588  : 	{

	push	esi
	mov	esi, ecx

; 589  : 		GetToken				();

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+28]
	call	edx

; 590  : 		if(!tokens)				return;

	cmp	DWORD PTR [esi+28], 0
	je	SHORT $LN2@Status@5

; 591  : 		inherited::Status		(S);

	mov	eax, DWORD PTR _S$[esp]
	push	eax
	mov	ecx, esi
	call	?Status@CCC_Token@@UAEXAAY0BAA@D@Z	; CCC_Token::Status
$LN2@Status@5:
	pop	esi

; 592  : 	}

	ret	4
?Status@CCC_soundDevice@@UAEXAAY0BAA@D@Z ENDP		; CCC_soundDevice::Status
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetToken@CCC_r2@@UAEPAUxr_token@@XZ
_TEXT	SEGMENT
?GetToken@CCC_r2@@UAEPAUxr_token@@XZ PROC		; CCC_r2::GetToken, COMDAT
; _this$ = ecx

; 566  : 		tokens					= vid_quality_token;

	mov	eax, DWORD PTR ?vid_quality_token@@3PAUxr_token@@A ; vid_quality_token
	mov	DWORD PTR [ecx+28], eax

; 567  : 		return					inherited::GetToken();
; 568  : 	}

	ret	0
?GetToken@CCC_r2@@UAEPAUxr_token@@XZ ENDP		; CCC_r2::GetToken
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Save@CCC_r2@@UAEXPAVIWriter@@@Z
_TEXT	SEGMENT
_S$238580 = -256					; size = 256
_F$ = 8							; size = 4
?Save@CCC_r2@@UAEXPAVIWriter@@@Z PROC			; CCC_r2::Save, COMDAT
; _this$ = ecx

; 557  : 		//fill_render_mode_list	();
; 558  : 		tokens					= vid_quality_token;

	mov	eax, DWORD PTR ?vid_quality_token@@3PAUxr_token@@A ; vid_quality_token
	sub	esp, 256				; 00000100H
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi+28], eax

; 559  : 		if( !strstr(Core.Params, "-r2") )

	mov	eax, DWORD PTR __imp_?Core@@3VxrCore@@A
	add	eax, 1232				; 000004d0H
	push	OFFSET ??_C@_03DGOGLPEP@?9r2?$AA@
	push	eax
	call	DWORD PTR __imp__strstr
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@Save@4

; 560  : 		{
; 561  : 			inherited::Save(F);

	mov	edx, DWORD PTR [esi]
	mov	edx, DWORD PTR [edx+8]
	lea	eax, DWORD PTR _S$238580[esp+260]
	push	eax
	mov	ecx, esi
	call	edx
	cmp	BYTE PTR _S$238580[esp+260], 0
	je	SHORT $LN6@Save@4
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR _F$[esp+256]
	lea	eax, DWORD PTR _S$238580[esp+260]
	push	eax
	push	ecx
	push	OFFSET ??_C@_07HDPLFHPL@?$CFs?5?$CFs?$AN?6?$AA@
	push	edx
	call	DWORD PTR __imp_?w_printf@IWriter@@QAAXPBDZZ
	add	esp, 16					; 00000010H
$LN6@Save@4:
	pop	esi

; 562  : 		}
; 563  : 	}

	add	esp, 256				; 00000100H
	ret	4
?Save@CCC_r2@@UAEXPAVIWriter@@@Z ENDP			; CCC_r2::Save
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Info@CCC_VidMode@@UAEXAAY0BAA@D@Z
_TEXT	SEGMENT
_I$ = 8							; size = 4
?Info@CCC_VidMode@@UAEXAAY0BAA@D@Z PROC			; CCC_VidMode::Info, COMDAT
; _this$ = ecx

; 407  : 		xr_strcpy(I,sizeof(I),"change screen resolution WxH");

	mov	eax, DWORD PTR _I$[esp-4]
	push	256					; 00000100H
	push	OFFSET ??_C@_0BN@NENACDLB@change?5screen?5resolution?5WxH?$AA@
	push	256					; 00000100H
	push	eax
	call	DWORD PTR __imp__strncpy_s
	add	esp, 16					; 00000010H

; 408  : 	}

	ret	4
?Info@CCC_VidMode@@UAEXAAY0BAA@D@Z ENDP			; CCC_VidMode::Info
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Status@CCC_VidMode@@UAEXAAY0BAA@D@Z
_TEXT	SEGMENT
_S$ = 8							; size = 4
?Status@CCC_VidMode@@UAEXAAY0BAA@D@Z PROC		; CCC_VidMode::Status, COMDAT
; _this$ = ecx

; 402  : 		xr_sprintf(S,sizeof(S),"%dx%d",psCurrentVidMode[0],psCurrentVidMode[1]); 

	mov	eax, DWORD PTR ?psCurrentVidMode@@3PAIA+4
	mov	ecx, DWORD PTR ?psCurrentVidMode@@3PAIA
	mov	edx, DWORD PTR _S$[esp-4]
	push	eax
	push	ecx
	push	OFFSET ??_C@_05OEHCLJIP@?$CFdx?$CFd?$AA@
	push	edx
	mov	eax, 256				; 00000100H
	call	?xr_sprintf@@YAHPADIPBDZZ		; xr_sprintf
	add	esp, 16					; 00000010H

; 403  : 	}

	ret	4
?Status@CCC_VidMode@@UAEXAAY0BAA@D@Z ENDP		; CCC_VidMode::Status
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?protect_Name_strlwr@CCC_Start@@AAEXPAD@Z
_TEXT	SEGMENT
tv70 = -4100						; size = 4
_out$ = -4096						; size = 4096
_str$ = 8						; size = 4
?protect_Name_strlwr@CCC_Start@@AAEXPAD@Z PROC		; CCC_Start::protect_Name_strlwr, COMDAT

; 296  : 	{

	mov	eax, 4100				; 00001004H
	call	__chkstk
	push	ebp
	mov	ebp, DWORD PTR _str$[esp+4100]

; 297  :  		string4096	out;
; 298  : 		xr_strcpy( out, sizeof(out), str );

	push	4096					; 00001000H
	push	ebp
	lea	eax, DWORD PTR _out$[esp+4112]
	push	4096					; 00001000H
	push	eax
	call	DWORD PTR __imp__strncpy_s

; 299  : 		strlwr( str );

	push	ebp
	call	DWORD PTR __imp__strlwr

; 300  : 
; 301  : 		LPCSTR name_str = "name=";
; 302  : 		LPCSTR name1 = strstr( str, name_str );

	push	OFFSET ??_C@_05DFCJAACA@name?$DN?$AA@
	push	ebp
	call	DWORD PTR __imp__strstr
	add	esp, 28					; 0000001cH

; 303  : 		if ( !name1 || !xr_strlen( name1 ) )

	test	eax, eax
	je	$LN3@protect_Na
	mov	ecx, eax
	push	esi
	lea	esi, DWORD PTR [ecx+1]
	npad	4
$LL30@protect_Na:
	mov	dl, BYTE PTR [ecx]
	add	ecx, 1
	test	dl, dl
	jne	SHORT $LL30@protect_Na
	sub	ecx, esi
	je	$LN36@protect_Na

; 304  : 		{
; 305  : 			return;
; 306  : 		}
; 307  : 		int begin_p = xr_strlen( str ) - xr_strlen( name1 ) + xr_strlen( name_str );

	mov	ecx, ebp
	lea	esi, DWORD PTR [ecx+1]
$LL31@protect_Na:
	mov	dl, BYTE PTR [ecx]
	add	ecx, 1
	test	dl, dl
	jne	SHORT $LL31@protect_Na
	sub	ecx, esi
	push	ebx
	mov	ebx, ecx
	mov	ecx, eax
	push	edi
	lea	esi, DWORD PTR [ecx+1]
	npad	6
$LL32@protect_Na:
	mov	dl, BYTE PTR [ecx]
	add	ecx, 1
	test	dl, dl
	jne	SHORT $LL32@protect_Na
	sub	ecx, esi
	mov	esi, ecx
	mov	ecx, OFFSET ??_C@_05DFCJAACA@name?$DN?$AA@
	lea	edi, DWORD PTR [ecx+1]
$LL33@protect_Na:
	mov	dl, BYTE PTR [ecx]
	add	ecx, 1
	test	dl, dl
	jne	SHORT $LL33@protect_Na
	sub	ecx, edi
	sub	ecx, esi
	add	ecx, ebx
	mov	esi, ecx

; 308  : 		if ( begin_p < 1 )

	cmp	esi, 1
	jl	SHORT $LN37@protect_Na

; 309  : 		{
; 310  : 			return;
; 311  : 		}
; 312  : 
; 313  : 		LPCSTR name2 = strchr( name1, '/' );

	push	47					; 0000002fH
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8

; 314  : 		int end_p = xr_strlen( str ) - ((name2)? xr_strlen(name2) : 0);

	test	eax, eax
	je	SHORT $LN10@protect_Na
	lea	edx, DWORD PTR [eax+1]
	npad	2
$LL34@protect_Na:
	mov	cl, BYTE PTR [eax]
	add	eax, 1
	test	cl, cl
	jne	SHORT $LL34@protect_Na
	sub	eax, edx
	mov	edx, eax
	jmp	SHORT $LN11@protect_Na
$LN10@protect_Na:
	xor	edx, edx
$LN11@protect_Na:
	mov	eax, ebp
	lea	edi, DWORD PTR [eax+1]
$LL35@protect_Na:
	mov	cl, BYTE PTR [eax]
	add	eax, 1
	test	cl, cl
	jne	SHORT $LL35@protect_Na
	sub	eax, edi
	sub	eax, edx

; 315  : 		if ( begin_p >= end_p )

	cmp	esi, eax
	jge	SHORT $LN37@protect_Na

; 316  : 		{
; 317  : 			return;
; 318  : 		}
; 319  : 		for ( int i = begin_p; i < end_p;++i )

	sub	eax, esi
	push	eax
	lea	edx, DWORD PTR _out$[esp+esi+4120]
	lea	ecx, DWORD PTR [esi+ebp]
	push	edx
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN37@protect_Na:
	pop	edi
	pop	ebx
$LN36@protect_Na:
	pop	esi
$LN3@protect_Na:
	pop	ebp

; 320  : 		{
; 321  : 			str[i] = out[i];
; 322  : 		}
; 323  : 	}

	add	esp, 4100				; 00001004H
	ret	4
?protect_Name_strlwr@CCC_Start@@AAEXPAD@Z ENDP		; CCC_Start::protect_Name_strlwr
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?parse@CCC_Start@@AAEXPADPBD1@Z
_TEXT	SEGMENT
_dest$ = 8						; size = 4
_args$ = 12						; size = 4
?parse@CCC_Start@@AAEXPADPBD1@Z PROC			; CCC_Start::parse, COMDAT
; _name$ = edx

; 290  : 		dest[0]	= 0;
; 291  : 		if (strstr(args,name))
; 292  : 			sscanf(strstr(args,name)+xr_strlen(name),"(%[^)])",dest);

	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+1]
$LL9@parse:
	mov	cl, BYTE PTR [eax]
	add	eax, 1
	test	cl, cl
	jne	SHORT $LL9@parse
	mov	ecx, DWORD PTR _args$[esp]
	sub	eax, esi
	mov	esi, eax
	mov	eax, DWORD PTR _dest$[esp]
	push	eax
	push	OFFSET ??_C@_07DBLJAEGM@?$CI?$CF?$FL?$FO?$CJ?$FN?$CJ?$AA@
	push	edx
	push	ecx
	call	DWORD PTR __imp__strstr
	add	eax, esi
	add	esp, 8
	push	eax
	call	DWORD PTR __imp__sscanf
	add	esp, 12					; 0000000cH
	pop	esi

; 293  : 	}

	ret	8
?parse@CCC_Start@@AAEXPADPBD1@Z ENDP			; CCC_Start::parse
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
;	COMDAT ?rend@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAE?AV?$reverse_iterator@PAVshared_str@@@2@XZ
_TEXT	SEGMENT
?rend@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAE?AV?$reverse_iterator@PAVshared_str@@@2@XZ PROC ; stlp_std::vector<shared_str,xalloc<shared_str> >::rend, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi

; 86   :   reverse_iterator rend()                { return reverse_iterator(begin()); }

	call	?begin@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEPAVshared_str@@XZ ; stlp_std::vector<shared_str,xalloc<shared_str> >::begin
	mov	DWORD PTR [esi], eax
	mov	eax, esi
	ret	0
?rend@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAE?AV?$reverse_iterator@PAVshared_str@@@2@XZ ENDP ; stlp_std::vector<shared_str,xalloc<shared_str> >::rend
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.h
;	COMDAT ??E?$_Rb_tree_iterator@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@U?$_MapTraitsT@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE?AU012@H@Z
_TEXT	SEGMENT
??E?$_Rb_tree_iterator@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@U?$_MapTraitsT@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE?AU012@H@Z PROC ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<char const * const,IConsole_Command *>,stlp_std::priv::_MapTraitsT<stlp_std::pair<char const * const,IConsole_Command *> > >::operator++, COMDAT
; _this$ = esi
; ___$ReturnUdt$ = eax

; 181  :     _Self __tmp = *this;

	mov	ecx, DWORD PTR [esi]

; 182  :     ++(*this);

	mov	edx, DWORD PTR [ecx+12]
	test	edx, edx
	mov	DWORD PTR [eax], ecx
	je	SHORT $LN13@operator@79
	mov	ecx, DWORD PTR [edx+8]
	test	ecx, ecx
	je	SHORT $LN16@operator@79
$LL17@operator@79:
	mov	edx, ecx
	mov	ecx, DWORD PTR [edx+8]
	test	ecx, ecx
	jne	SHORT $LL17@operator@79
$LN16@operator@79:
	mov	DWORD PTR [esi], edx

; 183  :     return __tmp;
; 184  :   }

	ret	0

; 182  :     ++(*this);

$LN13@operator@79:
	mov	edx, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [edx+12]
	jne	SHORT $LN10@operator@79
$LL11@operator@79:
	mov	ecx, edx
	mov	edx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [edx+12]
	je	SHORT $LL11@operator@79
$LN10@operator@79:
	cmp	DWORD PTR [ecx+12], edx
	jne	SHORT $LN16@operator@79
	mov	DWORD PTR [esi], ecx

; 183  :     return __tmp;
; 184  :   }

	ret	0
??E?$_Rb_tree_iterator@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@U?$_MapTraitsT@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE?AU012@H@Z ENDP ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<char const * const,IConsole_Command *>,stlp_std::priv::_MapTraitsT<stlp_std::pair<char const * const,IConsole_Command *> > >::operator++
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_ioc_cmd.cpp
_TEXT	ENDS
;	COMDAT ?Execute@CCC_ExclusiveMode@@UAEXPBD@Z
_TEXT	SEGMENT
_value$ = -1						; size = 1
_args$ = 8						; size = 4
?Execute@CCC_ExclusiveMode@@UAEXPBD@Z PROC		; CCC_ExclusiveMode::Execute, COMDAT
; _this$ = ecx

; 620  : 	{

	push	ecx

; 621  : 		bool		value = false;
; 622  : 		if (!xr_strcmp(args,"on"))

	mov	eax, DWORD PTR _args$[esp]
	push	ebx
	push	ebp
	push	esi
	xor	bl, bl
	push	edi
	mov	ebp, ecx
	mov	edi, OFFSET ??_C@_02LIELOMNJ@on?$AA@
	mov	esi, eax
	mov	ecx, 3
	xor	edx, edx
	repe cmpsb
	mov	BYTE PTR _value$[esp+20], bl

; 623  : 			value	= true;

	je	SHORT $LN35@Execute@3

; 624  : 		else if (!xr_strcmp(args,"off"))

	mov	edi, OFFSET ??_C@_03MCADLMAF@off?$AA@
	mov	esi, eax
	mov	ecx, 4
	xor	edx, edx
	repe cmpsb

; 625  : 			value	= false;

	je	SHORT $LN34@Execute@3

; 626  : 		else if (!xr_strcmp(args,"true"))

	mov	edi, OFFSET ??_C@_04LOAJBDKD@true?$AA@
	mov	esi, eax
	mov	ecx, 5
	xor	edx, edx
	repe cmpsb

; 627  : 			value	= true;

	je	SHORT $LN35@Execute@3

; 628  : 		else if (!xr_strcmp(args,"false"))

	mov	edi, OFFSET ??_C@_05LAPONLG@false?$AA@
	mov	esi, eax
	mov	ecx, 6
	xor	edx, edx
	repe cmpsb

; 629  : 			value	= false;

	je	SHORT $LN34@Execute@3

; 630  : 		else if (!xr_strcmp(args,"1"))

	mov	edi, OFFSET ??_C@_01HIHLOKLC@1?$AA@
	mov	esi, eax
	mov	ecx, 2
	xor	edx, edx
	repe cmpsb
	jne	SHORT $LN4@Execute@3
$LN35@Execute@3:

; 631  : 			value	= true;

	mov	bl, 1
	mov	BYTE PTR _value$[esp+20], bl
	jmp	SHORT $LN1@Execute@3
$LN4@Execute@3:

; 632  : 		else if (!xr_strcmp(args,"0"))

	mov	ecx, OFFSET ??_C@_01GBGANLPD@0?$AA@
	call	?xr_strcmp@@YAHPBD0@Z			; xr_strcmp
	test	eax, eax
	jne	SHORT $LN2@Execute@3
$LN34@Execute@3:

; 633  : 			value	= false;

	xor	bl, bl
	mov	BYTE PTR _value$[esp+20], bl
	jmp	SHORT $LN1@Execute@3
$LN2@Execute@3:

; 634  : 		else InvalidSyntax();

	mov	ecx, ebp
	call	?InvalidSyntax@IConsole_Command@@QAEXXZ	; IConsole_Command::InvalidSyntax
$LN1@Execute@3:

; 635  : 		
; 636  : 		pInput->exclusive_mode	(value);

	mov	esi, DWORD PTR ?pInput@@3PAVCInput@@A	; pInput
	mov	eax, DWORD PTR [esi+20]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+32]
	push	eax
	mov	BYTE PTR _g_exclusive, bl
	call	edx
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+32]
	push	eax
	call	edx
	lea	eax, DWORD PTR _value$[esp+20]
	push	eax
	mov	ecx, esi
	call	?acquire@CInput@@QAEXAB_N@Z		; CInput::acquire
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 637  : 	}

	pop	ecx
	ret	4
?Execute@CCC_ExclusiveMode@@UAEXPBD@Z ENDP		; CCC_ExclusiveMode::Execute
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Execute@CCC_SaveCFG@@UAEXPBD@Z
_TEXT	SEGMENT
tv180 = -524						; size = 4
_F$132867 = -524					; size = 4
_cfg_full_name$ = -520					; size = 520
_args$ = 8						; size = 4
?Execute@CCC_SaveCFG@@UAEXPBD@Z PROC			; CCC_SaveCFG::Execute, COMDAT
; _this$ = ecx

; 209  : 	{

	sub	esp, 524				; 0000020cH
	push	esi

; 210  : 		string_path			cfg_full_name;
; 211  : 		xr_strcpy			(cfg_full_name, (xr_strlen(args)>0)?args:Console->ConfigFile);

	mov	esi, DWORD PTR _args$[esp+524]
	mov	eax, esi
	lea	edx, DWORD PTR [eax+1]
$LL98@Execute@4:
	mov	cl, BYTE PTR [eax]
	add	eax, 1
	test	cl, cl
	jne	SHORT $LL98@Execute@4
	sub	eax, edx
	je	SHORT $LN11@Execute@4
	mov	eax, esi
	jmp	SHORT $LN12@Execute@4
$LN11@Execute@4:
	mov	eax, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	add	eax, 108				; 0000006cH
$LN12@Execute@4:
	push	520					; 00000208H
	push	eax
	lea	eax, DWORD PTR _cfg_full_name$[esp+536]
	push	520					; 00000208H
	push	eax
	call	DWORD PTR __imp__strncpy_s

; 212  : 
; 213  : 		bool b_abs_name = xr_strlen(cfg_full_name)>2 && cfg_full_name[1]==':';

	lea	eax, DWORD PTR _cfg_full_name$[esp+544]
	add	esp, 16					; 00000010H
	lea	edx, DWORD PTR [eax+1]
	npad	4
$LL99@Execute@4:
	mov	cl, BYTE PTR [eax]
	add	eax, 1
	test	cl, cl
	jne	SHORT $LL99@Execute@4
	sub	eax, edx
	cmp	eax, 2
	jbe	SHORT $LN13@Execute@4
	cmp	BYTE PTR _cfg_full_name$[esp+529], 58	; 0000003aH
	je	SHORT $LN8@Execute@4
$LN13@Execute@4:

; 214  : 
; 215  : 		if(!b_abs_name)
; 216  : 			FS.update_path	(cfg_full_name, "$app_data_root$", cfg_full_name);

	mov	eax, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	ecx, DWORD PTR _cfg_full_name$[esp+528]
	push	ecx
	mov	edx, ecx
	mov	ecx, DWORD PTR [eax]
	push	OFFSET ??_C@_0BA@BDJNLMJI@$app_data_root$?$AA@
	push	edx
	call	DWORD PTR __imp_?update_path@CLocatorAPI@@QAEPBDAAY0CAI@DPBD1@Z
$LN8@Execute@4:

; 217  : 
; 218  : 		if (strext(cfg_full_name))	

	mov	esi, DWORD PTR __imp__strrchr
	lea	ecx, DWORD PTR _cfg_full_name$[esp+528]
	push	46					; 0000002eH
	push	ecx
	call	esi
	add	esp, 8
	test	eax, eax
	je	SHORT $LN7@Execute@4

; 219  : 			*strext(cfg_full_name) = 0;

	lea	edx, DWORD PTR _cfg_full_name$[esp+528]
	push	46					; 0000002eH
	push	edx
	call	esi
	add	esp, 8
	mov	BYTE PTR [eax], 0
$LN7@Execute@4:

; 220  : 		xr_strcat			(cfg_full_name,".ltx");

	lea	eax, DWORD PTR _cfg_full_name$[esp+528]
	lea	edx, DWORD PTR [eax+1]
	npad	3
$LL100@Execute@4:
	mov	cl, BYTE PTR [eax]
	add	eax, 1
	test	cl, cl
	jne	SHORT $LL100@Execute@4
	sub	eax, edx
	lea	eax, DWORD PTR _cfg_full_name$[esp+eax+528]
	lea	ecx, DWORD PTR _cfg_full_name$[esp+1047]
	cmp	eax, ecx
	ja	SHORT $LN33@Execute@4
	mov	ecx, OFFSET ??_C@_04ICMCOCEO@?4ltx?$AA@
	sub	ecx, eax
$LL31@Execute@4:
	lea	edx, DWORD PTR _cfg_full_name$[esp+1047]
	cmp	eax, edx
	je	SHORT $LN29@Execute@4
	mov	dl, BYTE PTR [ecx+eax]
	mov	BYTE PTR [eax], dl
	add	eax, 1
	cmp	BYTE PTR [ecx+eax], 0
	jne	SHORT $LL31@Execute@4
$LN29@Execute@4:
	mov	BYTE PTR [eax], 0
$LN33@Execute@4:

; 221  : 		
; 222  : 		BOOL b_allow = TRUE;
; 223  : 		if ( FS.exist(cfg_full_name) )

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [ecx]
	lea	eax, DWORD PTR _cfg_full_name$[esp+528]
	push	eax
	call	DWORD PTR __imp_?exist@CLocatorAPI@@QAEPBUfile@1@PBD@Z
	test	eax, eax
	je	SHORT $LN97@Execute@4

; 224  : 			b_allow = SetFileAttributes(cfg_full_name,FILE_ATTRIBUTE_NORMAL);

	push	128					; 00000080H
	lea	edx, DWORD PTR _cfg_full_name$[esp+532]
	push	edx
	call	DWORD PTR __imp__SetFileAttributesA@8

; 225  : 
; 226  : 		if ( b_allow ){

	test	eax, eax
	je	$LN5@Execute@4
$LN97@Execute@4:

; 227  : 			IWriter* F			= FS.w_open(cfg_full_name);

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [ecx]
	lea	eax, DWORD PTR _cfg_full_name$[esp+528]
	push	eax
	call	DWORD PTR __imp_?w_open@CLocatorAPI@@QAEPAVIWriter@@PBD@Z

; 228  : 				CConsole::vecCMD_IT it;
; 229  : 				for (it=Console->Commands.begin(); it!=Console->Commands.end(); it++)

	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	add	ecx, 176				; 000000b0H
	mov	DWORD PTR _F$132867[esp+528], eax
	call	?_M_leftmost@?$_Rb_tree@PBDUstr_pred@CConsole@@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@U?$_Select1st@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@priv@4@U?$_MapTraitsT@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@64@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<char const *,CConsole::str_pred,stlp_std::pair<char const * const,IConsole_Command *>,stlp_std::priv::_Select1st<stlp_std::pair<char const * const,IConsole_Command *> >,stlp_std::priv::_MapTraitsT<stlp_std::pair<char const * const,IConsole_Command *> >,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::_M_leftmost
	mov	esi, DWORD PTR [eax]
	mov	eax, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	add	eax, 176				; 000000b0H
	cmp	esi, eax
	setne	al
	test	al, al
	je	SHORT $LN2@Execute@4
	npad	7
$LL57@Execute@4:

; 230  : 					it->second->Save(F);

	mov	ecx, DWORD PTR [esi+20]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _F$132867[esp+528]
	mov	edx, DWORD PTR [edx+16]
	push	eax
	call	edx
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN63@Execute@4
	mov	esi, eax
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN59@Execute@4
	npad	1

; 228  : 				CConsole::vecCMD_IT it;
; 229  : 				for (it=Console->Commands.begin(); it!=Console->Commands.end(); it++)

$LL67@Execute@4:
	mov	esi, eax
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	jne	SHORT $LL67@Execute@4
	jmp	SHORT $LN59@Execute@4
$LN63@Execute@4:
	mov	eax, DWORD PTR [esi+4]
	cmp	esi, DWORD PTR [eax+12]
	jne	SHORT $LN60@Execute@4
$LL61@Execute@4:
	mov	esi, eax
	mov	eax, DWORD PTR [eax+4]
	cmp	esi, DWORD PTR [eax+12]
	je	SHORT $LL61@Execute@4
$LN60@Execute@4:
	cmp	DWORD PTR [esi+12], eax
	je	SHORT $LN59@Execute@4
	mov	esi, eax
$LN59@Execute@4:
	mov	eax, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	add	eax, 176				; 000000b0H
	cmp	esi, eax
	setne	al
	test	al, al
	jne	SHORT $LL57@Execute@4
$LN2@Execute@4:

; 231  : 				FS.w_close			(F);

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [ecx]
	lea	eax, DWORD PTR _F$132867[esp+528]
	push	eax
	call	DWORD PTR __imp_?w_close@CLocatorAPI@@QAEXAAPAVIWriter@@@Z

; 232  : 				Msg("Config-file [%s] saved successfully",cfg_full_name);

	lea	edx, DWORD PTR _cfg_full_name$[esp+528]
	push	edx
	push	OFFSET ??_C@_0CE@EBCMBFJA@Config?9file?5?$FL?$CFs?$FN?5saved?5successfu@

; 233  : 		}else
; 234  : 			Msg("!Cannot store config file [%s]", cfg_full_name);

	call	DWORD PTR __imp_?Msg@@YAXPBDZZ
	add	esp, 8
	pop	esi

; 235  : 	}

	add	esp, 524				; 0000020cH
	ret	4
$LN5@Execute@4:

; 233  : 		}else
; 234  : 			Msg("!Cannot store config file [%s]", cfg_full_name);

	lea	eax, DWORD PTR _cfg_full_name$[esp+528]
	push	eax
	push	OFFSET ??_C@_0BP@KNFIPKKP@?$CBCannot?5store?5config?5file?5?$FL?$CFs?$FN?$AA@
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ
	add	esp, 8
	pop	esi

; 235  : 	}

	add	esp, 524				; 0000020cH
	ret	4
?Execute@CCC_SaveCFG@@UAEXPBD@Z ENDP			; CCC_SaveCFG::Execute
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Execute@CCC_Help@@UAEXPBD@Z
_TEXT	SEGMENT
__I$132774 = -512					; size = 256
__S$132773 = -256					; size = 256
_args$ = 8						; size = 4
?Execute@CCC_Help@@UAEXPBD@Z PROC			; CCC_Help::Execute, COMDAT
; _this$ = ecx

; 158  : 	virtual void Execute(LPCSTR args) {

	sub	esp, 512				; 00000200H
	push	ebx

; 159  : 		Log("- --- Command listing: start ---");

	mov	ebx, DWORD PTR __imp_?Log@@YAXPBD@Z
	push	edi
	push	OFFSET ??_C@_0CB@FLFCKEEI@?9?5?9?9?9?5Command?5listing?3?5start?5?9?9?9@
	call	ebx

; 160  : 		CConsole::vecCMD_IT it;
; 161  : 		for (it=Console->Commands.begin(); it!=Console->Commands.end(); it++)

	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	add	esp, 4
	add	ecx, 176				; 000000b0H
	call	?_M_leftmost@?$_Rb_tree@PBDUstr_pred@CConsole@@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@U?$_Select1st@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@priv@4@U?$_MapTraitsT@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@64@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<char const *,CConsole::str_pred,stlp_std::pair<char const * const,IConsole_Command *>,stlp_std::priv::_Select1st<stlp_std::pair<char const * const,IConsole_Command *> >,stlp_std::priv::_MapTraitsT<stlp_std::pair<char const * const,IConsole_Command *> >,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::_M_leftmost
	mov	edi, DWORD PTR [eax]
	mov	eax, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	add	eax, 176				; 000000b0H
	cmp	edi, eax
	setne	al
	test	al, al
	je	$LN1@Execute@5
	push	ebp
	mov	ebp, DWORD PTR __imp_?Msg@@YAXPBDZZ
	push	esi
	npad	6
$LL26@Execute@5:

; 162  : 		{
; 163  : 			IConsole_Command &C = *(it->second);

	mov	esi, DWORD PTR [edi+20]

; 164  : 			TStatus _S; C.Status(_S);

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	lea	ecx, DWORD PTR __S$132773[esp+528]
	push	ecx
	mov	ecx, esi
	call	edx

; 165  : 			TInfo	_I;	C.Info	(_I);

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+12]
	lea	ecx, DWORD PTR __I$132774[esp+528]
	push	ecx
	mov	ecx, esi
	call	edx

; 166  : 			
; 167  : 			Msg("%-20s (%-10s) --- %s",	C.Name(), _S, _I);

	mov	edx, DWORD PTR [esi+4]
	lea	eax, DWORD PTR __I$132774[esp+528]
	push	eax
	lea	ecx, DWORD PTR __S$132773[esp+532]
	push	ecx
	push	edx
	push	OFFSET ??_C@_0BF@DLPBLNAG@?$CF?920s?5?$CI?$CF?910s?$CJ?5?9?9?9?5?$CFs?$AA@
	call	ebp
	mov	eax, DWORD PTR [edi+12]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN32@Execute@5
	mov	edi, eax
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN28@Execute@5
	npad	3

; 160  : 		CConsole::vecCMD_IT it;
; 161  : 		for (it=Console->Commands.begin(); it!=Console->Commands.end(); it++)

$LL36@Execute@5:
	mov	edi, eax
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	jne	SHORT $LL36@Execute@5
	jmp	SHORT $LN28@Execute@5
$LN32@Execute@5:
	mov	eax, DWORD PTR [edi+4]
	cmp	edi, DWORD PTR [eax+12]
	jne	SHORT $LN29@Execute@5
$LL30@Execute@5:
	mov	edi, eax
	mov	eax, DWORD PTR [eax+4]
	cmp	edi, DWORD PTR [eax+12]
	je	SHORT $LL30@Execute@5
$LN29@Execute@5:
	cmp	DWORD PTR [edi+12], eax
	je	SHORT $LN28@Execute@5
	mov	edi, eax
$LN28@Execute@5:
	mov	eax, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	add	eax, 176				; 000000b0H
	cmp	edi, eax
	setne	al
	test	al, al
	jne	$LL26@Execute@5
	pop	esi
	pop	ebp
$LN1@Execute@5:

; 168  : 		}
; 169  : 		Log("Key: Ctrl + A         === Select all ");

	push	OFFSET ??_C@_0CG@PKEECIED@Key?3?5Ctrl?5?$CL?5A?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Select@
	call	ebx

; 170  : 		Log("Key: Ctrl + C         === Copy to clipboard ");

	push	OFFSET ??_C@_0CN@IIELMMBE@Key?3?5Ctrl?5?$CL?5C?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Copy?5t@
	call	ebx

; 171  : 		Log("Key: Ctrl + V         === Paste from clipboard ");

	push	OFFSET ??_C@_0DA@FFFIGPOK@Key?3?5Ctrl?5?$CL?5V?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Paste?5@
	call	ebx

; 172  : 		Log("Key: Ctrl + X         === Cut to clipboard ");

	push	OFFSET ??_C@_0CM@MDKMMKFE@Key?3?5Ctrl?5?$CL?5X?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Cut?5to@
	call	ebx

; 173  : 		Log("Key: Ctrl + Z         === Undo ");

	push	OFFSET ??_C@_0CA@MDNPCKPM@Key?3?5Ctrl?5?$CL?5Z?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Undo?5?$AA@
	call	ebx

; 174  : 		Log("Key: Ctrl + Insert    === Copy to clipboard ");

	push	OFFSET ??_C@_0CN@DHJIICFK@Key?3?5Ctrl?5?$CL?5Insert?5?5?5?5?$DN?$DN?$DN?5Copy?5t@
	call	ebx

; 175  : 		Log("Key: Shift + Insert   === Paste from clipboard ");

	push	OFFSET ??_C@_0DA@KBBHADK@Key?3?5Shift?5?$CL?5Insert?5?5?5?$DN?$DN?$DN?5Paste?5@
	call	ebx

; 176  : 		Log("Key: Shift + Delete   === Cut to clipboard ");

	push	OFFSET ??_C@_0CM@GMDFMEFI@Key?3?5Shift?5?$CL?5Delete?5?5?5?$DN?$DN?$DN?5Cut?5to@
	call	ebx

; 177  : 		Log("Key: Insert           === Toggle mode <Insert> ");

	push	OFFSET ??_C@_0DA@GBGCAEJL@Key?3?5Insert?5?5?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5Toggle@
	call	ebx

; 178  : 		Log("Key: Back / Delete          === Delete symbol left / right ");

	push	OFFSET ??_C@_0DM@NENFPGPC@Key?3?5Back?5?1?5Delete?5?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5@
	call	ebx

; 179  : 
; 180  : 		Log("Key: Up   / Down            === Prev / Next command in tips list ");

	push	OFFSET ??_C@_0EC@JPEJGBBL@Key?3?5Up?5?5?5?1?5Down?5?5?5?5?5?5?5?5?5?5?5?5?$DN?$DN?$DN?5@
	call	ebx

; 181  : 		Log("Key: Ctrl + Up / Ctrl + Down === Prev / Next executing command ");

	push	OFFSET ??_C@_0EA@LNKGHKIK@Key?3?5Ctrl?5?$CL?5Up?5?1?5Ctrl?5?$CL?5Down?5?$DN?$DN?$DN@
	call	ebx

; 182  : 		Log("Key: Left, Right, Home, End {+Shift/+Ctrl}       === Navigation in text ");

	push	OFFSET ??_C@_0EJ@BCKPHAJC@Key?3?5Left?0?5Right?0?5Home?0?5End?5?$HL?$CLSh@
	call	ebx

; 183  : 		Log("Key: PageUp / PageDown      === Scrolling history ");

	push	OFFSET ??_C@_0DD@CKLBCLHB@Key?3?5PageUp?5?1?5PageDown?5?5?5?5?5?5?$DN?$DN?$DN?5@
	call	ebx

; 184  : 		Log("Key: Tab  / Shift + Tab     === Next / Prev possible command from list");

	push	OFFSET ??_C@_0EH@HHEBIHGB@Key?3?5Tab?5?5?1?5Shift?5?$CL?5Tab?5?5?5?5?5?$DN?$DN?$DN?5@
	call	ebx

; 185  : 		Log("Key: Enter  / NumEnter      === Execute current command ");

	push	OFFSET ??_C@_0DJ@NHHKHNPG@Key?3?5Enter?5?5?1?5NumEnter?5?5?5?5?5?5?$DN?$DN?$DN?5@
	call	ebx
	add	esp, 64					; 00000040H

; 186  : 		
; 187  : 		Log("- --- Command listing: end ----");

	push	OFFSET ??_C@_0CA@CPGDOMOO@?9?5?9?9?9?5Command?5listing?3?5end?5?9?9?9?9?$AA@
	call	ebx
	add	esp, 4
	pop	edi
	pop	ebx

; 188  : 	}

	add	esp, 512				; 00000200H
	ret	4
?Execute@CCC_Help@@UAEXPBD@Z ENDP			; CCC_Help::Execute
PUBLIC	??1CCC_HideConsole@@UAE@XZ			; CCC_HideConsole::~CCC_HideConsole
; Function compile flags: /Ogtpy
;	COMDAT ??1CCC_HideConsole@@UAE@XZ
_TEXT	SEGMENT
??1CCC_HideConsole@@UAE@XZ PROC				; CCC_HideConsole::~CCC_HideConsole, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	je	SHORT $LN3@CCC_HideCo
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN3@CCC_HideCo:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	esi, DWORD PTR [esi+12]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN35@CCC_HideCo
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN35@CCC_HideCo:
	pop	esi
	ret	0
??1CCC_HideConsole@@UAE@XZ ENDP				; CCC_HideConsole::~CCC_HideConsole
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1CCC_ExclusiveMode@@UAE@XZ
_TEXT	SEGMENT
??1CCC_ExclusiveMode@@UAE@XZ PROC			; CCC_ExclusiveMode::~CCC_ExclusiveMode, COMDAT
; _this$ = eax
	push	esi
	mov	esi, eax
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	je	SHORT $LN3@CCC_Exclus
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN3@CCC_Exclus:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	esi, DWORD PTR [esi+12]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN35@CCC_Exclus
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN35@CCC_Exclus:
	pop	esi
	ret	0
??1CCC_ExclusiveMode@@UAE@XZ ENDP			; CCC_ExclusiveMode::~CCC_ExclusiveMode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCCC_ExclusiveMode@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCC_ExclusiveMode@@UAEPAXI@Z PROC			; CCC_ExclusiveMode::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	push	edi
	je	SHORT $LN6@scalar@58
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN6@scalar@58:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR [esi+12]
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN38@scalar@58
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	edi
$LN38@scalar@58:
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN46@scalar@58
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	edi
$LN46@scalar@58:
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??_GCCC_ExclusiveMode@@UAEPAXI@Z ENDP			; CCC_ExclusiveMode::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Execute@CCC_soundDevice@@UAEXPBD@Z
_TEXT	SEGMENT
_args$ = 8						; size = 4
?Execute@CCC_soundDevice@@UAEXPBD@Z PROC		; CCC_soundDevice::Execute, COMDAT
; _this$ = ecx

; 581  : 	{

	push	esi
	mov	esi, ecx

; 582  : 		GetToken				();

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+28]
	call	edx

; 583  : 		if(!tokens)				return;

	cmp	DWORD PTR [esi+28], 0
	je	SHORT $LN2@Execute@11

; 584  : 		inherited::Execute		(args);

	mov	eax, DWORD PTR _args$[esp]
	push	eax
	mov	ecx, esi
	call	?Execute@CCC_Token@@UAEXPBD@Z		; CCC_Token::Execute
$LN2@Execute@11:
	pop	esi

; 585  : 	}

	ret	4
?Execute@CCC_soundDevice@@UAEXPBD@Z ENDP		; CCC_soundDevice::Execute
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Execute@CCC_r2@@UAEXPBD@Z
_TEXT	SEGMENT
_args$ = 8						; size = 4
?Execute@CCC_r2@@UAEXPBD@Z PROC				; CCC_r2::Execute, COMDAT
; _this$ = ecx

; 538  : 		//fill_render_mode_list	();
; 539  : 		//	vid_quality_token must be already created!
; 540  : 		tokens					= vid_quality_token;
; 541  : 
; 542  : 		inherited::Execute		(args);

	mov	edx, DWORD PTR _args$[esp-4]
	mov	eax, DWORD PTR ?vid_quality_token@@3PAUxr_token@@A ; vid_quality_token
	push	edx
	mov	DWORD PTR [ecx+28], eax
	call	?Execute@CCC_Token@@UAEXPBD@Z		; CCC_Token::Execute

; 543  : 		//	0 - r1
; 544  : 		//	1..3 - r2
; 545  : 		//	4 - r3
; 546  : 		psDeviceFlags.set		(rsR2, ((renderer_value>0) && renderer_value<4) );

	mov	eax, DWORD PTR ?renderer_value@@3IA	; renderer_value
	add	eax, -1
	mov	ecx, 2
	cmp	ecx, eax
	sbb	eax, eax
	add	eax, 1
	push	eax
	push	524288					; 00080000H
	mov	ecx, OFFSET ?psDeviceFlags@@3U?$_flags@I@@A ; psDeviceFlags
	call	?set@?$_flags@I@@QAEAAU1@IH@Z		; _flags<unsigned int>::set

; 547  : 		psDeviceFlags.set		(rsR3, (renderer_value==4) );

	xor	edx, edx
	cmp	DWORD PTR ?renderer_value@@3IA, 4	; renderer_value
	mov	ecx, OFFSET ?psDeviceFlags@@3U?$_flags@I@@A ; psDeviceFlags
	sete	dl
	push	edx
	push	1048576					; 00100000H
	call	?set@?$_flags@I@@QAEAAU1@IH@Z		; _flags<unsigned int>::set

; 548  : 		psDeviceFlags.set		(rsR4, (renderer_value>=5) );

	cmp	DWORD PTR ?renderer_value@@3IA, 5	; renderer_value
	mov	ecx, OFFSET ?psDeviceFlags@@3U?$_flags@I@@A ; psDeviceFlags
	sbb	eax, eax
	add	eax, 1
	push	eax
	push	2097152					; 00200000H
	call	?set@?$_flags@I@@QAEAAU1@IH@Z		; _flags<unsigned int>::set

; 549  : 
; 550  : 		r2_sun_static	= (renderer_value<2);

	mov	eax, DWORD PTR ?renderer_value@@3IA	; renderer_value
	cmp	eax, 2
	sbb	ecx, ecx
	neg	ecx

; 551  : 
; 552  : 		r2_advanced_pp  = (renderer_value>=3);

	cmp	eax, 3
	sbb	edx, edx
	add	edx, 1
	mov	DWORD PTR ?r2_sun_static@@3HA, ecx	; r2_sun_static
	mov	DWORD PTR ?r2_advanced_pp@@3HA, edx	; r2_advanced_pp

; 553  : 	}

	ret	4
?Execute@CCC_r2@@UAEXPBD@Z ENDP				; CCC_r2::Execute
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Execute@CCC_Gamma@@UAEXPBD@Z
_TEXT	SEGMENT
_v$429735 = 8						; size = 4
_args$ = 8						; size = 4
?Execute@CCC_Gamma@@UAEXPBD@Z PROC			; CCC_Gamma::Execute, COMDAT
; _this$ = ecx

; 459  : 		CCC_Float::Execute		(args);

	mov	eax, DWORD PTR _args$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp__atof
	fst	DWORD PTR _v$429735[esp+4]
	fld	DWORD PTR [esi+28]
	add	esp, 4
	fsub	DWORD PTR _EPS
	fcomip	ST(1)
	fstp	ST(0)
	ja	SHORT $LN4@Execute@12
	movss	xmm1, DWORD PTR [esi+32]
	addss	xmm1, DWORD PTR _EPS
	movss	xmm0, DWORD PTR _v$429735[esp]
	comiss	xmm0, xmm1
	ja	SHORT $LN4@Execute@12
	mov	ecx, DWORD PTR [esi+24]
	movss	DWORD PTR [ecx], xmm0
	jmp	SHORT $LN3@Execute@12
$LN4@Execute@12:
	mov	ecx, esi
	call	?InvalidSyntax@IConsole_Command@@QAEXXZ	; IConsole_Command::InvalidSyntax
$LN3@Execute@12:

; 460  : 		//Device.Gamma.Gamma		(ps_gamma);
; 461  : 		Device.m_pRender->setGamma(ps_gamma);

	mov	ecx, DWORD PTR ?Device@@3VCRenderDevice@@A+868
	fld	DWORD PTR ?ps_gamma@@3MA		; ps_gamma
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	push	ecx
	fstp	DWORD PTR [esp]
	call	eax

; 462  : 		//Device.Gamma.Brightness	(ps_brightness);
; 463  : 		Device.m_pRender->setBrightness(ps_brightness);

	mov	ecx, DWORD PTR ?Device@@3VCRenderDevice@@A+868
	fld	DWORD PTR ?ps_brightness@@3MA		; ps_brightness
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	push	ecx
	fstp	DWORD PTR [esp]
	call	eax

; 464  : 		//Device.Gamma.Contrast	(ps_contrast);
; 465  : 		Device.m_pRender->setContrast(ps_contrast);

	mov	ecx, DWORD PTR ?Device@@3VCRenderDevice@@A+868
	fld	DWORD PTR ?ps_contrast@@3MA		; ps_contrast
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	push	ecx
	fstp	DWORD PTR [esp]
	call	eax

; 466  : 		//Device.Gamma.Update		();
; 467  : 		Device.m_pRender->updateGamma();

	mov	ecx, DWORD PTR ?Device@@3VCRenderDevice@@A+868
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	pop	esi

; 468  : 	}

	ret	4
?Execute@CCC_Gamma@@UAEXPBD@Z ENDP			; CCC_Gamma::Execute
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1CCC_SND_Restart@@UAE@XZ
_TEXT	SEGMENT
??1CCC_SND_Restart@@UAE@XZ PROC				; CCC_SND_Restart::~CCC_SND_Restart, COMDAT
; _this$ = eax
	push	esi
	mov	esi, eax
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	je	SHORT $LN3@CCC_SND_Re
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN3@CCC_SND_Re:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	esi, DWORD PTR [esi+12]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN35@CCC_SND_Re
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN35@CCC_SND_Re:
	pop	esi
	ret	0
??1CCC_SND_Restart@@UAE@XZ ENDP				; CCC_SND_Restart::~CCC_SND_Restart
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCCC_SND_Restart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCC_SND_Restart@@UAEPAXI@Z PROC			; CCC_SND_Restart::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	push	edi
	je	SHORT $LN6@scalar@59
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN6@scalar@59:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR [esi+12]
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN38@scalar@59
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	edi
$LN38@scalar@59:
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN46@scalar@59
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	edi
$LN46@scalar@59:
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??_GCCC_SND_Restart@@UAEPAXI@Z ENDP			; CCC_SND_Restart::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1CCC_VID_Reset@@UAE@XZ
_TEXT	SEGMENT
??1CCC_VID_Reset@@UAE@XZ PROC				; CCC_VID_Reset::~CCC_VID_Reset, COMDAT
; _this$ = eax
	push	esi
	mov	esi, eax
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	je	SHORT $LN3@CCC_VID_Re
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN3@CCC_VID_Re:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	esi, DWORD PTR [esi+12]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN35@CCC_VID_Re
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN35@CCC_VID_Re:
	pop	esi
	ret	0
??1CCC_VID_Reset@@UAE@XZ ENDP				; CCC_VID_Reset::~CCC_VID_Reset
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCCC_VID_Reset@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCC_VID_Reset@@UAEPAXI@Z PROC			; CCC_VID_Reset::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	push	edi
	je	SHORT $LN6@scalar@60
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN6@scalar@60:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR [esi+12]
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN38@scalar@60
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	edi
$LN38@scalar@60:
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN46@scalar@60
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	edi
$LN46@scalar@60:
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??_GCCC_VID_Reset@@UAEPAXI@Z ENDP			; CCC_VID_Reset::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1CCC_Disconnect@@UAE@XZ
_TEXT	SEGMENT
??1CCC_Disconnect@@UAE@XZ PROC				; CCC_Disconnect::~CCC_Disconnect, COMDAT
; _this$ = eax
	push	esi
	mov	esi, eax
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	je	SHORT $LN3@CCC_Discon
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN3@CCC_Discon:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	esi, DWORD PTR [esi+12]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN35@CCC_Discon
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN35@CCC_Discon:
	pop	esi
	ret	0
??1CCC_Disconnect@@UAE@XZ ENDP				; CCC_Disconnect::~CCC_Disconnect
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCCC_Disconnect@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCC_Disconnect@@UAEPAXI@Z PROC			; CCC_Disconnect::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	push	edi
	je	SHORT $LN6@scalar@61
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN6@scalar@61:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR [esi+12]
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN38@scalar@61
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	edi
$LN38@scalar@61:
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN46@scalar@61
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	edi
$LN46@scalar@61:
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??_GCCC_Disconnect@@UAEPAXI@Z ENDP			; CCC_Disconnect::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1CCC_Start@@UAE@XZ
_TEXT	SEGMENT
??1CCC_Start@@UAE@XZ PROC				; CCC_Start::~CCC_Start, COMDAT
; _this$ = eax
	push	esi
	mov	esi, eax
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	je	SHORT $LN3@CCC_Start
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN3@CCC_Start:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	esi, DWORD PTR [esi+12]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN35@CCC_Start
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN35@CCC_Start:
	pop	esi
	ret	0
??1CCC_Start@@UAE@XZ ENDP				; CCC_Start::~CCC_Start
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCCC_Start@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCC_Start@@UAEPAXI@Z PROC				; CCC_Start::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	push	edi
	je	SHORT $LN6@scalar@62
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN6@scalar@62:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR [esi+12]
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN38@scalar@62
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	edi
$LN38@scalar@62:
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN46@scalar@62
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	edi
$LN46@scalar@62:
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??_GCCC_Start@@UAEPAXI@Z ENDP				; CCC_Start::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1CCC_SaveCFG@@UAE@XZ
_TEXT	SEGMENT
??1CCC_SaveCFG@@UAE@XZ PROC				; CCC_SaveCFG::~CCC_SaveCFG, COMDAT
; _this$ = eax
	push	esi
	mov	esi, eax
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	je	SHORT $LN3@CCC_SaveCF
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN3@CCC_SaveCF:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	esi, DWORD PTR [esi+12]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN35@CCC_SaveCF
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN35@CCC_SaveCF:
	pop	esi
	ret	0
??1CCC_SaveCFG@@UAE@XZ ENDP				; CCC_SaveCFG::~CCC_SaveCFG
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCCC_SaveCFG@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCC_SaveCFG@@UAEPAXI@Z PROC				; CCC_SaveCFG::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	push	edi
	je	SHORT $LN6@scalar@63
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN6@scalar@63:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR [esi+12]
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN38@scalar@63
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	edi
$LN38@scalar@63:
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN46@scalar@63
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	edi
$LN46@scalar@63:
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??_GCCC_SaveCFG@@UAEPAXI@Z ENDP				; CCC_SaveCFG::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1CCC_Help@@UAE@XZ
_TEXT	SEGMENT
??1CCC_Help@@UAE@XZ PROC				; CCC_Help::~CCC_Help, COMDAT
; _this$ = eax
	push	esi
	mov	esi, eax
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	je	SHORT $LN3@CCC_Help
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN3@CCC_Help:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	esi, DWORD PTR [esi+12]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN35@CCC_Help
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN35@CCC_Help:
	pop	esi
	ret	0
??1CCC_Help@@UAE@XZ ENDP				; CCC_Help::~CCC_Help
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCCC_Help@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCC_Help@@UAEPAXI@Z PROC				; CCC_Help::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	push	edi
	je	SHORT $LN6@scalar@64
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN6@scalar@64:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR [esi+12]
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN38@scalar@64
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	edi
$LN38@scalar@64:
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN46@scalar@64
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	edi
$LN46@scalar@64:
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??_GCCC_Help@@UAEPAXI@Z ENDP				; CCC_Help::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1CCC_Quit@@UAE@XZ
_TEXT	SEGMENT
??1CCC_Quit@@UAE@XZ PROC				; CCC_Quit::~CCC_Quit, COMDAT
; _this$ = eax
	push	esi
	mov	esi, eax
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	je	SHORT $LN3@CCC_Quit
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN3@CCC_Quit:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	esi, DWORD PTR [esi+12]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN35@CCC_Quit
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN35@CCC_Quit:
	pop	esi
	ret	0
??1CCC_Quit@@UAE@XZ ENDP				; CCC_Quit::~CCC_Quit
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCCC_Quit@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCC_Quit@@UAEPAXI@Z PROC				; CCC_Quit::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	push	edi
	je	SHORT $LN6@scalar@65
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN6@scalar@65:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR [esi+12]
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN38@scalar@65
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	edi
$LN38@scalar@65:
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN46@scalar@65
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	edi
$LN46@scalar@65:
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??_GCCC_Quit@@UAEPAXI@Z ENDP				; CCC_Quit::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_ECCC_HideConsole@@UAEPAXI@Z
_TEXT	SEGMENT
$T485196 = -8						; size = 4
tv450 = -4						; size = 4
___flags$ = 8						; size = 4
??_ECCC_HideConsole@@UAEPAXI@Z PROC			; CCC_HideConsole::`vector deleting destructor', COMDAT
; _this$ = ecx
	sub	esp, 8
	test	BYTE PTR ___flags$[esp+4], 2
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	esi, ecx
	je	$LN3@vector@89
	mov	ebx, DWORD PTR [esi-4]
	lea	edi, DWORD PTR [esi-4]
	lea	eax, DWORD PTR [ebx+ebx*2]
	sub	ebx, 1
	mov	DWORD PTR tv450[esp+24], edi
	lea	ebp, DWORD PTR [esi+eax*8]
	js	$LN6@vector@89
	npad	3
$LL7@vector@89:
	sub	ebp, 24					; 00000018H
	mov	DWORD PTR [ebp], OFFSET ??_7IConsole_Command@@6B@
	mov	eax, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	eax, eax
	je	SHORT $LN52@vector@89
	mov	ecx, DWORD PTR [ebp+4]
	lea	esi, DWORD PTR [eax+176]
	push	esi
	lea	edi, DWORD PTR $T485196[esp+28]
	mov	DWORD PTR $T485196[esp+28], ecx
	call	??$_M_find@PBD@?$_Rb_tree@PBDUstr_pred@CConsole@@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@U?$_Select1st@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@priv@4@U?$_MapTraitsT@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@64@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@priv@stlp_std@@ABEPAU_Rb_tree_node_base@12@ABQBD@Z ; stlp_std::priv::_Rb_tree<char const *,CConsole::str_pred,stlp_std::pair<char const * const,IConsole_Command *>,stlp_std::priv::_Select1st<stlp_std::pair<char const * const,IConsole_Command *> >,stlp_std::priv::_MapTraitsT<stlp_std::pair<char const * const,IConsole_Command *> >,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::_M_find<char const *>
	mov	ecx, eax
	cmp	esi, ecx
	je	SHORT $LN52@vector@89
	lea	edi, DWORD PTR [esi+4]
	lea	eax, DWORD PTR [esi+12]
	lea	edx, DWORD PTR [esi+8]
	push	edi
	call	?_Rebalance_for_erase@?$_Rb_global@_N@priv@stlp_std@@SAPAU_Rb_tree_node_base@23@PAU423@AAPAU423@11@Z ; stlp_std::priv::_Rb_global<bool>::_Rebalance_for_erase
	mov	edi, eax
	push	edi
	call	?_S_value@?$_Rb_tree@PBDUstr_pred@CConsole@@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@U?$_Select1st@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@priv@4@U?$_MapTraitsT@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@64@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@priv@stlp_std@@KAAAU?$pair@QBDPAVIConsole_Command@@@3@PAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<char const *,CConsole::str_pred,stlp_std::pair<char const * const,IConsole_Command *>,stlp_std::priv::_Select1st<stlp_std::pair<char const * const,IConsole_Command *> >,stlp_std::priv::_MapTraitsT<stlp_std::pair<char const * const,IConsole_Command *> >,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::_S_value
	push	eax
	call	??$_Destroy@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@stlp_std@@YAXPAU?$pair@QBDPAVIConsole_Command@@@0@@Z ; stlp_std::_Destroy<stlp_std::pair<char const * const,IConsole_Command *> >
	add	esp, 12					; 0000000cH
	push	1
	push	edi
	mov	ecx, esi
	call	?deallocate@?$xalloc@U?$_Rb_tree_node@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@priv@stlp_std@@@@QBEXPAU?$_Rb_tree_node@U?$pair@QBDPAVIConsole_Command@@@stlp_std@@@priv@stlp_std@@I@Z ; xalloc<stlp_std::priv::_Rb_tree_node<stlp_std::pair<char const * const,IConsole_Command *> > >::deallocate
	add	DWORD PTR [esi+16], -1
$LN52@vector@89:
	mov	edx, DWORD PTR [ebp+12]
	mov	eax, DWORD PTR [ebp+16]
	cmp	eax, edx
	je	SHORT $LN95@vector@89
	add	eax, -4					; fffffffcH
	npad	5
$LL100@vector@89:
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN119@vector@89
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN119@vector@89
	mov	DWORD PTR [eax], 0
$LN119@vector@89:
	sub	eax, 4
	lea	ecx, DWORD PTR [eax+4]
	cmp	ecx, edx
	jne	SHORT $LL100@vector@89
$LN95@vector@89:
	mov	eax, DWORD PTR [ebp+12]
	test	eax, eax
	je	SHORT $LN133@vector@89
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN133@vector@89:
	sub	ebx, 1
	jns	$LL7@vector@89
	mov	edi, DWORD PTR tv450[esp+24]
$LN6@vector@89:
	test	BYTE PTR ___flags$[esp+20], 1
	je	SHORT $LN138@vector@89
	test	edi, edi
	je	SHORT $LN138@vector@89
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN138@vector@89:
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 8
	ret	4
$LN3@vector@89:
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	je	SHORT $LN143@vector@89
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN143@vector@89:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR [esi+12]
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN175@vector@89
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	edi
$LN175@vector@89:
	test	BYTE PTR ___flags$[esp+20], 1
	je	SHORT $LN180@vector@89
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	edi
$LN180@vector@89:
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 8
	ret	4
??_ECCC_HideConsole@@UAEPAXI@Z ENDP			; CCC_HideConsole::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_GCCC_HideConsole@@UAEPAXI@Z			; CCC_HideConsole::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GCCC_HideConsole@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCC_HideConsole@@UAEPAXI@Z PROC			; CCC_HideConsole::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	push	edi
	je	SHORT $LN6@scalar@74
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN6@scalar@74:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR [esi+12]
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN38@scalar@74
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	edi
$LN38@scalar@74:
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN46@scalar@74
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	edi
$LN46@scalar@74:
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??_GCCC_HideConsole@@UAEPAXI@Z ENDP			; CCC_HideConsole::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0CCC_HideConsole@@QAE@ABV0@@Z			; CCC_HideConsole::CCC_HideConsole
; Function compile flags: /Ogtpy
;	COMDAT ??0CCC_HideConsole@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0CCC_HideConsole@@QAE@ABV0@@Z PROC			; CCC_HideConsole::CCC_HideConsole, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0IConsole_Command@@QAE@ABV0@@Z
	mov	DWORD PTR [esi], OFFSET ??_7CCC_HideConsole@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0CCC_HideConsole@@QAE@ABV0@@Z ENDP			; CCC_HideConsole::CCC_HideConsole
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1CCC_soundDevice@@UAE@XZ
_TEXT	SEGMENT
??1CCC_soundDevice@@UAE@XZ PROC				; CCC_soundDevice::~CCC_soundDevice, COMDAT
; _this$ = ecx

; 578  : 	{}

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	je	SHORT $LN5@CCC_soundD
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@CCC_soundD:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	esi, DWORD PTR [esi+12]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN37@CCC_soundD
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@CCC_soundD:
	pop	esi
	ret	0
??1CCC_soundDevice@@UAE@XZ ENDP				; CCC_soundDevice::~CCC_soundDevice
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1CCC_r2@@UAE@XZ
_TEXT	SEGMENT
??1CCC_r2@@UAE@XZ PROC					; CCC_r2::~CCC_r2, COMDAT
; _this$ = ecx

; 533  : 	{

	push	esi
	mov	esi, ecx

; 534  : 		//free_render_mode_list();
; 535  : 	}

	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	je	SHORT $LN5@CCC_r2
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@CCC_r2:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	esi, DWORD PTR [esi+12]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN37@CCC_r2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@CCC_r2:
	pop	esi
	ret	0
??1CCC_r2@@UAE@XZ ENDP					; CCC_r2::~CCC_r2
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1CCC_Gamma@@UAE@XZ
_TEXT	SEGMENT
??1CCC_Gamma@@UAE@XZ PROC				; CCC_Gamma::~CCC_Gamma, COMDAT
; _this$ = eax
	push	esi
	mov	esi, eax
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	je	SHORT $LN5@CCC_Gamma
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@CCC_Gamma:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	esi, DWORD PTR [esi+12]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN37@CCC_Gamma
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@CCC_Gamma:
	pop	esi
	ret	0
??1CCC_Gamma@@UAE@XZ ENDP				; CCC_Gamma::~CCC_Gamma
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCCC_Gamma@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCC_Gamma@@UAEPAXI@Z PROC				; CCC_Gamma::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	push	edi
	je	SHORT $LN8@scalar@75
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN8@scalar@75:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR [esi+12]
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN40@scalar@75
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	edi
$LN40@scalar@75:
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN48@scalar@75
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	edi
$LN48@scalar@75:
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??_GCCC_Gamma@@UAEPAXI@Z ENDP				; CCC_Gamma::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1CCC_VidMode@@UAE@XZ
_TEXT	SEGMENT
??1CCC_VidMode@@UAE@XZ PROC				; CCC_VidMode::~CCC_VidMode, COMDAT
; _this$ = eax
	push	esi
	mov	esi, eax
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	je	SHORT $LN5@CCC_VidMod
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@CCC_VidMod:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	esi, DWORD PTR [esi+12]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN37@CCC_VidMod
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@CCC_VidMod:
	pop	esi
	ret	0
??1CCC_VidMode@@UAE@XZ ENDP				; CCC_VidMode::~CCC_VidMode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCCC_VidMode@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCC_VidMode@@UAEPAXI@Z PROC				; CCC_VidMode::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	push	edi
	je	SHORT $LN8@scalar@76
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN8@scalar@76:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR [esi+12]
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN40@scalar@76
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	edi
$LN40@scalar@76:
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN48@scalar@76
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	edi
$LN48@scalar@76:
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??_GCCC_VidMode@@UAEPAXI@Z ENDP				; CCC_VidMode::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?fill_tips@CCC_VidMode@@UAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@I@Z
_TEXT	SEGMENT
$T487520 = -520						; size = 4
$T487519 = -520						; size = 4
$T487518 = -516						; size = 4
_cur$ = -512						; size = 256
_str$ = -256						; size = 256
_tips$ = 8						; size = 4
_mode$ = 12						; size = 4
?fill_tips@CCC_VidMode@@UAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@I@Z PROC ; CCC_VidMode::fill_tips, COMDAT
; _this$ = ecx

; 411  : 	{

	sub	esp, 520				; 00000208H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx

; 412  : 		TStatus  str, cur;
; 413  : 		Status( cur );

	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+8]
	lea	ecx, DWORD PTR _cur$[esp+536]
	push	ecx
	mov	ecx, edi
	call	edx

; 414  : 
; 415  : 		bool res = false;
; 416  : 		xr_token* tok = GetToken();

	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+28]
	mov	ecx, edi
	xor	bl, bl
	call	edx
	mov	ebp, eax

; 417  : 		while ( tok->name && !res )

	mov	esi, DWORD PTR [ebp]
	test	esi, esi
	je	$LN72@fill_tips@4
$LL6@fill_tips@4:
	test	bl, bl
	jne	$LN78@fill_tips@4

; 418  : 		{
; 419  : 			if ( !xr_strcmp( tok->name, cur ) )

	lea	ecx, DWORD PTR _cur$[esp+536]
	mov	eax, esi
$LL73@fill_tips@4:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN74@fill_tips@4
	test	dl, dl
	je	SHORT $LN75@fill_tips@4
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN74@fill_tips@4
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL73@fill_tips@4
$LN75@fill_tips@4:
	xor	eax, eax
	jmp	SHORT $LN76@fill_tips@4
$LN74@fill_tips@4:
	sbb	eax, eax
	sbb	eax, -1
$LN76@fill_tips@4:
	test	eax, eax
	jne	SHORT $LN4@fill_tips@4

; 420  : 			{
; 421  : 				xr_sprintf( str, sizeof(str), "%s  (current)", tok->name );

	push	esi
	lea	eax, DWORD PTR _str$[esp+540]
	push	OFFSET ??_C@_0O@IDEMPPPL@?$CFs?5?5?$CIcurrent?$CJ?$AA@
	push	eax
	mov	eax, 256				; 00000100H
	call	?xr_sprintf@@YAHPADIPBDZZ		; xr_sprintf

; 422  : 				tips.push_back( str );

	mov	edx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	add	esp, 12					; 0000000cH
	lea	ecx, DWORD PTR _str$[esp+536]
	push	ecx
	mov	ecx, DWORD PTR [edx]
	xor	esi, esi
	mov	DWORD PTR $T487518[esp+540], esi
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	cmp	eax, esi
	je	SHORT $LN13@fill_tips@4
	add	DWORD PTR [eax], 1
$LN13@fill_tips@4:
	mov	ecx, DWORD PTR $T487518[esp+536]
	cmp	ecx, esi
	je	SHORT $LN79@fill_tips@4
	add	DWORD PTR [ecx], -1
$LN79@fill_tips@4:
	mov	ecx, DWORD PTR _tips$[esp+532]
	mov	DWORD PTR $T487518[esp+536], eax
	lea	eax, DWORD PTR $T487518[esp+536]
	push	eax
	call	?push_back@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXABVshared_str@@@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::push_back
	mov	eax, DWORD PTR $T487518[esp+536]
	cmp	eax, esi
	je	SHORT $LN26@fill_tips@4
	add	DWORD PTR [eax], -1
	mov	ecx, DWORD PTR $T487518[esp+536]
	cmp	DWORD PTR [ecx], esi
	jne	SHORT $LN26@fill_tips@4
	mov	DWORD PTR $T487518[esp+536], esi
$LN26@fill_tips@4:

; 423  : 				res = true;

	mov	bl, 1
$LN4@fill_tips@4:

; 417  : 		while ( tok->name && !res )

	mov	esi, DWORD PTR [ebp+8]

; 424  : 			}
; 425  : 			tok++;

	add	ebp, 8
	test	esi, esi
	jne	$LL6@fill_tips@4

; 426  : 		}
; 427  : 		if ( !res )

	test	bl, bl
	jne	SHORT $LN78@fill_tips@4
$LN72@fill_tips@4:

; 428  : 		{
; 429  : 			tips.push_back( "---  (current)" );

	mov	edx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	ecx, DWORD PTR [edx]
	mov	ebp, DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	push	OFFSET ??_C@_0P@DBNKOMLO@?9?9?9?5?5?$CIcurrent?$CJ?$AA@
	mov	DWORD PTR $T487519[esp+540], 0
	call	ebp
	test	eax, eax
	je	SHORT $LN77@fill_tips@4
	add	DWORD PTR [eax], 1
$LN77@fill_tips@4:
	mov	ecx, DWORD PTR $T487519[esp+536]
	test	ecx, ecx
	je	SHORT $LN80@fill_tips@4
	add	DWORD PTR [ecx], -1
$LN80@fill_tips@4:
	mov	ebx, DWORD PTR _tips$[esp+532]
	mov	DWORD PTR $T487519[esp+536], eax
	lea	eax, DWORD PTR $T487519[esp+536]
	push	eax
	mov	ecx, ebx
	call	?push_back@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXABVshared_str@@@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::push_back
	mov	eax, DWORD PTR $T487519[esp+536]
	test	eax, eax
	je	SHORT $LN45@fill_tips@4
	add	DWORD PTR [eax], -1
	jmp	SHORT $LN45@fill_tips@4
$LN78@fill_tips@4:
	mov	ebx, DWORD PTR _tips$[esp+532]
	mov	ebp, DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
$LN45@fill_tips@4:

; 430  : 		}
; 431  : 		tok = GetToken();

	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx+28]
	mov	ecx, edi
	call	eax
	mov	esi, eax

; 432  : 		while ( tok->name )

	mov	eax, DWORD PTR [esi]
	xor	edi, edi
	cmp	eax, edi
	je	SHORT $LN1@fill_tips@4
	npad	11
$LL2@fill_tips@4:

; 433  : 		{
; 434  : 			tips.push_back( tok->name );

	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	DWORD PTR $T487520[esp+536], edi
	mov	ecx, DWORD PTR [ecx]
	push	eax
	call	ebp
	cmp	eax, edi
	je	SHORT $LN51@fill_tips@4
	add	DWORD PTR [eax], 1
$LN51@fill_tips@4:
	mov	ecx, DWORD PTR $T487520[esp+536]
	cmp	ecx, edi
	je	SHORT $LN54@fill_tips@4
	add	DWORD PTR [ecx], -1
$LN54@fill_tips@4:
	lea	edx, DWORD PTR $T487520[esp+536]
	push	edx
	mov	ecx, ebx
	mov	DWORD PTR $T487520[esp+540], eax
	call	?push_back@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXABVshared_str@@@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::push_back
	mov	eax, DWORD PTR $T487520[esp+536]
	cmp	eax, edi
	je	SHORT $LN64@fill_tips@4
	add	DWORD PTR [eax], -1
$LN64@fill_tips@4:
	mov	eax, DWORD PTR [esi+8]

; 435  : 			tok++;

	add	esi, 8
	cmp	eax, edi
	jne	SHORT $LL2@fill_tips@4
$LN1@fill_tips@4:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 436  : 		}
; 437  : 	}

	add	esp, 520				; 00000208H
	ret	8
?fill_tips@CCC_VidMode@@UAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@I@Z ENDP ; CCC_VidMode::fill_tips
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Execute@CCC_Disconnect@@UAEXPBD@Z
_TEXT	SEGMENT
_E$487662 = -4						; size = 4
_args$ = 8						; size = 4
?Execute@CCC_Disconnect@@UAEXPBD@Z PROC			; CCC_Disconnect::Execute, COMDAT
; _this$ = ecx

; 369  : 	virtual void Execute(LPCSTR args) {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8

; 370  : 		Engine.Event.Defer("KERNEL:disconnect");

	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+60
	call	DWORD PTR __imp_?Enter@xrCriticalSection@@QAEXXZ
	push	OFFSET ??_C@_0BC@DMJJJMJK@KERNEL?3disconnect?$AA@
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+36
	call	?Create@CEventAPI@@QAEPAVCEvent@@PBD@Z	; CEventAPI::Create
	push	0
	push	0
	push	0
	push	0
	push	eax
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+36
	mov	DWORD PTR _E$487662[esp+28], eax
	call	?Defer@CEventAPI@@QAEXPAVCEvent@@_K1@Z	; CEventAPI::Defer
	lea	eax, DWORD PTR _E$487662[esp+8]
	push	eax
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+36
	call	?Destroy@CEventAPI@@QAEXAAPAVCEvent@@@Z	; CEventAPI::Destroy
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+60
	call	DWORD PTR __imp_?Leave@xrCriticalSection@@QAEXXZ

; 371  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?Execute@CCC_Disconnect@@UAEXPBD@Z ENDP			; CCC_Disconnect::Execute
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Execute@CCC_Start@@UAEXPBD@Z
_TEXT	SEGMENT
tv200 = -12292						; size = 4
tv189 = -12292						; size = 4
tv86 = -12292						; size = 4
tv83 = -12292						; size = 4
_op_client$ = -12288					; size = 4096
_op_server$ = -8192					; size = 4096
_op_demo$ = -4096					; size = 4096
_args$ = 8						; size = 4
?Execute@CCC_Start@@UAEXPBD@Z PROC			; CCC_Start::Execute, COMDAT
; _this$ = ecx

; 327  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	mov	eax, 12292				; 00003004H
	call	__chkstk
	push	ebx
	push	esi

; 328  : /*		if (g_pGameLevel)	{
; 329  : 			Log		("! Please disconnect/unload first");
; 330  : 			return;
; 331  : 		}
; 332  : */
; 333  : 		string4096	op_server,op_client,op_demo;
; 334  : 		op_server[0] = 0;
; 335  : 		op_client[0] = 0;
; 336  : 		
; 337  : 		parse		(op_server,args,"server");	// 1. server

	mov	esi, DWORD PTR __imp__strstr
	push	edi
	mov	edi, DWORD PTR _args$[ebp]
	push	OFFSET ??_C@_06HJHJCKIO@server?$AA@
	push	edi
	mov	BYTE PTR _op_client$[esp+12312], 0
	mov	BYTE PTR _op_server$[esp+12312], 0
	call	esi
	mov	ebx, DWORD PTR __imp__sscanf
	add	esp, 8
	test	eax, eax
	je	SHORT $LN10@Execute@13
	lea	eax, DWORD PTR _op_server$[esp+12304]
	push	eax
	push	OFFSET ??_C@_07DBLJAEGM@?$CI?$CF?$FL?$FO?$CJ?$FN?$CJ?$AA@
	push	OFFSET ??_C@_06HJHJCKIO@server?$AA@
	push	edi
	call	esi
	add	eax, 6
	add	esp, 8
	push	eax
	call	ebx
	add	esp, 12					; 0000000cH
$LN10@Execute@13:

; 338  : 		parse		(op_client,args,"client");	// 2. client

	push	OFFSET ??_C@_06DGDLPBAN@client?$AA@
	push	edi
	mov	BYTE PTR _op_client$[esp+12312], 0
	call	esi
	add	esp, 8
	test	eax, eax
	je	SHORT $LN15@Execute@13
	lea	ecx, DWORD PTR _op_client$[esp+12304]
	push	ecx
	push	OFFSET ??_C@_07DBLJAEGM@?$CI?$CF?$FL?$FO?$CJ?$FN?$CJ?$AA@
	push	OFFSET ??_C@_06DGDLPBAN@client?$AA@
	push	edi
	call	esi
	add	eax, 6
	add	esp, 8
	push	eax
	call	ebx
	add	esp, 12					; 0000000cH
$LN15@Execute@13:

; 339  : 		parse		(op_demo, args,	"demo");	// 3. demo

	push	OFFSET ??_C@_04PLPNPBEF@demo?$AA@
	push	edi
	mov	BYTE PTR _op_demo$[esp+12312], 0
	call	esi
	add	esp, 8
	test	eax, eax
	je	SHORT $LN20@Execute@13
	lea	edx, DWORD PTR _op_demo$[esp+12304]
	push	edx
	push	OFFSET ??_C@_07DBLJAEGM@?$CI?$CF?$FL?$FO?$CJ?$FN?$CJ?$AA@
	push	OFFSET ??_C@_04PLPNPBEF@demo?$AA@
	push	edi
	call	esi
	add	eax, 4
	add	esp, 8
	push	eax
	call	ebx
	add	esp, 12					; 0000000cH
$LN20@Execute@13:

; 340  : 		
; 341  : 		strlwr( op_server );

	lea	eax, DWORD PTR _op_server$[esp+12304]
	push	eax
	call	DWORD PTR __imp__strlwr
	add	esp, 4

; 342  : 		protect_Name_strlwr( op_client );

	lea	ecx, DWORD PTR _op_client$[esp+12304]
	push	ecx
	call	?protect_Name_strlwr@CCC_Start@@AAEXPAD@Z ; CCC_Start::protect_Name_strlwr

; 343  : 
; 344  : 		if(!op_client[0] && strstr(op_server,"single"))

	cmp	BYTE PTR _op_client$[esp+12304], 0
	jne	SHORT $LN27@Execute@13
	lea	edx, DWORD PTR _op_server$[esp+12304]
	push	OFFSET ??_C@_06EJFMBPJF@single?$AA@
	push	edx
	call	esi
	add	esp, 8
	test	eax, eax
	je	SHORT $LN27@Execute@13

; 345  : 			xr_strcpy(op_client, "localhost");

	push	4096					; 00001000H
	push	OFFSET ??_C@_09IPAEKDAI@localhost?$AA@
	lea	eax, DWORD PTR _op_client$[esp+12312]
	push	4096					; 00001000H
	push	eax
	call	DWORD PTR __imp__strncpy_s
	add	esp, 16					; 00000010H
$LN27@Execute@13:

; 346  : 
; 347  : 		if ((0==xr_strlen(op_client)) && (0 == xr_strlen(op_demo)))

	lea	eax, DWORD PTR _op_client$[esp+12304]
	lea	edx, DWORD PTR [eax+1]
$LL39@Execute@13:
	mov	cl, BYTE PTR [eax]
	add	eax, 1
	test	cl, cl
	jne	SHORT $LL39@Execute@13
	sub	eax, edx
	jne	SHORT $LN4@Execute@13
	lea	eax, DWORD PTR _op_demo$[esp+12304]
	lea	edx, DWORD PTR [eax+1]
	npad	4
$LL40@Execute@13:
	mov	cl, BYTE PTR [eax]
	add	eax, 1
	test	cl, cl
	jne	SHORT $LL40@Execute@13
	sub	eax, edx
	jne	SHORT $LN4@Execute@13

; 348  : 		{
; 349  : 			Log("! Can't start game without client. Arguments: '%s'.",args);

	push	edi
	push	OFFSET ??_C@_0DE@LJJJDKPI@?$CB?5Can?8t?5start?5game?5without?5clien@
	call	DWORD PTR __imp_?Log@@YAXPBD0@Z
	add	esp, 8

; 361  : 		}
; 362  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN4@Execute@13:

; 350  : 			return;
; 351  : 		}
; 352  : 		if (g_pGameLevel)

	cmp	DWORD PTR ?g_pGameLevel@@3PAVIGame_Level@@A, 0 ; g_pGameLevel
	je	SHORT $LN3@Execute@13

; 353  : 			Engine.Event.Defer("KERNEL:disconnect");

	push	0
	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0BC@DMJJJMJK@KERNEL?3disconnect?$AA@
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+36
	call	?Defer@CEventAPI@@QAEXPBD_K1@Z		; CEventAPI::Defer
$LN3@Execute@13:

; 354  : 		
; 355  : 		if (xr_strlen(op_demo))

	lea	eax, DWORD PTR _op_demo$[esp+12304]
	lea	edx, DWORD PTR [eax+1]
	npad	1
$LL41@Execute@13:
	mov	cl, BYTE PTR [eax]
	add	eax, 1
	test	cl, cl
	jne	SHORT $LL41@Execute@13
	sub	eax, edx
	je	SHORT $LN2@Execute@13

; 356  : 		{
; 357  : 			Engine.Event.Defer	("KERNEL:start_mp_demo",u64(xr_strdup(op_demo)),0);

	push	0
	lea	ecx, DWORD PTR _op_demo$[esp+12308]
	push	0
	push	ecx
	call	DWORD PTR __imp_?xr_strdup@@YAPADPBD@Z
	add	esp, 4
	cdq
	push	edx
	push	eax
	push	OFFSET ??_C@_0BF@DLALIJPG@KERNEL?3start_mp_demo?$AA@

; 358  : 		} else
; 359  : 		{
; 360  : 			Engine.Event.Defer	("KERNEL:start",u64(xr_strlen(op_server)?xr_strdup(op_server):0),u64(xr_strdup(op_client)));

	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+36
	call	?Defer@CEventAPI@@QAEXPBD_K1@Z		; CEventAPI::Defer

; 361  : 		}
; 362  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN2@Execute@13:

; 358  : 		} else
; 359  : 		{
; 360  : 			Engine.Event.Defer	("KERNEL:start",u64(xr_strlen(op_server)?xr_strdup(op_server):0),u64(xr_strdup(op_client)));

	lea	eax, DWORD PTR _op_server$[esp+12304]
	lea	edx, DWORD PTR [eax+1]
$LL42@Execute@13:
	mov	cl, BYTE PTR [eax]
	add	eax, 1
	test	cl, cl
	jne	SHORT $LL42@Execute@13
	sub	eax, edx
	mov	edi, DWORD PTR __imp_?xr_strdup@@YAPADPBD@Z
	je	SHORT $LN8@Execute@13
	lea	edx, DWORD PTR _op_server$[esp+12304]
	push	edx
	call	edi
	add	esp, 4
	mov	esi, eax
	jmp	SHORT $LN9@Execute@13
$LN8@Execute@13:
	xor	esi, esi
$LN9@Execute@13:
	lea	eax, DWORD PTR _op_client$[esp+12304]
	push	eax
	call	edi
	add	esp, 4
	cdq
	push	edx
	push	eax
	mov	eax, esi
	cdq
	push	edx
	push	eax
	push	OFFSET ??_C@_0N@FKNCMGFP@KERNEL?3start?$AA@
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+36
	call	?Defer@CEventAPI@@QAEXPBD_K1@Z		; CEventAPI::Defer

; 361  : 		}
; 362  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Execute@CCC_Start@@UAEXPBD@Z ENDP			; CCC_Start::Execute
_TEXT	ENDS
PUBLIC	?add_LRU_to_tips@IConsole_Command@@QAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z ; IConsole_Command::add_LRU_to_tips
; Function compile flags: /Ogtpy
;	COMDAT ?add_LRU_to_tips@IConsole_Command@@QAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z
_TEXT	SEGMENT
_tips$ = 8						; size = 4
?add_LRU_to_tips@IConsole_Command@@QAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z PROC ; IConsole_Command::add_LRU_to_tips, COMDAT
; _this$ = ecx

; 46   : {

	push	esi
	push	edi

; 47   : 	vecLRU::reverse_iterator	it_rb = m_LRU.rbegin();

	lea	edi, DWORD PTR [ecx+12]
	mov	ecx, edi
	call	?end@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEPAVshared_str@@XZ ; stlp_std::vector<shared_str,xalloc<shared_str> >::end

; 48   : 	vecLRU::reverse_iterator	it_re = m_LRU.rend();

	mov	ecx, edi
	mov	esi, eax
	call	?begin@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEPAVshared_str@@XZ ; stlp_std::vector<shared_str,xalloc<shared_str> >::begin
	mov	edi, eax

; 49   : 	for ( ; it_rb != it_re; ++it_rb )

	cmp	esi, edi
	je	SHORT $LN1@add_LRU_to@5
	push	ebx
	mov	ebx, DWORD PTR _tips$[esp+8]
$LL26@add_LRU_to@5:
	add	esi, -4					; fffffffcH

; 50   : 	{
; 51   : 		tips.push_back( (*it_rb) );

	push	esi
	mov	ecx, ebx
	call	?push_back@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXABVshared_str@@@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::push_back
	cmp	esi, edi
	jne	SHORT $LL26@add_LRU_to@5
	pop	ebx
$LN1@add_LRU_to@5:
	pop	edi
	pop	esi

; 52   : 	}
; 53   : }

	ret	4
?add_LRU_to_tips@IConsole_Command@@QAEXAAV?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@@Z ENDP ; IConsole_Command::add_LRU_to_tips
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?add_to_LRU@IConsole_Command@@UAEXABVshared_str@@@Z
_TEXT	SEGMENT
_arg$ = 8						; size = 4
?add_to_LRU@IConsole_Command@@UAEXABVshared_str@@@Z PROC ; IConsole_Command::add_to_LRU, COMDAT
; _this$ = ecx

; 28   : {

	push	edi

; 29   : 	if ( arg.size() == 0 || bEmptyArgsHandled )

	mov	edi, DWORD PTR _arg$[esp]
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN3@add_to_LRU
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@add_to_LRU
	cmp	BYTE PTR [ecx+10], 0
	jne	SHORT $LN3@add_to_LRU
	push	ebx

; 30   : 	{
; 31   : 		return;
; 32   : 	}
; 33   : 	
; 34   : 	bool dup = ( std::find( m_LRU.begin(), m_LRU.end(), arg ) != m_LRU.end() );

	lea	ebx, DWORD PTR [ecx+12]
	push	esi
	mov	ecx, ebx
	call	?end@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEPAVshared_str@@XZ ; stlp_std::vector<shared_str,xalloc<shared_str> >::end
	mov	ecx, ebx
	mov	esi, eax
	call	?begin@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEPAVshared_str@@XZ ; stlp_std::vector<shared_str,xalloc<shared_str> >::begin
	call	??$__find@PAVshared_str@@V1@@priv@stlp_std@@YAPAVshared_str@@PAV2@0ABV2@ABUrandom_access_iterator_tag@1@@Z ; stlp_std::priv::__find<shared_str *,shared_str>
	mov	ecx, ebx
	mov	esi, eax
	call	?end@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEPAVshared_str@@XZ ; stlp_std::vector<shared_str,xalloc<shared_str> >::end
	cmp	esi, eax

; 35   : 	if ( !dup )

	jne	SHORT $LN47@add_to_LRU

; 36   : 	{
; 37   : 		m_LRU.push_back( arg );

	push	edi
	mov	ecx, ebx
	call	?push_back@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXABVshared_str@@@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::push_back

; 38   : 		if ( m_LRU.size() > LRU_MAX_COUNT )

	mov	eax, DWORD PTR [ebx+4]
	sub	eax, DWORD PTR [ebx]
	sar	eax, 2
	cmp	eax, 10					; 0000000aH
	jbe	SHORT $LN47@add_to_LRU

; 39   : 		{
; 40   : 			m_LRU.erase( m_LRU.begin() );

	mov	ecx, ebx
	call	?begin@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEPAVshared_str@@XZ ; stlp_std::vector<shared_str,xalloc<shared_str> >::begin
	mov	ecx, ebx
	call	?erase@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEPAVshared_str@@PAV3@@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::erase
$LN47@add_to_LRU:
	pop	esi
	pop	ebx
$LN3@add_to_LRU:
	pop	edi

; 41   : 		}
; 42   : 	}
; 43   : }

	ret	4
?add_to_LRU@IConsole_Command@@UAEXABVshared_str@@@Z ENDP ; IConsole_Command::add_to_LRU
PUBLIC	??4CCC_HideConsole@@QAEAAV0@ABV0@@Z		; CCC_HideConsole::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4CCC_HideConsole@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CCC_HideConsole@@QAEAAV0@ABV0@@Z PROC		; CCC_HideConsole::operator=, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edi+4], ecx
	movzx	edx, BYTE PTR [eax+8]
	mov	BYTE PTR [edi+8], dl
	mov	cl, BYTE PTR [eax+9]
	mov	BYTE PTR [edi+9], cl
	movzx	edx, BYTE PTR [eax+10]
	add	eax, 12					; 0000000cH
	push	eax
	lea	esi, DWORD PTR [edi+12]
	mov	BYTE PTR [edi+10], dl
	call	??4?$_Impl_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z ; stlp_std::priv::_Impl_vector<shared_str,xalloc<shared_str> >::operator=
	mov	eax, edi
	pop	edi
	pop	esi
	ret	4
??4CCC_HideConsole@@QAEAAV0@ABV0@@Z ENDP		; CCC_HideConsole::operator=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Execute@CCC_HideConsole@@UAEXPBD@Z
_TEXT	SEGMENT
_args$ = 8						; size = 4
?Execute@CCC_HideConsole@@UAEXPBD@Z PROC		; CCC_HideConsole::Execute, COMDAT
; _this$ = ecx

; 654  : 		Console->Hide	();

	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	call	?Hide@CConsole@@QAEXXZ			; CConsole::Hide

; 655  : 	}

	ret	4
?Execute@CCC_HideConsole@@UAEXPBD@Z ENDP		; CCC_HideConsole::Execute
_TEXT	ENDS
PUBLIC	??0CCC_HideConsole@@QAE@PBD@Z			; CCC_HideConsole::CCC_HideConsole
; Function compile flags: /Ogtpy
;	COMDAT ??0CCC_HideConsole@@QAE@PBD@Z
_TEXT	SEGMENT
_N$ = 8							; size = 4
??0CCC_HideConsole@@QAE@PBD@Z PROC			; CCC_HideConsole::CCC_HideConsole, COMDAT
; _this$ = ecx

; 648  : 	{

	mov	eax, DWORD PTR _N$[esp-4]
	push	esi
	mov	esi, ecx
	push	edi
	lea	edi, DWORD PTR [esi+12]
	mov	ecx, edi
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	DWORD PTR [esi+4], eax
	mov	BYTE PTR [esi+8], 1
	mov	BYTE PTR [esi+9], 1
	mov	BYTE PTR [esi+10], 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, edi
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, edi
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	pop	edi
	mov	DWORD PTR [esi], OFFSET ??_7CCC_HideConsole@@6B@

; 649  : 		bEmptyArgsHandled	= true;

	mov	BYTE PTR [esi+10], 1

; 650  : 	}

	mov	eax, esi
	pop	esi
	ret	4
??0CCC_HideConsole@@QAE@PBD@Z ENDP			; CCC_HideConsole::CCC_HideConsole
_TEXT	ENDS
;	COMDAT ?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_BSS	SEGMENT
?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A DB 018H DUP (?) ; `CCC_Register'::`39'::xCCC_ExclusiveMode
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_ioc_cmd.cpp
_BSS	ENDS
;	COMDAT ??0CCC_ExclusiveMode@@QAE@PBD@Z
_TEXT	SEGMENT
??0CCC_ExclusiveMode@@QAE@PBD@Z PROC			; CCC_ExclusiveMode::CCC_ExclusiveMode, COMDAT

; 616  : 	{

	mov	al, 1
	mov	ecx, OFFSET ?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A+12
	mov	DWORD PTR ?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A, OFFSET ??_7IConsole_Command@@6B@
	mov	DWORD PTR ?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A+4, OFFSET ??_C@_0BF@BKKKKOKD@input_exclusive_mode?$AA@
	mov	BYTE PTR ?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A+8, al
	mov	BYTE PTR ?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A+9, al
	mov	BYTE PTR ?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	mov	DWORD PTR ?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A, OFFSET ??_7CCC_ExclusiveMode@@6B@

; 617  : 	}

	mov	eax, OFFSET ?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A
	ret	0
??0CCC_ExclusiveMode@@QAE@PBD@Z ENDP			; CCC_ExclusiveMode::CCC_ExclusiveMode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCCC_soundDevice@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCC_soundDevice@@UAEPAXI@Z PROC			; CCC_soundDevice::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	push	edi
	je	SHORT $LN8@scalar@88
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN8@scalar@88:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR [esi+12]
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN40@scalar@88
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	edi
$LN40@scalar@88:
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN48@scalar@88
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	edi
$LN48@scalar@88:
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??_GCCC_soundDevice@@UAEPAXI@Z ENDP			; CCC_soundDevice::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCCC_r2@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCCC_r2@@UAEPAXI@Z PROC				; CCC_r2::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	push	edi
	je	SHORT $LN8@scalar@89
	push	esi
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN8@scalar@89:
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR [esi+12]
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN40@scalar@89
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	edi
$LN40@scalar@89:
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN48@scalar@89
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	edi
$LN48@scalar@89:
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??_GCCC_r2@@UAEPAXI@Z ENDP				; CCC_r2::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_BSS	SEGMENT
?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A DB 018H DUP (?) ; `CCC_Register'::`26'::xCCC_SND_Restart
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_ioc_cmd.cpp
_BSS	ENDS
;	COMDAT ??0CCC_SND_Restart@@QAE@PBD@Z
_TEXT	SEGMENT
??0CCC_SND_Restart@@QAE@PBD@Z PROC			; CCC_SND_Restart::CCC_SND_Restart, COMDAT

; 444  : 	CCC_SND_Restart(LPCSTR N) : IConsole_Command(N) { bEmptyArgsHandled = TRUE; };

	mov	ecx, OFFSET ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A+12
	mov	DWORD PTR ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A, OFFSET ??_7IConsole_Command@@6B@
	mov	DWORD PTR ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A+4, OFFSET ??_C@_0M@IJBIKBGC@snd_restart?$AA@
	mov	BYTE PTR ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A+8, 1
	mov	BYTE PTR ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A+9, 1
	mov	BYTE PTR ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	mov	DWORD PTR ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A, OFFSET ??_7CCC_SND_Restart@@6B@
	mov	BYTE PTR ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A+10, 1
	mov	eax, OFFSET ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A
	ret	0
??0CCC_SND_Restart@@QAE@PBD@Z ENDP			; CCC_SND_Restart::CCC_SND_Restart
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Execute@CCC_VID_Reset@@UAEXPBD@Z
_TEXT	SEGMENT
_args$ = 8						; size = 4
?Execute@CCC_VID_Reset@@UAEXPBD@Z PROC			; CCC_VID_Reset::Execute, COMDAT
; _this$ = ecx

; 379  : 		if (Device.b_is_Ready) {

	cmp	DWORD PTR ?Device@@3VCRenderDevice@@A+16, 0
	je	SHORT $LN1@Execute@14

; 380  : 			Device.Reset	();

	mov	DWORD PTR _args$[esp-4], 1
	mov	ecx, OFFSET ?Device@@3VCRenderDevice@@A	; Device
	jmp	?Reset@CRenderDevice@@QAEX_N@Z		; CRenderDevice::Reset
$LN1@Execute@14:

; 381  : 		}
; 382  : 	}

	ret	4
?Execute@CCC_VID_Reset@@UAEXPBD@Z ENDP			; CCC_VID_Reset::Execute
_TEXT	ENDS
;	COMDAT ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_BSS	SEGMENT
?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A DB 018H DUP (?) ; `CCC_Register'::`23'::xCCC_VID_Reset
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_ioc_cmd.cpp
_BSS	ENDS
;	COMDAT ??0CCC_VID_Reset@@QAE@PBD@Z
_TEXT	SEGMENT
??0CCC_VID_Reset@@QAE@PBD@Z PROC			; CCC_VID_Reset::CCC_VID_Reset, COMDAT

; 377  : 	CCC_VID_Reset(LPCSTR N) : IConsole_Command(N) { bEmptyArgsHandled = TRUE; };

	mov	ecx, OFFSET ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A+12
	mov	DWORD PTR ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A, OFFSET ??_7IConsole_Command@@6B@
	mov	DWORD PTR ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A+4, OFFSET ??_C@_0M@DIIAMDPB@vid_restart?$AA@
	mov	BYTE PTR ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A+8, 1
	mov	BYTE PTR ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A+9, 1
	mov	BYTE PTR ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	mov	DWORD PTR ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A, OFFSET ??_7CCC_VID_Reset@@6B@
	mov	BYTE PTR ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A+10, 1
	mov	eax, OFFSET ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A
	ret	0
??0CCC_VID_Reset@@QAE@PBD@Z ENDP			; CCC_VID_Reset::CCC_VID_Reset
_TEXT	ENDS
;	COMDAT ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_BSS	SEGMENT
?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A DB 018H DUP (?) ; `CCC_Register'::`6'::xCCC_Disconnect
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_ioc_cmd.cpp
_BSS	ENDS
;	COMDAT ??0CCC_Disconnect@@QAE@PBD@Z
_TEXT	SEGMENT
??0CCC_Disconnect@@QAE@PBD@Z PROC			; CCC_Disconnect::CCC_Disconnect, COMDAT

; 368  : 	CCC_Disconnect(LPCSTR N) : IConsole_Command(N) { bEmptyArgsHandled = TRUE; };

	mov	ecx, OFFSET ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A+12
	mov	DWORD PTR ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A, OFFSET ??_7IConsole_Command@@6B@
	mov	DWORD PTR ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A+4, OFFSET ??_C@_0L@KKPFIJOL@disconnect?$AA@
	mov	BYTE PTR ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A+8, 1
	mov	BYTE PTR ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A+9, 1
	mov	BYTE PTR ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	mov	DWORD PTR ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A, OFFSET ??_7CCC_Disconnect@@6B@
	mov	BYTE PTR ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A+10, 1
	mov	eax, OFFSET ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A
	ret	0
??0CCC_Disconnect@@QAE@PBD@Z ENDP			; CCC_Disconnect::CCC_Disconnect
_TEXT	ENDS
;	COMDAT ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_BSS	SEGMENT
?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A DB 018H DUP (?) ; `CCC_Register'::`5'::xCCC_Start
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_ioc_cmd.cpp
_BSS	ENDS
;	COMDAT ??0CCC_Start@@QAE@PBD@Z
_TEXT	SEGMENT
??0CCC_Start@@QAE@PBD@Z PROC				; CCC_Start::CCC_Start, COMDAT

; 325  : 	CCC_Start(LPCSTR N) : IConsole_Command(N)	{ 	  bLowerCaseArgs = false; };

	mov	al, 1
	mov	ecx, OFFSET ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A+12
	mov	DWORD PTR ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A, OFFSET ??_7IConsole_Command@@6B@
	mov	DWORD PTR ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A+4, OFFSET ??_C@_05FAGFPHJG@start?$AA@
	mov	BYTE PTR ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A+8, al
	mov	BYTE PTR ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A+9, al
	mov	BYTE PTR ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	mov	DWORD PTR ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A, OFFSET ??_7CCC_Start@@6B@
	mov	BYTE PTR ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A+9, 0
	mov	eax, OFFSET ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A
	ret	0
??0CCC_Start@@QAE@PBD@Z ENDP				; CCC_Start::CCC_Start
_TEXT	ENDS
PUBLIC	??0CCC_LoadCFG@@QAE@PBD@Z			; CCC_LoadCFG::CCC_LoadCFG
; Function compile flags: /Ogtpy
;	COMDAT ??0CCC_LoadCFG@@QAE@PBD@Z
_TEXT	SEGMENT
_N$ = 8							; size = 4
??0CCC_LoadCFG@@QAE@PBD@Z PROC				; CCC_LoadCFG::CCC_LoadCFG, COMDAT
; _this$ = ecx

; 238  : {};

	mov	eax, DWORD PTR _N$[esp-4]
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR [esi+4], eax
	mov	al, 1
	lea	edi, DWORD PTR [esi+12]
	mov	ecx, edi
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	BYTE PTR [esi+8], al
	mov	BYTE PTR [esi+9], al
	mov	BYTE PTR [esi+10], 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, edi
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, edi
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	pop	edi
	mov	DWORD PTR [esi], OFFSET ??_7CCC_LoadCFG@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0CCC_LoadCFG@@QAE@PBD@Z ENDP				; CCC_LoadCFG::CCC_LoadCFG
_TEXT	ENDS
;	COMDAT ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_BSS	SEGMENT
?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A DB 018H DUP (?) ; `CCC_Register'::`7'::xCCC_SaveCFG
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_ioc_cmd.cpp
_BSS	ENDS
;	COMDAT ??0CCC_SaveCFG@@QAE@PBD@Z
_TEXT	SEGMENT
??0CCC_SaveCFG@@QAE@PBD@Z PROC				; CCC_SaveCFG::CCC_SaveCFG, COMDAT

; 207  : 	CCC_SaveCFG(LPCSTR N) : IConsole_Command(N) { bEmptyArgsHandled = TRUE; };

	mov	ecx, OFFSET ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A+12
	mov	DWORD PTR ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A, OFFSET ??_7IConsole_Command@@6B@
	mov	DWORD PTR ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A+4, OFFSET ??_C@_08KMELLGDM@cfg_save?$AA@
	mov	BYTE PTR ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A+8, 1
	mov	BYTE PTR ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A+9, 1
	mov	BYTE PTR ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	mov	DWORD PTR ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A, OFFSET ??_7CCC_SaveCFG@@6B@
	mov	BYTE PTR ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A+10, 1
	mov	eax, OFFSET ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A
	ret	0
??0CCC_SaveCFG@@QAE@PBD@Z ENDP				; CCC_SaveCFG::CCC_SaveCFG
_TEXT	ENDS
;	COMDAT ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_BSS	SEGMENT
?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A DB 018H DUP (?) ; `CCC_Register'::`3'::xCCC_Help
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_ioc_cmd.cpp
_BSS	ENDS
;	COMDAT ??0CCC_Help@@QAE@PBD@Z
_TEXT	SEGMENT
??0CCC_Help@@QAE@PBD@Z PROC				; CCC_Help::CCC_Help, COMDAT

; 157  : 	CCC_Help(LPCSTR N) : IConsole_Command(N) { bEmptyArgsHandled = TRUE; };

	mov	ecx, OFFSET ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A+12
	mov	DWORD PTR ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A, OFFSET ??_7IConsole_Command@@6B@
	mov	DWORD PTR ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A+4, OFFSET ??_C@_04PCJFHION@help?$AA@
	mov	BYTE PTR ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A+8, 1
	mov	BYTE PTR ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A+9, 1
	mov	BYTE PTR ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	mov	DWORD PTR ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A, OFFSET ??_7CCC_Help@@6B@
	mov	BYTE PTR ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A+10, 1
	mov	eax, OFFSET ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A
	ret	0
??0CCC_Help@@QAE@PBD@Z ENDP				; CCC_Help::CCC_Help
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Execute@CCC_Quit@@UAEXPBD@Z
_TEXT	SEGMENT
_E$523748 = -4						; size = 4
_E$523744 = -4						; size = 4
_args$ = 8						; size = 4
?Execute@CCC_Quit@@UAEXPBD@Z PROC			; CCC_Quit::Execute, COMDAT
; _this$ = ecx

; 61   : 	virtual void Execute(LPCSTR args) {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8

; 62   : //		TerminateProcess(GetCurrentProcess(),0);
; 63   : 		Console->Hide();

	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	push	esi
	push	edi
	call	?Hide@CConsole@@QAEXXZ			; CConsole::Hide

; 64   : 		Engine.Event.Defer("KERNEL:disconnect");

	mov	esi, DWORD PTR __imp_?Enter@xrCriticalSection@@QAEXXZ
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+60
	call	esi
	push	OFFSET ??_C@_0BC@DMJJJMJK@KERNEL?3disconnect?$AA@
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+36
	call	?Create@CEventAPI@@QAEPAVCEvent@@PBD@Z	; CEventAPI::Create
	push	0
	push	0
	push	0
	push	0
	push	eax
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+36
	mov	DWORD PTR _E$523744[esp+36], eax
	call	?Defer@CEventAPI@@QAEXPAVCEvent@@_K1@Z	; CEventAPI::Defer
	lea	eax, DWORD PTR _E$523744[esp+16]
	push	eax
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+36
	call	?Destroy@CEventAPI@@QAEXAAPAVCEvent@@@Z	; CEventAPI::Destroy
	mov	edi, DWORD PTR __imp_?Leave@xrCriticalSection@@QAEXXZ
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+60
	call	edi

; 65   : 		Engine.Event.Defer("KERNEL:quit");

	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+60
	call	esi
	push	OFFSET ??_C@_0M@BKEEDDOA@KERNEL?3quit?$AA@
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+36
	call	?Create@CEventAPI@@QAEPAVCEvent@@PBD@Z	; CEventAPI::Create
	push	0
	push	0
	push	0
	push	0
	push	eax
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+36
	mov	DWORD PTR _E$523748[esp+36], eax
	call	?Defer@CEventAPI@@QAEXPAVCEvent@@_K1@Z	; CEventAPI::Defer
	lea	ecx, DWORD PTR _E$523748[esp+16]
	push	ecx
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+36
	call	?Destroy@CEventAPI@@QAEXAAPAVCEvent@@@Z	; CEventAPI::Destroy
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+60
	call	edi

; 66   : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?Execute@CCC_Quit@@UAEXPBD@Z ENDP			; CCC_Quit::Execute
_TEXT	ENDS
;	COMDAT ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_BSS	SEGMENT
?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A DB 018H DUP (?) ; `CCC_Register'::`4'::xCCC_Quit
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_ioc_cmd.cpp
_BSS	ENDS
;	COMDAT ??0CCC_Quit@@QAE@PBD@Z
_TEXT	SEGMENT
??0CCC_Quit@@QAE@PBD@Z PROC				; CCC_Quit::CCC_Quit, COMDAT

; 60   : 	CCC_Quit(LPCSTR N) : IConsole_Command(N)  { bEmptyArgsHandled = TRUE; };

	mov	ecx, OFFSET ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A+12
	mov	DWORD PTR ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A, OFFSET ??_7IConsole_Command@@6B@
	mov	DWORD PTR ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A+4, OFFSET ??_C@_04KNNLNNGO@quit?$AA@
	mov	BYTE PTR ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A+8, 1
	mov	BYTE PTR ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A+9, 1
	mov	BYTE PTR ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	mov	DWORD PTR ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A, OFFSET ??_7CCC_Quit@@6B@
	mov	BYTE PTR ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A+10, 1
	mov	eax, OFFSET ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A
	ret	0
??0CCC_Quit@@QAE@PBD@Z ENDP				; CCC_Quit::CCC_Quit
;	COMDAT ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_BSS	SEGMENT
?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A DB 020H DUP (?) ; `CCC_Register'::`36'::xCCC_soundDevice
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_ioc_cmd.cpp
_BSS	ENDS
;	COMDAT ??0CCC_soundDevice@@QAE@PBD@Z
_TEXT	SEGMENT
??0CCC_soundDevice@@QAE@PBD@Z PROC			; CCC_soundDevice::CCC_soundDevice, COMDAT

; 576  : 	CCC_soundDevice(LPCSTR N) :inherited(N, &snd_device_id, NULL){};

	mov	al, 1
	push	esi
	mov	esi, DWORD PTR __imp_?snd_device_id@@3IA
	mov	ecx, OFFSET ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A+12
	mov	DWORD PTR ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A, OFFSET ??_7IConsole_Command@@6B@
	mov	DWORD PTR ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A+4, OFFSET ??_C@_0L@PEHIMOIC@snd_device?$AA@
	mov	BYTE PTR ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A+8, al
	mov	BYTE PTR ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A+9, al
	mov	BYTE PTR ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	mov	DWORD PTR ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A+24, esi
	mov	DWORD PTR ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A+28, 0
	mov	DWORD PTR ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A, OFFSET ??_7CCC_soundDevice@@6B@
	mov	eax, OFFSET ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A
	pop	esi
	ret	0
??0CCC_soundDevice@@QAE@PBD@Z ENDP			; CCC_soundDevice::CCC_soundDevice
_TEXT	ENDS
;	COMDAT ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_BSS	SEGMENT
?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A DB 020H DUP (?) ; `CCC_Register'::`35'::xCCC_r2
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_ioc_cmd.cpp
_BSS	ENDS
;	COMDAT ??0CCC_r2@@QAE@PBD@Z
_TEXT	SEGMENT
??0CCC_r2@@QAE@PBD@Z PROC				; CCC_r2::CCC_r2, COMDAT

; 531  : 	CCC_r2(LPCSTR N) :inherited(N, &renderer_value, NULL){renderer_value=3;};

	mov	al, 1
	mov	ecx, OFFSET ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A+12
	mov	DWORD PTR ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A, OFFSET ??_7IConsole_Command@@6B@
	mov	DWORD PTR ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A+4, OFFSET ??_C@_08NELFFGLM@renderer?$AA@
	mov	BYTE PTR ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A+8, al
	mov	BYTE PTR ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A+9, al
	mov	BYTE PTR ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	mov	DWORD PTR ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A+24, OFFSET ?renderer_value@@3IA ; renderer_value
	mov	DWORD PTR ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A+28, 0
	mov	DWORD PTR ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A, OFFSET ??_7CCC_r2@@6B@
	mov	DWORD PTR ?renderer_value@@3IA, 3	; renderer_value
	mov	eax, OFFSET ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A
	ret	0
??0CCC_r2@@QAE@PBD@Z ENDP				; CCC_r2::CCC_r2
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0CCC_Gamma@@QAE@PBDPAM@Z
_TEXT	SEGMENT
_V$ = 8							; size = 4
??0CCC_Gamma@@QAE@PBDPAM@Z PROC				; CCC_Gamma::CCC_Gamma, COMDAT
; _this$ = esi
; _N$ = eax

; 455  : 	CCC_Gamma	(LPCSTR N, float* V) : CCC_Float(N,V,0.5f,1.5f)	{}

	push	edi
	mov	DWORD PTR [esi+4], eax
	mov	al, 1
	lea	edi, DWORD PTR [esi+12]
	mov	ecx, edi
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	BYTE PTR [esi+8], al
	mov	BYTE PTR [esi+9], al
	mov	BYTE PTR [esi+10], 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, edi
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, edi
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	movss	xmm0, DWORD PTR __real@3f000000
	mov	ecx, DWORD PTR _V$[esp]
	movss	DWORD PTR [esi+28], xmm0
	movss	xmm0, DWORD PTR _fQuantizerRangeExt
	mov	DWORD PTR [esi+24], ecx
	movss	DWORD PTR [esi+32], xmm0
	mov	DWORD PTR [esi], OFFSET ??_7CCC_Gamma@@6B@
	mov	eax, esi
	pop	edi
	ret	4
??0CCC_Gamma@@QAE@PBDPAM@Z ENDP				; CCC_Gamma::CCC_Gamma
_TEXT	ENDS
;	COMDAT ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_BSS	SEGMENT
?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A DB 024H DUP (?) ; `CCC_Register'::`22'::xCCC_VidMode
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_ioc_cmd.cpp
_BSS	ENDS
;	COMDAT ??0CCC_VidMode@@QAE@PBD@Z
_TEXT	SEGMENT
??0CCC_VidMode@@QAE@PBD@Z PROC				; CCC_VidMode::CCC_VidMode, COMDAT

; 388  : 					CCC_VidMode(LPCSTR N) : CCC_Token(N, &_dummy, NULL) { bEmptyArgsHandled = FALSE; };

	mov	al, 1
	mov	ecx, OFFSET ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A+12
	mov	DWORD PTR ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A, OFFSET ??_7IConsole_Command@@6B@
	mov	DWORD PTR ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A+4, OFFSET ??_C@_08ICHJJAPN@vid_mode?$AA@
	mov	BYTE PTR ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A+8, al
	mov	BYTE PTR ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A+9, al
	mov	BYTE PTR ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	mov	DWORD PTR ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A+24, OFFSET ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A+32
	mov	DWORD PTR ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A+28, 0
	mov	DWORD PTR ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A, OFFSET ??_7CCC_VidMode@@6B@
	mov	BYTE PTR ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A+10, 0
	mov	eax, OFFSET ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A
	ret	0
??0CCC_VidMode@@QAE@PBD@Z ENDP				; CCC_VidMode::CCC_VidMode
_TEXT	ENDS
PUBLIC	??0CCC_LoadCFG_custom@@QAE@PBD@Z		; CCC_LoadCFG_custom::CCC_LoadCFG_custom
; Function compile flags: /Ogtpy
;	COMDAT ??0CCC_LoadCFG_custom@@QAE@PBD@Z
_TEXT	SEGMENT
_cmd$ = 8						; size = 4
??0CCC_LoadCFG_custom@@QAE@PBD@Z PROC			; CCC_LoadCFG_custom::CCC_LoadCFG_custom, COMDAT
; _this$ = ecx

; 277  : {

	push	ebx
	mov	ebx, DWORD PTR _cmd$[esp]
	push	esi
	mov	esi, ecx
	push	edi
	mov	al, 1
	lea	edi, DWORD PTR [esi+12]
	mov	ecx, edi
	mov	DWORD PTR [esi], OFFSET ??_7IConsole_Command@@6B@
	mov	DWORD PTR [esi+4], ebx
	mov	BYTE PTR [esi+8], al
	mov	BYTE PTR [esi+9], al
	mov	BYTE PTR [esi+10], 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, edi
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, edi
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free

; 278  : 	xr_strcpy(m_cmd, cmd);

	lea	eax, DWORD PTR [esi+24]
	push	ebx
	push	eax
	mov	DWORD PTR [esi], OFFSET ??_7CCC_LoadCFG_custom@@6B@
	call	??$xr_strcpy@$0EA@@@YAHAAY0EA@DPBD@Z	; xr_strcpy<64>
	add	esp, 8
	pop	edi

; 279  : };

	mov	eax, esi
	pop	esi
	pop	ebx
	ret	4
??0CCC_LoadCFG_custom@@QAE@PBD@Z ENDP			; CCC_LoadCFG_custom::CCC_LoadCFG_custom
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Execute@CCC_LoadCFG@@UAEXPBD@Z
_TEXT	SEGMENT
_F$ = -2068						; size = 4
_cfg_name$ = -2064					; size = 520
_cfg_full_name$ = -1544					; size = 520
_str$ = -1024						; size = 1024
_args$ = 8						; size = 4
?Execute@CCC_LoadCFG@@UAEXPBD@Z PROC			; CCC_LoadCFG::Execute, COMDAT
; _this$ = ecx

; 241  : {

	sub	esp, 2068				; 00000814H
	push	ebx
	push	ebp
	push	esi

; 242  : 		Msg("Executing config-script \"%s\"...",args);

	mov	esi, DWORD PTR _args$[esp+2076]
	push	esi
	push	OFFSET ??_C@_0CA@CPDPKIFK@Executing?5config?9script?5?$CC?$CFs?$CC?4?4?4?$AA@
	mov	ebp, ecx
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ

; 243  : 		string_path						cfg_name;
; 244  : 
; 245  : 		xr_strcpy							(cfg_name, args);

	mov	ebx, DWORD PTR __imp__strncpy_s
	push	520					; 00000208H
	push	esi
	lea	eax, DWORD PTR _cfg_name$[esp+2096]
	push	520					; 00000208H
	push	eax
	call	ebx

; 246  : 		if (strext(cfg_name))			*strext(cfg_name) = 0;

	mov	esi, DWORD PTR __imp__strrchr
	lea	ecx, DWORD PTR _cfg_name$[esp+2104]
	push	46					; 0000002eH
	push	ecx
	call	esi
	add	esp, 32					; 00000020H
	test	eax, eax
	je	SHORT $LN8@Execute@15
	lea	edx, DWORD PTR _cfg_name$[esp+2080]
	push	46					; 0000002eH
	push	edx
	call	esi
	add	esp, 8
	mov	BYTE PTR [eax], 0
$LN8@Execute@15:

; 247  : 		xr_strcat							(cfg_name,".ltx");

	lea	eax, DWORD PTR _cfg_name$[esp+2080]
	lea	edx, DWORD PTR [eax+1]
$LL46@Execute@15:
	mov	cl, BYTE PTR [eax]
	add	eax, 1
	test	cl, cl
	jne	SHORT $LL46@Execute@15
	sub	eax, edx
	lea	eax, DWORD PTR _cfg_name$[esp+eax+2080]
	lea	ecx, DWORD PTR _cfg_name$[esp+2599]
	cmp	eax, ecx
	ja	SHORT $LN25@Execute@15
	mov	ecx, OFFSET ??_C@_04ICMCOCEO@?4ltx?$AA@
	sub	ecx, eax
$LL23@Execute@15:
	lea	edx, DWORD PTR _cfg_name$[esp+2599]
	cmp	eax, edx
	je	SHORT $LN21@Execute@15
	mov	dl, BYTE PTR [ecx+eax]
	mov	BYTE PTR [eax], dl
	add	eax, 1
	cmp	BYTE PTR [ecx+eax], 0
	jne	SHORT $LL23@Execute@15
$LN21@Execute@15:
	mov	BYTE PTR [eax], 0
$LN25@Execute@15:

; 248  : 
; 249  : 		string_path						cfg_full_name;
; 250  : 
; 251  : 		FS.update_path					(cfg_full_name, "$app_data_root$", cfg_name);

	mov	edx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	esi, DWORD PTR __imp_?update_path@CLocatorAPI@@QAEPBDAAY0CAI@DPBD1@Z
	push	edi
	lea	eax, DWORD PTR _cfg_name$[esp+2084]
	push	eax
	push	OFFSET ??_C@_0BA@BDJNLMJI@$app_data_root$?$AA@
	lea	ecx, DWORD PTR _cfg_full_name$[esp+2092]
	push	ecx
	mov	ecx, DWORD PTR [edx]
	call	esi

; 252  : 		
; 253  : 		if( NULL == FS.exist(cfg_full_name) )

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [ecx]
	mov	edi, DWORD PTR __imp_?exist@CLocatorAPI@@QAEPBUfile@1@PBD@Z
	lea	eax, DWORD PTR _cfg_full_name$[esp+2084]
	push	eax
	call	edi
	test	eax, eax
	jne	SHORT $LN7@Execute@15

; 254  : 			FS.update_path					(cfg_full_name, "$fs_root$", cfg_name);

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [ecx]
	lea	edx, DWORD PTR _cfg_name$[esp+2084]
	push	edx
	push	OFFSET ??_C@_09BOCFEJAJ@$fs_root$?$AA@
	lea	eax, DWORD PTR _cfg_full_name$[esp+2092]
	push	eax
	call	esi
$LN7@Execute@15:

; 255  : 			
; 256  : 		if( NULL == FS.exist(cfg_full_name) )

	mov	eax, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR _cfg_full_name$[esp+2084]
	push	edx
	call	edi
	test	eax, eax
	pop	edi
	jne	SHORT $LN29@Execute@15

; 257  : 			xr_strcpy						(cfg_full_name, cfg_name);

	push	520					; 00000208H
	lea	ecx, DWORD PTR _cfg_name$[esp+2084]
	push	ecx
	lea	edx, DWORD PTR _cfg_full_name$[esp+2088]
	push	520					; 00000208H
	push	edx
	call	ebx
	add	esp, 16					; 00000010H
$LN29@Execute@15:

; 258  : 		
; 259  : 		IReader* F						= FS.r_open(cfg_full_name);

	mov	eax, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR _cfg_full_name$[esp+2080]
	push	edx
	push	0
	call	DWORD PTR __imp_?r_open@CLocatorAPI@@QAEPAVIReader@@PBD0@Z

; 260  : 		
; 261  : 		string1024						str;
; 262  : 		if (F!=NULL) {

	test	eax, eax
	mov	DWORD PTR _F$[esp+2080], eax
	je	$LN5@Execute@15

; 263  : 			while (!F->eof()) {

	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, DWORD PTR [eax+12]
	test	ecx, ecx
	jle	SHORT $LN3@Execute@15
	mov	esi, DWORD PTR __imp_?r_string@IReader@@QAEXPADI@Z
	npad	1
$LL4@Execute@15:

; 264  : 				F->r_string				(str,sizeof(str));

	push	1024					; 00000400H
	lea	edx, DWORD PTR _str$[esp+2084]
	push	edx
	mov	ecx, eax
	call	esi

; 265  : 				if(allow(str))

	mov	eax, DWORD PTR [ebp]
	mov	edx, DWORD PTR [eax+28]
	lea	ecx, DWORD PTR _str$[esp+2080]
	push	ecx
	mov	ecx, ebp
	call	edx
	test	al, al
	je	SHORT $LN41@Execute@15

; 266  : 					Console->Execute	(str);

	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	push	0
	lea	eax, DWORD PTR _str$[esp+2084]
	push	eax
	call	?ExecuteCommand@CConsole@@QAEXPBD_N@Z	; CConsole::ExecuteCommand
$LN41@Execute@15:
	mov	eax, DWORD PTR _F$[esp+2080]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, DWORD PTR [eax+12]
	test	ecx, ecx
	jg	SHORT $LL4@Execute@15
$LN3@Execute@15:

; 267  : 			}
; 268  : 			FS.r_close(F);

	mov	eax, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR _F$[esp+2080]
	push	edx
	call	DWORD PTR __imp_?r_close@CLocatorAPI@@QAEXAAPAVIReader@@@Z

; 269  : 			Msg("[%s] successfully loaded.",cfg_full_name);

	lea	ecx, DWORD PTR _cfg_full_name$[esp+2080]
	push	ecx
	push	OFFSET ??_C@_0BK@LKIFGDAB@?$FL?$CFs?$FN?5successfully?5loaded?4?$AA@

; 270  : 		} else {

	jmp	SHORT $LN47@Execute@15
$LN5@Execute@15:

; 271  : 			Msg("! Cannot open script file [%s]",cfg_full_name);

	lea	edx, DWORD PTR _cfg_full_name$[esp+2080]
	push	edx
	push	OFFSET ??_C@_0BP@MHIFGMEG@?$CB?5Cannot?5open?5script?5file?5?$FL?$CFs?$FN?$AA@
$LN47@Execute@15:
	call	DWORD PTR __imp_?Msg@@YAXPBDZZ
	add	esp, 8
	pop	esi
	pop	ebp
	pop	ebx

; 272  : 		}
; 273  : }

	add	esp, 2068				; 00000814H
	ret	4
?Execute@CCC_LoadCFG@@UAEXPBD@Z ENDP			; CCC_LoadCFG::Execute
PUBLIC	__real@3f19999a
PUBLIC	__real@3df5c28f
PUBLIC	?CCC_Register@@YAXXZ				; CCC_Register
;	COMDAT ?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A
; File d:\clearsky\sources\engine\xrengine\xr_ioc_cmd.h
_BSS	SEGMENT
?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A DB 018H DUP (?) ; `CCC_Register'::`42'::xCCC_HideConsole
_BSS	ENDS
;	COMDAT ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
_BSS	SEGMENT
?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A DB 024H DUP (?) ; `CCC_Register'::`41'::xCCC_Integer
_BSS	ENDS
;	COMDAT ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
_BSS	SEGMENT
?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A DB 024H DUP (?) ; `CCC_Register'::`40'::xCCC_Integer
_BSS	ENDS
;	COMDAT ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
_BSS	SEGMENT
?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A DB 024H DUP (?) ; `CCC_Register'::`38'::xCCC_Integer
_BSS	ENDS
;	COMDAT ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
_BSS	SEGMENT
?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A DB 024H DUP (?) ; `CCC_Register'::`37'::xCCC_Integer
_BSS	ENDS
;	COMDAT ?$S17@?CD@??CCC_Register@@YAXXZ@4IA
_BSS	SEGMENT
?$S17@?CD@??CCC_Register@@YAXXZ@4IA DD 01H DUP (?)	; `CCC_Register'::`35'::$S17
_BSS	ENDS
;	COMDAT ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A
_BSS	SEGMENT
?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A DB 024H DUP (?) ; `CCC_Register'::`34'::xCCC_Float
_BSS	ENDS
;	COMDAT ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A
_BSS	SEGMENT
?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A DB 024H DUP (?) ; `CCC_Register'::`33'::xCCC_Float
_BSS	ENDS
;	COMDAT ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A
_BSS	SEGMENT
?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A DB 024H DUP (?) ; `CCC_Register'::`32'::xCCC_Float
_BSS	ENDS
;	COMDAT ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A
_BSS	SEGMENT
?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A DB 020H DUP (?) ; `CCC_Register'::`31'::xCCC_Mask
_BSS	ENDS
;	COMDAT ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
_BSS	SEGMENT
?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A DB 024H DUP (?) ; `CCC_Register'::`30'::xCCC_Integer
_BSS	ENDS
;	COMDAT ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
_BSS	SEGMENT
?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A DB 024H DUP (?) ; `CCC_Register'::`29'::xCCC_Integer
_BSS	ENDS
;	COMDAT ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A
_BSS	SEGMENT
?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A DB 020H DUP (?) ; `CCC_Register'::`28'::xCCC_Mask
_BSS	ENDS
;	COMDAT ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A
_BSS	SEGMENT
?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A DB 020H DUP (?) ; `CCC_Register'::`27'::xCCC_Mask
_BSS	ENDS
;	COMDAT ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A
_BSS	SEGMENT
?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A DB 024H DUP (?) ; `CCC_Register'::`25'::xCCC_Float
_BSS	ENDS
;	COMDAT ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A
_BSS	SEGMENT
?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A DB 024H DUP (?) ; `CCC_Register'::`24'::xCCC_Float
_BSS	ENDS
;	COMDAT ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
_BSS	SEGMENT
?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A DB 024H DUP (?) ; `CCC_Register'::`21'::xCCC_Integer
_BSS	ENDS
;	COMDAT ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
_BSS	SEGMENT
?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A DB 024H DUP (?) ; `CCC_Register'::`20'::xCCC_Integer
_BSS	ENDS
;	COMDAT ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
_BSS	SEGMENT
?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A DB 024H DUP (?) ; `CCC_Register'::`19'::xCCC_Integer
_BSS	ENDS
;	COMDAT ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A
_BSS	SEGMENT
?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A DB 024H DUP (?) ; `CCC_Register'::`18'::xCCC_Gamma
_BSS	ENDS
;	COMDAT ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A
_BSS	SEGMENT
?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A DB 024H DUP (?) ; `CCC_Register'::`17'::xCCC_Gamma
_BSS	ENDS
;	COMDAT ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A
_BSS	SEGMENT
?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A DB 024H DUP (?) ; `CCC_Register'::`16'::xCCC_Gamma
_BSS	ENDS
;	COMDAT ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A
_BSS	SEGMENT
?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A DB 020H DUP (?) ; `CCC_Register'::`15'::xCCC_Mask
_BSS	ENDS
;	COMDAT ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A
_BSS	SEGMENT
?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A DB 024H DUP (?) ; `CCC_Register'::`14'::xCCC_Float
_BSS	ENDS
;	COMDAT ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A
_BSS	SEGMENT
?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A DB 020H DUP (?) ; `CCC_Register'::`13'::xCCC_Mask
_BSS	ENDS
;	COMDAT ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A
_BSS	SEGMENT
?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A DB 020H DUP (?) ; `CCC_Register'::`12'::xCCC_Mask
_BSS	ENDS
;	COMDAT ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A
_BSS	SEGMENT
?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A DB 020H DUP (?) ; `CCC_Register'::`11'::xCCC_Mask
_BSS	ENDS
;	COMDAT ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A
_BSS	SEGMENT
?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A DB 020H DUP (?) ; `CCC_Register'::`10'::xCCC_Mask
_BSS	ENDS
;	COMDAT ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A
_BSS	SEGMENT
?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A DB 024H DUP (?) ; `CCC_Register'::`9'::xCCC_Integer
_BSS	ENDS
;	COMDAT ?xCCC_LoadCFG@?7??CCC_Register@@YAXXZ@4VCCC_LoadCFG@@A
_BSS	SEGMENT
?xCCC_LoadCFG@?7??CCC_Register@@YAXXZ@4VCCC_LoadCFG@@A DB 018H DUP (?) ; `CCC_Register'::`8'::xCCC_LoadCFG
_BSS	ENDS
;	COMDAT ?$S16@?2??CCC_Register@@YAXXZ@4IA
_BSS	SEGMENT
?$S16@?2??CCC_Register@@YAXXZ@4IA DD 01H DUP (?)	; `CCC_Register'::`3'::$S16
_BSS	ENDS
;	COMDAT __real@3f19999a
CONST	SEGMENT
__real@3f19999a DD 03f19999ar			; 0.6
CONST	ENDS
;	COMDAT __real@3df5c28f
CONST	SEGMENT
__real@3df5c28f DD 03df5c28fr			; 0.12
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_ioc_cmd.cpp
CONST	ENDS
;	COMDAT ?CCC_Register@@YAXXZ
_TEXT	SEGMENT
$T551129 = -4						; size = 4
$T551074 = -4						; size = 4
$T551019 = -4						; size = 4
$T550964 = -4						; size = 4
$T550952 = -4						; size = 4
$T550898 = -4						; size = 4
$T550836 = -4						; size = 4
$T550824 = -4						; size = 4
$T550812 = -4						; size = 4
$T550757 = -4						; size = 4
$T550702 = -4						; size = 4
$T550647 = -4						; size = 4
$T550592 = -4						; size = 4
$T550536 = -4						; size = 4
$T550480 = -4						; size = 4
$T550368 = -4						; size = 4
$T550424 = -4						; size = 4
$T550300 = -4						; size = 4
$T550356 = -4						; size = 4
$T550244 = -4						; size = 4
$T550232 = -4						; size = 4
$T550220 = -4						; size = 4
$T550164 = -4						; size = 4
$T550109 = -4						; size = 4
$T550054 = -4						; size = 4
$T549992 = -4						; size = 4
$T549869 = -4						; size = 4
$T549930 = -4						; size = 4
$T549814 = -4						; size = 4
$T549759 = -4						; size = 4
$T549704 = -4						; size = 4
$T549649 = -4						; size = 4
$T549594 = -4						; size = 4
$T549539 = -4						; size = 4
$T549484 = -4						; size = 4
$T549429 = -4						; size = 4
$T549417 = -4						; size = 4
$T549405 = -4						; size = 4
$T549393 = -4						; size = 4
$T549381 = -4						; size = 4
?CCC_Register@@YAXXZ PROC				; CCC_Register, COMDAT

; 685  : {

	push	ecx
	push	ebx
	push	ebp

; 686  : 	// General
; 687  : 	CMD1(CCC_Help,		"help"					);

	mov	ebx, 1
	test	BYTE PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, bl
	push	esi
	push	edi
	jne	SHORT $LN40@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, ebx
	call	??0CCC_Help@@QAE@PBD@Z			; CCC_Help::CCC_Help
	push	OFFSET ??__FxCCC_Help@?2??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`3'::`dynamic atexit destructor for 'xCCC_Help''
	call	_atexit
	add	esp, 4
$LN40@CCC_Regist:
	mov	eax, DWORD PTR ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A+4
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	DWORD PTR $T549381[esp+20], eax
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T549381[esp+20]
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>

; 688  : 	CMD1(CCC_Quit,		"quit"					);

	test	BYTE PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, 2
	mov	DWORD PTR [eax], OFFSET ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A
	jne	SHORT $LN39@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, 2
	call	??0CCC_Quit@@QAE@PBD@Z			; CCC_Quit::CCC_Quit
	push	OFFSET ??__FxCCC_Quit@?3??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`4'::`dynamic atexit destructor for 'xCCC_Quit''
	call	_atexit
	add	esp, 4
$LN39@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	ecx, DWORD PTR ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T549393[esp+20]
	mov	DWORD PTR $T549393[esp+20], ecx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>

; 689  : 	CMD1(CCC_Start,		"start"					);

	test	BYTE PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, 4
	mov	DWORD PTR [eax], OFFSET ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A
	jne	SHORT $LN38@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, 4
	call	??0CCC_Start@@QAE@PBD@Z			; CCC_Start::CCC_Start
	push	OFFSET ??__FxCCC_Start@?4??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`5'::`dynamic atexit destructor for 'xCCC_Start''
	call	_atexit
	add	esp, 4
$LN38@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	edx, DWORD PTR ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T549405[esp+20]
	mov	DWORD PTR $T549405[esp+20], edx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>

; 690  : 	CMD1(CCC_Disconnect,"disconnect"			);

	test	BYTE PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, 8
	mov	DWORD PTR [eax], OFFSET ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A
	jne	SHORT $LN37@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, 8
	call	??0CCC_Disconnect@@QAE@PBD@Z		; CCC_Disconnect::CCC_Disconnect
	push	OFFSET ??__FxCCC_Disconnect@?5??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`6'::`dynamic atexit destructor for 'xCCC_Disconnect''
	call	_atexit
	add	esp, 4
$LN37@CCC_Regist:
	mov	eax, DWORD PTR ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A+4
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	DWORD PTR $T549417[esp+20], eax
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T549417[esp+20]
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>

; 691  : 	CMD1(CCC_SaveCFG,	"cfg_save"				);

	test	BYTE PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, 16 ; 00000010H
	mov	DWORD PTR [eax], OFFSET ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A
	jne	SHORT $LN36@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, 16 ; 00000010H
	call	??0CCC_SaveCFG@@QAE@PBD@Z		; CCC_SaveCFG::CCC_SaveCFG
	push	OFFSET ??__FxCCC_SaveCFG@?6??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`7'::`dynamic atexit destructor for 'xCCC_SaveCFG''
	call	_atexit
	add	esp, 4
$LN36@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	ecx, DWORD PTR ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T549429[esp+20]
	mov	DWORD PTR $T549429[esp+20], ecx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>

; 692  : 	CMD1(CCC_LoadCFG,	"cfg_load"				);

	test	BYTE PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, 32 ; 00000020H
	mov	DWORD PTR [eax], OFFSET ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A
	mov	esi, OFFSET ??_7IConsole_Command@@6B@
	jne	SHORT $LN35@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, 32 ; 00000020H
	mov	ecx, OFFSET ?xCCC_LoadCFG@?7??CCC_Register@@YAXXZ@4VCCC_LoadCFG@@A+12
	mov	DWORD PTR ?xCCC_LoadCFG@?7??CCC_Register@@YAXXZ@4VCCC_LoadCFG@@A, esi
	mov	DWORD PTR ?xCCC_LoadCFG@?7??CCC_Register@@YAXXZ@4VCCC_LoadCFG@@A+4, OFFSET ??_C@_08KOFGEFOI@cfg_load?$AA@
	mov	BYTE PTR ?xCCC_LoadCFG@?7??CCC_Register@@YAXXZ@4VCCC_LoadCFG@@A+8, bl
	mov	BYTE PTR ?xCCC_LoadCFG@?7??CCC_Register@@YAXXZ@4VCCC_LoadCFG@@A+9, bl
	mov	BYTE PTR ?xCCC_LoadCFG@?7??CCC_Register@@YAXXZ@4VCCC_LoadCFG@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_LoadCFG@?7??CCC_Register@@YAXXZ@4VCCC_LoadCFG@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_LoadCFG@?7??CCC_Register@@YAXXZ@4VCCC_LoadCFG@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	push	OFFSET ??__FxCCC_LoadCFG@?7??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`8'::`dynamic atexit destructor for 'xCCC_LoadCFG''
	mov	DWORD PTR ?xCCC_LoadCFG@?7??CCC_Register@@YAXXZ@4VCCC_LoadCFG@@A, OFFSET ??_7CCC_LoadCFG@@6B@
	call	_atexit
	add	esp, 4
$LN35@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	edx, DWORD PTR ?xCCC_LoadCFG@?7??CCC_Register@@YAXXZ@4VCCC_LoadCFG@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T549484[esp+20]
	mov	DWORD PTR $T549484[esp+20], edx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>

; 693  : 
; 694  : #ifdef DEBUG
; 695  : 	CMD1(CCC_MotionsStat,	"stat_motions"		);
; 696  : 	CMD1(CCC_TexturesStat,	"stat_textures"		);
; 697  : #endif // DEBUG
; 698  : 
; 699  : #ifdef DEBUG_MEMORY_MANAGER
; 700  : 	CMD1(CCC_MemStat,		"dbg_mem_dump"		);
; 701  : 	CMD1(CCC_DbgMemCheck,	"dbg_mem_check"		);
; 702  : #endif // DEBUG_MEMORY_MANAGER
; 703  : 
; 704  : #ifdef DEBUG
; 705  : 	CMD3(CCC_Mask,		"mt_particles",			&psDeviceFlags,			mtParticles);
; 706  : 
; 707  : 	CMD1(CCC_DbgStrCheck,	"dbg_str_check"		);
; 708  : 	CMD1(CCC_DbgStrDump,	"dbg_str_dump"		);
; 709  : 
; 710  : 	CMD3(CCC_Mask,		"mt_sound",				&psDeviceFlags,			mtSound);
; 711  : 	CMD3(CCC_Mask,		"mt_physics",			&psDeviceFlags,			mtPhysics);
; 712  : 	CMD3(CCC_Mask,		"mt_network",			&psDeviceFlags,			mtNetwork);
; 713  : 	
; 714  : 	// Events
; 715  : 	CMD1(CCC_E_Dump,	"e_list"				);
; 716  : 	CMD1(CCC_E_Signal,	"e_signal"				);
; 717  : 
; 718  : 	CMD3(CCC_Mask,		"rs_wireframe",			&psDeviceFlags,		rsWireframe);
; 719  : 	CMD3(CCC_Mask,		"rs_clear_bb",			&psDeviceFlags,		rsClearBB);
; 720  : 	CMD3(CCC_Mask,		"rs_occlusion",			&psDeviceFlags,		rsOcclusion);
; 721  : 
; 722  : 	CMD3(CCC_Mask,		"rs_detail",			&psDeviceFlags,		rsDetails	);
; 723  : 	//CMD4(CCC_Float,		"r__dtex_range",		&r__dtex_range,		5,		175	);
; 724  : 
; 725  : //	CMD3(CCC_Mask,		"rs_constant_fps",		&psDeviceFlags,		rsConstantFPS			);
; 726  : 	CMD3(CCC_Mask,		"rs_render_statics",	&psDeviceFlags,		rsDrawStatic			);
; 727  : 	CMD3(CCC_Mask,		"rs_render_dynamics",	&psDeviceFlags,		rsDrawDynamic			);
; 728  : #endif
; 729  : 
; 730  : 	// Render device states
; 731  : 	CMD4(CCC_Integer,	"r__supersample",		&ps_r__Supersample,			1,		4		);

	test	BYTE PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, 64 ; 00000040H
	mov	DWORD PTR [eax], OFFSET ?xCCC_LoadCFG@?7??CCC_Register@@YAXXZ@4VCCC_LoadCFG@@A
	jne	SHORT $LN34@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, 64 ; 00000040H
	mov	ecx, OFFSET ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	DWORD PTR ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A, esi
	mov	DWORD PTR ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4, OFFSET ??_C@_0P@EGAINIKO@r__supersample?$AA@
	mov	BYTE PTR ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A+8, bl
	mov	BYTE PTR ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A+9, bl
	mov	BYTE PTR ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	push	OFFSET ??__FxCCC_Integer@?8??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`9'::`dynamic atexit destructor for 'xCCC_Integer''
	mov	DWORD PTR ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A, OFFSET ??_7CCC_Integer@@6B@
	mov	DWORD PTR ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A+24, OFFSET ?ps_r__Supersample@@3HA ; ps_r__Supersample
	mov	DWORD PTR ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A+28, ebx
	mov	DWORD PTR ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A+32, 4
	call	_atexit
	add	esp, 4
$LN34@CCC_Regist:
	mov	eax, DWORD PTR ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	DWORD PTR $T549539[esp+20], eax
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T549539[esp+20]
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>

; 732  : 
; 733  : 
; 734  : 	CMD3(CCC_Mask,		"rs_v_sync",			&psDeviceFlags,		rsVSync				);

	test	BYTE PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, 128 ; 00000080H
	mov	DWORD PTR [eax], OFFSET ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A
	mov	ebp, OFFSET ?psDeviceFlags@@3U?$_flags@I@@A ; psDeviceFlags
	jne	SHORT $LN33@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, 128 ; 00000080H
	mov	ecx, OFFSET ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	mov	DWORD PTR ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A, esi
	mov	DWORD PTR ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A+4, OFFSET ??_C@_09HNFNCICC@rs_v_sync?$AA@
	mov	BYTE PTR ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A+8, bl
	mov	BYTE PTR ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A+9, bl
	mov	BYTE PTR ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	push	OFFSET ??__FxCCC_Mask@?9??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`10'::`dynamic atexit destructor for 'xCCC_Mask''
	mov	DWORD PTR ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A, OFFSET ??_7CCC_Mask@@6B@
	mov	DWORD PTR ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A+24, ebp
	mov	DWORD PTR ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A+28, 4
	call	_atexit
	add	esp, 4
$LN33@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	ecx, DWORD PTR ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T549594[esp+20]
	mov	DWORD PTR $T549594[esp+20], ecx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A

; 735  : //	CMD3(CCC_Mask,		"rs_disable_objects_as_crows",&psDeviceFlags,	rsDisableObjectsAsCrows	);
; 736  : 	CMD3(CCC_Mask,		"rs_fullscreen",		&psDeviceFlags,		rsFullscreen			);

	mov	eax, 256				; 00000100H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	SHORT $LN32@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	ecx, OFFSET ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	mov	DWORD PTR ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, esi
	mov	DWORD PTR ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+4, OFFSET ??_C@_0O@JAOOLNDK@rs_fullscreen?$AA@
	mov	BYTE PTR ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+8, bl
	mov	BYTE PTR ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+9, bl
	mov	BYTE PTR ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	push	OFFSET ??__FxCCC_Mask@?L@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`11'::`dynamic atexit destructor for 'xCCC_Mask''
	mov	DWORD PTR ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, OFFSET ??_7CCC_Mask@@6B@
	mov	DWORD PTR ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+24, ebp
	mov	DWORD PTR ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+28, ebx
	call	_atexit
	add	esp, 4
$LN32@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	edx, DWORD PTR ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T549649[esp+20]
	mov	DWORD PTR $T549649[esp+20], edx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A

; 737  : 	CMD3(CCC_Mask,		"rs_refresh_60hz",		&psDeviceFlags,		rsRefresh60hz			);

	mov	eax, 512				; 00000200H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	SHORT $LN31@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	ecx, OFFSET ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	mov	DWORD PTR ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, esi
	mov	DWORD PTR ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+4, OFFSET ??_C@_0BA@DBEMGCDM@rs_refresh_60hz?$AA@
	mov	BYTE PTR ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+8, bl
	mov	BYTE PTR ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+9, bl
	mov	BYTE PTR ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	push	OFFSET ??__FxCCC_Mask@?M@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`12'::`dynamic atexit destructor for 'xCCC_Mask''
	mov	DWORD PTR ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, OFFSET ??_7CCC_Mask@@6B@
	mov	DWORD PTR ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+24, ebp
	mov	DWORD PTR ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+28, 128 ; 00000080H
	call	_atexit
	add	esp, 4
$LN31@CCC_Regist:
	mov	eax, DWORD PTR ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+4
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	DWORD PTR $T549704[esp+20], eax
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T549704[esp+20]
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A

; 738  : 	CMD3(CCC_Mask,		"rs_stats",				&psDeviceFlags,		rsStatistic				);

	mov	eax, 1024				; 00000400H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	SHORT $LN30@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	ecx, OFFSET ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	mov	DWORD PTR ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, esi
	mov	DWORD PTR ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+4, OFFSET ??_C@_08GFHFEMJA@rs_stats?$AA@
	mov	BYTE PTR ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+8, bl
	mov	BYTE PTR ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+9, bl
	mov	BYTE PTR ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	push	OFFSET ??__FxCCC_Mask@?N@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`13'::`dynamic atexit destructor for 'xCCC_Mask''
	mov	DWORD PTR ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, OFFSET ??_7CCC_Mask@@6B@
	mov	DWORD PTR ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+24, ebp
	mov	DWORD PTR ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+28, 32 ; 00000020H
	call	_atexit
	add	esp, 4
$LN30@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	ecx, DWORD PTR ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T549759[esp+20]
	mov	DWORD PTR $T549759[esp+20], ecx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A

; 739  : 	CMD4(CCC_Float,		"rs_vis_distance",		&psVisDistance,		0.4f,	1.5f			);

	mov	eax, 2048				; 00000800H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	$LN29@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	ecx, OFFSET ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	mov	DWORD PTR ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A, esi
	mov	DWORD PTR ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A+4, OFFSET ??_C@_0BA@DKBCLJG@rs_vis_distance?$AA@
	mov	BYTE PTR ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A+8, bl
	mov	BYTE PTR ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A+9, bl
	mov	BYTE PTR ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	movss	xmm0, DWORD PTR __real@3ecccccd
	movss	DWORD PTR ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A+28, xmm0
	movss	xmm0, DWORD PTR _fQuantizerRangeExt
	push	OFFSET ??__FxCCC_Float@?O@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`14'::`dynamic atexit destructor for 'xCCC_Float''
	mov	DWORD PTR ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A, OFFSET ??_7CCC_Float@@6B@
	mov	DWORD PTR ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A+24, OFFSET ?psVisDistance@@3MA ; psVisDistance
	movss	DWORD PTR ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A+32, xmm0
	call	_atexit
	add	esp, 4
$LN29@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	edx, DWORD PTR ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T549814[esp+20]
	mov	DWORD PTR $T549814[esp+20], edx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A

; 740  : 
; 741  : 	CMD3(CCC_Mask,		"rs_cam_pos",			&psDeviceFlags,		rsCameraPos				);

	mov	eax, 4096				; 00001000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	SHORT $LN28@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	ecx, OFFSET ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	mov	DWORD PTR ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, esi
	mov	DWORD PTR ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+4, OFFSET ??_C@_0L@NDIJLHDO@rs_cam_pos?$AA@
	mov	BYTE PTR ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+8, bl
	mov	BYTE PTR ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+9, bl
	mov	BYTE PTR ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	push	OFFSET ??__FxCCC_Mask@?P@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`15'::`dynamic atexit destructor for 'xCCC_Mask''
	mov	DWORD PTR ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, OFFSET ??_7CCC_Mask@@6B@
	mov	DWORD PTR ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+24, ebp
	mov	DWORD PTR ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+28, 262144 ; 00040000H
	call	_atexit
	add	esp, 4
$LN28@CCC_Regist:
	mov	eax, DWORD PTR ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+4
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	DWORD PTR $T549869[esp+20], eax
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T549869[esp+20]
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A

; 742  : #ifdef DEBUG
; 743  : 	CMD3(CCC_Mask,		"rs_occ_draw",			&psDeviceFlags,		rsOcclusionDraw			);
; 744  : 	CMD3(CCC_Mask,		"rs_occ_stats",			&psDeviceFlags,		rsOcclusionStats		);
; 745  : 	//CMD4(CCC_Integer,	"rs_skeleton_update",	&psSkeletonUpdate,	2,		128	);
; 746  : #endif // DEBUG
; 747  : 
; 748  : 	CMD2(CCC_Gamma,		"rs_c_gamma"			,&ps_gamma			);

	mov	eax, 8192				; 00002000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	ebp, OFFSET ??_7CCC_Gamma@@6B@
	jne	$LN27@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	ecx, OFFSET ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+12
	mov	DWORD PTR ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A, esi
	mov	DWORD PTR ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+4, OFFSET ??_C@_0L@ENFMGHEP@rs_c_gamma?$AA@
	mov	BYTE PTR ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+8, bl
	mov	BYTE PTR ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+9, bl
	mov	BYTE PTR ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+28, xmm0
	movss	xmm0, DWORD PTR _fQuantizerRangeExt
	push	OFFSET ??__FxCCC_Gamma@?BA@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`16'::`dynamic atexit destructor for 'xCCC_Gamma''
	mov	DWORD PTR ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+24, OFFSET ?ps_gamma@@3MA ; ps_gamma
	movss	DWORD PTR ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+32, xmm0
	mov	DWORD PTR ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A, ebp
	call	_atexit
	add	esp, 4
$LN27@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	ecx, DWORD PTR ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T549930[esp+20]
	mov	DWORD PTR $T549930[esp+20], ecx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A

; 749  : 	CMD2(CCC_Gamma,		"rs_c_brightness"		,&ps_brightness		);

	mov	eax, 16384				; 00004000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	$LN26@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	ecx, OFFSET ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+12
	mov	DWORD PTR ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A, esi
	mov	DWORD PTR ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+4, OFFSET ??_C@_0BA@FALFAFPG@rs_c_brightness?$AA@
	mov	BYTE PTR ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+8, bl
	mov	BYTE PTR ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+9, bl
	mov	BYTE PTR ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+28, xmm0
	movss	xmm0, DWORD PTR _fQuantizerRangeExt
	push	OFFSET ??__FxCCC_Gamma@?BB@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`17'::`dynamic atexit destructor for 'xCCC_Gamma''
	mov	DWORD PTR ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+24, OFFSET ?ps_brightness@@3MA ; ps_brightness
	movss	DWORD PTR ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+32, xmm0
	mov	DWORD PTR ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A, ebp
	call	_atexit
	add	esp, 4
$LN26@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	edx, DWORD PTR ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T549992[esp+20]
	mov	DWORD PTR $T549992[esp+20], edx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A

; 750  : 	CMD2(CCC_Gamma,		"rs_c_contrast"			,&ps_contrast		);

	mov	eax, 32768				; 00008000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	$LN25@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	ecx, OFFSET ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+12
	mov	DWORD PTR ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A, esi
	mov	DWORD PTR ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+4, OFFSET ??_C@_0O@NHMODHDA@rs_c_contrast?$AA@
	mov	BYTE PTR ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+8, bl
	mov	BYTE PTR ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+9, bl
	mov	BYTE PTR ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+28, xmm0
	movss	xmm0, DWORD PTR _fQuantizerRangeExt
	push	OFFSET ??__FxCCC_Gamma@?BC@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`18'::`dynamic atexit destructor for 'xCCC_Gamma''
	mov	DWORD PTR ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+24, OFFSET ?ps_contrast@@3MA ; ps_contrast
	movss	DWORD PTR ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+32, xmm0
	mov	DWORD PTR ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A, ebp
	call	_atexit
	add	esp, 4
$LN25@CCC_Regist:
	mov	eax, DWORD PTR ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+4
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	DWORD PTR $T550054[esp+20], eax
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550054[esp+20]
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A

; 751  : //	CMD4(CCC_Integer,	"rs_vb_size",			&rsDVB_Size,		32,		4096);
; 752  : //	CMD4(CCC_Integer,	"rs_ib_size",			&rsDIB_Size,		32,		4096);
; 753  : 
; 754  : 	// Texture manager	
; 755  : 	CMD4(CCC_Integer,	"texture_lod",			&psTextureLOD,				0,	4	);

	mov	eax, 65536				; 00010000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	$LN1526@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	ecx, OFFSET ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	DWORD PTR ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, esi
	mov	DWORD PTR ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4, OFFSET ??_C@_0M@IEODBMNE@texture_lod?$AA@
	mov	BYTE PTR ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+8, bl
	mov	BYTE PTR ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+9, bl
	mov	BYTE PTR ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	mov	ebp, OFFSET ??_7CCC_Integer@@6B@
	push	OFFSET ??__FxCCC_Integer@?BD@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`19'::`dynamic atexit destructor for 'xCCC_Integer''
	mov	DWORD PTR ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, ebp
	mov	DWORD PTR ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+24, OFFSET ?psTextureLOD@@3HA ; psTextureLOD
	mov	DWORD PTR ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+28, 0
	mov	DWORD PTR ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+32, 4
	call	_atexit
	add	esp, 4
	jmp	SHORT $LN24@CCC_Regist
$LN1526@CCC_Regist:
	mov	ebp, OFFSET ??_7CCC_Integer@@6B@
$LN24@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	ecx, DWORD PTR ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550109[esp+20]
	mov	DWORD PTR $T550109[esp+20], ecx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A

; 756  : 	CMD4(CCC_Integer,	"net_dedicated_sleep",	&psNET_DedicatedSleep,		0,	64	);

	mov	eax, 131072				; 00020000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	SHORT $LN23@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	ecx, OFFSET ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	DWORD PTR ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, esi
	mov	DWORD PTR ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4, OFFSET ??_C@_0BE@EHAIBNEJ@net_dedicated_sleep?$AA@
	mov	BYTE PTR ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+8, bl
	mov	BYTE PTR ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+9, bl
	mov	BYTE PTR ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	push	OFFSET ??__FxCCC_Integer@?BE@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`20'::`dynamic atexit destructor for 'xCCC_Integer''
	mov	DWORD PTR ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, ebp
	mov	DWORD PTR ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+24, OFFSET ?psNET_DedicatedSleep@@3HA ; psNET_DedicatedSleep
	mov	DWORD PTR ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+28, 0
	mov	DWORD PTR ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+32, 64 ; 00000040H
	call	_atexit
	add	esp, 4
$LN23@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	edx, DWORD PTR ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550164[esp+20]
	mov	DWORD PTR $T550164[esp+20], edx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A

; 757  : 
; 758  : 	// Temp particle optimization
; 759  : 	CMD4(CCC_Integer,	"particle_level",		&nParticleLevel,			0,	4	);

	mov	eax, 262144				; 00040000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	SHORT $LN22@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	ecx, OFFSET ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	DWORD PTR ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, esi
	mov	DWORD PTR ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4, OFFSET ??_C@_0P@MDCKIMGM@particle_level?$AA@
	mov	BYTE PTR ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+8, bl
	mov	BYTE PTR ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+9, bl
	mov	BYTE PTR ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	push	OFFSET ??__FxCCC_Integer@?BF@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`21'::`dynamic atexit destructor for 'xCCC_Integer''
	mov	DWORD PTR ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, ebp
	mov	DWORD PTR ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+24, OFFSET ?nParticleLevel@@3HA ; nParticleLevel
	mov	DWORD PTR ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+28, 0
	mov	DWORD PTR ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+32, 4
	call	_atexit
	add	esp, 4
$LN22@CCC_Regist:
	mov	eax, DWORD PTR ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	DWORD PTR $T550220[esp+20], eax
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550220[esp+20]
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A

; 760  : 
; 761  : 	// General video control
; 762  : 	CMD1(CCC_VidMode,	"vid_mode"				);

	mov	eax, 524288				; 00080000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	SHORT $LN21@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	call	??0CCC_VidMode@@QAE@PBD@Z		; CCC_VidMode::CCC_VidMode
	push	OFFSET ??__FxCCC_VidMode@?BG@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`22'::`dynamic atexit destructor for 'xCCC_VidMode''
	call	_atexit
	add	esp, 4
$LN21@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	ecx, DWORD PTR ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550232[esp+20]
	mov	DWORD PTR $T550232[esp+20], ecx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A

; 763  : 
; 764  : #ifdef DEBUG
; 765  : 	CMD3(CCC_Token,		"vid_bpp",				&psCurrentBPP,	vid_bpp_token );
; 766  : #endif // DEBUG
; 767  : 
; 768  : 	CMD1(CCC_VID_Reset, "vid_restart"			);

	mov	eax, 1048576				; 00100000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	SHORT $LN20@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	call	??0CCC_VID_Reset@@QAE@PBD@Z		; CCC_VID_Reset::CCC_VID_Reset
	push	OFFSET ??__FxCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`23'::`dynamic atexit destructor for 'xCCC_VID_Reset''
	call	_atexit
	add	esp, 4
$LN20@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	edx, DWORD PTR ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550244[esp+20]
	mov	DWORD PTR $T550244[esp+20], edx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A

; 769  : 	
; 770  : 	// Sound
; 771  : 	CMD2(CCC_Float,		"snd_volume_eff",		&psSoundVEffects);

	mov	eax, 2097152				; 00200000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	$LN19@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	edi, DWORD PTR __imp_?psSoundVEffects@@3MA
	mov	ecx, OFFSET ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	mov	DWORD PTR ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A, esi
	mov	DWORD PTR ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A+4, OFFSET ??_C@_0P@OLGMFOIM@snd_volume_eff?$AA@
	mov	BYTE PTR ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A+8, bl
	mov	BYTE PTR ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A+9, bl
	mov	BYTE PTR ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	xorps	xmm0, xmm0
	movss	DWORD PTR ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A+28, xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	push	OFFSET ??__FxCCC_Float@?BI@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`24'::`dynamic atexit destructor for 'xCCC_Float''
	mov	DWORD PTR ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A, OFFSET ??_7CCC_Float@@6B@
	mov	DWORD PTR ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A+24, edi
	movss	DWORD PTR ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A+32, xmm0
	call	_atexit
	add	esp, 4
$LN19@CCC_Regist:
	mov	eax, DWORD PTR ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A+4
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	DWORD PTR $T550300[esp+20], eax
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550300[esp+20]
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A

; 772  : 	CMD2(CCC_Float,		"snd_volume_music",		&psSoundVMusic);

	mov	eax, 4194304				; 00400000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	$LN18@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	edi, DWORD PTR __imp_?psSoundVMusic@@3MA
	mov	ecx, OFFSET ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	mov	DWORD PTR ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A, esi
	mov	DWORD PTR ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A+4, OFFSET ??_C@_0BB@LOOHEAIB@snd_volume_music?$AA@
	mov	BYTE PTR ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A+8, bl
	mov	BYTE PTR ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A+9, bl
	mov	BYTE PTR ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	xorps	xmm0, xmm0
	movss	DWORD PTR ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A+28, xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	push	OFFSET ??__FxCCC_Float@?BJ@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`25'::`dynamic atexit destructor for 'xCCC_Float''
	mov	DWORD PTR ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A, OFFSET ??_7CCC_Float@@6B@
	mov	DWORD PTR ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A+24, edi
	movss	DWORD PTR ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A+32, xmm0
	call	_atexit
	add	esp, 4
$LN18@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	ecx, DWORD PTR ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550356[esp+20]
	mov	DWORD PTR $T550356[esp+20], ecx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A

; 773  : 	CMD1(CCC_SND_Restart,"snd_restart"			);

	mov	eax, 8388608				; 00800000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	SHORT $LN17@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	call	??0CCC_SND_Restart@@QAE@PBD@Z		; CCC_SND_Restart::CCC_SND_Restart
	push	OFFSET ??__FxCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`26'::`dynamic atexit destructor for 'xCCC_SND_Restart''
	call	_atexit
	add	esp, 4
$LN17@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	edx, DWORD PTR ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550368[esp+20]
	mov	DWORD PTR $T550368[esp+20], edx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A

; 774  : 	CMD3(CCC_Mask,		"snd_acceleration",		&psSoundFlags,		ss_Hardware	);

	mov	eax, 16777216				; 01000000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	SHORT $LN1531@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	edi, DWORD PTR __imp_?psSoundFlags@@3U?$_flags@I@@A
	mov	ecx, OFFSET ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	mov	DWORD PTR ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, esi
	mov	DWORD PTR ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+4, OFFSET ??_C@_0BB@LLPLMIHM@snd_acceleration?$AA@
	mov	BYTE PTR ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+8, bl
	mov	BYTE PTR ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+9, bl
	mov	BYTE PTR ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	mov	ebp, OFFSET ??_7CCC_Mask@@6B@
	push	OFFSET ??__FxCCC_Mask@?BL@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`27'::`dynamic atexit destructor for 'xCCC_Mask''
	mov	DWORD PTR ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, ebp
	mov	DWORD PTR ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+24, edi
	mov	DWORD PTR ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+28, 2
	call	_atexit
	add	esp, 4
	jmp	SHORT $LN16@CCC_Regist
$LN1531@CCC_Regist:
	mov	ebp, OFFSET ??_7CCC_Mask@@6B@
$LN16@CCC_Regist:
	mov	eax, DWORD PTR ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+4
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	DWORD PTR $T550424[esp+20], eax
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550424[esp+20]
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A

; 775  : 	CMD3(CCC_Mask,		"snd_efx",				&psSoundFlags,		ss_EAX		);

	mov	eax, 33554432				; 02000000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	SHORT $LN15@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	edi, DWORD PTR __imp_?psSoundFlags@@3U?$_flags@I@@A
	mov	ecx, OFFSET ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	mov	DWORD PTR ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, esi
	mov	DWORD PTR ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+4, OFFSET ??_C@_07ONOJNHFG@snd_efx?$AA@
	mov	BYTE PTR ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+8, bl
	mov	BYTE PTR ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+9, bl
	mov	BYTE PTR ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	push	OFFSET ??__FxCCC_Mask@?BM@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`28'::`dynamic atexit destructor for 'xCCC_Mask''
	mov	DWORD PTR ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, ebp
	mov	DWORD PTR ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+24, edi
	mov	DWORD PTR ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+28, 4
	call	_atexit
	add	esp, 4
$LN15@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	ecx, DWORD PTR ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550480[esp+20]
	mov	DWORD PTR $T550480[esp+20], ecx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A

; 776  : 	CMD4(CCC_Integer,	"snd_targets",			&psSoundTargets,	4,32		);

	mov	eax, 67108864				; 04000000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	$LN14@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	edi, DWORD PTR __imp_?psSoundTargets@@3HA
	mov	ecx, OFFSET ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	DWORD PTR ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, esi
	mov	DWORD PTR ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4, OFFSET ??_C@_0M@JDIKMPCD@snd_targets?$AA@
	mov	BYTE PTR ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+8, bl
	mov	BYTE PTR ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+9, bl
	mov	BYTE PTR ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	push	OFFSET ??__FxCCC_Integer@?BN@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`29'::`dynamic atexit destructor for 'xCCC_Integer''
	mov	DWORD PTR ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, OFFSET ??_7CCC_Integer@@6B@
	mov	DWORD PTR ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+24, edi
	mov	DWORD PTR ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+28, 4
	mov	DWORD PTR ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+32, 32 ; 00000020H
	call	_atexit
	add	esp, 4
$LN14@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	edx, DWORD PTR ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550536[esp+20]
	mov	DWORD PTR $T550536[esp+20], edx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A

; 777  : 	CMD4(CCC_Integer,	"snd_cache_size",		&psSoundCacheSizeMB,4,32		);

	mov	eax, 134217728				; 08000000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	$LN13@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	edi, DWORD PTR __imp_?psSoundCacheSizeMB@@3HA
	mov	ecx, OFFSET ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	DWORD PTR ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, esi
	mov	DWORD PTR ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4, OFFSET ??_C@_0P@PEPLPDFL@snd_cache_size?$AA@
	mov	BYTE PTR ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+8, bl
	mov	BYTE PTR ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+9, bl
	mov	BYTE PTR ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	push	OFFSET ??__FxCCC_Integer@?BO@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`30'::`dynamic atexit destructor for 'xCCC_Integer''
	mov	DWORD PTR ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, OFFSET ??_7CCC_Integer@@6B@
	mov	DWORD PTR ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+24, edi
	mov	DWORD PTR ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+28, 4
	mov	DWORD PTR ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+32, 32 ; 00000020H
	call	_atexit
	add	esp, 4
$LN13@CCC_Regist:
	mov	eax, DWORD PTR ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	DWORD PTR $T550592[esp+20], eax
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550592[esp+20]
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A

; 778  : 
; 779  : #ifdef DEBUG
; 780  : 	CMD3(CCC_Mask,		"snd_stats",			&g_stats_flags,		st_sound	);
; 781  : 	CMD3(CCC_Mask,		"snd_stats_min_dist",	&g_stats_flags,		st_sound_min_dist );
; 782  : 	CMD3(CCC_Mask,		"snd_stats_max_dist",	&g_stats_flags,		st_sound_max_dist );
; 783  : 	CMD3(CCC_Mask,		"snd_stats_ai_dist",	&g_stats_flags,		st_sound_ai_dist );
; 784  : 	CMD3(CCC_Mask,		"snd_stats_info_name",	&g_stats_flags,		st_sound_info_name );
; 785  : 	CMD3(CCC_Mask,		"snd_stats_info_object",&g_stats_flags,		st_sound_info_object );
; 786  : 
; 787  : 	CMD4(CCC_Integer,	"error_line_count",		&g_ErrorLineCount,	6,	1024	);
; 788  : #endif // DEBUG
; 789  : 
; 790  : 	// Mouse
; 791  : 	CMD3(CCC_Mask,		"mouse_invert",			&psMouseInvert,1);

	mov	eax, 268435456				; 10000000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	SHORT $LN12@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	ecx, OFFSET ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	mov	DWORD PTR ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, esi
	mov	DWORD PTR ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+4, OFFSET ??_C@_0N@KBPHGAAB@mouse_invert?$AA@
	mov	BYTE PTR ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+8, bl
	mov	BYTE PTR ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+9, bl
	mov	BYTE PTR ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	push	OFFSET ??__FxCCC_Mask@?BP@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`31'::`dynamic atexit destructor for 'xCCC_Mask''
	mov	DWORD PTR ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, ebp
	mov	DWORD PTR ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+24, OFFSET ?psMouseInvert@@3U?$_flags@I@@A ; psMouseInvert
	mov	DWORD PTR ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+28, ebx
	call	_atexit
	add	esp, 4
$LN12@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	ecx, DWORD PTR ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550647[esp+20]
	mov	DWORD PTR $T550647[esp+20], ecx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>

; 792  : 	psMouseSens			= 0.12f;

	movss	xmm0, DWORD PTR __real@3df5c28f
	mov	DWORD PTR [eax], OFFSET ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A

; 793  : 	CMD4(CCC_Float,		"mouse_sens",			&psMouseSens,		0.001f, 0.6f);

	mov	eax, 536870912				; 20000000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	movss	DWORD PTR ?psMouseSens@@3MA, xmm0
	jne	$LN1533@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	ecx, OFFSET ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	mov	DWORD PTR ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A, esi
	mov	DWORD PTR ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A+4, OFFSET ??_C@_0L@GHLIFCGJ@mouse_sens?$AA@
	mov	BYTE PTR ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A+8, bl
	mov	BYTE PTR ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A+9, bl
	mov	BYTE PTR ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	movss	xmm0, DWORD PTR _EPS_L
	movss	DWORD PTR ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A+28, xmm0
	movss	xmm0, DWORD PTR __real@3f19999a
	mov	ebp, OFFSET ??_7CCC_Float@@6B@
	push	OFFSET ??__FxCCC_Float@?CA@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`32'::`dynamic atexit destructor for 'xCCC_Float''
	mov	DWORD PTR ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A, ebp
	mov	DWORD PTR ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A+24, OFFSET ?psMouseSens@@3MA ; psMouseSens
	movss	DWORD PTR ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A+32, xmm0
	call	_atexit
	add	esp, 4
	jmp	SHORT $LN11@CCC_Regist
$LN1533@CCC_Regist:
	mov	ebp, OFFSET ??_7CCC_Float@@6B@
$LN11@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	edx, DWORD PTR ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550702[esp+20]
	mov	DWORD PTR $T550702[esp+20], edx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A

; 794  : 
; 795  : 	// Camera
; 796  : 	CMD2(CCC_Float,		"cam_inert",			&psCamInert);

	mov	eax, 1073741824				; 40000000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	$LN10@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	ecx, OFFSET ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	mov	DWORD PTR ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A, esi
	mov	DWORD PTR ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A+4, OFFSET ??_C@_09OKOJABGK@cam_inert?$AA@
	mov	BYTE PTR ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A+8, bl
	mov	BYTE PTR ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A+9, bl
	mov	BYTE PTR ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	xorps	xmm0, xmm0
	movss	DWORD PTR ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A+28, xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	push	OFFSET ??__FxCCC_Float@?CB@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`33'::`dynamic atexit destructor for 'xCCC_Float''
	mov	DWORD PTR ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A, ebp
	mov	DWORD PTR ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A+24, OFFSET ?psCamInert@@3MA ; psCamInert
	movss	DWORD PTR ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A+32, xmm0
	call	_atexit
	add	esp, 4
$LN10@CCC_Regist:
	mov	eax, DWORD PTR ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A+4
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	DWORD PTR $T550757[esp+20], eax
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550757[esp+20]
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A

; 797  : 	CMD2(CCC_Float,		"cam_slide_inert",		&psCamSlideInert);

	mov	eax, -2147483648			; 80000000H
	test	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	jne	$LN9@CCC_Regist
	or	DWORD PTR ?$S16@?2??CCC_Register@@YAXXZ@4IA, eax
	mov	ecx, OFFSET ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	mov	DWORD PTR ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A, esi
	mov	DWORD PTR ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A+4, OFFSET ??_C@_0BA@JMADABMJ@cam_slide_inert?$AA@
	mov	BYTE PTR ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A+8, bl
	mov	BYTE PTR ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A+9, bl
	mov	BYTE PTR ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	xorps	xmm0, xmm0
	movss	DWORD PTR ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A+28, xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	push	OFFSET ??__FxCCC_Float@?CC@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`34'::`dynamic atexit destructor for 'xCCC_Float''
	mov	DWORD PTR ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A, ebp
	mov	DWORD PTR ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A+24, OFFSET ?psCamSlideInert@@3MA ; psCamSlideInert
	movss	DWORD PTR ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A+32, xmm0
	call	_atexit
	add	esp, 4
$LN9@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	ecx, DWORD PTR ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550812[esp+20]
	mov	DWORD PTR $T550812[esp+20], ecx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>

; 798  : 
; 799  : 	CMD1(CCC_r2,		"renderer"				);

	test	BYTE PTR ?$S17@?CD@??CCC_Register@@YAXXZ@4IA, bl
	mov	DWORD PTR [eax], OFFSET ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A
	jne	SHORT $LN8@CCC_Regist
	or	DWORD PTR ?$S17@?CD@??CCC_Register@@YAXXZ@4IA, ebx
	call	??0CCC_r2@@QAE@PBD@Z			; CCC_r2::CCC_r2
	push	OFFSET ??__FxCCC_r2@?CD@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`35'::`dynamic atexit destructor for 'xCCC_r2''
	call	_atexit
	add	esp, 4
$LN8@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	edx, DWORD PTR ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550824[esp+20]
	mov	DWORD PTR $T550824[esp+20], edx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>

; 800  : 
; 801  : #ifndef DEDICATED_SERVER
; 802  : 	CMD1(CCC_soundDevice, "snd_device"			);

	test	BYTE PTR ?$S17@?CD@??CCC_Register@@YAXXZ@4IA, 2
	mov	DWORD PTR [eax], OFFSET ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A
	jne	SHORT $LN7@CCC_Regist
	or	DWORD PTR ?$S17@?CD@??CCC_Register@@YAXXZ@4IA, 2
	call	??0CCC_soundDevice@@QAE@PBD@Z		; CCC_soundDevice::CCC_soundDevice
	push	OFFSET ??__FxCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`36'::`dynamic atexit destructor for 'xCCC_soundDevice''
	call	_atexit
	add	esp, 4
$LN7@CCC_Regist:
	mov	eax, DWORD PTR ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A+4
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	DWORD PTR $T550836[esp+20], eax
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550836[esp+20]
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>
	mov	DWORD PTR [eax], OFFSET ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A

; 803  : #endif
; 804  : 	//psSoundRolloff	= pSettings->r_float	("sound","rolloff");		clamp(psSoundRolloff,			EPS_S,	2.f);
; 805  : 	psSoundOcclusionScale	= pSettings->r_float	("sound","occlusion_scale");clamp(psSoundOcclusionScale,	0.1f,	.5f);

	mov	ecx, DWORD PTR __imp_?pSettings@@3PBVCInifile@@B
	mov	ecx, DWORD PTR [ecx]
	push	OFFSET ??_C@_0BA@HPFNHPOG@occlusion_scale?$AA@
	push	OFFSET ??_C@_05MHNANJII@sound?$AA@
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	mov	edx, DWORD PTR __imp_?psSoundOcclusionScale@@3MA
	movss	xmm1, DWORD PTR _psShedulerReaction
	fstp	DWORD PTR [edx]
	mov	eax, DWORD PTR __imp_?psSoundOcclusionScale@@3MA
	movss	xmm0, DWORD PTR [eax]
	comiss	xmm1, xmm0
	ja	SHORT $LN1536@CCC_Regist
	movss	xmm1, DWORD PTR __real@3f000000
	comiss	xmm0, xmm1
	jbe	SHORT $LN1265@CCC_Regist
$LN1536@CCC_Regist:
	movss	DWORD PTR [eax], xmm1
$LN1265@CCC_Regist:

; 806  : 
; 807  : 	extern	int	g_Dump_Export_Obj;
; 808  : 	extern	int	g_Dump_Import_Obj;
; 809  : 	CMD4(CCC_Integer,	"net_dbg_dump_export_obj",	&g_Dump_Export_Obj, 0, 1);

	test	BYTE PTR ?$S17@?CD@??CCC_Register@@YAXXZ@4IA, 4
	jne	SHORT $LN1534@CCC_Regist
	or	DWORD PTR ?$S17@?CD@??CCC_Register@@YAXXZ@4IA, 4
	mov	ecx, OFFSET ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	DWORD PTR ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, esi
	mov	DWORD PTR ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4, OFFSET ??_C@_0BI@GNDPDAH@net_dbg_dump_export_obj?$AA@
	mov	BYTE PTR ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+8, bl
	mov	BYTE PTR ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+9, bl
	mov	BYTE PTR ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	mov	ebp, OFFSET ??_7CCC_Integer@@6B@
	push	OFFSET ??__FxCCC_Integer@?CF@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`37'::`dynamic atexit destructor for 'xCCC_Integer''
	mov	DWORD PTR ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, ebp
	mov	DWORD PTR ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+24, OFFSET ?g_Dump_Export_Obj@@3HA ; g_Dump_Export_Obj
	mov	DWORD PTR ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+28, 0
	mov	DWORD PTR ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+32, ebx
	call	_atexit
	add	esp, 4
	jmp	SHORT $LN6@CCC_Regist
$LN1534@CCC_Regist:
	mov	ebp, OFFSET ??_7CCC_Integer@@6B@
$LN6@CCC_Regist:
	mov	eax, DWORD PTR ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	DWORD PTR $T550898[esp+20], eax
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550898[esp+20]
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>

; 810  : 	CMD4(CCC_Integer,	"net_dbg_dump_import_obj",	&g_Dump_Import_Obj, 0, 1);

	test	BYTE PTR ?$S17@?CD@??CCC_Register@@YAXXZ@4IA, 8
	mov	DWORD PTR [eax], OFFSET ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
	jne	SHORT $LN5@CCC_Regist
	or	DWORD PTR ?$S17@?CD@??CCC_Register@@YAXXZ@4IA, 8
	mov	ecx, OFFSET ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	DWORD PTR ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, esi
	mov	DWORD PTR ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4, OFFSET ??_C@_0BI@MNEOCLGM@net_dbg_dump_import_obj?$AA@
	mov	BYTE PTR ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+8, bl
	mov	BYTE PTR ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+9, bl
	mov	BYTE PTR ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	push	OFFSET ??__FxCCC_Integer@?CG@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`38'::`dynamic atexit destructor for 'xCCC_Integer''
	mov	DWORD PTR ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, ebp
	mov	DWORD PTR ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+24, OFFSET ?g_Dump_Import_Obj@@3HA ; g_Dump_Import_Obj
	mov	DWORD PTR ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+28, 0
	mov	DWORD PTR ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+32, ebx
	call	_atexit
	add	esp, 4
$LN5@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	ecx, DWORD PTR ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550952[esp+20]
	mov	DWORD PTR $T550952[esp+20], ecx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>

; 811  : 
; 812  : #ifdef DEBUG	
; 813  : 	CMD1(CCC_DumpOpenFiles,		"dump_open_files");
; 814  : #endif
; 815  : 
; 816  : 	CMD1(CCC_ExclusiveMode,		"input_exclusive_mode");

	test	BYTE PTR ?$S17@?CD@??CCC_Register@@YAXXZ@4IA, 16 ; 00000010H
	mov	DWORD PTR [eax], OFFSET ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
	jne	SHORT $LN4@CCC_Regist
	or	DWORD PTR ?$S17@?CD@??CCC_Register@@YAXXZ@4IA, 16 ; 00000010H
	call	??0CCC_ExclusiveMode@@QAE@PBD@Z		; CCC_ExclusiveMode::CCC_ExclusiveMode
	push	OFFSET ??__FxCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`39'::`dynamic atexit destructor for 'xCCC_ExclusiveMode''
	call	_atexit
	add	esp, 4
$LN4@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	edx, DWORD PTR ?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T550964[esp+20]
	mov	DWORD PTR $T550964[esp+20], edx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>

; 817  : 
; 818  : 	extern int g_svTextConsoleUpdateRate;
; 819  : 	CMD4(CCC_Integer, "sv_console_update_rate", &g_svTextConsoleUpdateRate, 1, 100);

	test	BYTE PTR ?$S17@?CD@??CCC_Register@@YAXXZ@4IA, 32 ; 00000020H
	mov	DWORD PTR [eax], OFFSET ?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A
	jne	SHORT $LN3@CCC_Regist
	or	DWORD PTR ?$S17@?CD@??CCC_Register@@YAXXZ@4IA, 32 ; 00000020H
	mov	ecx, OFFSET ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	DWORD PTR ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, esi
	mov	DWORD PTR ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4, OFFSET ??_C@_0BH@PGNLFEHC@sv_console_update_rate?$AA@
	mov	BYTE PTR ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+8, bl
	mov	BYTE PTR ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+9, bl
	mov	BYTE PTR ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	push	OFFSET ??__FxCCC_Integer@?CI@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`40'::`dynamic atexit destructor for 'xCCC_Integer''
	mov	DWORD PTR ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, ebp
	mov	DWORD PTR ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+24, OFFSET ?g_svTextConsoleUpdateRate@@3HA ; g_svTextConsoleUpdateRate
	mov	DWORD PTR ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+28, ebx
	mov	DWORD PTR ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+32, 100 ; 00000064H
	call	_atexit
	add	esp, 4
$LN3@CCC_Regist:
	mov	eax, DWORD PTR ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	DWORD PTR $T551019[esp+20], eax
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T551019[esp+20]
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>

; 820  : 
; 821  : 	extern int g_svDedicateServerUpdateReate;
; 822  : 	CMD4(CCC_Integer, "sv_dedicated_server_update_rate", &g_svDedicateServerUpdateReate, 1, 1000);

	test	BYTE PTR ?$S17@?CD@??CCC_Register@@YAXXZ@4IA, 64 ; 00000040H
	mov	DWORD PTR [eax], OFFSET ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
	jne	SHORT $LN2@CCC_Regist
	or	DWORD PTR ?$S17@?CD@??CCC_Register@@YAXXZ@4IA, 64 ; 00000040H
	mov	ecx, OFFSET ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	DWORD PTR ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, esi
	mov	DWORD PTR ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4, OFFSET ??_C@_0CA@ODBOMBIN@sv_dedicated_server_update_rate?$AA@
	mov	BYTE PTR ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+8, bl
	mov	BYTE PTR ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+9, bl
	mov	BYTE PTR ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	push	OFFSET ??__FxCCC_Integer@?CJ@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`41'::`dynamic atexit destructor for 'xCCC_Integer''
	mov	DWORD PTR ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, ebp
	mov	DWORD PTR ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+24, OFFSET ?g_svDedicateServerUpdateReate@@3HA ; g_svDedicateServerUpdateReate
	mov	DWORD PTR ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+28, ebx
	mov	DWORD PTR ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+32, 1000 ; 000003e8H
	call	_atexit
	add	esp, 4
$LN2@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	ecx, DWORD PTR ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T551074[esp+20]
	mov	DWORD PTR $T551074[esp+20], ecx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>

; 823  : 
; 824  : 	CMD1(CCC_HideConsole,		"hide");

	test	BYTE PTR ?$S17@?CD@??CCC_Register@@YAXXZ@4IA, 128 ; 00000080H
	mov	DWORD PTR [eax], OFFSET ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
	jne	SHORT $LN1@CCC_Regist
	or	DWORD PTR ?$S17@?CD@??CCC_Register@@YAXXZ@4IA, 128 ; 00000080H
	mov	ecx, OFFSET ?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A+12
	mov	DWORD PTR ?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A, esi
	mov	DWORD PTR ?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A+4, OFFSET ??_C@_04IBOFHAPJ@hide?$AA@
	mov	BYTE PTR ?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A+8, bl
	mov	BYTE PTR ?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A+9, bl
	mov	BYTE PTR ?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A+10, 0
	call	??0?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAE@XZ ; xr_vector<shared_str,xalloc<shared_str> >::xr_vector<shared_str,xalloc<shared_str> >
	push	11					; 0000000bH
	mov	ecx, OFFSET ?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A+12
	call	?reserve@?$vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<shared_str,xalloc<shared_str> >::reserve
	mov	ecx, OFFSET ?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A+12
	call	?clear_not_free@?$xr_vector@Vshared_str@@V?$xalloc@Vshared_str@@@@@@QAEXXZ ; xr_vector<shared_str,xalloc<shared_str> >::clear_not_free
	push	OFFSET ??__FxCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@YAXXZ ; `CCC_Register'::`42'::`dynamic atexit destructor for 'xCCC_HideConsole''
	mov	DWORD PTR ?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A, OFFSET ??_7CCC_HideConsole@@6B@
	mov	BYTE PTR ?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A+10, bl
	call	_atexit
	add	esp, 4
$LN1@CCC_Regist:
	mov	edi, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	mov	edx, DWORD PTR ?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A+4
	add	edi, 176				; 000000b0H
	lea	eax, DWORD PTR $T551129[esp+20]
	mov	DWORD PTR $T551129[esp+20], edx
	call	??$?APBD@?$map@PBDPAVIConsole_Command@@Ustr_pred@CConsole@@V?$xalloc@U?$pair@PBDPAVIConsole_Command@@@stlp_std@@@@@stlp_std@@QAEAAPAVIConsole_Command@@ABQBD@Z ; stlp_std::map<char const *,IConsole_Command *,CConsole::str_pred,xalloc<stlp_std::pair<char const *,IConsole_Command *> > >::operator[]<char const *>

; 825  : 
; 826  : #ifdef	DEBUG
; 827  : 	extern BOOL debug_destroy;
; 828  : 	CMD4(CCC_Integer, "debug_destroy", &debug_destroy, FALSE, TRUE );
; 829  : #endif
; 830  : };

	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], OFFSET ?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A
	pop	ebx
	pop	ecx
	ret	0
?CCC_Register@@YAXXZ ENDP				; CCC_Register
; Function compile flags: /Ogtpy
;	COMDAT ??__FxCCC_Help@?2??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Help@?2??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`3'::`dynamic atexit destructor for 'xCCC_Help'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@7
	push	OFFSET ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@7:
	mov	edx, DWORD PTR ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A+12
	mov	eax, DWORD PTR ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Help@?2??CCC_Register@@YAXXZ@4VCCC_Help@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@7
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@7:
	ret	0
??__FxCCC_Help@?2??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`3'::`dynamic atexit destructor for 'xCCC_Help''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Quit@?3??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Quit@?3??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`4'::`dynamic atexit destructor for 'xCCC_Quit'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@8
	push	OFFSET ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@8:
	mov	edx, DWORD PTR ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A+12
	mov	eax, DWORD PTR ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Quit@?3??CCC_Register@@YAXXZ@4VCCC_Quit@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@8
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@8:
	ret	0
??__FxCCC_Quit@?3??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`4'::`dynamic atexit destructor for 'xCCC_Quit''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Start@?4??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Start@?4??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`5'::`dynamic atexit destructor for 'xCCC_Start'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@9
	push	OFFSET ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@9:
	mov	edx, DWORD PTR ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A+12
	mov	eax, DWORD PTR ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Start@?4??CCC_Register@@YAXXZ@4VCCC_Start@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@9
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@9:
	ret	0
??__FxCCC_Start@?4??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`5'::`dynamic atexit destructor for 'xCCC_Start''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Disconnect@?5??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Disconnect@?5??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`6'::`dynamic atexit destructor for 'xCCC_Disconnect'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@10
	push	OFFSET ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@10:
	mov	edx, DWORD PTR ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A+12
	mov	eax, DWORD PTR ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Disconnect@?5??CCC_Register@@YAXXZ@4VCCC_Disconnect@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@10
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@10:
	ret	0
??__FxCCC_Disconnect@?5??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`6'::`dynamic atexit destructor for 'xCCC_Disconnect''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_SaveCFG@?6??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_SaveCFG@?6??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`7'::`dynamic atexit destructor for 'xCCC_SaveCFG'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@11
	push	OFFSET ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@11:
	mov	edx, DWORD PTR ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A+12
	mov	eax, DWORD PTR ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_SaveCFG@?6??CCC_Register@@YAXXZ@4VCCC_SaveCFG@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@11
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@11:
	ret	0
??__FxCCC_SaveCFG@?6??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`7'::`dynamic atexit destructor for 'xCCC_SaveCFG''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_LoadCFG@?7??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_LoadCFG@?7??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`8'::`dynamic atexit destructor for 'xCCC_LoadCFG'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_LoadCFG@?7??CCC_Register@@YAXXZ@4VCCC_LoadCFG@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@12
	push	OFFSET ?xCCC_LoadCFG@?7??CCC_Register@@YAXXZ@4VCCC_LoadCFG@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@12:
	mov	edx, DWORD PTR ?xCCC_LoadCFG@?7??CCC_Register@@YAXXZ@4VCCC_LoadCFG@@A+12
	mov	eax, DWORD PTR ?xCCC_LoadCFG@?7??CCC_Register@@YAXXZ@4VCCC_LoadCFG@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_LoadCFG@?7??CCC_Register@@YAXXZ@4VCCC_LoadCFG@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@12
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@12:
	ret	0
??__FxCCC_LoadCFG@?7??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`8'::`dynamic atexit destructor for 'xCCC_LoadCFG''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Integer@?8??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Integer@?8??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`9'::`dynamic atexit destructor for 'xCCC_Integer'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@13
	push	OFFSET ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@13:
	mov	edx, DWORD PTR ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	eax, DWORD PTR ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Integer@?8??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@13
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@13:
	ret	0
??__FxCCC_Integer@?8??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`9'::`dynamic atexit destructor for 'xCCC_Integer''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Mask@?9??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Mask@?9??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`10'::`dynamic atexit destructor for 'xCCC_Mask'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@14
	push	OFFSET ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@14:
	mov	edx, DWORD PTR ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	mov	eax, DWORD PTR ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Mask@?9??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@14
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@14:
	ret	0
??__FxCCC_Mask@?9??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`10'::`dynamic atexit destructor for 'xCCC_Mask''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Mask@?L@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Mask@?L@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`11'::`dynamic atexit destructor for 'xCCC_Mask'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@15
	push	OFFSET ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@15:
	mov	edx, DWORD PTR ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	mov	eax, DWORD PTR ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Mask@?L@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@15
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@15:
	ret	0
??__FxCCC_Mask@?L@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`11'::`dynamic atexit destructor for 'xCCC_Mask''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Mask@?M@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Mask@?M@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`12'::`dynamic atexit destructor for 'xCCC_Mask'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@16
	push	OFFSET ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@16:
	mov	edx, DWORD PTR ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	mov	eax, DWORD PTR ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Mask@?M@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@16
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@16:
	ret	0
??__FxCCC_Mask@?M@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`12'::`dynamic atexit destructor for 'xCCC_Mask''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Mask@?N@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Mask@?N@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`13'::`dynamic atexit destructor for 'xCCC_Mask'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@17
	push	OFFSET ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@17:
	mov	edx, DWORD PTR ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	mov	eax, DWORD PTR ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Mask@?N@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@17
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@17:
	ret	0
??__FxCCC_Mask@?N@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`13'::`dynamic atexit destructor for 'xCCC_Mask''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Float@?O@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Float@?O@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`14'::`dynamic atexit destructor for 'xCCC_Float'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@18
	push	OFFSET ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@18:
	mov	edx, DWORD PTR ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	mov	eax, DWORD PTR ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Float@?O@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@18
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@18:
	ret	0
??__FxCCC_Float@?O@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`14'::`dynamic atexit destructor for 'xCCC_Float''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Mask@?P@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Mask@?P@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`15'::`dynamic atexit destructor for 'xCCC_Mask'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@19
	push	OFFSET ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@19:
	mov	edx, DWORD PTR ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	mov	eax, DWORD PTR ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Mask@?P@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@19
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@19:
	ret	0
??__FxCCC_Mask@?P@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`15'::`dynamic atexit destructor for 'xCCC_Mask''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Integer@?BD@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Integer@?BD@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`19'::`dynamic atexit destructor for 'xCCC_Integer'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@20
	push	OFFSET ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@20:
	mov	edx, DWORD PTR ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	eax, DWORD PTR ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Integer@?BD@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@20
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@20:
	ret	0
??__FxCCC_Integer@?BD@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`19'::`dynamic atexit destructor for 'xCCC_Integer''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Integer@?BE@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Integer@?BE@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`20'::`dynamic atexit destructor for 'xCCC_Integer'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@21
	push	OFFSET ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@21:
	mov	edx, DWORD PTR ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	eax, DWORD PTR ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Integer@?BE@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@21
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@21:
	ret	0
??__FxCCC_Integer@?BE@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`20'::`dynamic atexit destructor for 'xCCC_Integer''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Integer@?BF@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Integer@?BF@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`21'::`dynamic atexit destructor for 'xCCC_Integer'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@22
	push	OFFSET ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@22:
	mov	edx, DWORD PTR ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	eax, DWORD PTR ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Integer@?BF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@22
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@22:
	ret	0
??__FxCCC_Integer@?BF@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`21'::`dynamic atexit destructor for 'xCCC_Integer''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@YAXXZ PROC ; `CCC_Register'::`23'::`dynamic atexit destructor for 'xCCC_VID_Reset'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@23
	push	OFFSET ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@23:
	mov	edx, DWORD PTR ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A+12
	mov	eax, DWORD PTR ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@4VCCC_VID_Reset@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@23
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@23:
	ret	0
??__FxCCC_VID_Reset@?BH@??CCC_Register@@YAXXZ@YAXXZ ENDP ; `CCC_Register'::`23'::`dynamic atexit destructor for 'xCCC_VID_Reset''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Float@?BI@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Float@?BI@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`24'::`dynamic atexit destructor for 'xCCC_Float'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@24
	push	OFFSET ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@24:
	mov	edx, DWORD PTR ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	mov	eax, DWORD PTR ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Float@?BI@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@24
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@24:
	ret	0
??__FxCCC_Float@?BI@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`24'::`dynamic atexit destructor for 'xCCC_Float''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Float@?BJ@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Float@?BJ@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`25'::`dynamic atexit destructor for 'xCCC_Float'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@25
	push	OFFSET ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@25:
	mov	edx, DWORD PTR ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	mov	eax, DWORD PTR ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Float@?BJ@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@25
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@25:
	ret	0
??__FxCCC_Float@?BJ@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`25'::`dynamic atexit destructor for 'xCCC_Float''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@YAXXZ PROC ; `CCC_Register'::`26'::`dynamic atexit destructor for 'xCCC_SND_Restart'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@26
	push	OFFSET ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@26:
	mov	edx, DWORD PTR ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A+12
	mov	eax, DWORD PTR ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@4VCCC_SND_Restart@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@26
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@26:
	ret	0
??__FxCCC_SND_Restart@?BK@??CCC_Register@@YAXXZ@YAXXZ ENDP ; `CCC_Register'::`26'::`dynamic atexit destructor for 'xCCC_SND_Restart''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Mask@?BL@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Mask@?BL@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`27'::`dynamic atexit destructor for 'xCCC_Mask'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@27
	push	OFFSET ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@27:
	mov	edx, DWORD PTR ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	mov	eax, DWORD PTR ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Mask@?BL@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@27
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@27:
	ret	0
??__FxCCC_Mask@?BL@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`27'::`dynamic atexit destructor for 'xCCC_Mask''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Mask@?BM@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Mask@?BM@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`28'::`dynamic atexit destructor for 'xCCC_Mask'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@28
	push	OFFSET ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@28:
	mov	edx, DWORD PTR ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	mov	eax, DWORD PTR ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Mask@?BM@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@28
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@28:
	ret	0
??__FxCCC_Mask@?BM@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`28'::`dynamic atexit destructor for 'xCCC_Mask''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Integer@?BN@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Integer@?BN@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`29'::`dynamic atexit destructor for 'xCCC_Integer'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@29
	push	OFFSET ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@29:
	mov	edx, DWORD PTR ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	eax, DWORD PTR ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Integer@?BN@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@29
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@29:
	ret	0
??__FxCCC_Integer@?BN@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`29'::`dynamic atexit destructor for 'xCCC_Integer''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Integer@?BO@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Integer@?BO@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`30'::`dynamic atexit destructor for 'xCCC_Integer'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@30
	push	OFFSET ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@30:
	mov	edx, DWORD PTR ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	eax, DWORD PTR ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Integer@?BO@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@30
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@30:
	ret	0
??__FxCCC_Integer@?BO@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`30'::`dynamic atexit destructor for 'xCCC_Integer''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Mask@?BP@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Mask@?BP@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`31'::`dynamic atexit destructor for 'xCCC_Mask'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@31
	push	OFFSET ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@31:
	mov	edx, DWORD PTR ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	mov	eax, DWORD PTR ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Mask@?BP@??CCC_Register@@YAXXZ@4VCCC_Mask@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@31
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@31:
	ret	0
??__FxCCC_Mask@?BP@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`31'::`dynamic atexit destructor for 'xCCC_Mask''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Float@?CA@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Float@?CA@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`32'::`dynamic atexit destructor for 'xCCC_Float'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@32
	push	OFFSET ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@32:
	mov	edx, DWORD PTR ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	mov	eax, DWORD PTR ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Float@?CA@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@32
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@32:
	ret	0
??__FxCCC_Float@?CA@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`32'::`dynamic atexit destructor for 'xCCC_Float''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Float@?CB@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Float@?CB@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`33'::`dynamic atexit destructor for 'xCCC_Float'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@33
	push	OFFSET ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@33:
	mov	edx, DWORD PTR ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	mov	eax, DWORD PTR ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Float@?CB@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@33
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@33:
	ret	0
??__FxCCC_Float@?CB@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`33'::`dynamic atexit destructor for 'xCCC_Float''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Float@?CC@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Float@?CC@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`34'::`dynamic atexit destructor for 'xCCC_Float'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@34
	push	OFFSET ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@34:
	mov	edx, DWORD PTR ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	mov	eax, DWORD PTR ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Float@?CC@??CCC_Register@@YAXXZ@4VCCC_Float@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@34
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@34:
	ret	0
??__FxCCC_Float@?CC@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`34'::`dynamic atexit destructor for 'xCCC_Float''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Integer@?CF@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Integer@?CF@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`37'::`dynamic atexit destructor for 'xCCC_Integer'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@35
	push	OFFSET ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@35:
	mov	edx, DWORD PTR ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	eax, DWORD PTR ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Integer@?CF@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@35
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@35:
	ret	0
??__FxCCC_Integer@?CF@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`37'::`dynamic atexit destructor for 'xCCC_Integer''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Integer@?CG@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Integer@?CG@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`38'::`dynamic atexit destructor for 'xCCC_Integer'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@36
	push	OFFSET ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@36:
	mov	edx, DWORD PTR ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	eax, DWORD PTR ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Integer@?CG@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@36
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@36:
	ret	0
??__FxCCC_Integer@?CG@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`38'::`dynamic atexit destructor for 'xCCC_Integer''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@YAXXZ PROC ; `CCC_Register'::`39'::`dynamic atexit destructor for 'xCCC_ExclusiveMode'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@37
	push	OFFSET ?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@37:
	mov	edx, DWORD PTR ?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A+12
	mov	eax, DWORD PTR ?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@4VCCC_ExclusiveMode@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@37
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@37:
	ret	0
??__FxCCC_ExclusiveMode@?CH@??CCC_Register@@YAXXZ@YAXXZ ENDP ; `CCC_Register'::`39'::`dynamic atexit destructor for 'xCCC_ExclusiveMode''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Integer@?CI@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Integer@?CI@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`40'::`dynamic atexit destructor for 'xCCC_Integer'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@38
	push	OFFSET ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@38:
	mov	edx, DWORD PTR ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	eax, DWORD PTR ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Integer@?CI@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@38
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@38:
	ret	0
??__FxCCC_Integer@?CI@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`40'::`dynamic atexit destructor for 'xCCC_Integer''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Integer@?CJ@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Integer@?CJ@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`41'::`dynamic atexit destructor for 'xCCC_Integer'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@39
	push	OFFSET ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@39:
	mov	edx, DWORD PTR ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	mov	eax, DWORD PTR ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Integer@?CJ@??CCC_Register@@YAXXZ@4VCCC_Integer@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@39
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@39:
	ret	0
??__FxCCC_Integer@?CJ@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`41'::`dynamic atexit destructor for 'xCCC_Integer''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@YAXXZ PROC ; `CCC_Register'::`42'::`dynamic atexit destructor for 'xCCC_HideConsole'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN5@dynamic@40
	push	OFFSET ?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN5@dynamic@40:
	mov	edx, DWORD PTR ?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A+12
	mov	eax, DWORD PTR ?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@4VCCC_HideConsole@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN37@dynamic@40
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN37@dynamic@40:
	ret	0
??__FxCCC_HideConsole@?CK@??CCC_Register@@YAXXZ@YAXXZ ENDP ; `CCC_Register'::`42'::`dynamic atexit destructor for 'xCCC_HideConsole''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Gamma@?BA@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Gamma@?BA@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`16'::`dynamic atexit destructor for 'xCCC_Gamma'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN7@dynamic@41
	push	OFFSET ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN7@dynamic@41:
	mov	edx, DWORD PTR ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+12
	mov	eax, DWORD PTR ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Gamma@?BA@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN39@dynamic@41
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN39@dynamic@41:
	ret	0
??__FxCCC_Gamma@?BA@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`16'::`dynamic atexit destructor for 'xCCC_Gamma''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Gamma@?BB@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Gamma@?BB@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`17'::`dynamic atexit destructor for 'xCCC_Gamma'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN7@dynamic@42
	push	OFFSET ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN7@dynamic@42:
	mov	edx, DWORD PTR ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+12
	mov	eax, DWORD PTR ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Gamma@?BB@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN39@dynamic@42
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN39@dynamic@42:
	ret	0
??__FxCCC_Gamma@?BB@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`17'::`dynamic atexit destructor for 'xCCC_Gamma''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_Gamma@?BC@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_Gamma@?BC@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`18'::`dynamic atexit destructor for 'xCCC_Gamma'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN7@dynamic@43
	push	OFFSET ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN7@dynamic@43:
	mov	edx, DWORD PTR ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+12
	mov	eax, DWORD PTR ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_Gamma@?BC@??CCC_Register@@YAXXZ@4VCCC_Gamma@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN39@dynamic@43
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN39@dynamic@43:
	ret	0
??__FxCCC_Gamma@?BC@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`18'::`dynamic atexit destructor for 'xCCC_Gamma''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_VidMode@?BG@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_VidMode@?BG@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`22'::`dynamic atexit destructor for 'xCCC_VidMode'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN7@dynamic@44
	push	OFFSET ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN7@dynamic@44:
	mov	edx, DWORD PTR ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A+12
	mov	eax, DWORD PTR ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_VidMode@?BG@??CCC_Register@@YAXXZ@4VCCC_VidMode@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN39@dynamic@44
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN39@dynamic@44:
	ret	0
??__FxCCC_VidMode@?BG@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`22'::`dynamic atexit destructor for 'xCCC_VidMode''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_r2@?CD@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_r2@?CD@??CCC_Register@@YAXXZ@YAXXZ PROC	; `CCC_Register'::`35'::`dynamic atexit destructor for 'xCCC_r2'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN7@dynamic@45
	push	OFFSET ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN7@dynamic@45:
	mov	edx, DWORD PTR ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A+12
	mov	eax, DWORD PTR ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_r2@?CD@??CCC_Register@@YAXXZ@4VCCC_r2@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN39@dynamic@45
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN39@dynamic@45:
	ret	0
??__FxCCC_r2@?CD@??CCC_Register@@YAXXZ@YAXXZ ENDP	; `CCC_Register'::`35'::`dynamic atexit destructor for 'xCCC_r2''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FxCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@YAXXZ
text$yd	SEGMENT
??__FxCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@YAXXZ PROC ; `CCC_Register'::`36'::`dynamic atexit destructor for 'xCCC_soundDevice'', COMDAT
	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	test	ecx, ecx
	mov	DWORD PTR ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A, OFFSET ??_7IConsole_Command@@6B@
	je	SHORT $LN7@dynamic@46
	push	OFFSET ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A
	call	?RemoveCommand@CConsole@@QAEXPAVIConsole_Command@@@Z ; CConsole::RemoveCommand
$LN7@dynamic@46:
	mov	edx, DWORD PTR ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A+12
	mov	eax, DWORD PTR ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A+16
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR [ecx], eax
	call	??$__destroy_range@V?$reverse_iterator@PAVshared_str@@@stlp_std@@Vshared_str@@@stlp_std@@YAXV?$reverse_iterator@PAVshared_str@@@0@0PAVshared_str@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<shared_str *>,shared_str>
	mov	eax, DWORD PTR ?xCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@4VCCC_soundDevice@@A+12
	add	esp, 8
	test	eax, eax
	je	SHORT $LN39@dynamic@46
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN39@dynamic@46:
	ret	0
??__FxCCC_soundDevice@?CE@??CCC_Register@@YAXXZ@YAXXZ ENDP ; `CCC_Register'::`36'::`dynamic atexit destructor for 'xCCC_soundDevice''
END
