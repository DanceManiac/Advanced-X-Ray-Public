; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\CLEARSKY\sources\engine\xrEngine\PS_instance.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	?shedule_Update@CPS_Instance@@UAEXI@Z		; CPS_Instance::shedule_Update
PUBLIC	?PSI_destroy@CPS_Instance@@UAEXXZ		; CPS_Instance::PSI_destroy
PUBLIC	?PSI_internal_delete@CPS_Instance@@MAEXXZ	; CPS_Instance::PSI_internal_delete
PUBLIC	??$swap@_N@stlp_std@@YAXAA_N0@Z			; stlp_std::swap<bool>
PUBLIC	?_Rebalance_for_erase@?$_Rb_global@_N@priv@stlp_std@@SAPAU_Rb_tree_node_base@23@PAU423@AAPAU423@11@Z ; stlp_std::priv::_Rb_global<bool>::_Rebalance_for_erase
PUBLIC	?erase@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@QAEXU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@23@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::erase
PUBLIC	?_S_to_storage_ite@?$set@PAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@CA?AU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@2@U?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_ConstSetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@42@@Z ; stlp_std::set<CPS_Instance *,stlp_std::less<CPS_Instance *>,xalloc<CPS_Instance *> >::_S_to_storage_ite
PUBLIC	?erase@?$set@PAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAEXU?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@2@@Z ; stlp_std::set<CPS_Instance *,stlp_std::less<CPS_Instance *>,xalloc<CPS_Instance *> >::erase
PUBLIC	?begin@?$vector@PAVCPS_Instance@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAEPAPAVCPS_Instance@@XZ ; stlp_std::vector<CPS_Instance *,xalloc<CPS_Instance *> >::begin
PUBLIC	?to_value_type_ptr@?$_CastTraits@PAXPAVCPS_Instance@@@priv@stlp_std@@SAPAPAVCPS_Instance@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CPS_Instance *>::to_value_type_ptr
PUBLIC	?end@?$vector@PAVCPS_Instance@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAEPAPAVCPS_Instance@@XZ ; stlp_std::vector<CPS_Instance *,xalloc<CPS_Instance *> >::end
PUBLIC	?to_storage_type_crefT@?$_CastTraits@PAXPAVCPS_Instance@@@priv@stlp_std@@SAABQAXABQAVCPS_Instance@@@Z ; stlp_std::priv::_CastTraits<void *,CPS_Instance *>::to_storage_type_crefT
PUBLIC	??$_M_find@PAX@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@ABEPAU_Rb_tree_node_base@12@ABQAX@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_find<void *>
PUBLIC	??$find@PAX@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@QAE?AU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@12@ABQAX@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::find<void *>
PUBLIC	??$find@PAVCPS_Instance@@@?$set@PAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAE?AU?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@1@ABQAVCPS_Instance@@@Z ; stlp_std::set<CPS_Instance *,stlp_std::less<CPS_Instance *>,xalloc<CPS_Instance *> >::find<CPS_Instance *>
PUBLIC	??$__find@PAPAVCPS_Instance@@PAV1@@priv@stlp_std@@YAPAPAVCPS_Instance@@PAPAV2@0ABQAV2@ABUrandom_access_iterator_tag@1@@Z ; stlp_std::priv::__find<CPS_Instance * *,CPS_Instance *>
PUBLIC	??$find@PAPAVCPS_Instance@@PAV1@@stlp_std@@YAPAPAVCPS_Instance@@PAPAV1@0ABQAV1@@Z ; stlp_std::find<CPS_Instance * *,CPS_Instance *>
PUBLIC	?push_back@?$vector@PAVCPS_Instance@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAEXABQAVCPS_Instance@@@Z ; stlp_std::vector<CPS_Instance *,xalloc<CPS_Instance *> >::push_back
PUBLIC	??R?$xr_special_free@$00VCPS_Instance@@@@QAEXAAPAVCPS_Instance@@@Z ; xr_special_free<1,CPS_Instance>::operator()
PUBLIC	??$xr_delete@VCPS_Instance@@@@YAXAAPAVCPS_Instance@@@Z ; xr_delete<CPS_Instance>
PUBLIC	?max@?$_Integer_limits@H$0?IAAAAAAA@$0HPPPPPPP@$0?0$00@priv@stlp_std@@SAHXZ ; stlp_std::priv::_Integer_limits<int,-2147483648,2147483647,-1,1>::max
PUBLIC	??R?$less@PAVCPS_Instance@@@stlp_std@@QBE_NABQAVCPS_Instance@@0@Z ; stlp_std::less<CPS_Instance *>::operator()
PUBLIC	?cv_cref@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAABQAXABQAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_cref
PUBLIC	?to_value_type_cref@?$_CastTraits@PAXPAVCPS_Instance@@@priv@stlp_std@@SAABQAVCPS_Instance@@ABQAX@Z ; stlp_std::priv::_CastTraits<void *,CPS_Instance *>::to_value_type_cref
PUBLIC	??R?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@QBE_NABQAX0@Z ; stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >::operator()
PUBLIC	?_S_key@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAABQAXPAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_key
PUBLIC	?_M_insert@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@23@PAU_Rb_tree_node_base@23@ABQAX00@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_insert
PUBLIC	??F?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ ; stlp_std::priv::_Rb_tree_iterator<void *,stlp_std::priv::_SetTraitsT<void *> >::operator--
PUBLIC	??8?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@QBE_NU?$_Rb_tree_iterator@PAXU?$_ConstSetTraitsT@PAX@priv@stlp_std@@@12@@Z ; stlp_std::priv::_Rb_tree_iterator<void *,stlp_std::priv::_SetTraitsT<void *> >::operator==
PUBLIC	??0?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@QAE@ABU012@@Z ; stlp_std::priv::_Rb_tree_iterator<void *,stlp_std::priv::_SetTraitsT<void *> >::_Rb_tree_iterator<void *,stlp_std::priv::_SetTraitsT<void *> >
PUBLIC	??0?$pair@U?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@_N@stlp_std@@QAE@ABU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@1@AB_N@Z ; stlp_std::pair<stlp_std::priv::_Rb_tree_iterator<void *,stlp_std::priv::_SetTraitsT<void *> >,bool>::pair<stlp_std::priv::_Rb_tree_iterator<void *,stlp_std::priv::_SetTraitsT<void *> >,bool>
PUBLIC	??R?$_Identity@PAX@priv@stlp_std@@QBEABQAXABQAX@Z ; stlp_std::priv::_Identity<void *>::operator()
PUBLIC	?insert_unique@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@QAE?AU?$pair@U?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@_N@3@ABQAX@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::insert_unique
PUBLIC	??0?$pair@U?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@stlp_std@@_N@stlp_std@@QAE@ABU?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@1@AB_N@Z ; stlp_std::pair<stlp_std::priv::_Rb_tree_iterator<CPS_Instance *,stlp_std::priv::_SetTraitsT<CPS_Instance *> >,bool>::pair<stlp_std::priv::_Rb_tree_iterator<CPS_Instance *,stlp_std::priv::_SetTraitsT<CPS_Instance *> >,bool>
PUBLIC	?to_storage_type_cref@?$_CastTraits@PAXPAVCPS_Instance@@@priv@stlp_std@@SAABQAXABQAVCPS_Instance@@@Z ; stlp_std::priv::_CastTraits<void *,CPS_Instance *>::to_storage_type_cref
PUBLIC	?insert@?$set@PAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAE?AU?$pair@U?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@stlp_std@@_N@2@ABQAVCPS_Instance@@@Z ; stlp_std::set<CPS_Instance *,stlp_std::less<CPS_Instance *>,xalloc<CPS_Instance *> >::insert
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
;	COMDAT ??$swap@_N@stlp_std@@YAXAA_N0@Z
_TEXT	SEGMENT
??$swap@_N@stlp_std@@YAXAA_N0@Z PROC			; stlp_std::swap<bool>, COMDAT
; ___a$ = ecx
; ___b$ = eax

; 82   : #if defined (_STLP_USE_PARTIAL_SPEC_WORKAROUND) && !defined (_STLP_FUNCTION_TMPL_PARTIAL_ORDER)
; 83   : #  if !defined(__BORLANDC__)
; 84   :   typedef typename _SwapImplemented<_Tp>::_Ret _Implemented;
; 85   : #  else
; 86   :   enum { _Is = _SwapImplemented<_Tp>::_Is };
; 87   :   typedef typename __bool2type<_Is>::_Ret _Implemented;
; 88   : #  endif
; 89   :   _STLP_PRIV __swap_aux(__a, __b, _Implemented());
; 90   : #else
; 91   :   _Tp __tmp = __a;

	mov	dl, BYTE PTR [ecx]
	push	ebx

; 92   :   __a = __b;

	mov	bl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], bl

; 93   :   __b = __tmp;

	mov	BYTE PTR [eax], dl
	pop	ebx

; 94   : #endif /* _STLP_USE_PARTIAL_SPEC_WORKAROUND */
; 95   : }

	ret	0
??$swap@_N@stlp_std@@YAXAA_N0@Z ENDP			; stlp_std::swap<bool>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.c
_TEXT	ENDS
;	COMDAT ??$__find@PAPAVCPS_Instance@@PAV1@@priv@stlp_std@@YAPAPAVCPS_Instance@@PAPAV2@0ABQAV2@ABUrandom_access_iterator_tag@1@@Z
_TEXT	SEGMENT
??$__find@PAPAVCPS_Instance@@PAV1@@priv@stlp_std@@YAPAPAVCPS_Instance@@PAPAV2@0ABQAV2@ABUrandom_access_iterator_tag@1@@Z PROC ; stlp_std::priv::__find<CPS_Instance * *,CPS_Instance *>, COMDAT
; ___first$ = eax
; ___last$ = esi
; ___val$ = edi

; 108  :   _STLP_DIFFERENCE_TYPE(_RandomAccessIter) __trip_count = (__last - __first) >> 2;

	mov	ecx, esi
	sub	ecx, eax
	sar	ecx, 4

; 109  : 
; 110  :   for ( ; __trip_count > 0 ; --__trip_count) {

	test	ecx, ecx
	jle	SHORT $LN14@find@3
	mov	edx, DWORD PTR [edi]
	npad	3
$LL16@find@3:

; 111  :     if (*__first == __val) return __first;

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN8@find@3

; 112  :     ++__first;

	add	eax, 4

; 113  : 
; 114  :     if (*__first == __val) return __first;

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN8@find@3

; 115  :     ++__first;

	add	eax, 4

; 116  : 
; 117  :     if (*__first == __val) return __first;

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN8@find@3

; 118  :     ++__first;

	add	eax, 4

; 119  : 
; 120  :     if (*__first == __val) return __first;

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN8@find@3
	sub	ecx, 1

; 121  :     ++__first;

	add	eax, 4
	test	ecx, ecx
	jg	SHORT $LL16@find@3
$LN14@find@3:

; 122  :   }
; 123  : 
; 124  :   switch (__last - __first) {

	mov	ecx, esi
	sub	ecx, eax
	sar	ecx, 2
	sub	ecx, 1
	je	SHORT $LN3@find@3
	sub	ecx, 1
	je	SHORT $LN5@find@3
	sub	ecx, 1
	jne	SHORT $LN2@find@3

; 125  :   case 3:
; 126  :     if (*__first == __val) return __first;

	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [edi]
	je	SHORT $LN8@find@3

; 127  :     ++__first;

	add	eax, 4
$LN5@find@3:

; 128  :   case 2:
; 129  :     if (*__first == __val) return __first;

	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [edi]
	je	SHORT $LN8@find@3

; 130  :     ++__first;

	add	eax, 4
$LN3@find@3:

; 131  :   case 1:
; 132  :     if (*__first == __val) return __first;

	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [edi]
	je	SHORT $LN8@find@3
$LN2@find@3:

; 133  :     //++__first;
; 134  :   case 0:
; 135  :   default:
; 136  :     return __last;

	mov	eax, esi
$LN8@find@3:

; 137  :   }
; 138  : }

	ret	0
??$__find@PAPAVCPS_Instance@@PAV1@@priv@stlp_std@@YAPAPAVCPS_Instance@@PAPAV2@0ABQAV2@ABUrandom_access_iterator_tag@1@@Z ENDP ; stlp_std::priv::__find<CPS_Instance * *,CPS_Instance *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_TEXT	ENDS
;	COMDAT ?cv_cref@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAABQAXABQAX@Z
_TEXT	SEGMENT
?cv_cref@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAABQAXABQAX@Z PROC ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_cref, COMDAT
; ___ref$ = eax

; 157  :   { return __ref; }

	ret	0
?cv_cref@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAABQAXABQAX@Z ENDP ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_cref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_value_type_cref@?$_CastTraits@PAXPAVCPS_Instance@@@priv@stlp_std@@SAABQAVCPS_Instance@@ABQAX@Z
_TEXT	SEGMENT
?to_value_type_cref@?$_CastTraits@PAXPAVCPS_Instance@@@priv@stlp_std@@SAABQAVCPS_Instance@@ABQAX@Z PROC ; stlp_std::priv::_CastTraits<void *,CPS_Instance *>::to_value_type_cref, COMDAT
; ___ptr$ = eax

; 215  :   { return __REINTERPRET_CAST(value_type const&, cv_traits::cv_cref(__ptr)); }

	ret	0
?to_value_type_cref@?$_CastTraits@PAXPAVCPS_Instance@@@priv@stlp_std@@SAABQAVCPS_Instance@@ABQAX@Z ENDP ; stlp_std::priv::_CastTraits<void *,CPS_Instance *>::to_value_type_cref
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_function_base.h
_TEXT	ENDS
;	COMDAT ??R?$less@PAVCPS_Instance@@@stlp_std@@QBE_NABQAVCPS_Instance@@0@Z
_TEXT	SEGMENT
??R?$less@PAVCPS_Instance@@@stlp_std@@QBE_NABQAVCPS_Instance@@0@Z PROC ; stlp_std::less<CPS_Instance *>::operator(), COMDAT
; ___x$ = eax
; ___y$ = edx

; 67   :   bool operator()(const _Tp& __x, const _Tp& __y) const { return __x < __y; }

	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [edx]
	sbb	eax, eax
	neg	eax
	ret	0
??R?$less@PAVCPS_Instance@@@stlp_std@@QBE_NABQAVCPS_Instance@@0@Z ENDP ; stlp_std::less<CPS_Instance *>::operator()
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
_TEXT	ENDS
;	COMDAT ??R?$xr_special_free@$00VCPS_Instance@@@@QAEXAAPAVCPS_Instance@@@Z
_TEXT	SEGMENT
??R?$xr_special_free@$00VCPS_Instance@@@@QAEXAAPAVCPS_Instance@@@Z PROC ; xr_special_free<1,CPS_Instance>::operator(), COMDAT
; _ptr$ = esi

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	mov	eax, DWORD PTR [esi]
	push	edi
	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx]
	add	esp, 4
	mov	edi, eax
	mov	eax, DWORD PTR [edx+32]
	push	0
	call	eax

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	pop	edi

; 135  : 	}

	ret	0
??R?$xr_special_free@$00VCPS_Instance@@@@QAEXAAPAVCPS_Instance@@@Z ENDP ; xr_special_free<1,CPS_Instance>::operator()
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_function_base.h
_TEXT	ENDS
;	COMDAT ??R?$_Identity@PAX@priv@stlp_std@@QBEABQAXABQAX@Z
_TEXT	SEGMENT
??R?$_Identity@PAX@priv@stlp_std@@QBEABQAXABQAX@Z PROC	; stlp_std::priv::_Identity<void *>::operator(), COMDAT
; ___x$ = eax

; 169  :   const _Tp& operator()(const _Tp& __x) const { return __x; }

	ret	0
??R?$_Identity@PAX@priv@stlp_std@@QBEABQAXABQAX@Z ENDP	; stlp_std::priv::_Identity<void *>::operator()
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.h
_TEXT	ENDS
;	COMDAT ??8?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@QBE_NU?$_Rb_tree_iterator@PAXU?$_ConstSetTraitsT@PAX@priv@stlp_std@@@12@@Z
_TEXT	SEGMENT
___rhs$ = 8						; size = 4
??8?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@QBE_NU?$_Rb_tree_iterator@PAXU?$_ConstSetTraitsT@PAX@priv@stlp_std@@@12@@Z PROC ; stlp_std::priv::_Rb_tree_iterator<void *,stlp_std::priv::_SetTraitsT<void *> >::operator==, COMDAT
; _this$ = ecx

; 197  :     return _M_node == __rhs._M_node;

	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	cmp	edx, DWORD PTR ___rhs$[esp-4]
	sete	al

; 198  :   }

	ret	4
??8?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@QBE_NU?$_Rb_tree_iterator@PAXU?$_ConstSetTraitsT@PAX@priv@stlp_std@@@12@@Z ENDP ; stlp_std::priv::_Rb_tree_iterator<void *,stlp_std::priv::_SetTraitsT<void *> >::operator==
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_TEXT	ENDS
;	COMDAT ??R?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@QBE_NABQAX0@Z
_TEXT	SEGMENT
??R?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@QBE_NABQAX0@Z PROC ; stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >::operator(), COMDAT
; ___fst$ = eax
; ___snd$ = edx

; 385  :   { return _M_pred(cast_traits::to_value_type_cref(__fst), cast_traits::to_value_type_cref(__snd)); }

	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [edx]
	sbb	eax, eax
	neg	eax
	ret	0
??R?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@QBE_NABQAX0@Z ENDP ; stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >::operator()
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
_TEXT	ENDS
;	COMDAT ??$xr_delete@VCPS_Instance@@@@YAXAAPAVCPS_Instance@@@Z
_TEXT	SEGMENT
??$xr_delete@VCPS_Instance@@@@YAXAAPAVCPS_Instance@@@Z PROC ; xr_delete<CPS_Instance>, COMDAT
; _ptr$ = esi

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN1@xr_delete@5
	push	edi

; 152  : 	{
; 153  : 		xr_special_free<is_polymorphic<T>::result,T>()(ptr);

	push	eax
	call	___RTCastToVoid
	mov	ecx, DWORD PTR [esi]
	mov	edi, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+32]
	add	esp, 4
	push	0
	call	edx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 154  : 		ptr = NULL;

	mov	DWORD PTR [esi], 0
	pop	edi
$LN1@xr_delete@5:

; 155  : 	}
; 156  : }

	ret	0
??$xr_delete@VCPS_Instance@@@@YAXAAPAVCPS_Instance@@@Z ENDP ; xr_delete<CPS_Instance>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.c
_TEXT	ENDS
;	COMDAT ??$find@PAPAVCPS_Instance@@PAV1@@stlp_std@@YAPAPAVCPS_Instance@@PAPAV1@0ABQAV1@@Z
_TEXT	SEGMENT
??$find@PAPAVCPS_Instance@@PAV1@@stlp_std@@YAPAPAVCPS_Instance@@PAPAV1@0ABQAV1@@Z PROC ; stlp_std::find<CPS_Instance * *,CPS_Instance *>, COMDAT
; ___first$ = eax
; ___last$ = esi
; ___val$ = edi

; 215  :   _STLP_DEBUG_CHECK(_STLP_PRIV __check_range(__first, __last))
; 216  :   return _STLP_PRIV __find(__first, __last, __val, _STLP_ITERATOR_CATEGORY(__first, _InputIter));

	jmp	??$__find@PAPAVCPS_Instance@@PAV1@@priv@stlp_std@@YAPAPAVCPS_Instance@@PAPAV2@0ABQAV2@ABUrandom_access_iterator_tag@1@@Z ; stlp_std::priv::__find<CPS_Instance * *,CPS_Instance *>
??$find@PAPAVCPS_Instance@@PAV1@@stlp_std@@YAPAPAVCPS_Instance@@PAPAV1@0ABQAV1@@Z ENDP ; stlp_std::find<CPS_Instance * *,CPS_Instance *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_limits.h
_TEXT	ENDS
;	COMDAT ?max@?$_Integer_limits@H$0?IAAAAAAA@$0HPPPPPPP@$0?0$00@priv@stlp_std@@SAHXZ
_TEXT	SEGMENT
?max@?$_Integer_limits@H$0?IAAAAAAA@$0HPPPPPPP@$0?0$00@priv@stlp_std@@SAHXZ PROC ; stlp_std::priv::_Integer_limits<int,-2147483648,2147483647,-1,1>::max, COMDAT

; 140  :   static _Int (_STLP_CALL max) () _STLP_NOTHROW { return (_Int)__imax; }

	mov	eax, 2147483647				; 7fffffffH
	ret	0
?max@?$_Integer_limits@H$0?IAAAAAAA@$0HPPPPPPP@$0?0$00@priv@stlp_std@@SAHXZ ENDP ; stlp_std::priv::_Integer_limits<int,-2147483648,2147483647,-1,1>::max
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\ps_instance.cpp
_TEXT	ENDS
;	COMDAT ?PSI_internal_delete@CPS_Instance@@MAEXXZ
_TEXT	SEGMENT
?PSI_internal_delete@CPS_Instance@@MAEXXZ PROC		; CPS_Instance::PSI_internal_delete, COMDAT
; _this$ = ecx

; 61   : {

	push	esi
	mov	esi, ecx

; 62   : 	CPS_Instance*	self = this;
; 63   : 	xr_delete		(self);

	test	esi, esi
	je	SHORT $LN3@PSI_intern
	push	edi
	push	esi
	call	___RTCastToVoid
	mov	edi, eax
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+32]
	add	esp, 4
	push	0
	mov	ecx, esi
	call	edx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	pop	edi
$LN3@PSI_intern:
	pop	esi

; 64   : }

	ret	0
?PSI_internal_delete@CPS_Instance@@MAEXXZ ENDP		; CPS_Instance::PSI_internal_delete
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.h
;	COMDAT ??0?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@QAE@ABU012@@Z
_TEXT	SEGMENT
??0?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@QAE@ABU012@@Z PROC ; stlp_std::priv::_Rb_tree_iterator<void *,stlp_std::priv::_SetTraitsT<void *> >::_Rb_tree_iterator<void *,stlp_std::priv::_SetTraitsT<void *> >, COMDAT
; _this$ = eax
; ___it$ = ecx

; 168  :   _Rb_tree_iterator(const iterator& __it) : _Rb_tree_base_iterator(__it._M_node) {}

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	ret	0
??0?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@QAE@ABU012@@Z ENDP ; stlp_std::priv::_Rb_tree_iterator<void *,stlp_std::priv::_SetTraitsT<void *> >::_Rb_tree_iterator<void *,stlp_std::priv::_SetTraitsT<void *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??F?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ
_TEXT	SEGMENT
??F?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ PROC ; stlp_std::priv::_Rb_tree_iterator<void *,stlp_std::priv::_SetTraitsT<void *> >::operator--, COMDAT
; _this$ = esi

; 187  :     _M_node = _Rb_global_inst::_M_decrement(_M_node);

	mov	eax, DWORD PTR [esi]
	push	eax
	call	?_M_decrement@?$_Rb_global@_N@priv@stlp_std@@SAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_global<bool>::_M_decrement
	mov	DWORD PTR [esi], eax
	add	esp, 4

; 188  :     return *this;

	mov	eax, esi

; 189  :   }

	ret	0
??F?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ ENDP ; stlp_std::priv::_Rb_tree_iterator<void *,stlp_std::priv::_SetTraitsT<void *> >::operator--
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_pair.h
_TEXT	ENDS
;	COMDAT ??0?$pair@U?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@_N@stlp_std@@QAE@ABU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@1@AB_N@Z
_TEXT	SEGMENT
___b$ = 8						; size = 4
??0?$pair@U?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@_N@stlp_std@@QAE@ABU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@1@AB_N@Z PROC ; stlp_std::pair<stlp_std::priv::_Rb_tree_iterator<void *,stlp_std::priv::_SetTraitsT<void *> >,bool>::pair<stlp_std::priv::_Rb_tree_iterator<void *,stlp_std::priv::_SetTraitsT<void *> >,bool>, COMDAT
; _this$ = eax
; ___a$ = ecx

; 56   :   pair(const _T1& __a, const _T2& __b) : first(__a), second(__b) {}

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ___b$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax+4], dl
	ret	4
??0?$pair@U?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@_N@stlp_std@@QAE@ABU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@1@AB_N@Z ENDP ; stlp_std::pair<stlp_std::priv::_Rb_tree_iterator<void *,stlp_std::priv::_SetTraitsT<void *> >,bool>::pair<stlp_std::priv::_Rb_tree_iterator<void *,stlp_std::priv::_SetTraitsT<void *> >,bool>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.h
_TEXT	ENDS
;	COMDAT ?_S_key@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAABQAXPAU_Rb_tree_node_base@23@@Z
_TEXT	SEGMENT
?_S_key@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAABQAXPAU_Rb_tree_node_base@23@@Z PROC ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_key, COMDAT
; ___x$ = eax

; 354  :   { return _KeyOfValue()(_S_value(__x));}

	push	eax
	call	?_S_value@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAAAPAXPAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_value
	add	esp, 4
	ret	0
?_S_key@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAABQAXPAU_Rb_tree_node_base@23@@Z ENDP ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_key
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.c
_TEXT	ENDS
;	COMDAT ?_Rebalance_for_erase@?$_Rb_global@_N@priv@stlp_std@@SAPAU_Rb_tree_node_base@23@PAU423@AAPAU423@11@Z
_TEXT	SEGMENT
___y$ = -4						; size = 4
___root$ = 8						; size = 4
?_Rebalance_for_erase@?$_Rb_global@_N@priv@stlp_std@@SAPAU_Rb_tree_node_base@23@PAU423@AAPAU423@11@Z PROC ; stlp_std::priv::_Rb_global<bool>::_Rebalance_for_erase, COMDAT
; ___z$ = ecx
; ___leftmost$ = edx
; ___rightmost$ = eax

; 146  :                                          _Rb_tree_node_base*& __rightmost) {

	push	ecx
	push	ebx
	push	ebp
	push	esi
	push	edi

; 147  :   _Rb_tree_node_base* __y = __z;
; 148  :   _Rb_tree_node_base* __x;
; 149  :   _Rb_tree_node_base* __x_parent;
; 150  : 
; 151  :   if (__y->_M_left == 0)     // __z has at most one non-null child. y == z.

	mov	edi, DWORD PTR [ecx+8]
	test	edi, edi
	mov	esi, eax
	mov	ebx, edx
	mov	DWORD PTR ___y$[esp+20], ecx
	jne	SHORT $LN49@Rebalance_

; 152  :     __x = __y->_M_right;     // __x might be null.

	mov	ebp, DWORD PTR [ecx+12]
$LN45@Rebalance_:

; 186  :     __x_parent = __y->_M_parent;
; 187  :     if (__x) __x->_M_parent = __y->_M_parent;

	test	ebp, ebp
	mov	eax, DWORD PTR ___y$[esp+20]
	mov	edi, DWORD PTR [eax+4]
	je	SHORT $LN36@Rebalance_
	mov	DWORD PTR [ebp+4], edi
$LN36@Rebalance_:

; 188  :     if (__root == __z)

	mov	edx, DWORD PTR ___root$[esp+16]
	cmp	DWORD PTR [edx], ecx
	jne	$LN35@Rebalance_

; 189  :       __root = __x;

	mov	DWORD PTR [edx], ebp

; 190  :     else {

	jmp	$LN32@Rebalance_
$LN49@Rebalance_:

; 153  :   else {
; 154  :     if (__y->_M_right == 0)  // __z has exactly one non-null child. y == z.

	mov	eax, DWORD PTR [ecx+12]
	test	eax, eax
	jne	SHORT $LN47@Rebalance_

; 155  :       __x = __y->_M_left;    // __x is not null.

	mov	ebp, edi

; 156  :     else {                   // __z has two non-null children.  Set __y to

	jmp	SHORT $LN45@Rebalance_
$LN47@Rebalance_:

; 157  :       __y = _Rb_tree_node_base::_S_minimum(__y->_M_right);   //   __z's successor.  __x might be null.

	mov	edx, DWORD PTR [eax+8]
	test	edx, edx
	je	SHORT $LN52@Rebalance_
	npad	6
$LL53@Rebalance_:
	mov	eax, edx
	mov	edx, DWORD PTR [eax+8]
	test	edx, edx
	jne	SHORT $LL53@Rebalance_
$LN52@Rebalance_:

; 158  :       __x = __y->_M_right;
; 159  :     }
; 160  :   }
; 161  : 
; 162  :   if (__y != __z) {          // relink y in place of z.  y is z's successor

	cmp	eax, ecx
	mov	ebp, DWORD PTR [eax+12]
	mov	DWORD PTR ___y$[esp+20], eax
	je	SHORT $LN45@Rebalance_

; 163  :     __z->_M_left->_M_parent = __y;

	mov	DWORD PTR [edi+4], eax

; 164  :     __y->_M_left = __z->_M_left;

	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 165  :     if (__y != __z->_M_right) {

	cmp	eax, DWORD PTR [ecx+12]
	je	SHORT $LN44@Rebalance_

; 166  :       __x_parent = __y->_M_parent;
; 167  :       if (__x) __x->_M_parent = __y->_M_parent;

	test	ebp, ebp
	mov	edi, DWORD PTR [eax+4]
	je	SHORT $LN43@Rebalance_
	mov	DWORD PTR [ebp+4], edi
$LN43@Rebalance_:

; 168  :       __y->_M_parent->_M_left = __x;      // __y must be a child of _M_left

	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ebp

; 169  :       __y->_M_right = __z->_M_right;

	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx

; 170  :       __z->_M_right->_M_parent = __y;

	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [edx+4], eax

; 171  :     }
; 172  :     else

	jmp	SHORT $LN42@Rebalance_
$LN44@Rebalance_:

; 173  :       __x_parent = __y;

	mov	edi, eax
$LN42@Rebalance_:

; 174  :     if (__root == __z)

	mov	edx, DWORD PTR ___root$[esp+16]
	cmp	DWORD PTR [edx], ecx
	jne	SHORT $LN41@Rebalance_

; 175  :       __root = __y;

	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN38@Rebalance_
$LN41@Rebalance_:

; 176  :     else if (__z->_M_parent->_M_left == __z)

	mov	edx, DWORD PTR [ecx+4]
	cmp	DWORD PTR [edx+8], ecx
	jne	SHORT $LN39@Rebalance_

; 177  :       __z->_M_parent->_M_left = __y;

	mov	DWORD PTR [edx+8], eax

; 178  :     else

	jmp	SHORT $LN38@Rebalance_
$LN39@Rebalance_:

; 179  :       __z->_M_parent->_M_right = __y;

	mov	DWORD PTR [edx+12], eax
$LN38@Rebalance_:

; 180  :     __y->_M_parent = __z->_M_parent;

	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 181  :     _STLP_STD::swap(__y->_M_color, __z->_M_color);

	mov	dl, BYTE PTR [eax]
	mov	bl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], bl
	mov	BYTE PTR [ecx], dl

; 182  :     __y = __z;
; 183  :     // __y now points to node to be actually deleted
; 184  :   }
; 185  :   else {                        // __y == __z

	mov	edx, DWORD PTR ___root$[esp+16]
	mov	DWORD PTR ___y$[esp+20], ecx
	jmp	SHORT $LN89@Rebalance_
$LN35@Rebalance_:

; 191  :       if (__z->_M_parent->_M_left == __z)

	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax+8], ecx
	jne	SHORT $LN33@Rebalance_

; 192  :         __z->_M_parent->_M_left = __x;

	mov	DWORD PTR [eax+8], ebp

; 193  :       else

	jmp	SHORT $LN32@Rebalance_
$LN33@Rebalance_:

; 194  :         __z->_M_parent->_M_right = __x;

	mov	DWORD PTR [eax+12], ebp
$LN32@Rebalance_:

; 195  :     }
; 196  : 
; 197  :     if (__leftmost == __z) {

	cmp	DWORD PTR [ebx], ecx
	jne	SHORT $LN29@Rebalance_

; 198  :       if (__z->_M_right == 0)        // __z->_M_left must be null also

	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $LN30@Rebalance_

; 199  :         __leftmost = __z->_M_parent;

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [ebx], eax

; 200  :     // makes __leftmost == _M_header if __z == __root
; 201  :       else

	jmp	SHORT $LN29@Rebalance_
$LN30@Rebalance_:

; 202  :         __leftmost = _Rb_tree_node_base::_S_minimum(__x);

	mov	eax, DWORD PTR [ebp+8]
	test	eax, eax
	mov	edx, ebp
	je	SHORT $LN58@Rebalance_
$LL59@Rebalance_:
	mov	edx, eax
	mov	eax, DWORD PTR [edx+8]
	test	eax, eax
	jne	SHORT $LL59@Rebalance_
$LN58@Rebalance_:
	mov	DWORD PTR [ebx], edx
	mov	edx, DWORD PTR ___root$[esp+16]
$LN29@Rebalance_:

; 203  :     }
; 204  :     if (__rightmost == __z) {

	cmp	DWORD PTR [esi], ecx
	jne	SHORT $LN89@Rebalance_

; 205  :       if (__z->_M_left == 0)         // __z->_M_right must be null also

	cmp	DWORD PTR [ecx+8], 0
	jne	SHORT $LN27@Rebalance_

; 206  :         __rightmost = __z->_M_parent;

	mov	ecx, DWORD PTR [ecx+4]

; 207  :     // makes __rightmost == _M_header if __z == __root
; 208  :       else                      // __x == __z->_M_left

	jmp	SHORT $LN62@Rebalance_
$LN27@Rebalance_:

; 209  :         __rightmost = _Rb_tree_node_base::_S_maximum(__x);

	mov	eax, DWORD PTR [ebp+12]
	test	eax, eax
	mov	ecx, ebp
	je	SHORT $LN62@Rebalance_
$LL63@Rebalance_:
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx+12]
	test	eax, eax
	jne	SHORT $LL63@Rebalance_
$LN62@Rebalance_:
	mov	DWORD PTR [esi], ecx
$LN89@Rebalance_:

; 210  :     }
; 211  :   }
; 212  : 
; 213  :   if (__y->_M_color != _S_rb_tree_red) {

	mov	eax, DWORD PTR ___y$[esp+20]
	cmp	BYTE PTR [eax], 0
	je	$LN1@Rebalance_

; 214  :     while (__x != __root && (__x == 0 || __x->_M_color == _S_rb_tree_black))

	cmp	ebp, DWORD PTR [edx]
	je	$LN23@Rebalance_
$LL24@Rebalance_:
	test	ebp, ebp
	je	SHORT $LN22@Rebalance_
	cmp	BYTE PTR [ebp], 1
	jne	$LN23@Rebalance_
$LN22@Rebalance_:

; 215  :       if (__x == __x_parent->_M_left) {

	mov	ecx, DWORD PTR [edi+8]
	cmp	ebp, ecx
	jne	$LN21@Rebalance_

; 216  :         _Rb_tree_node_base* __w = __x_parent->_M_right;

	mov	ecx, DWORD PTR [edi+12]

; 217  :         if (__w->_M_color == _S_rb_tree_red) {

	cmp	BYTE PTR [ecx], 0
	jne	SHORT $LN20@Rebalance_

; 218  :           __w->_M_color = _S_rb_tree_black;

	mov	BYTE PTR [ecx], 1

; 219  :           __x_parent->_M_color = _S_rb_tree_red;
; 220  :           _Rotate_left(__x_parent, __root);

	mov	eax, DWORD PTR [edi+12]
	mov	BYTE PTR [edi], 0
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edi+12], ecx
	mov	ecx, DWORD PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN70@Rebalance_
	mov	DWORD PTR [ecx+4], edi
$LN70@Rebalance_:
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], ecx
	cmp	edi, DWORD PTR [edx]
	jne	SHORT $LN69@Rebalance_
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN66@Rebalance_
$LN69@Rebalance_:
	mov	ecx, DWORD PTR [edi+4]
	cmp	edi, DWORD PTR [ecx+8]
	jne	SHORT $LN67@Rebalance_
	mov	DWORD PTR [ecx+8], eax
	jmp	SHORT $LN66@Rebalance_
$LN67@Rebalance_:
	mov	DWORD PTR [ecx+12], eax
$LN66@Rebalance_:
	mov	DWORD PTR [eax+8], edi

; 221  :           __w = __x_parent->_M_right;

	mov	ecx, DWORD PTR [edi+12]
	mov	DWORD PTR [edi+4], eax
$LN20@Rebalance_:

; 222  :         }
; 223  :         if ((__w->_M_left == 0 ||
; 224  :              __w->_M_left->_M_color == _S_rb_tree_black) && (__w->_M_right == 0 ||
; 225  :              __w->_M_right->_M_color == _S_rb_tree_black)) {

	mov	eax, DWORD PTR [ecx+8]
	test	eax, eax
	je	SHORT $LN18@Rebalance_
	cmp	BYTE PTR [eax], 1
	jne	SHORT $LN19@Rebalance_
$LN18@Rebalance_:
	mov	eax, DWORD PTR [ecx+12]
	test	eax, eax
	je	$LN7@Rebalance_
	cmp	BYTE PTR [eax], 1
	je	$LN7@Rebalance_
$LN19@Rebalance_:

; 226  :           __w->_M_color = _S_rb_tree_red;
; 227  :           __x = __x_parent;
; 228  :           __x_parent = __x_parent->_M_parent;
; 229  :         } else {
; 230  :           if (__w->_M_right == 0 ||
; 231  :               __w->_M_right->_M_color == _S_rb_tree_black) {

	mov	eax, DWORD PTR [ecx+12]
	test	eax, eax
	je	SHORT $LN14@Rebalance_
	cmp	BYTE PTR [eax], 1
	jne	SHORT $LN15@Rebalance_
$LN14@Rebalance_:

; 232  :             if (__w->_M_left) __w->_M_left->_M_color = _S_rb_tree_black;

	mov	eax, DWORD PTR [ecx+8]
	test	eax, eax
	je	SHORT $LN13@Rebalance_
	mov	BYTE PTR [eax], 1
$LN13@Rebalance_:

; 233  :             __w->_M_color = _S_rb_tree_red;
; 234  :             _Rotate_right(__w, __root);

	mov	esi, DWORD PTR ___root$[esp+16]
	mov	BYTE PTR [ecx], 0
	call	?_Rotate_right@?$_Rb_global@_N@priv@stlp_std@@SAXPAU_Rb_tree_node_base@23@AAPAU423@@Z ; stlp_std::priv::_Rb_global<bool>::_Rotate_right

; 235  :             __w = __x_parent->_M_right;

	mov	ecx, DWORD PTR [edi+12]
$LN15@Rebalance_:

; 236  :           }
; 237  :           __w->_M_color = __x_parent->_M_color;

	mov	dl, BYTE PTR [edi]
	mov	BYTE PTR [ecx], dl

; 238  :           __x_parent->_M_color = _S_rb_tree_black;

	mov	BYTE PTR [edi], 1

; 239  :           if (__w->_M_right) __w->_M_right->_M_color = _S_rb_tree_black;

	mov	ecx, DWORD PTR [ecx+12]
	test	ecx, ecx
	je	SHORT $LN12@Rebalance_
	mov	BYTE PTR [ecx], 1
$LN12@Rebalance_:

; 240  :           _Rotate_left(__x_parent, __root);

	mov	esi, DWORD PTR ___root$[esp+16]
	mov	ecx, edi
	call	?_Rotate_left@?$_Rb_global@_N@priv@stlp_std@@SAXPAU_Rb_tree_node_base@23@AAPAU423@@Z ; stlp_std::priv::_Rb_global<bool>::_Rotate_left

; 241  :           break;

	jmp	$LN23@Rebalance_
$LN21@Rebalance_:

; 242  :         }
; 243  :       } else {                  // same as above, with _M_right <-> _M_left.
; 244  :         _Rb_tree_node_base* __w = __x_parent->_M_left;
; 245  :         if (__w->_M_color == _S_rb_tree_red) {

	cmp	BYTE PTR [ecx], 0
	jne	SHORT $LN10@Rebalance_

; 246  :           __w->_M_color = _S_rb_tree_black;

	mov	BYTE PTR [ecx], 1

; 247  :           __x_parent->_M_color = _S_rb_tree_red;
; 248  :           _Rotate_right(__x_parent, __root);

	mov	eax, DWORD PTR [edi+8]
	mov	BYTE PTR [edi], 0
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edi+8], ecx
	mov	ecx, DWORD PTR [eax+12]
	test	ecx, ecx
	je	SHORT $LN77@Rebalance_
	mov	DWORD PTR [ecx+4], edi
$LN77@Rebalance_:
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], ecx
	cmp	edi, DWORD PTR [edx]
	jne	SHORT $LN76@Rebalance_
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN73@Rebalance_
$LN76@Rebalance_:
	mov	ecx, DWORD PTR [edi+4]
	cmp	edi, DWORD PTR [ecx+12]
	jne	SHORT $LN74@Rebalance_
	mov	DWORD PTR [ecx+12], eax
	jmp	SHORT $LN73@Rebalance_
$LN74@Rebalance_:
	mov	DWORD PTR [ecx+8], eax
$LN73@Rebalance_:
	mov	DWORD PTR [eax+12], edi

; 249  :           __w = __x_parent->_M_left;

	mov	ecx, DWORD PTR [edi+8]
	mov	DWORD PTR [edi+4], eax
$LN10@Rebalance_:

; 250  :         }
; 251  :         if ((__w->_M_right == 0 ||
; 252  :              __w->_M_right->_M_color == _S_rb_tree_black) && (__w->_M_left == 0 ||
; 253  :              __w->_M_left->_M_color == _S_rb_tree_black)) {

	mov	eax, DWORD PTR [ecx+12]
	test	eax, eax
	je	SHORT $LN8@Rebalance_
	cmp	BYTE PTR [eax], 1
	jne	SHORT $LN9@Rebalance_
$LN8@Rebalance_:
	mov	eax, DWORD PTR [ecx+8]
	test	eax, eax
	je	SHORT $LN7@Rebalance_
	cmp	BYTE PTR [eax], 1
	jne	SHORT $LN9@Rebalance_
$LN7@Rebalance_:

; 254  :           __w->_M_color = _S_rb_tree_red;
; 255  :           __x = __x_parent;

	mov	ebp, edi
	mov	BYTE PTR [ecx], 0
	cmp	ebp, DWORD PTR [edx]

; 256  :           __x_parent = __x_parent->_M_parent;

	mov	edi, DWORD PTR [edi+4]
	jne	$LL24@Rebalance_

; 222  :         }
; 223  :         if ((__w->_M_left == 0 ||
; 224  :              __w->_M_left->_M_color == _S_rb_tree_black) && (__w->_M_right == 0 ||
; 225  :              __w->_M_right->_M_color == _S_rb_tree_black)) {

	jmp	SHORT $LN23@Rebalance_
$LN9@Rebalance_:

; 257  :         } else {
; 258  :           if (__w->_M_left == 0 ||
; 259  :               __w->_M_left->_M_color == _S_rb_tree_black) {

	mov	eax, DWORD PTR [ecx+8]
	test	eax, eax
	je	SHORT $LN4@Rebalance_
	cmp	BYTE PTR [eax], 1
	jne	SHORT $LN5@Rebalance_
$LN4@Rebalance_:

; 260  :             if (__w->_M_right) __w->_M_right->_M_color = _S_rb_tree_black;

	mov	eax, DWORD PTR [ecx+12]
	test	eax, eax
	je	SHORT $LN3@Rebalance_
	mov	BYTE PTR [eax], 1
$LN3@Rebalance_:

; 261  :             __w->_M_color = _S_rb_tree_red;
; 262  :             _Rotate_left(__w, __root);

	mov	esi, DWORD PTR ___root$[esp+16]
	mov	BYTE PTR [ecx], 0
	call	?_Rotate_left@?$_Rb_global@_N@priv@stlp_std@@SAXPAU_Rb_tree_node_base@23@AAPAU423@@Z ; stlp_std::priv::_Rb_global<bool>::_Rotate_left

; 263  :             __w = __x_parent->_M_left;

	mov	ecx, DWORD PTR [edi+8]
$LN5@Rebalance_:

; 264  :           }
; 265  :           __w->_M_color = __x_parent->_M_color;

	mov	al, BYTE PTR [edi]
	mov	BYTE PTR [ecx], al

; 266  :           __x_parent->_M_color = _S_rb_tree_black;

	mov	BYTE PTR [edi], 1

; 267  :           if (__w->_M_left) __w->_M_left->_M_color = _S_rb_tree_black;

	mov	ecx, DWORD PTR [ecx+8]
	test	ecx, ecx
	je	SHORT $LN2@Rebalance_
	mov	BYTE PTR [ecx], 1
$LN2@Rebalance_:

; 268  :           _Rotate_right(__x_parent, __root);

	mov	esi, DWORD PTR ___root$[esp+16]
	mov	ecx, edi
	call	?_Rotate_right@?$_Rb_global@_N@priv@stlp_std@@SAXPAU_Rb_tree_node_base@23@AAPAU423@@Z ; stlp_std::priv::_Rb_global<bool>::_Rotate_right
$LN23@Rebalance_:

; 269  :           break;
; 270  :         }
; 271  :       }
; 272  :     if (__x) __x->_M_color = _S_rb_tree_black;

	test	ebp, ebp

; 273  :   }
; 274  :   return __y;

	mov	eax, DWORD PTR ___y$[esp+20]
	je	SHORT $LN1@Rebalance_

; 269  :           break;
; 270  :         }
; 271  :       }
; 272  :     if (__x) __x->_M_color = _S_rb_tree_black;

	mov	BYTE PTR [ebp], 1
$LN1@Rebalance_:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 275  : }

	pop	ecx
	ret	0
?_Rebalance_for_erase@?$_Rb_global@_N@priv@stlp_std@@SAPAU_Rb_tree_node_base@23@PAU423@AAPAU423@11@Z ENDP ; stlp_std::priv::_Rb_global<bool>::_Rebalance_for_erase
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_TEXT	ENDS
;	COMDAT ?to_storage_type_cref@?$_CastTraits@PAXPAVCPS_Instance@@@priv@stlp_std@@SAABQAXABQAVCPS_Instance@@@Z
_TEXT	SEGMENT
?to_storage_type_cref@?$_CastTraits@PAXPAVCPS_Instance@@@priv@stlp_std@@SAABQAXABQAVCPS_Instance@@@Z PROC ; stlp_std::priv::_CastTraits<void *,CPS_Instance *>::to_storage_type_cref, COMDAT
; ___ref$ = eax

; 224  :   { return cv_traits::uncv_cref(__REINTERPRET_CAST(void_cv_type const&, __ref)); }

	ret	0
?to_storage_type_cref@?$_CastTraits@PAXPAVCPS_Instance@@@priv@stlp_std@@SAABQAXABQAVCPS_Instance@@@Z ENDP ; stlp_std::priv::_CastTraits<void *,CPS_Instance *>::to_storage_type_cref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_value_type_ptr@?$_CastTraits@PAXPAVCPS_Instance@@@priv@stlp_std@@SAPAPAVCPS_Instance@@PAPAX@Z
_TEXT	SEGMENT
?to_value_type_ptr@?$_CastTraits@PAXPAVCPS_Instance@@@priv@stlp_std@@SAPAPAVCPS_Instance@@PAPAX@Z PROC ; stlp_std::priv::_CastTraits<void *,CPS_Instance *>::to_value_type_ptr, COMDAT
; ___ptr$ = eax

; 207  :   { return __REINTERPRET_CAST(value_type *, cv_traits::cv_ptr(__ptr)); }

	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	ret	0
?to_value_type_ptr@?$_CastTraits@PAXPAVCPS_Instance@@@priv@stlp_std@@SAPAPAVCPS_Instance@@PAPAX@Z ENDP ; stlp_std::priv::_CastTraits<void *,CPS_Instance *>::to_value_type_ptr
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.h
_TEXT	ENDS
;	COMDAT ?erase@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@QAEXU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@23@@Z
_TEXT	SEGMENT
___pos$ = 8						; size = 4
?erase@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@QAEXU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@23@@Z PROC ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::erase, COMDAT
; _this$ = esi

; 488  :     _Base_ptr __x = _Rb_global_inst::_Rebalance_for_erase(__pos._M_node,
; 489  :                                                           this->_M_header._M_data._M_parent,
; 490  :                                                           this->_M_header._M_data._M_left,
; 491  :                                                           this->_M_header._M_data._M_right);

	lea	ecx, DWORD PTR [esi+4]
	push	edi
	push	ecx
	mov	ecx, DWORD PTR ___pos$[esp+4]
	lea	eax, DWORD PTR [esi+12]
	lea	edx, DWORD PTR [esi+8]
	call	?_Rebalance_for_erase@?$_Rb_global@_N@priv@stlp_std@@SAPAU_Rb_tree_node_base@23@PAU423@AAPAU423@11@Z ; stlp_std::priv::_Rb_global<bool>::_Rebalance_for_erase
	mov	edi, eax

; 492  :     _STLP_STD::_Destroy(&_S_value(__x));

	push	edi
	call	?_S_value@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAAAPAXPAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_value
	push	eax
	call	??$_Destroy@PAX@stlp_std@@YAXPAPAX@Z	; stlp_std::_Destroy<void *>
	add	esp, 12					; 0000000cH

; 493  :     this->_M_header.deallocate(__STATIC_CAST(_Link_type, __x), 1);

	push	1
	push	edi
	mov	ecx, esi
	call	?deallocate@?$xalloc@U?$_Rb_tree_node@PAX@priv@stlp_std@@@@QBEXPAU?$_Rb_tree_node@PAX@priv@stlp_std@@I@Z ; xalloc<stlp_std::priv::_Rb_tree_node<void *> >::deallocate

; 494  :     --_M_node_count;

	add	DWORD PTR [esi+16], -1
	pop	edi

; 495  :   }

	ret	4
?erase@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@QAEXU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@23@@Z ENDP ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::erase
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVCPS_Instance@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAEPAPAVCPS_Instance@@XZ
_TEXT	SEGMENT
?end@?$vector@PAVCPS_Instance@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAEPAPAVCPS_Instance@@XZ PROC ; stlp_std::vector<CPS_Instance *,xalloc<CPS_Instance *> >::end, COMDAT
; _this$ = eax

; 81   :   iterator end()               { return cast_traits::to_value_type_ptr(_M_impl.end()); }

	mov	eax, DWORD PTR [eax+4]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	ret	0
?end@?$vector@PAVCPS_Instance@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAEPAPAVCPS_Instance@@XZ ENDP ; stlp_std::vector<CPS_Instance *,xalloc<CPS_Instance *> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAVCPS_Instance@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAEPAPAVCPS_Instance@@XZ
_TEXT	SEGMENT
?begin@?$vector@PAVCPS_Instance@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAEPAPAVCPS_Instance@@XZ PROC ; stlp_std::vector<CPS_Instance *,xalloc<CPS_Instance *> >::begin, COMDAT
; _this$ = eax

; 79   :   iterator begin()             { return cast_traits::to_value_type_ptr(_M_impl.begin()); }

	mov	eax, DWORD PTR [eax]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	ret	0
?begin@?$vector@PAVCPS_Instance@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAEPAPAVCPS_Instance@@XZ ENDP ; stlp_std::vector<CPS_Instance *,xalloc<CPS_Instance *> >::begin
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\ps_instance.cpp
_TEXT	ENDS
;	COMDAT ?shedule_Update@CPS_Instance@@UAEXI@Z
_TEXT	SEGMENT
_dt$ = 8						; size = 4
?shedule_Update@CPS_Instance@@UAEXI@Z PROC		; CPS_Instance::shedule_Update, COMDAT
; _this$ = ecx

; 41   : {

	push	esi
	mov	esi, ecx

; 42   : 	if (renderable.pROS)			::Render->ros_destroy	(renderable.pROS);	//. particles doesn't need ROS

	cmp	DWORD PTR [esi+80], 0
	lea	eax, DWORD PTR [esi+80]
	je	SHORT $LN3@shedule_Up
	mov	ecx, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+120]
	call	eax
$LN3@shedule_Up:

; 43   : 
; 44   : 	ISheduled::shedule_Update		(dt);
; 45   : 	m_iLifeTime						-= dt;

	mov	ecx, DWORD PTR _dt$[esp]
	sub	DWORD PTR [esi+92], ecx

; 46   : 
; 47   : 	// remove???
; 48   : 	if (m_bDead)					return;

	cmp	DWORD PTR [esi+100], 0
	mov	eax, DWORD PTR [esi+92]
	jne	SHORT $LN1@shedule_Up

; 49   : 	if (m_bAutoRemove && m_iLifeTime<=0)

	cmp	DWORD PTR [esi+96], 0
	je	SHORT $LN1@shedule_Up
	test	eax, eax
	jg	SHORT $LN1@shedule_Up

; 50   : 		PSI_destroy					();

	mov	edx, DWORD PTR [esi-52]
	mov	eax, DWORD PTR [edx+40]
	lea	ecx, DWORD PTR [esi-52]
	call	eax
$LN1@shedule_Up:
	pop	esi

; 51   : }

	ret	4
?shedule_Update@CPS_Instance@@UAEXI@Z ENDP		; CPS_Instance::shedule_Update
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.h
;	COMDAT ??$_M_find@PAX@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@ABEPAU_Rb_tree_node_base@12@ABQAX@Z
_TEXT	SEGMENT
___k$ = 8						; size = 4
??$_M_find@PAX@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@ABEPAU_Rb_tree_node_base@12@ABQAX@Z PROC ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_find<void *>, COMDAT
; _this$ = ebx

; 543  :   _Base_ptr _M_find(const _KT& __k) const {

	push	ebp
	mov	ebp, DWORD PTR ___k$[esp]
	push	esi
	push	edi

; 544  :     _Base_ptr __y = __CONST_CAST(_Base_ptr, &this->_M_header._M_data);      // Last node which is not less than __k.
; 545  :     _Base_ptr __x = _M_root();      // Current node.

	mov	ecx, ebx
	mov	edi, ebx
	call	?_M_root@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@IBEPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_root
	mov	esi, eax

; 546  : 
; 547  :     while (__x != 0)

	test	esi, esi
	je	SHORT $LN54@M_find@4
$LL6@M_find@4:

; 548  :       if (!_M_key_compare(_S_key(__x), __k))

	push	esi
	call	?_S_value@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAAAPAXPAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_value
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	eax, DWORD PTR [ebp]

; 549  :         __y = __x, __x = _S_left(__x);

	push	esi
	jb	SHORT $LN4@M_find@4
	mov	edi, esi
	call	?_S_left@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_left

; 550  :       else

	jmp	SHORT $LN55@M_find@4
$LN4@M_find@4:

; 551  :         __x = _S_right(__x);

	call	?_S_right@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_right
$LN55@M_find@4:
	mov	esi, DWORD PTR [eax]
	add	esp, 4
	test	esi, esi
	jne	SHORT $LL6@M_find@4

; 552  : 
; 553  :     if (__y != &this->_M_header._M_data) {

	cmp	edi, ebx
	je	SHORT $LN54@M_find@4

; 554  :       if (_M_key_compare(__k, _S_key(__y))) {

	push	edi
	call	?_S_value@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAAAPAXPAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_value
	mov	ecx, DWORD PTR [ebp]
	add	esp, 4
	cmp	ecx, DWORD PTR [eax]

; 555  :         __y = __CONST_CAST(_Base_ptr, &this->_M_header._M_data);
; 556  :       }
; 557  :     }
; 558  :     return __y;

	mov	eax, ebx
	jb	SHORT $LN1@M_find@4
$LN54@M_find@4:
	mov	eax, edi
$LN1@M_find@4:
	pop	edi
	pop	esi
	pop	ebp

; 559  :   }

	ret	4
??$_M_find@PAX@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@ABEPAU_Rb_tree_node_base@12@ABQAX@Z ENDP ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_find<void *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$find@PAX@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@QAE?AU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@12@ABQAX@Z
_TEXT	SEGMENT
??$find@PAX@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@QAE?AU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@12@ABQAX@Z PROC ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::find<void *>, COMDAT
; _this$ = ebx
; ___$ReturnUdt$ = esi
; ___k$ = eax

; 538  :   iterator find(const _KT& __k) { return iterator(_M_find(__k)); }

	push	eax
	call	??$_M_find@PAX@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@ABEPAU_Rb_tree_node_base@12@ABQAX@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_find<void *>
	mov	DWORD PTR [esi], eax
	mov	eax, esi
	ret	0
??$find@PAX@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@QAE?AU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@12@ABQAX@Z ENDP ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::find<void *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.c
_TEXT	ENDS
;	COMDAT ?_M_insert@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@23@PAU_Rb_tree_node_base@23@ABQAX00@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___on_left$ = 12					; size = 4
?_M_insert@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@23@PAU_Rb_tree_node_base@23@ABQAX00@Z PROC ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_insert, COMDAT
; _this$ = ebx
; ___parent$ = ecx
; ___val$ = eax

; 353  :                                                                       _Rb_tree_node_base * __on_right) {

	push	ebp
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp]
	push	esi
	push	edi
	mov	edi, ecx

; 354  :   // We do not create the node here as, depending on tests, we might call
; 355  :   // _M_key_compare that can throw an exception.
; 356  :   _Base_ptr __new_node;
; 357  : 
; 358  :   if ( __parent == &this->_M_header._M_data ) {

	cmp	edi, ebx
	mov	esi, eax
	jne	SHORT $LN7@M_insert@3

; 359  :     __new_node = _M_create_node(__val);

	push	esi
	mov	ecx, ebx
	call	?_M_create_node@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@IAEPAU_Rb_tree_node_base@23@ABQAX@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_create_node

; 360  :     _S_left(__parent) = __new_node;   // also makes _M_leftmost() = __new_node

	push	edi
	mov	esi, eax
	call	?_S_left@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_left
	add	esp, 4

; 361  :     _M_root() = __new_node;

	mov	ecx, ebx
	mov	DWORD PTR [eax], esi
	call	?_M_root@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_root
	mov	DWORD PTR [eax], esi

; 362  :     _M_rightmost() = __new_node;
; 363  :   }
; 364  :   else if ( __on_right == 0 &&     // If __on_right != 0, the remainder fails to false

	jmp	SHORT $LN54@M_insert@3
$LN7@M_insert@3:

; 365  :            ( __on_left != 0 ||     // If __on_left != 0, the remainder succeeds to true
; 366  :              _M_key_compare( _KeyOfValue()(__val), _S_key(__parent) ) ) ) {

	cmp	DWORD PTR ___on_left$[esp+8], 0
	jne	SHORT $LN4@M_insert@3
	push	edi
	call	?_S_value@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAAAPAXPAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_value
	mov	ecx, DWORD PTR [esi]
	add	esp, 4
	cmp	ecx, DWORD PTR [eax]
	jae	SHORT $LN5@M_insert@3
$LN4@M_insert@3:

; 367  :     __new_node = _M_create_node(__val);

	push	esi
	mov	ecx, ebx
	call	?_M_create_node@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@IAEPAU_Rb_tree_node_base@23@ABQAX@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_create_node

; 368  :     _S_left(__parent) = __new_node;

	push	edi
	mov	esi, eax
	call	?_S_left@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_left
	add	esp, 4

; 369  :     if (__parent == _M_leftmost())

	mov	ecx, ebx
	mov	DWORD PTR [eax], esi
	call	?_M_leftmost@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_leftmost
	cmp	edi, DWORD PTR [eax]
	jne	SHORT $LN1@M_insert@3

; 370  :       _M_leftmost() = __new_node;   // maintain _M_leftmost() pointing to min node

	mov	ecx, ebx
	call	?_M_leftmost@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_leftmost

; 371  :   }
; 372  :   else {

	jmp	SHORT $LN55@M_insert@3
$LN5@M_insert@3:

; 373  :     __new_node = _M_create_node(__val);

	push	esi
	mov	ecx, ebx
	call	?_M_create_node@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@IAEPAU_Rb_tree_node_base@23@ABQAX@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_create_node

; 374  :     _S_right(__parent) = __new_node;

	push	edi
	mov	esi, eax
	call	?_S_right@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_right
	add	esp, 4

; 375  :     if (__parent == _M_rightmost())

	mov	ecx, ebx
	mov	DWORD PTR [eax], esi
	call	?_M_rightmost@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_rightmost
	cmp	edi, DWORD PTR [eax]
	jne	SHORT $LN1@M_insert@3
$LN54@M_insert@3:

; 376  :       _M_rightmost() = __new_node;  // maintain _M_rightmost() pointing to max node

	mov	ecx, ebx
	call	?_M_rightmost@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_rightmost
$LN55@M_insert@3:
	mov	DWORD PTR [eax], esi
$LN1@M_insert@3:

; 377  :   }
; 378  :   _S_parent(__new_node) = __parent;

	push	esi
	call	?_S_parent@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_parent
	mov	DWORD PTR [eax], edi
	add	esp, 4

; 379  :   _Rb_global_inst::_Rebalance(__new_node, this->_M_header._M_data._M_parent);

	lea	edi, DWORD PTR [ebx+4]
	mov	eax, esi
	call	?_Rebalance@?$_Rb_global@_N@priv@stlp_std@@SAXPAU_Rb_tree_node_base@23@AAPAU423@@Z ; stlp_std::priv::_Rb_global<bool>::_Rebalance

; 380  :   ++_M_node_count;

	add	DWORD PTR [ebx+16], 1
	pop	edi

; 381  :   return iterator(__new_node);

	mov	DWORD PTR [ebp], esi
	pop	esi
	mov	eax, ebp
	pop	ebp

; 382  : }

	ret	8
?_M_insert@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@23@PAU_Rb_tree_node_base@23@ABQAX00@Z ENDP ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_insert
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_TEXT	ENDS
;	COMDAT ?to_storage_type_crefT@?$_CastTraits@PAXPAVCPS_Instance@@@priv@stlp_std@@SAABQAXABQAVCPS_Instance@@@Z
_TEXT	SEGMENT
?to_storage_type_crefT@?$_CastTraits@PAXPAVCPS_Instance@@@priv@stlp_std@@SAABQAXABQAVCPS_Instance@@@Z PROC ; stlp_std::priv::_CastTraits<void *,CPS_Instance *>::to_storage_type_crefT, COMDAT
; ___ref$ = eax

; 228  :   { return to_storage_type_cref(__ref); }

	ret	0
?to_storage_type_crefT@?$_CastTraits@PAXPAVCPS_Instance@@@priv@stlp_std@@SAABQAXABQAVCPS_Instance@@@Z ENDP ; stlp_std::priv::_CastTraits<void *,CPS_Instance *>::to_storage_type_crefT
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_set.h
_TEXT	ENDS
;	COMDAT ??$find@PAVCPS_Instance@@@?$set@PAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAE?AU?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@1@ABQAVCPS_Instance@@@Z
_TEXT	SEGMENT
??$find@PAVCPS_Instance@@@?$set@PAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAE?AU?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@1@ABQAVCPS_Instance@@@Z PROC ; stlp_std::set<CPS_Instance *,stlp_std::less<CPS_Instance *>,xalloc<CPS_Instance *> >::find<CPS_Instance *>, COMDAT
; _this$ = ebx
; ___$ReturnUdt$ = esi
; ___x$ = eax

; 252  :   iterator find(const _KT& __x)

	push	eax
	call	??$_M_find@PAX@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@ABEPAU_Rb_tree_node_base@12@ABQAX@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_find<void *>
	mov	DWORD PTR [esi], eax
	mov	eax, esi

; 253  :   { return _S_to_value_ite(_M_t.find(cast_traits::to_storage_type_crefT(__x))); }

	ret	0
??$find@PAVCPS_Instance@@@?$set@PAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAE?AU?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@1@ABQAVCPS_Instance@@@Z ENDP ; stlp_std::set<CPS_Instance *,stlp_std::less<CPS_Instance *>,xalloc<CPS_Instance *> >::find<CPS_Instance *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.c
_TEXT	ENDS
;	COMDAT ?insert_unique@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@QAE?AU?$pair@U?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@_N@3@ABQAX@Z
_TEXT	SEGMENT
$T293630 = 8						; size = 4
$T293627 = 8						; size = 4
_this$ = 8						; size = 4
___j$ = 12						; size = 4
___$ReturnUdt$ = 12					; size = 4
___val$ = 16						; size = 4
?insert_unique@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@QAE?AU?$pair@U?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@_N@3@ABQAX@Z PROC ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::insert_unique, COMDAT

; 406  :   _Base_ptr __y = &this->_M_header._M_data;

	mov	ecx, DWORD PTR _this$[esp-4]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp+4]
	push	esi
	push	edi
	mov	edi, ecx

; 407  :   _Base_ptr __x = _M_root();

	call	?_M_root@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_root
	mov	esi, DWORD PTR [eax]

; 408  :   bool __comp = true;
; 409  :   while (__x != 0) {

	test	esi, esi
	mov	bl, 1
	je	SHORT $LN5@insert_uni
	npad	5
$LL6@insert_uni:

; 410  :     __y = __x;
; 411  :     __comp = _M_key_compare(_KeyOfValue()(__val), _S_key(__x));

	push	esi
	mov	edi, esi
	call	?_S_value@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAAAPAXPAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_value
	mov	ecx, DWORD PTR ___val$[esp+16]
	mov	edx, DWORD PTR [ecx]
	add	esp, 4
	cmp	edx, DWORD PTR [eax]

; 412  :     __x = __comp ? _S_left(__x) : _S_right(__x);

	push	esi
	setb	bl
	test	bl, bl
	je	SHORT $LN9@insert_uni
	call	?_S_left@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_left
	jmp	SHORT $LN98@insert_uni
$LN9@insert_uni:
	call	?_S_right@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_right
$LN98@insert_uni:
	mov	esi, DWORD PTR [eax]
	add	esp, 4
	test	esi, esi
	jne	SHORT $LL6@insert_uni
$LN5@insert_uni:

; 413  :   }
; 414  :   iterator __j = iterator(__y);
; 415  :   if (__comp) {

	test	bl, bl

; 416  :     if (__j == begin())

	mov	ebx, DWORD PTR _this$[esp+12]
	mov	DWORD PTR ___j$[esp+12], edi
	je	SHORT $LN61@insert_uni
	mov	ecx, ebx
	call	?_M_leftmost@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_leftmost
	cmp	edi, DWORD PTR [eax]

; 417  :       return pair<iterator,bool>(_M_insert(__y, __val, /* __x*/ __y), true);

	push	edi
	jne	SHORT $LN3@insert_uni
	lea	eax, DWORD PTR $T293627[esp+16]
	push	eax
	mov	eax, DWORD PTR ___val$[esp+20]
	mov	ecx, edi
	call	?_M_insert@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@23@PAU_Rb_tree_node_base@23@ABQAX00@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_insert
	mov	ecx, DWORD PTR [eax]
	pop	edi
	pop	esi
	mov	BYTE PTR [ebp+4], 1

; 423  :   }
; 424  :   return pair<iterator,bool>(__j, false);

	mov	DWORD PTR [ebp], ecx
	mov	eax, ebp
	pop	ebp
	pop	ebx

; 425  : }

	ret	12					; 0000000cH
$LN3@insert_uni:

; 418  :     else
; 419  :       --__j;

	call	?_M_decrement@?$_Rb_global@_N@priv@stlp_std@@SAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_global<bool>::_M_decrement
	add	esp, 4
	mov	DWORD PTR ___j$[esp+12], eax
$LN61@insert_uni:

; 420  :   }
; 421  :   if (_M_key_compare(_S_key(__j._M_node), _KeyOfValue()(__val))) {

	mov	edx, DWORD PTR ___j$[esp+12]
	push	edx
	call	?_S_value@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAAAPAXPAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_value
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___val$[esp+16]
	add	esp, 4
	cmp	ecx, DWORD PTR [eax]
	jae	SHORT $LN1@insert_uni

; 422  :     return pair<iterator,bool>(_M_insert(__y, __val, __x), true);

	push	esi
	lea	edx, DWORD PTR $T293630[esp+16]
	push	edx
	mov	ecx, edi
	call	?_M_insert@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@23@PAU_Rb_tree_node_base@23@ABQAX00@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_insert
	mov	eax, DWORD PTR [eax]
	pop	edi
	mov	DWORD PTR [ebp], eax
	pop	esi
	mov	BYTE PTR [ebp+4], 1

; 423  :   }
; 424  :   return pair<iterator,bool>(__j, false);

	mov	eax, ebp
	pop	ebp
	pop	ebx

; 425  : }

	ret	12					; 0000000cH
$LN1@insert_uni:

; 423  :   }
; 424  :   return pair<iterator,bool>(__j, false);

	mov	ecx, DWORD PTR ___j$[esp+12]
	pop	edi
	pop	esi
	mov	BYTE PTR [ebp+4], 0
	mov	DWORD PTR [ebp], ecx
	mov	eax, ebp
	pop	ebp
	pop	ebx

; 425  : }

	ret	12					; 0000000cH
?insert_unique@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@QAE?AU?$pair@U?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@_N@3@ABQAX@Z ENDP ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::insert_unique
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_pair.h
_TEXT	ENDS
;	COMDAT ??0?$pair@U?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@stlp_std@@_N@stlp_std@@QAE@ABU?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@1@AB_N@Z
_TEXT	SEGMENT
___b$ = 8						; size = 4
??0?$pair@U?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@stlp_std@@_N@stlp_std@@QAE@ABU?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@1@AB_N@Z PROC ; stlp_std::pair<stlp_std::priv::_Rb_tree_iterator<CPS_Instance *,stlp_std::priv::_SetTraitsT<CPS_Instance *> >,bool>::pair<stlp_std::priv::_Rb_tree_iterator<CPS_Instance *,stlp_std::priv::_SetTraitsT<CPS_Instance *> >,bool>, COMDAT
; _this$ = eax
; ___a$ = ecx

; 56   :   pair(const _T1& __a, const _T2& __b) : first(__a), second(__b) {}

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ___b$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax+4], dl
	ret	4
??0?$pair@U?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@stlp_std@@_N@stlp_std@@QAE@ABU?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@1@AB_N@Z ENDP ; stlp_std::pair<stlp_std::priv::_Rb_tree_iterator<CPS_Instance *,stlp_std::priv::_SetTraitsT<CPS_Instance *> >,bool>::pair<stlp_std::priv::_Rb_tree_iterator<CPS_Instance *,stlp_std::priv::_SetTraitsT<CPS_Instance *> >,bool>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_set.h
_TEXT	ENDS
;	COMDAT ?_S_to_storage_ite@?$set@PAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@CA?AU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@2@U?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_ConstSetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@42@@Z
_TEXT	SEGMENT
___ite$ = 8						; size = 4
?_S_to_storage_ite@?$set@PAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@CA?AU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@2@U?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_ConstSetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@42@@Z PROC ; stlp_std::set<CPS_Instance *,stlp_std::less<CPS_Instance *>,xalloc<CPS_Instance *> >::_S_to_storage_ite, COMDAT
; ___$ReturnUdt$ = eax

; 116  :   { return base_iterator(__ite._M_node); }

	mov	ecx, DWORD PTR ___ite$[esp-4]
	mov	DWORD PTR [eax], ecx
	ret	0
?_S_to_storage_ite@?$set@PAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@CA?AU?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@2@U?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_ConstSetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@42@@Z ENDP ; stlp_std::set<CPS_Instance *,stlp_std::less<CPS_Instance *>,xalloc<CPS_Instance *> >::_S_to_storage_ite
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?erase@?$set@PAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAEXU?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@2@@Z
_TEXT	SEGMENT
___pos$ = 8						; size = 4
?erase@?$set@PAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAEXU?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@2@@Z PROC ; stlp_std::set<CPS_Instance *,stlp_std::less<CPS_Instance *>,xalloc<CPS_Instance *> >::erase, COMDAT
; _this$ = esi

; 240  :   { _M_t.erase(_S_to_storage_ite(__pos)); }

	lea	ecx, DWORD PTR [esi+4]
	push	edi
	push	ecx
	mov	ecx, DWORD PTR ___pos$[esp+4]
	lea	eax, DWORD PTR [esi+12]
	lea	edx, DWORD PTR [esi+8]
	call	?_Rebalance_for_erase@?$_Rb_global@_N@priv@stlp_std@@SAPAU_Rb_tree_node_base@23@PAU423@AAPAU423@11@Z ; stlp_std::priv::_Rb_global<bool>::_Rebalance_for_erase
	mov	edi, eax
	push	edi
	call	?_S_value@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAAAPAXPAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_value
	push	eax
	call	??$_Destroy@PAX@stlp_std@@YAXPAPAX@Z	; stlp_std::_Destroy<void *>
	add	esp, 12					; 0000000cH
	push	1
	push	edi
	mov	ecx, esi
	call	?deallocate@?$xalloc@U?$_Rb_tree_node@PAX@priv@stlp_std@@@@QBEXPAU?$_Rb_tree_node@PAX@priv@stlp_std@@I@Z ; xalloc<stlp_std::priv::_Rb_tree_node<void *> >::deallocate
	add	DWORD PTR [esi+16], -1
	pop	edi
	ret	4
?erase@?$set@PAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAEXU?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@2@@Z ENDP ; stlp_std::set<CPS_Instance *,stlp_std::less<CPS_Instance *>,xalloc<CPS_Instance *> >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?insert@?$set@PAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAE?AU?$pair@U?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@stlp_std@@_N@2@ABQAVCPS_Instance@@@Z
_TEXT	SEGMENT
_ret$ = -8						; size = 8
?insert@?$set@PAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAE?AU?$pair@U?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@stlp_std@@_N@2@ABQAVCPS_Instance@@@Z PROC ; stlp_std::set<CPS_Instance *,stlp_std::less<CPS_Instance *>,xalloc<CPS_Instance *> >::insert, COMDAT
; _this$ = edx
; ___$ReturnUdt$ = esi
; ___x$ = eax

; 214  :   pair<iterator,bool> insert(const value_type& __x) {

	sub	esp, 8

; 215  :     pair<base_iterator, bool> ret = _M_t.insert_unique(cast_traits::to_storage_type_cref(__x));

	push	eax
	lea	ecx, DWORD PTR _ret$[esp+12]
	push	ecx
	push	edx
	call	?insert_unique@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@QAE?AU?$pair@U?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@_N@3@ABQAX@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::insert_unique

; 216  :     return pair<iterator, bool>(_S_to_value_ite(ret.first), ret.second);

	mov	eax, DWORD PTR _ret$[esp+8]
	mov	cl, BYTE PTR _ret$[esp+12]
	mov	DWORD PTR [esi], eax
	mov	BYTE PTR [esi+4], cl
	mov	eax, esi

; 217  :   }

	add	esp, 8
	ret	0
?insert@?$set@PAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAE?AU?$pair@U?$_Rb_tree_iterator@PAVCPS_Instance@@U?$_SetTraitsT@PAVCPS_Instance@@@priv@stlp_std@@@priv@stlp_std@@_N@2@ABQAVCPS_Instance@@@Z ENDP ; stlp_std::set<CPS_Instance *,stlp_std::less<CPS_Instance *>,xalloc<CPS_Instance *> >::insert
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
;	COMDAT ?push_back@?$vector@PAVCPS_Instance@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAEXABQAVCPS_Instance@@@Z
_TEXT	SEGMENT
?push_back@?$vector@PAVCPS_Instance@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAEXABQAVCPS_Instance@@@Z PROC ; stlp_std::vector<CPS_Instance *,xalloc<CPS_Instance *> >::push_back, COMDAT
; _this$ = ecx
; ___x$ = eax

; 171  :   { _M_impl.push_back(cast_traits::to_storage_type_cref(__x)); }

	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [edi+4]
	cmp	ecx, DWORD PTR [edi+8]
	je	SHORT $LN8@push_back@42
	push	eax
	push	ecx
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [edi+4], 4
	pop	edi
	ret	0
$LN8@push_back@42:
	push	1
	push	1
	push	ecx
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
	pop	edi
	ret	0
?push_back@?$vector@PAVCPS_Instance@@V?$xalloc@PAVCPS_Instance@@@@@stlp_std@@QAEXABQAVCPS_Instance@@@Z ENDP ; stlp_std::vector<CPS_Instance *,xalloc<CPS_Instance *> >::push_back
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\ps_instance.cpp
_TEXT	ENDS
;	COMDAT ?PSI_destroy@CPS_Instance@@UAEXXZ
_TEXT	SEGMENT
$T438531 = -4						; size = 4
?PSI_destroy@CPS_Instance@@UAEXXZ PROC			; CPS_Instance::PSI_destroy, COMDAT
; _this$ = ecx

; 54   : {

	push	ecx

; 55   : 	m_bDead								= TRUE;

	mov	DWORD PTR [ecx+152], 1

; 56   : 	m_iLifeTime							= 0;

	mov	DWORD PTR [ecx+144], 0
	push	edi

; 57   : 	g_pGamePersistent->ps_destroy.push_back	(this);

	mov	edi, DWORD PTR ?g_pGamePersistent@@3PAVIGame_Persistent@@A ; g_pGamePersistent
	add	edi, 1088				; 00000440H
	mov	DWORD PTR $T438531[esp+8], ecx
	mov	eax, DWORD PTR [edi+4]
	cmp	eax, DWORD PTR [edi+8]
	je	SHORT $LN10@PSI_destro
	lea	ecx, DWORD PTR $T438531[esp+8]
	push	ecx
	push	eax
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [edi+4], 4
	pop	edi

; 58   : }

	pop	ecx
	ret	0

; 57   : 	g_pGamePersistent->ps_destroy.push_back	(this);

$LN10@PSI_destro:
	push	1
	push	1
	push	eax
	lea	eax, DWORD PTR $T438531[esp+20]
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
	pop	edi

; 58   : }

	pop	ecx
	ret	0
?PSI_destroy@CPS_Instance@@UAEXXZ ENDP			; CPS_Instance::PSI_destroy
PUBLIC	??1CPS_Instance@@MAE@XZ				; CPS_Instance::~CPS_Instance
; Function compile flags: /Ogtpy
;	COMDAT ??1CPS_Instance@@MAE@XZ
_TEXT	SEGMENT
$T528617 = -4						; size = 4
??1CPS_Instance@@MAE@XZ PROC				; CPS_Instance::~CPS_Instance, COMDAT
; _this$ = ecx

; 25   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx
	lea	ebp, DWORD PTR [esi+52]
	mov	DWORD PTR [esi], OFFSET ??_7CPS_Instance@@6BISpatial@@@
	mov	DWORD PTR [ebp], OFFSET ??_7CPS_Instance@@6BISheduled@@@
	mov	DWORD PTR [esi+60], OFFSET ??_7CPS_Instance@@6BIRenderable@@@

; 26   : 	VERIFY									(!g_bRendering);
; 27   : 	xr_set<CPS_Instance*>::iterator it		= g_pGamePersistent->ps_active.find(this);

	mov	ebx, DWORD PTR ?g_pGamePersistent@@3PAVIGame_Persistent@@A ; g_pGamePersistent
	push	edi
	lea	eax, DWORD PTR $T528617[esp+20]
	add	ebx, 1064				; 00000428H
	push	eax
	mov	DWORD PTR $T528617[esp+24], esi
	call	??$_M_find@PAX@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@ABEPAU_Rb_tree_node_base@12@ABQAX@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_M_find<void *>

; 28   : 	VERIFY									(it!=g_pGamePersistent->ps_active.end());
; 29   : 	g_pGamePersistent->ps_active.erase		(it);

	mov	edi, DWORD PTR ?g_pGamePersistent@@3PAVIGame_Persistent@@A ; g_pGamePersistent
	add	edi, 1064				; 00000428H
	mov	ecx, eax
	lea	ebx, DWORD PTR [edi+4]
	lea	eax, DWORD PTR [edi+12]
	lea	edx, DWORD PTR [edi+8]
	push	ebx
	call	?_Rebalance_for_erase@?$_Rb_global@_N@priv@stlp_std@@SAPAU_Rb_tree_node_base@23@PAU423@AAPAU423@11@Z ; stlp_std::priv::_Rb_global<bool>::_Rebalance_for_erase
	mov	ebx, eax
	push	ebx
	call	?_S_value@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@KAAAPAXPAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::_S_value
	push	eax
	call	??$_Destroy@PAX@stlp_std@@YAXPAPAX@Z	; stlp_std::_Destroy<void *>
	add	esp, 12					; 0000000cH
	push	1
	push	ebx
	mov	ecx, edi
	call	?deallocate@?$xalloc@U?$_Rb_tree_node@PAX@priv@stlp_std@@@@QBEXPAU?$_Rb_tree_node@PAX@priv@stlp_std@@I@Z ; xalloc<stlp_std::priv::_Rb_tree_node<void *> >::deallocate
	add	DWORD PTR [edi+16], -1

; 30   : 
; 31   : 	xr_vector<CPS_Instance*>::iterator it2	= std::find( g_pGamePersistent->ps_destroy.begin(),
; 32   : 													g_pGamePersistent->ps_destroy.end(), this);

	mov	ecx, DWORD PTR ?g_pGamePersistent@@3PAVIGame_Persistent@@A ; g_pGamePersistent
	mov	edx, DWORD PTR [ecx+1092]
	push	edx
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	eax, DWORD PTR ?g_pGamePersistent@@3PAVIGame_Persistent@@A ; g_pGamePersistent
	mov	ecx, DWORD PTR [eax+1088]
	push	ecx
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 8

; 33   : 
; 34   : 	VERIFY									(it2==g_pGamePersistent->ps_destroy.end());
; 35   : 
; 36   : 	spatial_unregister						();

	mov	ecx, esi
	call	DWORD PTR __imp_?spatial_unregister@ISpatial@@UAEXXZ

; 37   : 	shedule_unregister						();

	push	ebp
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+64
	call	?Unregister@CSheduler@@QAEXPAVISheduled@@@Z ; CSheduler::Unregister

; 38   : }

	mov	edx, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	mov	DWORD PTR [esi+60], OFFSET ??_7IRenderable@@6B@
	mov	ecx, DWORD PTR [edx]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+156]
	push	0
	lea	ebx, DWORD PTR [esi+128]
	push	ebx
	call	edx
	cmp	DWORD PTR [esi+132], 0
	lea	edi, DWORD PTR [esi+132]
	je	SHORT $LN89@CPS_Instan
	mov	eax, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+120]
	push	edi
	call	eax
$LN89@CPS_Instan:
	mov	DWORD PTR [ebx], 0
	mov	DWORD PTR [edi], 0
	push	ebp
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+64
	mov	DWORD PTR [ebp], OFFSET ??_7ISheduled@@6B@
	call	?Unregister@CSheduler@@QAEXPAVISheduled@@@Z ; CSheduler::Unregister
	pop	edi
	mov	ecx, esi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 4
	jmp	DWORD PTR __imp_??1ISpatial@@UAE@XZ
??1CPS_Instance@@MAE@XZ ENDP				; CPS_Instance::~CPS_Instance
_TEXT	ENDS
PUBLIC	??0CPS_Instance@@QAE@_N@Z			; CPS_Instance::CPS_Instance
; Function compile flags: /Ogtpy
;	COMDAT ??0CPS_Instance@@QAE@_N@Z
_TEXT	SEGMENT
_ret$528922 = -8					; size = 8
$T528838 = 8						; size = 4
_destroy_on_game_load$ = 8				; size = 1
??0CPS_Instance@@QAE@_N@Z PROC				; CPS_Instance::CPS_Instance, COMDAT
; _this$ = ecx

; 13   : {

	sub	esp, 8
	mov	eax, DWORD PTR __imp_?g_SpatialSpace@@3PAVISpatial_DB@@A
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR [eax]
	push	edi
	push	ecx
	mov	ecx, esi
	call	DWORD PTR __imp_??0ISpatial@@QAE@PAVISpatial_DB@@@Z
	mov	edx, DWORD PTR [esi+56]
	and	edx, -788922348				; d0fa0014H
	or	edx, 16384020				; 00fa0014H
	lea	edi, DWORD PTR [esi+60]
	mov	ecx, edi
	mov	DWORD PTR [esi+52], OFFSET ??_7ISheduled@@6B@
	mov	DWORD PTR [esi+56], edx
	call	??0IRenderable@@QAE@XZ			; IRenderable::IRenderable
	mov	al, BYTE PTR _destroy_on_game_load$[esp+12]
	mov	BYTE PTR [esi+140], al

; 14   : 	g_pGamePersistent->ps_active.insert		(this);

	lea	ecx, DWORD PTR $T528838[esp+12]
	mov	DWORD PTR [esi], OFFSET ??_7CPS_Instance@@6BISpatial@@@
	mov	DWORD PTR [esi+52], OFFSET ??_7CPS_Instance@@6BISheduled@@@
	mov	DWORD PTR [edi], OFFSET ??_7CPS_Instance@@6BIRenderable@@@
	mov	eax, DWORD PTR ?g_pGamePersistent@@3PAVIGame_Persistent@@A ; g_pGamePersistent
	push	ecx
	lea	edx, DWORD PTR _ret$528922[esp+20]
	push	edx
	add	eax, 1064				; 00000428H
	push	eax
	mov	DWORD PTR $T528838[esp+24], esi
	call	?insert_unique@?$_Rb_tree@PAXU?$_BinaryPredWrapper@PAXPAVCPS_Instance@@U?$less@PAVCPS_Instance@@@stlp_std@@@priv@stlp_std@@PAXU?$_Identity@PAX@23@U?$_SetTraitsT@PAX@23@V?$xalloc@PAX@@@priv@stlp_std@@QAE?AU?$pair@U?$_Rb_tree_iterator@PAXU?$_SetTraitsT@PAX@priv@stlp_std@@@priv@stlp_std@@_N@3@ABQAX@Z ; stlp_std::priv::_Rb_tree<void *,stlp_std::priv::_BinaryPredWrapper<void *,CPS_Instance *,stlp_std::less<CPS_Instance *> >,void *,stlp_std::priv::_Identity<void *>,stlp_std::priv::_SetTraitsT<void *>,xalloc<void *> >::insert_unique

; 15   : 	renderable.pROS_Allowed					= FALSE;

	xor	eax, eax
	mov	DWORD PTR [esi+136], eax

; 16   : 
; 17   : 	m_iLifeTime								= int_max;
; 18   : 	m_bAutoRemove							= TRUE;
; 19   : 	m_bDead									= FALSE;

	mov	DWORD PTR [esi+152], eax

; 20   : }

	pop	edi
	mov	DWORD PTR [esi+144], 2147483647		; 7fffffffH
	mov	DWORD PTR [esi+148], 1
	mov	eax, esi
	pop	esi
	add	esp, 8
	ret	4
??0CPS_Instance@@QAE@_N@Z ENDP				; CPS_Instance::CPS_Instance
END
