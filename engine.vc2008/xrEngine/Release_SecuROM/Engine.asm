; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\CLEARSKY\sources\engine\xrEngine\Engine.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	?PSGP@@3UxrDispatchTable@@A			; PSGP
PUBLIC	??_C@_0P@NMKFMFOL@xrCPU_Pipe?4dll?$AA@		; `string'
PUBLIC	??_C@_0BE@ICOENBD@CEngine?3?3Initialize?$AA@	; `string'
PUBLIC	??_C@_0CP@LDMKILCE@D?3?2CLEARSKY?2sources?2engine?2xrEng@ ; `string'
PUBLIC	??_C@_05IEFPHKPN@hPSGP?$AA@			; `string'
PUBLIC	??_C@_0M@DCIAMAB@xrBind_PSGP?$AA@		; `string'
PUBLIC	??_C@_07GKKAEBLD@bindCPU?$AA@			; `string'
EXTRN	__imp_?ID@CPU@@3U_processor_info@@A:BYTE
?PSGP@@3UxrDispatchTable@@A DB 024H DUP (?)		; PSGP
;	COMDAT ?ignore_always@?3??Initialize@CEngine@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?3??Initialize@CEngine@@QAEXXZ@4_NA DB 01H DUP (?) ; `CEngine::Initialize'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?7??Initialize@CEngine@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?7??Initialize@CEngine@@QAEXXZ@4_NA DB 01H DUP (?) ; `CEngine::Initialize'::`8'::ignore_always
;	COMDAT ??_C@_07GKKAEBLD@bindCPU?$AA@
CONST	SEGMENT
??_C@_07GKKAEBLD@bindCPU?$AA@ DB 'bindCPU', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DCIAMAB@xrBind_PSGP?$AA@
CONST	SEGMENT
??_C@_0M@DCIAMAB@xrBind_PSGP?$AA@ DB 'xrBind_PSGP', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05IEFPHKPN@hPSGP?$AA@
CONST	SEGMENT
??_C@_05IEFPHKPN@hPSGP?$AA@ DB 'hPSGP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@LDMKILCE@D?3?2CLEARSKY?2sources?2engine?2xrEng@
CONST	SEGMENT
??_C@_0CP@LDMKILCE@D?3?2CLEARSKY?2sources?2engine?2xrEng@ DB 'D:\CLEARSKY'
	DB	'\sources\engine\xrEngine\Engine.cpp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ICOENBD@CEngine?3?3Initialize?$AA@
CONST	SEGMENT
??_C@_0BE@ICOENBD@CEngine?3?3Initialize?$AA@ DB 'CEngine::Initialize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NMKFMFOL@xrCPU_Pipe?4dll?$AA@
CONST	SEGMENT
??_C@_0P@NMKFMFOL@xrCPU_Pipe?4dll?$AA@ DB 'xrCPU_Pipe.dll', 00H ; `string'
PUBLIC	?Initialize@CEngine@@QAEXXZ			; CEngine::Initialize
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\engine.cpp
;	COMDAT ?Initialize@CEngine@@QAEXXZ
_TEXT	SEGMENT
?Initialize@CEngine@@QAEXXZ PROC			; CEngine::Initialize, COMDAT
; _this$ = ecx

; 29   : {

	push	esi
	push	edi

; 30   : 	// Bind PSGP
; 31   : 	hPSGP		= LoadLibrary("xrCPU_Pipe.dll");

	push	OFFSET ??_C@_0P@NMKFMFOL@xrCPU_Pipe?4dll?$AA@
	mov	esi, ecx
	call	DWORD PTR __imp__LoadLibraryA@4

; 32   : 	R_ASSERT	(hPSGP);

	mov	edi, DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
	mov	DWORD PTR [esi], eax
	cmp	BYTE PTR ?ignore_always@?3??Initialize@CEngine@@QAEXXZ@4_NA, 0
	jne	SHORT $LN7@Initialize@2
	test	eax, eax
	jne	SHORT $LN7@Initialize@2
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??Initialize@CEngine@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BE@ICOENBD@CEngine?3?3Initialize?$AA@
	push	32					; 00000020H
	push	OFFSET ??_C@_0CP@LDMKILCE@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_05IEFPHKPN@hPSGP?$AA@
	call	edi
$LN7@Initialize@2:

; 33   : 	xrBinder*	bindCPU	= (xrBinder*)	GetProcAddress(hPSGP,"xrBind_PSGP");	R_ASSERT(bindCPU);

	mov	eax, DWORD PTR [esi]
	push	OFFSET ??_C@_0M@DCIAMAB@xrBind_PSGP?$AA@
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	BYTE PTR ?ignore_always@?7??Initialize@CEngine@@QAEXXZ@4_NA, 0
	mov	esi, eax
	jne	SHORT $LN3@Initialize@2
	test	esi, esi
	jne	SHORT $LN3@Initialize@2
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?7??Initialize@CEngine@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BE@ICOENBD@CEngine?3?3Initialize?$AA@
	push	33					; 00000021H
	push	OFFSET ??_C@_0CP@LDMKILCE@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_07GKKAEBLD@bindCPU?$AA@
	call	edi
$LN3@Initialize@2:

; 34   : 	bindCPU		(&PSGP, CPU::ID.feature);

	mov	ecx, DWORD PTR __imp_?ID@CPU@@3U_processor_info@@A
	mov	edx, DWORD PTR [ecx+68]
	push	edx
	push	OFFSET ?PSGP@@3UxrDispatchTable@@A	; PSGP
	call	esi
	add	esp, 8
	pop	edi

; 35   : 
; 36   : 	// Other stuff
; 37   : 	Engine.Sheduler.Initialize			( );

	mov	DWORD PTR ?Engine@@3VCEngine@@A+112, 0
	mov	BYTE PTR ?Engine@@3VCEngine@@A+116, 0
	pop	esi

; 38   : 	// 
; 39   : #ifdef DEBUG
; 40   : 	msCreate							("game");
; 41   : #endif
; 42   : }

	ret	0
?Initialize@CEngine@@QAEXXZ ENDP			; CEngine::Initialize
PUBLIC	??1CEngine@@QAE@XZ				; CEngine::~CEngine
; Function compile flags: /Ogtpy
;	COMDAT ??1CEngine@@QAE@XZ
_TEXT	SEGMENT
??1CEngine@@QAE@XZ PROC					; CEngine::~CEngine, COMDAT
; _this$ = ecx

; 22   : {

	push	esi
	mov	esi, ecx
	push	edi

; 23   : 	
; 24   : }

	lea	ecx, DWORD PTR [esi+64]
	call	??1CSheduler@@QAE@XZ
	lea	ecx, DWORD PTR [esi+60]
	call	DWORD PTR __imp_??1xrCriticalSection@@QAE@XZ
	mov	eax, DWORD PTR [esi+48]
	test	eax, eax
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	je	SHORT $LN42@CEngine
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	edi
$LN42@CEngine:
	mov	eax, DWORD PTR [esi+36]
	test	eax, eax
	je	SHORT $LN82@CEngine
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	edi
$LN82@CEngine:
	lea	ecx, DWORD PTR [esi+4]
	pop	edi
	pop	esi
	jmp	??1CEngineAPI@@QAE@XZ			; CEngineAPI::~CEngineAPI
??1CEngine@@QAE@XZ ENDP					; CEngine::~CEngine
PUBLIC	??0CEngine@@QAE@XZ				; CEngine::CEngine
; Function compile flags: /Ogtpy
;	COMDAT ??0CEngine@@QAE@XZ
_TEXT	SEGMENT
??0CEngine@@QAE@XZ PROC					; CEngine::CEngine, COMDAT
; _this$ = ecx

; 17   : {

	push	esi
	mov	esi, ecx
	push	edi
	xor	edi, edi
	mov	DWORD PTR [esi+4], edi
	mov	DWORD PTR [esi+8], edi
	mov	DWORD PTR [esi+12], edi
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], edi
	mov	eax, OFFSET ?dummy@@YAXXZ		; dummy
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], edi
	mov	DWORD PTR [esi+40], edi
	mov	DWORD PTR [esi+44], edi
	mov	DWORD PTR [esi+48], edi
	mov	DWORD PTR [esi+52], edi
	lea	ecx, DWORD PTR [esi+60]
	mov	DWORD PTR [esi+56], edi
	call	DWORD PTR __imp_??0xrCriticalSection@@QAE@XZ
	mov	DWORD PTR [esi+64], edi
	mov	DWORD PTR [esi+68], edi
	mov	DWORD PTR [esi+72], edi
	mov	DWORD PTR [esi+76], edi
	mov	DWORD PTR [esi+80], edi
	mov	DWORD PTR [esi+84], edi
	mov	DWORD PTR [esi+88], edi
	mov	DWORD PTR [esi+92], edi
	mov	DWORD PTR [esi+96], edi
	mov	DWORD PTR [esi+100], edi
	mov	DWORD PTR [esi+104], edi
	mov	DWORD PTR [esi+108], edi
	pop	edi

; 18   : 	
; 19   : }

	mov	eax, esi
	pop	esi
	ret	0
??0CEngine@@QAE@XZ ENDP					; CEngine::CEngine
PUBLIC	?Destroy@CEngine@@QAEXXZ			; CEngine::Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?Destroy@CEngine@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CEngine@@QAEXXZ PROC				; CEngine::Destroy, COMDAT
; _this$ = ecx

; 45   : {

	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 46   : 	Engine.Sheduler.Destroy				( );

	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+64
	call	?Destroy@CSheduler@@QAEXXZ		; CSheduler::Destroy

; 47   : #ifdef DEBUG_MEMORY_MANAGER
; 48   : 	extern void	dbg_dump_leaks_prepare	( );
; 49   : 	if (Memory.debug_mode)				dbg_dump_leaks_prepare	();
; 50   : #endif // DEBUG_MEMORY_MANAGER
; 51   : 	Engine.External.Destroy				( );

	mov	eax, DWORD PTR ?Engine@@3VCEngine@@A+4
	mov	esi, DWORD PTR __imp__FreeLibrary@4
	xor	ebx, ebx
	cmp	eax, ebx
	je	SHORT $LN5@Destroy@13
	push	eax
	call	esi
	mov	DWORD PTR ?Engine@@3VCEngine@@A+4, ebx
$LN5@Destroy@13:
	mov	eax, DWORD PTR ?Engine@@3VCEngine@@A+8
	cmp	eax, ebx
	je	SHORT $LN4@Destroy@13
	push	eax
	call	esi
	mov	DWORD PTR ?Engine@@3VCEngine@@A+8, ebx
$LN4@Destroy@13:
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+36
	mov	DWORD PTR ?Engine@@3VCEngine@@A+16, ebx
	mov	DWORD PTR ?Engine@@3VCEngine@@A+20, ebx
	call	?_destroy@CEventAPI@@QAEXXZ		; CEventAPI::_destroy
	mov	ecx, DWORD PTR __imp_?XRC@@3VxrXRC@@A
	call	DWORD PTR __imp_?r_clear_compact@xrXRC@@QAEXXZ

; 52   : 	
; 53   : 	if (hPSGP)	

	mov	eax, DWORD PTR [edi]
	cmp	eax, ebx
	je	SHORT $LN1@Destroy@13

; 54   : 	{ 
; 55   : 		FreeLibrary	(hPSGP); 

	push	eax
	call	esi

; 56   : 		hPSGP		=0; 
; 57   : 		ZeroMemory	(&PSGP,sizeof(PSGP));

	push	36					; 00000024H
	mov	DWORD PTR [edi], ebx
	mov	eax, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	ecx, DWORD PTR [eax+12]
	push	ebx
	push	OFFSET ?PSGP@@3UxrDispatchTable@@A	; PSGP
	call	ecx
$LN1@Destroy@13:
	pop	edi
	pop	esi
	pop	ebx

; 58   : 	}
; 59   : }

	ret	0
?Destroy@CEngine@@QAEXXZ ENDP				; CEngine::Destroy
; Function compile flags: /Ogtpy
;	COMDAT ??__EEngine@@YAXXZ
text$yc	SEGMENT
??__EEngine@@YAXXZ PROC					; `dynamic initializer for 'Engine'', COMDAT

; 9    : CEngine				Engine;

	mov	ecx, OFFSET ?Engine@@3VCEngine@@A	; Engine
	call	??0CEngine@@QAE@XZ			; CEngine::CEngine
	push	OFFSET ??__FEngine@@YAXXZ		; `dynamic atexit destructor for 'Engine''
	call	_atexit
	pop	ecx
	ret	0
??__EEngine@@YAXXZ ENDP					; `dynamic initializer for 'Engine''
; Function compile flags: /Ogtpy
;	COMDAT ??__FEngine@@YAXXZ
text$yd	SEGMENT
??__FEngine@@YAXXZ PROC					; `dynamic atexit destructor for 'Engine'', COMDAT
	push	esi
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+64
	call	??1CSheduler@@QAE@XZ
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+60
	call	DWORD PTR __imp_??1xrCriticalSection@@QAE@XZ
	mov	eax, DWORD PTR ?Engine@@3VCEngine@@A+48
	test	eax, eax
	mov	esi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	je	SHORT $LN44@dynamic@2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	esi
$LN44@dynamic@2:
	mov	eax, DWORD PTR ?Engine@@3VCEngine@@A+36
	test	eax, eax
	je	SHORT $LN84@dynamic@2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	esi
$LN84@dynamic@2:
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+4
	pop	esi
	jmp	??1CEngineAPI@@QAE@XZ			; CEngineAPI::~CEngineAPI
??__FEngine@@YAXXZ ENDP					; `dynamic atexit destructor for 'Engine''
PUBLIC	?Engine@@3VCEngine@@A				; Engine
?Engine@@3VCEngine@@A DB 088H DUP (?)			; Engine
_Engine$initializer$ DD FLAT:??__EEngine@@YAXXZ
END
