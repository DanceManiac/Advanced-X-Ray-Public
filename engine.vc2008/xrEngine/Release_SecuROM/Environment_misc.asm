; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\CLEARSKY\sources\engine\xrEngine\Environment_misc.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	?back@?$vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@stlp_std@@QAEAAPAVCEnvDescriptor@@XZ ; stlp_std::vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >::back
PUBLIC	?clear@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEXXZ ; stlp_std::vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::clear
PUBLIC	?clear_and_free@?$xr_vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@@QAEXXZ ; xr_vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::clear_and_free
PUBLIC	?clear@?$xr_vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@@QAEXXZ ; xr_vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::clear
PUBLIC	?clear@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAEXXZ ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::clear
PUBLIC	??0_Rb_tree_base_iterator@priv@stlp_std@@QAE@XZ	; stlp_std::priv::_Rb_tree_base_iterator::_Rb_tree_base_iterator
PUBLIC	??0?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >
PUBLIC	??_GCEnvDescriptor@@QAEPAXI@Z			; CEnvDescriptor::`scalar deleting destructor'
PUBLIC	??R?$xr_special_free@$0A@VCEnvDescriptor@@@@QAEXAAPAVCEnvDescriptor@@@Z ; xr_special_free<0,CEnvDescriptor>::operator()
PUBLIC	??$xr_delete@VCEnvDescriptor@@@@YAXAAPAVCEnvDescriptor@@@Z ; xr_delete<CEnvDescriptor>
PUBLIC	??_GCEnvAmbient@@QAEPAXI@Z			; CEnvAmbient::`scalar deleting destructor'
PUBLIC	??R?$xr_special_free@$0A@VCEnvAmbient@@@@QAEXAAPAVCEnvAmbient@@@Z ; xr_special_free<0,CEnvAmbient>::operator()
PUBLIC	??$xr_delete@VCEnvAmbient@@@@YAXAAPAVCEnvAmbient@@@Z ; xr_delete<CEnvAmbient>
PUBLIC	??_GCEffect_Rain@@QAEPAXI@Z			; CEffect_Rain::`scalar deleting destructor'
PUBLIC	??R?$xr_special_free@$0A@VCEffect_Rain@@@@QAEXAAPAVCEffect_Rain@@@Z ; xr_special_free<0,CEffect_Rain>::operator()
PUBLIC	??$xr_delete@VCEffect_Rain@@@@YAXAAPAVCEffect_Rain@@@Z ; xr_delete<CEffect_Rain>
PUBLIC	??R?$xr_special_free@$00VCLensFlare@@@@QAEXAAPAVCLensFlare@@@Z ; xr_special_free<1,CLensFlare>::operator()
PUBLIC	??$xr_delete@VCLensFlare@@@@YAXAAPAVCLensFlare@@@Z ; xr_delete<CLensFlare>
PUBLIC	??_GCEffect_Thunderbolt@@QAEPAXI@Z		; CEffect_Thunderbolt::`scalar deleting destructor'
PUBLIC	??R?$xr_special_free@$0A@VCEffect_Thunderbolt@@@@QAEXAAPAVCEffect_Thunderbolt@@@Z ; xr_special_free<0,CEffect_Thunderbolt>::operator()
PUBLIC	??$xr_delete@VCEffect_Thunderbolt@@@@YAXAAPAVCEffect_Thunderbolt@@@Z ; xr_delete<CEffect_Thunderbolt>
PUBLIC	??$xr_new@VCEffect_Rain@@@@YAPAVCEffect_Rain@@XZ ; xr_new<CEffect_Rain>
PUBLIC	??$xr_new@VCLensFlare@@@@YAPAVCLensFlare@@XZ	; xr_new<CLensFlare>
PUBLIC	??$xr_new@VCEffect_Thunderbolt@@@@YAPAVCEffect_Thunderbolt@@XZ ; xr_new<CEffect_Thunderbolt>
PUBLIC	?lerp@?$_vector3@M@@QAEAAU1@ABU1@0M@Z		; _vector3<float>::lerp
PUBLIC	?lerp@?$_vector4@M@@QAEAAU1@ABU1@0M@Z		; _vector4<float>::lerp
PUBLIC	??D?$FactoryPtr@VIEnvDescriptorRender@@@@QBEAAVIEnvDescriptorRender@@XZ ; FactoryPtr<IEnvDescriptorRender>::operator*
PUBLIC	?mad@?$_vector3@M@@QAEAAU1@ABU1@M@Z		; _vector3<float>::mad
PUBLIC	?set@?$_flags@G@@QAEAAU1@GH@Z			; _flags<unsigned short>::set
PUBLIC	?test@?$_flags@G@@QBEHG@Z			; _flags<unsigned short>::test
PUBLIC	??0?$FactoryPtr@VIEnvDescriptorMixerRender@@@@QAE@XZ ; FactoryPtr<IEnvDescriptorMixerRender>::FactoryPtr<IEnvDescriptorMixerRender>
PUBLIC	?one@?$_flags@G@@QAEAAU1@XZ			; _flags<unsigned short>::one
PUBLIC	?assign@?$_flags@G@@QAEAAU1@G@Z			; _flags<unsigned short>::assign
PUBLIC	??$__destroy_mv_srcs@V?$reverse_iterator@PAUref_sound@@@stlp_std@@Uref_sound@@@stlp_std@@YAXV?$reverse_iterator@PAUref_sound@@@0@0PAUref_sound@@@Z ; stlp_std::__destroy_mv_srcs<stlp_std::reverse_iterator<ref_sound *>,ref_sound>
PUBLIC	??$_Destroy_Moved_Range@V?$reverse_iterator@PAUref_sound@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUref_sound@@@0@0@Z ; stlp_std::_Destroy_Moved_Range<stlp_std::reverse_iterator<ref_sound *> >
PUBLIC	?_M_clear_after_move@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXXZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_clear_after_move
PUBLIC	?_M_set@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@00@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_set
PUBLIC	??$__uninitialized_move@PAUref_sound@@PAU1@U__false_type@stlp_std@@@priv@stlp_std@@YAPAUref_sound@@PAU2@00U__false_type@1@ABU31@@Z ; stlp_std::priv::__uninitialized_move<ref_sound *,ref_sound *,stlp_std::__false_type>
PUBLIC	??$_Copy_Construct@Uref_sound@@@stlp_std@@YAXPAUref_sound@@ABU1@@Z ; stlp_std::_Copy_Construct<ref_sound>
PUBLIC	?_M_insert_overflow_aux@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@ABU4@ABU__false_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_insert_overflow_aux
PUBLIC	?_M_insert_overflow@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@ABU4@ABU__false_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_insert_overflow
PUBLIC	?_M_is_inside@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@ABE_NABUref_sound@@@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_is_inside
PUBLIC	??$__ufill@PAUref_sound@@U1@H@priv@stlp_std@@YAXPAUref_sound@@0ABU2@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ufill<ref_sound *,ref_sound,int>
PUBLIC	??$__uninitialized_fill_n@PAUref_sound@@IU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@IABU2@@Z ; stlp_std::priv::__uninitialized_fill_n<ref_sound *,unsigned int,ref_sound>
PUBLIC	??$__ucopy@PAUref_sound@@PAU1@H@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<ref_sound *,ref_sound *,int>
PUBLIC	??$__ucopy_ptrs@PAUref_sound@@PAU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABU__false_type@1@@Z ; stlp_std::priv::__ucopy_ptrs<ref_sound *,ref_sound *>
PUBLIC	??$__copy_backward@PAUref_sound@@PAU1@H@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__copy_backward<ref_sound *,ref_sound *,int>
PUBLIC	??$__copy_backward_ptrs@PAUref_sound@@PAU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABU__false_type@1@@Z ; stlp_std::priv::__copy_backward_ptrs<ref_sound *,ref_sound *>
PUBLIC	??$fill@PAUref_sound@@U1@@stlp_std@@YAXPAUref_sound@@0ABU1@@Z ; stlp_std::fill<ref_sound *,ref_sound>
PUBLIC	?_M_fill_insert_aux@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@IABU4@ABU__false_type@3@@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_fill_insert_aux
PUBLIC	?_M_fill_insert@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@IABU4@@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_fill_insert
PUBLIC	?insert@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEXPAUref_sound@@IABU4@@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::insert
PUBLIC	??$__copy@PAUref_sound@@PAU1@H@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__copy<ref_sound *,ref_sound *,int>
PUBLIC	??$__copy_ptrs@PAUref_sound@@PAU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABU__false_type@1@@Z ; stlp_std::priv::__copy_ptrs<ref_sound *,ref_sound *>
PUBLIC	?_M_erase@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEPAUref_sound@@PAU4@0ABU__false_type@3@@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_erase
PUBLIC	?erase@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEPAUref_sound@@PAU4@0@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::erase
PUBLIC	?resize@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEXIABUref_sound@@@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::resize
PUBLIC	?to_storage_type_cref@?$_CastTraits@Uref_sound@@U1@@priv@stlp_std@@SAABUref_sound@@ABU4@@Z ; stlp_std::priv::_CastTraits<ref_sound,ref_sound>::to_storage_type_cref
PUBLIC	?resize@?$vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@stlp_std@@QAEXIABUref_sound@@@Z ; stlp_std::vector<ref_sound,xalloc<ref_sound> >::resize
PUBLIC	?create@ref_sound@@QAEXPBDW4esound_type@@H@Z	; ref_sound::create
PUBLIC	??0?$resptr_core@Vref_sound_data@@V?$resptr_base@Vref_sound_data@@@@@@QAE@XZ ; resptr_core<ref_sound_data,resptr_base<ref_sound_data> >::resptr_core<ref_sound_data,resptr_base<ref_sound_data> >
PUBLIC	??0ref_sound@@QAE@XZ				; ref_sound::ref_sound
PUBLIC	??0SEffect@CEnvAmbient@@QAE@XZ			; CEnvAmbient::SEffect::SEffect
PUBLIC	??$xr_new@USEffect@CEnvAmbient@@@@YAPAUSEffect@CEnvAmbient@@XZ ; xr_new<CEnvAmbient::SEffect>
PUBLIC	??0SSndChannel@CEnvAmbient@@QAE@XZ		; CEnvAmbient::SSndChannel::SSndChannel
PUBLIC	??$xr_new@USSndChannel@CEnvAmbient@@@@YAPAUSSndChannel@CEnvAmbient@@XZ ; xr_new<CEnvAmbient::SSndChannel>
PUBLIC	?end@?$vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@stlp_std@@QAEPAPAUSEffect@CEnvAmbient@@XZ ; stlp_std::vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::end
PUBLIC	?clear@?$vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@stlp_std@@QAEXXZ ; stlp_std::vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::clear
PUBLIC	?clear_and_free@?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@QAEXXZ ; xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::clear_and_free
PUBLIC	?clear@?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@QAEXXZ ; xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::clear
PUBLIC	??$delete_data@$0A@@?$CHelper1@USEffect@CEnvAmbient@@@CDestroyer@@SAXAAUSEffect@CEnvAmbient@@@Z ; CDestroyer::CHelper1<CEnvAmbient::SEffect>::delete_data<0>
PUBLIC	??$delete_data@$0A@@?$CHelper2@USEffect@CEnvAmbient@@@CDestroyer@@SAXAAUSEffect@CEnvAmbient@@@Z ; CDestroyer::CHelper2<CEnvAmbient::SEffect>::delete_data<0>
PUBLIC	??$delete_data@$0A@@?$CHelper4@USEffect@CEnvAmbient@@@CDestroyer@@SAXAAUSEffect@CEnvAmbient@@@Z ; CDestroyer::CHelper4<CEnvAmbient::SEffect>::delete_data<0>
PUBLIC	??$delete_data@USEffect@CEnvAmbient@@@CDestroyer@@SAXAAUSEffect@CEnvAmbient@@@Z ; CDestroyer::delete_data<CEnvAmbient::SEffect>
PUBLIC	??1SEffect@CEnvAmbient@@QAE@XZ			; CEnvAmbient::SEffect::~SEffect
PUBLIC	??_GSEffect@CEnvAmbient@@QAEPAXI@Z		; CEnvAmbient::SEffect::`scalar deleting destructor'
PUBLIC	??R?$xr_special_free@$0A@USEffect@CEnvAmbient@@@@QAEXAAPAUSEffect@CEnvAmbient@@@Z ; xr_special_free<0,CEnvAmbient::SEffect>::operator()
PUBLIC	??$xr_delete@USEffect@CEnvAmbient@@@@YAXAAPAUSEffect@CEnvAmbient@@@Z ; xr_delete<CEnvAmbient::SEffect>
PUBLIC	??$delete_data@$00@?$CHelper2@PAUSEffect@CEnvAmbient@@@CDestroyer@@SAXAAPAUSEffect@CEnvAmbient@@@Z ; CDestroyer::CHelper2<CEnvAmbient::SEffect *>::delete_data<1>
PUBLIC	??$delete_data@$0A@@?$CHelper4@PAUSEffect@CEnvAmbient@@@CDestroyer@@SAXAAPAUSEffect@CEnvAmbient@@@Z ; CDestroyer::CHelper4<CEnvAmbient::SEffect *>::delete_data<0>
PUBLIC	??$delete_data@PAUSEffect@CEnvAmbient@@@CDestroyer@@SAXAAPAUSEffect@CEnvAmbient@@@Z ; CDestroyer::delete_data<CEnvAmbient::SEffect *>
PUBLIC	??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >
PUBLIC	??$delete_data@$00@?$CHelper4@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z ; CDestroyer::CHelper4<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >::delete_data<1>
PUBLIC	??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z ; CDestroyer::delete_data<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >
PUBLIC	??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@@YAXABV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z ; delete_data<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >
PUBLIC	?end@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QAEPAPAUSSndChannel@CEnvAmbient@@XZ ; stlp_std::vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::end
PUBLIC	?clear@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QAEXXZ ; stlp_std::vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::clear
PUBLIC	?clear_and_free@?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@QAEXXZ ; xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::clear_and_free
PUBLIC	?clear@?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@QAEXXZ ; xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::clear
PUBLIC	??$delete_data@$0A@@?$CHelper1@USSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAUSSndChannel@CEnvAmbient@@@Z ; CDestroyer::CHelper1<CEnvAmbient::SSndChannel>::delete_data<0>
PUBLIC	??$delete_data@$0A@@?$CHelper2@USSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAUSSndChannel@CEnvAmbient@@@Z ; CDestroyer::CHelper2<CEnvAmbient::SSndChannel>::delete_data<0>
PUBLIC	??$delete_data@$0A@@?$CHelper4@USSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAUSSndChannel@CEnvAmbient@@@Z ; CDestroyer::CHelper4<CEnvAmbient::SSndChannel>::delete_data<0>
PUBLIC	??$delete_data@USSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAUSSndChannel@CEnvAmbient@@@Z ; CDestroyer::delete_data<CEnvAmbient::SSndChannel>
PUBLIC	??1SSndChannel@CEnvAmbient@@QAE@XZ		; CEnvAmbient::SSndChannel::~SSndChannel
PUBLIC	??_GSSndChannel@CEnvAmbient@@QAEPAXI@Z		; CEnvAmbient::SSndChannel::`scalar deleting destructor'
PUBLIC	??R?$xr_special_free@$0A@USSndChannel@CEnvAmbient@@@@QAEXAAPAUSSndChannel@CEnvAmbient@@@Z ; xr_special_free<0,CEnvAmbient::SSndChannel>::operator()
PUBLIC	??$xr_delete@USSndChannel@CEnvAmbient@@@@YAXAAPAUSSndChannel@CEnvAmbient@@@Z ; xr_delete<CEnvAmbient::SSndChannel>
PUBLIC	??$delete_data@$00@?$CHelper2@PAUSSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAPAUSSndChannel@CEnvAmbient@@@Z ; CDestroyer::CHelper2<CEnvAmbient::SSndChannel *>::delete_data<1>
PUBLIC	??$delete_data@$0A@@?$CHelper4@PAUSSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAPAUSSndChannel@CEnvAmbient@@@Z ; CDestroyer::CHelper4<CEnvAmbient::SSndChannel *>::delete_data<0>
PUBLIC	??$delete_data@PAUSSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAPAUSSndChannel@CEnvAmbient@@@Z ; CDestroyer::delete_data<CEnvAmbient::SSndChannel *>
PUBLIC	??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >
PUBLIC	??$delete_data@$00@?$CHelper4@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z ; CDestroyer::CHelper4<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >::delete_data<1>
PUBLIC	??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z ; CDestroyer::delete_data<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >
PUBLIC	??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@@YAXABV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z ; delete_data<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >
PUBLIC	?to_storage_type_cref@?$_CastTraits@PAXPAUSEffect@CEnvAmbient@@@priv@stlp_std@@SAABQAXABQAUSEffect@CEnvAmbient@@@Z ; stlp_std::priv::_CastTraits<void *,CEnvAmbient::SEffect *>::to_storage_type_cref
PUBLIC	?resize@?$vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@stlp_std@@QAEXIABQAUSEffect@CEnvAmbient@@@Z ; stlp_std::vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::resize
PUBLIC	?empty@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QBE_NXZ ; stlp_std::vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::empty
PUBLIC	?_M_is_inside@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@ABE_NABQAX@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_is_inside
PUBLIC	??$fill@PAPAXPAX@stlp_std@@YAXPAPAX0ABQAX@Z	; stlp_std::fill<void * *,void *>
PUBLIC	??$_Param_Construct@PAXPAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Param_Construct<void *,void *>
PUBLIC	??$__ufill@PAPAXPAXH@priv@stlp_std@@YAXPAPAX0ABQAXABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ufill<void * *,void *,int>
PUBLIC	??$__uninitialized_fill_n@PAPAXIPAX@priv@stlp_std@@YAPAPAXPAPAXIABQAX@Z ; stlp_std::priv::__uninitialized_fill_n<void * *,unsigned int,void *>
PUBLIC	?_M_fill_insert_aux@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXIABQAXABU__false_type@3@@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_fill_insert_aux
PUBLIC	?_M_fill_insert@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXIABQAX@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_fill_insert
PUBLIC	?insert@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXPAPAXIABQAX@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::insert
PUBLIC	?resize@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXIABQAX@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::resize
PUBLIC	?to_storage_type_cref@?$_CastTraits@PAXPAUSSndChannel@CEnvAmbient@@@priv@stlp_std@@SAABQAXABQAUSSndChannel@CEnvAmbient@@@Z ; stlp_std::priv::_CastTraits<void *,CEnvAmbient::SSndChannel *>::to_storage_type_cref
PUBLIC	?resize@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QAEXIABQAUSSndChannel@CEnvAmbient@@@Z ; stlp_std::vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::resize
PUBLIC	?to_value_type_ptr@?$_CastTraits@PAXPAUSSndChannel@CEnvAmbient@@@priv@stlp_std@@SAPAPAUSSndChannel@CEnvAmbient@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CEnvAmbient::SSndChannel *>::to_value_type_ptr
PUBLIC	?begin@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QAEPAPAUSSndChannel@CEnvAmbient@@XZ ; stlp_std::vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::begin
PUBLIC	??A?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@QAEAAPAUSSndChannel@CEnvAmbient@@I@Z ; xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::operator[]
PUBLIC	??$_GetItem@$0CAI@@@YAPADPBDHAAY0CAI@DD0_N@Z	; _GetItem<520>
PUBLIC	?set@?$_vector4@M@@QAEAAU1@MMMM@Z		; _vector4<float>::set
PUBLIC	??0?$FactoryPtr@VIEnvDescriptorRender@@@@QAE@XZ	; FactoryPtr<IEnvDescriptorRender>::FactoryPtr<IEnvDescriptorRender>
PUBLIC	?mul@?$_vector4@M@@QAEAAU1@M@Z			; _vector4<float>::mul
PUBLIC	??C?$FactoryPtr@VIEnvDescriptorRender@@@@QBEPAVIEnvDescriptorRender@@XZ ; FactoryPtr<IEnvDescriptorRender>::operator->
PUBLIC	??C?$FactoryPtr@VIEnvDescriptorMixerRender@@@@QBEPAVIEnvDescriptorMixerRender@@XZ ; FactoryPtr<IEnvDescriptorMixerRender>::operator->
PUBLIC	?to_value_type_ref@?$_CastTraits@PAXPAVCEnvAmbient@@@priv@stlp_std@@SAAAPAVCEnvAmbient@@AAPAX@Z ; stlp_std::priv::_CastTraits<void *,CEnvAmbient *>::to_value_type_ref
PUBLIC	?back@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEAAPAVCEnvAmbient@@XZ ; stlp_std::vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::back
PUBLIC	?to_storage_type_cref@?$_CastTraits@PAXPAVCEnvAmbient@@@priv@stlp_std@@SAABQAXABQAVCEnvAmbient@@@Z ; stlp_std::priv::_CastTraits<void *,CEnvAmbient *>::to_storage_type_cref
PUBLIC	?push_back@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEXABQAVCEnvAmbient@@@Z ; stlp_std::vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::push_back
PUBLIC	??$xr_new@VCEnvAmbient@@@@YAPAVCEnvAmbient@@XZ	; xr_new<CEnvAmbient>
PUBLIC	?_M_set@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@AAEXPAVCEnvModifier@@00@Z ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::_M_set
PUBLIC	??$__fill_n@PAVCEnvModifier@@IV1@@priv@stlp_std@@YAPAVCEnvModifier@@PAV2@IABV2@@Z ; stlp_std::priv::__fill_n<CEnvModifier *,unsigned int,CEnvModifier>
PUBLIC	?_M_insert_overflow@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@AAEXPAVCEnvModifier@@ABV4@ABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::_M_insert_overflow
PUBLIC	??$_Copy_Construct@VCEnvModifier@@@stlp_std@@YAXPAVCEnvModifier@@ABV1@@Z ; stlp_std::_Copy_Construct<CEnvModifier>
PUBLIC	?push_back@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEXABVCEnvModifier@@@Z ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::push_back
PUBLIC	?to_storage_type_cref@?$_CastTraits@VCEnvModifier@@V1@@priv@stlp_std@@SAABVCEnvModifier@@ABV4@@Z ; stlp_std::priv::_CastTraits<CEnvModifier,CEnvModifier>::to_storage_type_cref
PUBLIC	?push_back@?$vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@stlp_std@@QAEXABVCEnvModifier@@@Z ; stlp_std::vector<CEnvModifier,xalloc<CEnvModifier> >::push_back
PUBLIC	??$__copy_ptrs@PAVCEnvModifier@@PAV1@@priv@stlp_std@@YAPAVCEnvModifier@@PAV2@00ABU__true_type@1@@Z ; stlp_std::priv::__copy_ptrs<CEnvModifier *,CEnvModifier *>
PUBLIC	?_M_erase@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@AAEPAVCEnvModifier@@PAV4@0ABU__false_type@3@@Z ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::_M_erase
PUBLIC	?erase@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEPAVCEnvModifier@@PAV4@0@Z ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::erase
PUBLIC	?clear@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::clear
PUBLIC	?clear@?$vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@stlp_std@@QAEXXZ ; stlp_std::vector<CEnvModifier,xalloc<CEnvModifier> >::clear
PUBLIC	?clear_and_free@?$xr_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@@QAEXXZ ; xr_vector<CEnvModifier,xalloc<CEnvModifier> >::clear_and_free
PUBLIC	?begin@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEPAPAVCEnvAmbient@@XZ ; stlp_std::vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::begin
PUBLIC	?to_value_type_ptr@?$_CastTraits@PAXPAVCEnvAmbient@@@priv@stlp_std@@SAPAPAVCEnvAmbient@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CEnvAmbient *>::to_value_type_ptr
PUBLIC	?end@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEPAPAVCEnvAmbient@@XZ ; stlp_std::vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::end
PUBLIC	??$xr_new@VCEnvDescriptor@@Vshared_str@@@@YAPAVCEnvDescriptor@@ABVshared_str@@@Z ; xr_new<CEnvDescriptor,shared_str>
PUBLIC	?end@?$vector@PADV?$xalloc@PAD@@@stlp_std@@QAEPAPADXZ ; stlp_std::vector<char *,xalloc<char *> >::end
PUBLIC	?begin@?$vector@PAUSect@CInifile@@V?$xalloc@PAUSect@CInifile@@@@@stlp_std@@QAEPAPAUSect@CInifile@@XZ ; stlp_std::vector<CInifile::Sect *,xalloc<CInifile::Sect *> >::begin
PUBLIC	?to_value_type_ptr@?$_CastTraits@PAXPAUSect@CInifile@@@priv@stlp_std@@SAPAPAUSect@CInifile@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CInifile::Sect *>::to_value_type_ptr
PUBLIC	?end@?$vector@PAUSect@CInifile@@V?$xalloc@PAUSect@CInifile@@@@@stlp_std@@QAEPAPAUSect@CInifile@@XZ ; stlp_std::vector<CInifile::Sect *,xalloc<CInifile::Sect *> >::end
PUBLIC	?size@?$vector@PAUSect@CInifile@@V?$xalloc@PAUSect@CInifile@@@@@stlp_std@@QBEIXZ ; stlp_std::vector<CInifile::Sect *,xalloc<CInifile::Sect *> >::size
PUBLIC	?size@?$xr_vector@PAUSect@CInifile@@V?$xalloc@PAUSect@CInifile@@@@@@QBEIXZ ; xr_vector<CInifile::Sect *,xalloc<CInifile::Sect *> >::size
PUBLIC	?_M_throw_length_error@?$_Vector_base@PAXV?$xalloc@PAX@@@priv@stlp_std@@IBEXXZ ; stlp_std::priv::_Vector_base<void *,xalloc<void *> >::_M_throw_length_error
PUBLIC	?max_size@?$xalloc@PAX@@QBEIXZ			; xalloc<void *>::max_size
PUBLIC	?max_size@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBEIXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::max_size
PUBLIC	?_Answer@?$_BothPtrType@PAPAXPAPAX@stlp_std@@SA?AU__true_type@2@XZ ; stlp_std::_BothPtrType<void * *,void * *>::_Answer
PUBLIC	??$__ucopy_aux@PAPAXPAPAX@priv@stlp_std@@YAPAPAXPAPAX00ABU__true_type@1@@Z ; stlp_std::priv::__ucopy_aux<void * *,void * *>
PUBLIC	??$uninitialized_copy@PAPAXPAPAX@stlp_std@@YAPAPAXPAPAX00@Z ; stlp_std::uninitialized_copy<void * *,void * *>
PUBLIC	??$_M_allocate_and_copy@PAPAX@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEPAPAXAAIPAPAX1@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_allocate_and_copy<void * *>
PUBLIC	?reserve@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXI@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::reserve
PUBLIC	?reserve@?$vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@stlp_std@@QAEXI@Z ; stlp_std::vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >::reserve
PUBLIC	?to_storage_type_cref@?$_CastTraits@PAXPAVCEnvDescriptor@@@priv@stlp_std@@SAABQAXABQAVCEnvDescriptor@@@Z ; stlp_std::priv::_CastTraits<void *,CEnvDescriptor *>::to_storage_type_cref
PUBLIC	?push_back@?$vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@stlp_std@@QAEXABQAVCEnvDescriptor@@@Z ; stlp_std::vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >::push_back
PUBLIC	?begin@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@2@XZ ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::begin
PUBLIC	?empty@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QBE_NXZ ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::empty
PUBLIC	??0?$xalloc@PAVCEnvDescriptor@@@@QAE@XZ		; xalloc<CEnvDescriptor *>::xalloc<CEnvDescriptor *>
PUBLIC	??$?0PAVCEnvDescriptor@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAVCEnvDescriptor@@@@@Z ; xalloc<void *>::xalloc<void *><CEnvDescriptor *>
PUBLIC	??0?$vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@stlp_std@@QAE@ABV?$xalloc@PAVCEnvDescriptor@@@@@Z ; stlp_std::vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >::vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >
PUBLIC	??0?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@QAE@XZ ; xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >::xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >
PUBLIC	?key_comp@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QBE?AUstr_pred@CEnvironment@@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::key_comp
PUBLIC	?key_comp@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QBE?AUstr_pred@CEnvironment@@XZ ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::key_comp
PUBLIC	?empty@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QBE_NXZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::empty
PUBLIC	?_Rotate_left@?$_Rb_global@_N@priv@stlp_std@@SAXPAU_Rb_tree_node_base@23@AAPAU423@@Z ; stlp_std::priv::_Rb_global<bool>::_Rotate_left
PUBLIC	?_Rotate_right@?$_Rb_global@_N@priv@stlp_std@@SAXPAU_Rb_tree_node_base@23@AAPAU423@@Z ; stlp_std::priv::_Rb_global<bool>::_Rotate_right
PUBLIC	?_Rebalance@?$_Rb_global@_N@priv@stlp_std@@SAXPAU_Rb_tree_node_base@23@AAPAU423@@Z ; stlp_std::priv::_Rb_global<bool>::_Rebalance
PUBLIC	?_M_insert@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@PAU_Rb_tree_node_base@23@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@00@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_insert
PUBLIC	?begin@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::begin
PUBLIC	??0?$pair@U?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@_N@stlp_std@@QAE@ABU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@1@AB_N@Z ; stlp_std::pair<stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >,bool>::pair<stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >,bool>
PUBLIC	?insert_unique@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$pair@U?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@_N@3@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::insert_unique
PUBLIC	??F?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAEAAU012@XZ ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::operator--
PUBLIC	?insert_unique@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@U423@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::insert_unique
PUBLIC	?insert@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@2@U342@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@2@@Z ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::insert
PUBLIC	??0?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@QAE@ABVshared_str@@ABV?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@Z ; stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >
PUBLIC	??$_M_lower_bound@PAD@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@ABEPAU_Rb_tree_node_base@12@ABQAD@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_lower_bound<char *>
PUBLIC	??$lower_bound@PAD@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@12@ABQAD@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::lower_bound<char *>
PUBLIC	??$lower_bound@PAD@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@1@ABQAD@Z ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::lower_bound<char *>
PUBLIC	??$?APAD@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAEAAV?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@ABQAD@Z ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::operator[]<char *>
PUBLIC	??$xr_strcat@$0CAI@@@YAHAAY0CAI@DPBD@Z		; xr_strcat<520>
PUBLIC	??0?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE@ABU012@@Z ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >
PUBLIC	??E?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAEAAU012@XZ ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::operator++
PUBLIC	??E?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE?AU012@H@Z ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::operator++
PUBLIC	??_C@_0N@OILKOPDA@min_distance?$AA@		; `string'
PUBLIC	??_C@_0N@KIPFJHEG@max_distance?$AA@		; `string'
PUBLIC	??_C@_07MOBGNJOI@period0?$AA@			; `string'
PUBLIC	??_C@_07NHANOIKJ@period1?$AA@			; `string'
PUBLIC	??_C@_07PMCALLGK@period2?$AA@			; `string'
PUBLIC	??_C@_07OFDLIKCL@period3?$AA@			; `string'
PUBLIC	??_C@_0BP@KOPBFBGJ@CEnvAmbient?3?3SSndChannel?3?3load?$AA@ ; `string'
PUBLIC	??_C@_0DJ@LMFGIIMF@D?3?2CLEARSKY?2sources?2engine?2xrEng@ ; `string'
PUBLIC	??_C@_0EN@KLGKENFP@m_sound_period?4x?5?$DM?$DN?5m_sound_peri@ ; `string'
PUBLIC	??_C@_0CA@NAJJMFOP@m_sound_dist?4y?5?$DO?5m_sound_dist?4x?$AA@ ; `string'
PUBLIC	??_C@_06OHLGPBPO@sounds?$AA@			; `string'
PUBLIC	??_C@_0N@POGEGAMB@sounds?5empty?$AA@		; `string'
PUBLIC	??_C@_03PODCCCNG@cnt?$AA@			; `string'
PUBLIC	??_C@_09HEFANMD@life_time?$AA@			; `string'
PUBLIC	??_C@_09JNOBNNGJ@particles?$AA@			; `string'
PUBLIC	??_C@_06KLHHMIGM@offset?$AA@			; `string'
PUBLIC	??_C@_0BB@CCMBLOMC@wind_gust_factor?$AA@	; `string'
PUBLIC	??_C@_05MHNANJII@sound?$AA@			; `string'
PUBLIC	??_C@_0BE@KFMLMFEH@wind_blast_strength?$AA@	; `string'
PUBLIC	??_C@_0BF@DPMPPAHL@wind_blast_longitude?$AA@	; `string'
PUBLIC	??_C@_0BD@IJOHBNIL@wind_blast_in_time?$AA@	; `string'
PUBLIC	??_C@_0BE@IJHCHLOP@wind_blast_out_time?$AA@	; `string'
PUBLIC	??_C@_0P@DNBEMGJE@sound_channels?$AA@		; `string'
PUBLIC	??_C@_0BC@GGMJBMHC@max_effect_period?$AA@	; `string'
PUBLIC	??_C@_0BC@DFGPAEJG@min_effect_period?$AA@	; `string'
PUBLIC	??_C@_07BLLGFBLI@effects?$AA@			; `string'
PUBLIC	??_C@_0BC@HDHPDBCF@CEnvAmbient?3?3load?$AA@	; `string'
PUBLIC	??_C@_0DA@LDDMEOP@?$CBm_sound_channels?4empty?$CI?$CJ?5?$HM?$HM?5?$CBm_@ ; `string'
PUBLIC	??_C@_08BCHAAPIF@?$CFd?3?$CFd?3?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BF@EANFLFCA@CEnvDescriptor?3?3load?$AA@	; `string'
PUBLIC	??_C@_0BH@MPEMKMHJ@Incorrect?5weather?5time?$AA@ ; `string'
PUBLIC	??_C@_0EB@NFPMNHOA@?$CItm?4x?$DO?$DN0?$CJ?$CG?$CG?$CItm?4x?$DM24?$CJ?$CG?$CG?$CItm?4y?$DO?$DN0?$CJ?$CG@ ; `string'
PUBLIC	??_C@_0M@KBFBNOE@sky_texture?$AA@		; `string'
PUBLIC	??_C@_06HLMNEJJK@?$CDsmall?$AA@			; `string'
PUBLIC	??_C@_0P@BBBMCHHG@clouds_texture?$AA@		; `string'
PUBLIC	??_C@_0N@PBBLJPHJ@clouds_color?$AA@		; `string'
PUBLIC	??_C@_0P@NDAOCKKN@?$CFf?0?$CFf?0?$CFf?0?$CFf?0?$CFf?$AA@ ; `string'
PUBLIC	??_C@_0N@JNJNJFLD@sky_rotation?$AA@		; `string'
PUBLIC	??_C@_09DOMFAHMJ@far_plane?$AA@			; `string'
PUBLIC	??_C@_0M@PEDBIAKE@fog_density?$AA@		; `string'
PUBLIC	??_C@_0N@JLADMLPG@fog_distance?$AA@		; `string'
PUBLIC	??_C@_0N@DKAAMBIA@rain_density?$AA@		; `string'
PUBLIC	??_C@_0L@FGFPJEPN@rain_color?$AA@		; `string'
PUBLIC	??_C@_0O@NKEOPANL@wind_velocity?$AA@		; `string'
PUBLIC	??_C@_0P@MACDNOKA@wind_direction?$AA@		; `string'
PUBLIC	??_C@_0O@HNCBNJOB@ambient_color?$AA@		; `string'
PUBLIC	??_C@_0BB@KLFILGFK@hemisphere_color?$AA@	; `string'
PUBLIC	??_C@_0O@NONJJHIB@sun_longitude?$AA@		; `string'
PUBLIC	??_C@_0N@PNIGFPCO@sun_altitude?$AA@		; `string'
PUBLIC	??_C@_0BA@MPNGEPPI@_valid?$CIsun_dir?$CJ?$AA@	; `string'
PUBLIC	??_C@_03OHFMDAD@sun?$AA@			; `string'
PUBLIC	??_C@_0BH@JJPAPJPK@thunderbolt_collection?$AA@	; `string'
PUBLIC	??_C@_0BD@JCGMNLO@thunderbolt_period?$AA@	; `string'
PUBLIC	??_C@_0BF@KDPICAFM@thunderbolt_duration?$AA@	; `string'
PUBLIC	??_C@_07LIABELBC@ambient?$AA@			; `string'
PUBLIC	??_C@_0BF@ILNJDLLL@sun_shafts_intensity?$AA@	; `string'
PUBLIC	??_C@_0BA@CGFGMFHM@water_intensity?$AA@		; `string'
PUBLIC	??_C@_0CD@GDHIGMGD@?$CB?5Invalid?5?8?$CFs?8?5in?5env?9section?5?8?$CF@ ; `string'
PUBLIC	??_C@_0L@EEMEPANN@hemi_color?$AA@		; `string'
PUBLIC	??_C@_0BK@JGPMIJHM@CEnvDescriptorMixer?3?3lerp?$AA@ ; `string'
PUBLIC	??_C@_0BC@CPBJAOIM@_valid?$CIA?4sun_dir?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BC@LGPLGIIN@_valid?$CIB?4sun_dir?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0O@FPEAHABB@level?4env_mod?$AA@		; `string'
PUBLIC	??_C@_04ICMCOCEO@?4ltx?$AA@			; `string'
PUBLIC	??_C@_0BG@KCNLLLEN@environment?2ambients?2?$AA@	; `string'
PUBLIC	??_C@_0BA@NPNEALIJ@$game_weathers$?$AA@		; `string'
PUBLIC	??_C@_0BM@LCBBCHEL@CEnvironment?3?3load_weathers?$AA@ ; `string'
PUBLIC	??_C@_0CA@KLGPDKEF@Environment?5in?5weather?5must?5?$DO?$DN2?$AA@ ; `string'
PUBLIC	??_C@_0BE@OAKBGENP@_I?9?$DOsecond?4size?$CI?$CJ?$DO1?$AA@ ; `string'
PUBLIC	??_C@_0BA@HJPKPFGD@Empty?5weathers?4?$AA@	; `string'
PUBLIC	??_C@_0BH@GOFEJBEP@?$CBWeatherCycles?4empty?$CI?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BH@NCMIJIFN@$game_weather_effects$?$AA@	; `string'
PUBLIC	??_C@_08NFEFNABD@24?300?300?$AA@		; `string'
PUBLIC	??_C@_0CD@FDPACMLH@CEnvironment?3?3load_weather_effec@ ; `string'
EXTRN	__imp_?r_u16@?$IReaderBase@VIReader@@@@QAEGXZ:PROC
EXTRN	__imp_?r_float@?$IReaderBase@VIReader@@@@QAEMXZ:PROC
EXTRN	__imp_?r_fvector3@?$IReaderBase@VIReader@@@@QAEXAAU?$_vector3@M@@@Z:PROC
EXTRN	__imp_?r_s32@CInifile@@QBEHABVshared_str@@PBD@Z:PROC
EXTRN	__imp_?r_float@CInifile@@QBEMABVshared_str@@PBD@Z:PROC
EXTRN	__imp_?r_fvector3@CInifile@@QBE?AU?$_vector3@M@@PBD0@Z:PROC
EXTRN	__imp_?r_fvector4@CInifile@@QBE?AU?$_vector4@M@@PBD0@Z:PROC
EXTRN	__imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ:PROC
EXTRN	__imp_?find_chunk@IReader@@QAEIIPAH@Z:PROC
EXTRN	__imp_?r_open@CLocatorAPI@@QAEPAVIReader@@PBD@Z:PROC
EXTRN	__imp_?fname@CInifile@@QBEPBDXZ:PROC
EXTRN	__imp_?section_exist@CInifile@@QBEHABVshared_str@@@Z:PROC
EXTRN	__imp_?Create@CInifile@@SAPAV1@PBDH@Z:PROC
EXTRN	__imp_?sections@CInifile@@QAEAAV?$xr_vector@PAUSect@CInifile@@V?$xalloc@PAUSect@CInifile@@@@@@XZ:PROC
EXTRN	__imp_?file_list_open@CLocatorAPI@@QAEPAV?$xr_vector@PADV?$xalloc@PAD@@@@PBD0I@Z:PROC
;	COMDAT ?ignore_always@?3??load@SSndChannel@CEnvAmbient@@QAEXAAVCInifile@@PBD@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3??load@SSndChannel@CEnvAmbient@@QAEXAAVCInifile@@PBD@Z@4_NA DB 01H DUP (?) ; `CEnvAmbient::SSndChannel::load'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?7??load@SSndChannel@CEnvAmbient@@QAEXAAVCInifile@@PBD@Z@4_NA
_BSS	SEGMENT
?ignore_always@?7??load@SSndChannel@CEnvAmbient@@QAEXAAVCInifile@@PBD@Z@4_NA DB 01H DUP (?) ; `CEnvAmbient::SSndChannel::load'::`8'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?M@??load@SSndChannel@CEnvAmbient@@QAEXAAVCInifile@@PBD@Z@4_NA
_BSS	SEGMENT
?ignore_always@?M@??load@SSndChannel@CEnvAmbient@@QAEXAAVCInifile@@PBD@Z@4_NA DB 01H DUP (?) ; `CEnvAmbient::SSndChannel::load'::`12'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?5??load@CEnvAmbient@@QAEXAAVCInifile@@00ABVshared_str@@@Z@4_NA
_BSS	SEGMENT
?ignore_always@?5??load@CEnvAmbient@@QAEXAAVCInifile@@00ABVshared_str@@@Z@4_NA DB 01H DUP (?) ; `CEnvAmbient::load'::`6'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?3??load@CEnvDescriptor@@QAEXAAVCEnvironment@@AAVCInifile@@@Z@4_NA
_BSS	SEGMENT
?ignore_always@?3??load@CEnvDescriptor@@QAEXAAVCEnvironment@@AAVCInifile@@@Z@4_NA DB 01H DUP (?) ; `CEnvDescriptor::load'::`4'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?L@??load@CEnvDescriptor@@QAEXAAVCEnvironment@@AAVCInifile@@@Z@4_NA
_BSS	SEGMENT
?ignore_always@?L@??load@CEnvDescriptor@@QAEXAAVCEnvironment@@AAVCInifile@@@Z@4_NA DB 01H DUP (?) ; `CEnvDescriptor::load'::`11'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BD@??lerp@CEnvDescriptorMixer@@QAEXPAVCEnvironment@@AAVCEnvDescriptor@@1MAAVCEnvModifier@@M@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BD@??lerp@CEnvDescriptorMixer@@QAEXPAVCEnvironment@@AAVCEnvDescriptor@@1MAAVCEnvModifier@@M@Z@4_NA DB 01H DUP (?) ; `CEnvDescriptorMixer::lerp'::`19'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BH@??lerp@CEnvDescriptorMixer@@QAEXPAVCEnvironment@@AAVCEnvDescriptor@@1MAAVCEnvModifier@@M@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BH@??lerp@CEnvDescriptorMixer@@QAEXPAVCEnvironment@@AAVCEnvDescriptor@@1MAAVCEnvModifier@@M@Z@4_NA DB 01H DUP (?) ; `CEnvDescriptorMixer::lerp'::`23'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BL@??lerp@CEnvDescriptorMixer@@QAEXPAVCEnvironment@@AAVCEnvDescriptor@@1MAAVCEnvModifier@@M@Z@4_NA
_BSS	SEGMENT
?ignore_always@?BL@??lerp@CEnvDescriptorMixer@@QAEXPAVCEnvironment@@AAVCEnvDescriptor@@1MAAVCEnvModifier@@M@Z@4_NA DB 01H DUP (?) ; `CEnvDescriptorMixer::lerp'::`27'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BI@??load_weathers@CEnvironment@@IAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?BI@??load_weathers@CEnvironment@@IAEXXZ@4_NA DB 01H DUP (?) ; `CEnvironment::load_weathers'::`24'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BM@??load_weathers@CEnvironment@@IAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?BM@??load_weathers@CEnvironment@@IAEXXZ@4_NA DB 01H DUP (?) ; `CEnvironment::load_weathers'::`28'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BI@??load_weather_effects@CEnvironment@@IAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?BI@??load_weather_effects@CEnvironment@@IAEXXZ@4_NA DB 01H DUP (?) ; `CEnvironment::load_weather_effects'::`24'::ignore_always
;	COMDAT ??_C@_0CD@FDPACMLH@CEnvironment?3?3load_weather_effec@
CONST	SEGMENT
??_C@_0CD@FDPACMLH@CEnvironment?3?3load_weather_effec@ DB 'CEnvironment::'
	DB	'load_weather_effects', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08NFEFNABD@24?300?300?$AA@
CONST	SEGMENT
??_C@_08NFEFNABD@24?300?300?$AA@ DB '24:00:00', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NCMIJIFN@$game_weather_effects$?$AA@
CONST	SEGMENT
??_C@_0BH@NCMIJIFN@$game_weather_effects$?$AA@ DB '$game_weather_effects$'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GOFEJBEP@?$CBWeatherCycles?4empty?$CI?$CJ?$AA@
CONST	SEGMENT
??_C@_0BH@GOFEJBEP@?$CBWeatherCycles?4empty?$CI?$CJ?$AA@ DB '!WeatherCycl'
	DB	'es.empty()', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HJPKPFGD@Empty?5weathers?4?$AA@
CONST	SEGMENT
??_C@_0BA@HJPKPFGD@Empty?5weathers?4?$AA@ DB 'Empty weathers.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OAKBGENP@_I?9?$DOsecond?4size?$CI?$CJ?$DO1?$AA@
CONST	SEGMENT
??_C@_0BE@OAKBGENP@_I?9?$DOsecond?4size?$CI?$CJ?$DO1?$AA@ DB '_I->second.'
	DB	'size()>1', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KLGPDKEF@Environment?5in?5weather?5must?5?$DO?$DN2?$AA@
CONST	SEGMENT
??_C@_0CA@KLGPDKEF@Environment?5in?5weather?5must?5?$DO?$DN2?$AA@ DB 'Env'
	DB	'ironment in weather must >=2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@LCBBCHEL@CEnvironment?3?3load_weathers?$AA@
CONST	SEGMENT
??_C@_0BM@LCBBCHEL@CEnvironment?3?3load_weathers?$AA@ DB 'CEnvironment::l'
	DB	'oad_weathers', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NPNEALIJ@$game_weathers$?$AA@
CONST	SEGMENT
??_C@_0BA@NPNEALIJ@$game_weathers$?$AA@ DB '$game_weathers$', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KCNLLLEN@environment?2ambients?2?$AA@
CONST	SEGMENT
??_C@_0BG@KCNLLLEN@environment?2ambients?2?$AA@ DB 'environment\ambients\'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_04ICMCOCEO@?4ltx?$AA@
CONST	SEGMENT
??_C@_04ICMCOCEO@?4ltx?$AA@ DB '.ltx', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FPEAHABB@level?4env_mod?$AA@
CONST	SEGMENT
??_C@_0O@FPEAHABB@level?4env_mod?$AA@ DB 'level.env_mod', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LGPLGIIN@_valid?$CIB?4sun_dir?$CJ?$AA@
CONST	SEGMENT
??_C@_0BC@LGPLGIIN@_valid?$CIB?4sun_dir?$CJ?$AA@ DB '_valid(B.sun_dir)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CPBJAOIM@_valid?$CIA?4sun_dir?$CJ?$AA@
CONST	SEGMENT
??_C@_0BC@CPBJAOIM@_valid?$CIA?4sun_dir?$CJ?$AA@ DB '_valid(A.sun_dir)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JGPMIJHM@CEnvDescriptorMixer?3?3lerp?$AA@
CONST	SEGMENT
??_C@_0BK@JGPMIJHM@CEnvDescriptorMixer?3?3lerp?$AA@ DB 'CEnvDescriptorMix'
	DB	'er::lerp', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EEMEPANN@hemi_color?$AA@
CONST	SEGMENT
??_C@_0L@EEMEPANN@hemi_color?$AA@ DB 'hemi_color', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@GDHIGMGD@?$CB?5Invalid?5?8?$CFs?8?5in?5env?9section?5?8?$CF@
CONST	SEGMENT
??_C@_0CD@GDHIGMGD@?$CB?5Invalid?5?8?$CFs?8?5in?5env?9section?5?8?$CF@ DB '!'
	DB	' Invalid ''%s'' in env-section ''%s''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CGFGMFHM@water_intensity?$AA@
CONST	SEGMENT
??_C@_0BA@CGFGMFHM@water_intensity?$AA@ DB 'water_intensity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@ILNJDLLL@sun_shafts_intensity?$AA@
CONST	SEGMENT
??_C@_0BF@ILNJDLLL@sun_shafts_intensity?$AA@ DB 'sun_shafts_intensity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07LIABELBC@ambient?$AA@
CONST	SEGMENT
??_C@_07LIABELBC@ambient?$AA@ DB 'ambient', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KDPICAFM@thunderbolt_duration?$AA@
CONST	SEGMENT
??_C@_0BF@KDPICAFM@thunderbolt_duration?$AA@ DB 'thunderbolt_duration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JCGMNLO@thunderbolt_period?$AA@
CONST	SEGMENT
??_C@_0BD@JCGMNLO@thunderbolt_period?$AA@ DB 'thunderbolt_period', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JJPAPJPK@thunderbolt_collection?$AA@
CONST	SEGMENT
??_C@_0BH@JJPAPJPK@thunderbolt_collection?$AA@ DB 'thunderbolt_collection'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_03OHFMDAD@sun?$AA@
CONST	SEGMENT
??_C@_03OHFMDAD@sun?$AA@ DB 'sun', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MPNGEPPI@_valid?$CIsun_dir?$CJ?$AA@
CONST	SEGMENT
??_C@_0BA@MPNGEPPI@_valid?$CIsun_dir?$CJ?$AA@ DB '_valid(sun_dir)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PNIGFPCO@sun_altitude?$AA@
CONST	SEGMENT
??_C@_0N@PNIGFPCO@sun_altitude?$AA@ DB 'sun_altitude', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NONJJHIB@sun_longitude?$AA@
CONST	SEGMENT
??_C@_0O@NONJJHIB@sun_longitude?$AA@ DB 'sun_longitude', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KLFILGFK@hemisphere_color?$AA@
CONST	SEGMENT
??_C@_0BB@KLFILGFK@hemisphere_color?$AA@ DB 'hemisphere_color', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HNCBNJOB@ambient_color?$AA@
CONST	SEGMENT
??_C@_0O@HNCBNJOB@ambient_color?$AA@ DB 'ambient_color', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MACDNOKA@wind_direction?$AA@
CONST	SEGMENT
??_C@_0P@MACDNOKA@wind_direction?$AA@ DB 'wind_direction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NKEOPANL@wind_velocity?$AA@
CONST	SEGMENT
??_C@_0O@NKEOPANL@wind_velocity?$AA@ DB 'wind_velocity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FGFPJEPN@rain_color?$AA@
CONST	SEGMENT
??_C@_0L@FGFPJEPN@rain_color?$AA@ DB 'rain_color', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DKAAMBIA@rain_density?$AA@
CONST	SEGMENT
??_C@_0N@DKAAMBIA@rain_density?$AA@ DB 'rain_density', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JLADMLPG@fog_distance?$AA@
CONST	SEGMENT
??_C@_0N@JLADMLPG@fog_distance?$AA@ DB 'fog_distance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PEDBIAKE@fog_density?$AA@
CONST	SEGMENT
??_C@_0M@PEDBIAKE@fog_density?$AA@ DB 'fog_density', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DOMFAHMJ@far_plane?$AA@
CONST	SEGMENT
??_C@_09DOMFAHMJ@far_plane?$AA@ DB 'far_plane', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JNJNJFLD@sky_rotation?$AA@
CONST	SEGMENT
??_C@_0N@JNJNJFLD@sky_rotation?$AA@ DB 'sky_rotation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NDAOCKKN@?$CFf?0?$CFf?0?$CFf?0?$CFf?0?$CFf?$AA@
CONST	SEGMENT
??_C@_0P@NDAOCKKN@?$CFf?0?$CFf?0?$CFf?0?$CFf?0?$CFf?$AA@ DB '%f,%f,%f,%f,'
	DB	'%f', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PBBLJPHJ@clouds_color?$AA@
CONST	SEGMENT
??_C@_0N@PBBLJPHJ@clouds_color?$AA@ DB 'clouds_color', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BBBMCHHG@clouds_texture?$AA@
CONST	SEGMENT
??_C@_0P@BBBMCHHG@clouds_texture?$AA@ DB 'clouds_texture', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06HLMNEJJK@?$CDsmall?$AA@
CONST	SEGMENT
??_C@_06HLMNEJJK@?$CDsmall?$AA@ DB '#small', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KBFBNOE@sky_texture?$AA@
CONST	SEGMENT
??_C@_0M@KBFBNOE@sky_texture?$AA@ DB 'sky_texture', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@NFPMNHOA@?$CItm?4x?$DO?$DN0?$CJ?$CG?$CG?$CItm?4x?$DM24?$CJ?$CG?$CG?$CItm?4y?$DO?$DN0?$CJ?$CG@
CONST	SEGMENT
??_C@_0EB@NFPMNHOA@?$CItm?4x?$DO?$DN0?$CJ?$CG?$CG?$CItm?4x?$DM24?$CJ?$CG?$CG?$CItm?4y?$DO?$DN0?$CJ?$CG@ DB '('
	DB	'tm.x>=0)&&(tm.x<24)&&(tm.y>=0)&&(tm.y<60)&&(tm.z>=0)&&(tm.z<6'
	DB	'0)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MPEMKMHJ@Incorrect?5weather?5time?$AA@
CONST	SEGMENT
??_C@_0BH@MPEMKMHJ@Incorrect?5weather?5time?$AA@ DB 'Incorrect weather ti'
	DB	'me', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EANFLFCA@CEnvDescriptor?3?3load?$AA@
CONST	SEGMENT
??_C@_0BF@EANFLFCA@CEnvDescriptor?3?3load?$AA@ DB 'CEnvDescriptor::load', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BCHAAPIF@?$CFd?3?$CFd?3?$CFd?$AA@
CONST	SEGMENT
??_C@_08BCHAAPIF@?$CFd?3?$CFd?3?$CFd?$AA@ DB '%d:%d:%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@LDDMEOP@?$CBm_sound_channels?4empty?$CI?$CJ?5?$HM?$HM?5?$CBm_@
CONST	SEGMENT
??_C@_0DA@LDDMEOP@?$CBm_sound_channels?4empty?$CI?$CJ?5?$HM?$HM?5?$CBm_@ DB '!'
	DB	'm_sound_channels.empty() || !m_effects.empty()', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HDHPDBCF@CEnvAmbient?3?3load?$AA@
CONST	SEGMENT
??_C@_0BC@HDHPDBCF@CEnvAmbient?3?3load?$AA@ DB 'CEnvAmbient::load', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07BLLGFBLI@effects?$AA@
CONST	SEGMENT
??_C@_07BLLGFBLI@effects?$AA@ DB 'effects', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DFGPAEJG@min_effect_period?$AA@
CONST	SEGMENT
??_C@_0BC@DFGPAEJG@min_effect_period?$AA@ DB 'min_effect_period', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GGMJBMHC@max_effect_period?$AA@
CONST	SEGMENT
??_C@_0BC@GGMJBMHC@max_effect_period?$AA@ DB 'max_effect_period', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DNBEMGJE@sound_channels?$AA@
CONST	SEGMENT
??_C@_0P@DNBEMGJE@sound_channels?$AA@ DB 'sound_channels', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IJHCHLOP@wind_blast_out_time?$AA@
CONST	SEGMENT
??_C@_0BE@IJHCHLOP@wind_blast_out_time?$AA@ DB 'wind_blast_out_time', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IJOHBNIL@wind_blast_in_time?$AA@
CONST	SEGMENT
??_C@_0BD@IJOHBNIL@wind_blast_in_time?$AA@ DB 'wind_blast_in_time', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DPMPPAHL@wind_blast_longitude?$AA@
CONST	SEGMENT
??_C@_0BF@DPMPPAHL@wind_blast_longitude?$AA@ DB 'wind_blast_longitude', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KFMLMFEH@wind_blast_strength?$AA@
CONST	SEGMENT
??_C@_0BE@KFMLMFEH@wind_blast_strength?$AA@ DB 'wind_blast_strength', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MHNANJII@sound?$AA@
CONST	SEGMENT
??_C@_05MHNANJII@sound?$AA@ DB 'sound', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CCMBLOMC@wind_gust_factor?$AA@
CONST	SEGMENT
??_C@_0BB@CCMBLOMC@wind_gust_factor?$AA@ DB 'wind_gust_factor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06KLHHMIGM@offset?$AA@
CONST	SEGMENT
??_C@_06KLHHMIGM@offset?$AA@ DB 'offset', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JNOBNNGJ@particles?$AA@
CONST	SEGMENT
??_C@_09JNOBNNGJ@particles?$AA@ DB 'particles', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HEFANMD@life_time?$AA@
CONST	SEGMENT
??_C@_09HEFANMD@life_time?$AA@ DB 'life_time', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03PODCCCNG@cnt?$AA@
CONST	SEGMENT
??_C@_03PODCCCNG@cnt?$AA@ DB 'cnt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@POGEGAMB@sounds?5empty?$AA@
CONST	SEGMENT
??_C@_0N@POGEGAMB@sounds?5empty?$AA@ DB 'sounds empty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06OHLGPBPO@sounds?$AA@
CONST	SEGMENT
??_C@_06OHLGPBPO@sounds?$AA@ DB 'sounds', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NAJJMFOP@m_sound_dist?4y?5?$DO?5m_sound_dist?4x?$AA@
CONST	SEGMENT
??_C@_0CA@NAJJMFOP@m_sound_dist?4y?5?$DO?5m_sound_dist?4x?$AA@ DB 'm_soun'
	DB	'd_dist.y > m_sound_dist.x', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@KLGKENFP@m_sound_period?4x?5?$DM?$DN?5m_sound_peri@
CONST	SEGMENT
??_C@_0EN@KLGKENFP@m_sound_period?4x?5?$DM?$DN?5m_sound_peri@ DB 'm_sound'
	DB	'_period.x <= m_sound_period.y && m_sound_period.z <= m_sound_'
	DB	'period.w', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@LMFGIIMF@D?3?2CLEARSKY?2sources?2engine?2xrEng@
CONST	SEGMENT
??_C@_0DJ@LMFGIIMF@D?3?2CLEARSKY?2sources?2engine?2xrEng@ DB 'D:\CLEARSKY'
	DB	'\sources\engine\xrEngine\Environment_misc.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KOPBFBGJ@CEnvAmbient?3?3SSndChannel?3?3load?$AA@
CONST	SEGMENT
??_C@_0BP@KOPBFBGJ@CEnvAmbient?3?3SSndChannel?3?3load?$AA@ DB 'CEnvAmbien'
	DB	't::SSndChannel::load', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07OFDLIKCL@period3?$AA@
CONST	SEGMENT
??_C@_07OFDLIKCL@period3?$AA@ DB 'period3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07PMCALLGK@period2?$AA@
CONST	SEGMENT
??_C@_07PMCALLGK@period2?$AA@ DB 'period2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NHANOIKJ@period1?$AA@
CONST	SEGMENT
??_C@_07NHANOIKJ@period1?$AA@ DB 'period1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MOBGNJOI@period0?$AA@
CONST	SEGMENT
??_C@_07MOBGNJOI@period0?$AA@ DB 'period0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KIPFJHEG@max_distance?$AA@
CONST	SEGMENT
??_C@_0N@KIPFJHEG@max_distance?$AA@ DB 'max_distance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OILKOPDA@min_distance?$AA@
CONST	SEGMENT
??_C@_0N@OILKOPDA@min_distance?$AA@ DB 'min_distance', 00H ; `string'
_MACRO_ADD DB	0ecH
	DB	0afH
	DB	0caH
	DB	036H
	DB	0b7H
	DB	0dH
	DB	059H
	DB	0c1H
	DB	0faH
	DB	0a7H
	DB	071H
	DB	0b1H
	DB	023H
	DB	0c5H
	DB	08eH
	DB	065H
	DB	0d1H
	DB	036H
	DB	03H
	DB	012H
	DB	07aH
	DB	02cH
	DB	031H
	DB	03aH
	DB	03eH
	DB	014H
	DB	05dH
	DB	0d2H
	DB	0cH
	DB	051H
	DB	066H
	DB	0c7H
	DB	0e1H
	DB	060H
	DB	098H
	DB	06aH
	DB	016H
	DB	09dH
	DB	0a8H
	DB	080H
	DB	0e4H
	DB	07aH
	DB	094H
	DB	0b2H
	DB	0a2H
	DB	0f5H
	DB	06eH
	DB	027H
	DB	0f5H
	DB	0aH
	DB	03fH
	DB	0c5H
	DB	0ffH
	DB	020H
	DB	04cH
	DB	0b8H
	DB	0c5H
	DB	072H
	DB	071H
	DB	09aH
	DB	0a9H
	DB	0a0H
	DB	0ddH
	DB	04fH
	DB	068H
	DB	053H
	DB	0b1H
	DB	0faH
	DB	026H
	DB	014H
	DB	085H
	DB	094H
	DB	021H
	DB	014H
	DB	080H
	DB	05cH
	DB	070H
	DB	0baH
	DB	0c5H
	DB	0f6H
	DB	058H
	DB	0dbH
	DB	0aeH
	DB	0e5H
	DB	08dH
	DB	0cdH
	DB	0dcH
	DB	06aH
	DB	09cH
	DB	011H
	DB	0fcH
	DB	06dH
	DB	033H
	DB	017H
	DB	0fbH
	DB	0f2H
	DB	030H
	DB	0f2H
	DB	0e0H
	DB	0d3H
	DB	0e3H
	DB	092H
	DB	0acH
	DB	046H
	DB	0c7H
	DB	086H
	DB	09bH
	DB	06eH
	DB	074H
	DB	05dH
	DB	0b1H
	DB	05H
	DB	0b9H
	DB	0faH
	DB	075H
	DB	09fH
	DB	084H
	DB	057H
	DB	02aH
	DB	040H
	DB	072H
	DB	0e7H
	DB	0c9H
	DB	0cbH
_MACRO_SUB DB	0ecH
	DB	0afH
	DB	0caH
	DB	036H
	DB	0b7H
	DB	0dH
	DB	059H
	DB	0c1H
	DB	0faH
	DB	0a7H
	DB	071H
	DB	0b1H
	DB	023H
	DB	0c5H
	DB	08eH
	DB	065H
	DB	0d1H
	DB	036H
	DB	03H
	DB	012H
	DB	07aH
	DB	02cH
	DB	031H
	DB	03aH
	DB	03eH
	DB	014H
	DB	05dH
	DB	0d2H
	DB	0cH
	DB	051H
	DB	066H
	DB	0c7H
	DB	0e1H
	DB	060H
	DB	098H
	DB	06aH
	DB	016H
	DB	09dH
	DB	0a8H
	DB	080H
	DB	0e4H
	DB	07aH
	DB	094H
	DB	0b2H
	DB	0a2H
	DB	0f5H
	DB	06eH
	DB	027H
	DB	0f5H
	DB	0aH
	DB	03fH
	DB	0c5H
	DB	0ffH
	DB	020H
	DB	04cH
	DB	0b8H
	DB	0c5H
	DB	072H
	DB	071H
	DB	09aH
	DB	0a9H
	DB	0a0H
	DB	0ddH
	DB	04fH
	DB	068H
	DB	053H
	DB	0b1H
	DB	0faH
	DB	026H
	DB	014H
	DB	085H
	DB	094H
	DB	021H
	DB	014H
	DB	080H
	DB	05cH
	DB	070H
	DB	0baH
	DB	0c5H
	DB	0f6H
	DB	058H
	DB	0dbH
	DB	0aeH
	DB	0e5H
	DB	08dH
	DB	0cdH
	DB	0dcH
	DB	06aH
	DB	09cH
	DB	011H
	DB	0fcH
	DB	06dH
	DB	033H
	DB	017H
	DB	0fbH
	DB	0f2H
	DB	022H
	DB	0ecH
	DB	0b5H
	DB	0fdH
	DB	075H
	DB	0caH
	DB	02bH
	DB	055H
	DB	0ccH
	DB	02bH
	DB	0beH
	DB	0fcH
	DB	0c6H
	DB	073H
	DB	03cH
	DB	0efH
	DB	0fdH
	DB	0d7H
	DB	08bH
	DB	086H
	DB	069H
	DB	04aH
	DB	06aH
	DB	080H
	DB	0f0H
	DB	06eH
	DB	0a7H
	DB	09H
_MACRO_IF_EQL DB 0ecH
	DB	0afH
	DB	0aaH
	DB	093H
	DB	02dH
	DB	04H
	DB	0a3H
	DB	08fH
	DB	08aH
	DB	010H
	DB	067H
	DB	091H
	DB	0c9H
	DB	0e1H
	DB	0daH
	DB	02cH
	DB	031H
	DB	01dH
	DB	082H
	DB	0e2H
	DB	07H
	DB	0f9H
	DB	0e8H
	DB	024H
	DB	075H
	DB	0e9H
	DB	09dH
	DB	054H
	DB	070H
	DB	036H
	DB	04fH
	DB	0ffH
	DB	0ddH
	DB	04aH
	DB	082H
	DB	014H
	DB	088H
	DB	048H
	DB	074H
	DB	051H
	DB	03fH
	DB	0baH
	DB	051H
	DB	098H
	DB	0e9H
	DB	01dH
	DB	027H
	DB	0b1H
	DB	07bH
	DB	097H
	DB	027H
	DB	046H
	DB	09aH
	DB	046H
	DB	064H
	DB	0d4H
	DB	0efH
	DB	092H
	DB	0f0H
	DB	05H
	DB	05eH
	DB	079H
	DB	0edH
	DB	08dH
	DB	034H
	DB	052H
	DB	08aH
	DB	090H
	DB	0e9H
	DB	0baH
	DB	03cH
	DB	0beH
	DB	08bH
	DB	0e5H
	DB	0caH
	DB	028H
	DB	0b0H
	DB	092H
	DB	0deH
	DB	04cH
	DB	0d8H
	DB	031H
	DB	0ceH
	DB	0ceH
	DB	08eH
	DB	022H
	DB	078H
	DB	0f8H
	DB	07cH
	DB	0ceH
	DB	0f6H
	DB	04eH
	DB	084H
	DB	0d0H
	DB	0eeH
	DB	0b5H
	DB	0bH
	DB	08eH
	DB	053H
	DB	0d5H
	DB	0ceH
	DB	07cH
	DB	04fH
	DB	02fH
	DB	0faH
	DB	0f6H
	DB	0bfH
	DB	0c8H
	DB	070H
	DB	05aH
	DB	0eH
	DB	00H
	DB	0dbH
	DB	093H
	DB	044H
	DB	083H
	DB	0f4H
	DB	0fcH
	DB	0ebH
	DB	02fH
	DB	031H
	DB	01dH
	DB	02H
	DB	023H
	DB	09eH
	DB	08aH
	DB	0b5H
	DB	013H
	DB	068H
	DB	048H
	DB	03dH
	DB	076H
	DB	01H
	DB	0feH
	DB	040H
	DB	078H
	DB	02cH
	DB	0b7H
	DB	09H
	DB	039H
	DB	0cfH
	DB	0a4H
	DB	058H
	DB	087H
	DB	072H
	DB	0f8H
	DB	0a0H
	DB	0bcH
	DB	0e9H
	DB	0a3H
	DB	0d0H
	DB	0c0H
	DB	078H
	DB	080H
	DB	0faH
	DB	0dcH
	DB	05H
	DB	09aH
	DB	0cH
	DB	040H
	DB	09cH
	DB	0b6H
	DB	062H
	DB	0d4H
	DB	06eH
	DB	0a0H
	DB	018H
	DB	09aH
	DB	0eeH
	DB	085H
	DB	04aH
	DB	0b0H
	DB	063H
	DB	0d3H
	DB	02aH
	DB	084H
	DB	0caH
	DB	03cH
	DB	055H
	DB	0a9H
	DB	0d2H
	DB	018H
	DB	0aeH
	DB	04dH
	DB	040H
	DB	080H
	DB	0e5H
	DB	07aH
	DB	095H
	DB	033H
	DB	090H
	DB	0f2H
	DB	0f6H
	DB	06H
	DB	0d9H
	DB	065H
	DB	04dH
	DB	02bH
	DB	095H
	DB	029H
	DB	02H
	DB	0b9H
	DB	0f9H
	DB	0a6H
	DB	05H
	DB	056H
	DB	013H
	DB	02bH
	DB	09fH
	DB	069H
	DB	0faH
	DB	0f1H
	DB	0bbH
	DB	028H
	DB	0a6H
	DB	071H
	DB	040H
	DB	011H
	DB	0d7H
	DB	086H
	DB	04H
	DB	0eeH
	DB	0b6H
	DB	0eeH
	DB	0baH
	DB	0c6H
	DB	045H
	DB	07H
	DB	075H
	DB	0ecH
	DB	0c5H
	DB	0d0H
	DB	07dH
	DB	08cH
	DB	0c5H
	DB	051H
	DB	063H
	DB	0b4H
	DB	0eaH
	DB	051H
	DB	063H
	DB	0b4H
	DB	0eaH
	DB	0d6H
	DB	061H
	DB	0b1H
	DB	0e1H
	DB	0bfH
	DB	0d4H
	DB	05eH
	DB	0adH
	DB	07dH
	DB	0d5H
	DB	03H
	DB	053H
	DB	050H
	DB	09cH
	DB	068H
	DB	01bH
	DB	0a5H
	DB	0b4H
	DB	0f8H
	DB	066H
	DB	01eH
	DB	0c6H
	DB	076H
	DB	019H
	DB	0a9H
	DB	02fH
	DB	054H
	DB	0e6H
	DB	0c1H
	DB	041H
	DB	047H
	DB	0f1H
	DB	01aH
	DB	037H
	DB	047H
	DB	078H
	DB	0c5H
	DB	040H
	DB	07aH
	DB	028H
	DB	0a6H
	DB	0f1H
	DB	044H
	DB	014H
	DB	08eH
	DB	088H
	DB	015H
	DB	0aeH
	DB	0f0H
	DB	091H
	DB	0fH
	DB	06aH
	DB	0e3H
	DB	09dH
	DB	09bH
	DB	071H
	DB	099H
	DB	02H
	DB	034H
	DB	0e8H
	DB	05fH
	DB	02H
	DB	0b5H
	DB	06fH
	DB	045H
	DB	02aH
	DB	05aH
	DB	0efH
	DB	04bH
	DB	0d2H
	DB	07aH
	DB	0efH
	DB	04bH
	DB	053H
	DB	058H
	DB	073H
	DB	0a4H
	DB	01aH
	DB	01bH
	DB	015H
	DB	0e8H
	DB	04H
	DB	0c2H
	DB	0c3H
	DB	065H
	DB	0a5H
	DB	0bH
	DB	016H
	DB	0ccH
	DB	026H
	DB	0f0H
	DB	026H
	DB	0dbH
	DB	0caH
	DB	04aH
	DB	037H
	DB	03H
	DB	079H
	DB	064H
	DB	0dH
	DB	02aH
	DB	0baH
	DB	057H
	DB	061H
	DB	0bdH
	DB	0fcH
	DB	0e7H
	DB	0dH
	DB	0cdH
	DB	072H
	DB	0f9H
	DB	0deH
	DB	0abH
	DB	087H
	DB	054H
	DB	08fH
	DB	0eH
	DB	026H
	DB	0d5H
	DB	08aH
	DB	078H
	DB	015H
	DB	06cH
	DB	04bH
	DB	0dbH
	DB	015H
	DB	06cH
	DB	04bH
	DB	0dbH
	DB	015H
	DB	06cH
	DB	04bH
	DB	0dbH
	DB	095H
	DB	012H
	DB	0f0H
	DB	0f9H
	DB	01dH
	DB	010H
	DB	09fH
	DB	0c3H
	DB	0a8H
	DB	084H
	DB	0b0H
	DB	047H
	DB	058H
	DB	067H
	DB	094H
	DB	058H
	DB	06dH
	DB	08aH
	DB	0feH
	DB	064H
	DB	0daH
	DB	071H
	DB	0cfH
	DB	02dH
	DB	0daH
	DB	0d3H
	DB	06dH
	DB	083H
	DB	0e2H
	DB	07H
	DB	01fH
	DB	047H
	DB	0b7H
	DB	01bH
	DB	0afH
	DB	088H
	DB	021H
	DB	0deH
	DB	08cH
	DB	098H
	DB	052H
	DB	0a8H
	DB	070H
	DB	032H
	DB	092H
	DB	080H
	DB	01bH
	DB	00H
	DB	0fdH
	DB	049H
	DB	032H
	DB	0f0H
	DB	01eH
	DB	0b8H
	DB	0dbH
	DB	065H
	DB	033H
	DB	093H
	DB	093H
	DB	08eH
	DB	0a0H
	DB	097H
	DB	0efH
	DB	0a7H
	DB	0e3H
	DB	0d2H
	DB	084H
	DB	049H
	DB	02cH
	DB	0e0H
	DB	0d9H
	DB	0c0H
	DB	059H
	DB	0f8H
	DB	0cdH
	DB	062H
	DB	083H
	DB	0efH
	DB	07bH
	DB	055H
	DB	05dH
	DB	06bH
	DB	07fH
_M_PI	DD	040490fdbr			; 3.14159
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xr_resource.h
;	COMDAT ??0?$resptr_core@Vref_sound_data@@V?$resptr_base@Vref_sound_data@@@@@@QAE@XZ
_TEXT	SEGMENT
??0?$resptr_core@Vref_sound_data@@V?$resptr_base@Vref_sound_data@@@@@@QAE@XZ PROC ; resptr_core<ref_sound_data,resptr_base<ref_sound_data> >::resptr_core<ref_sound_data,resptr_base<ref_sound_data> >, COMDAT
; _this$ = eax

; 61   : 						resptr_core		()												{	p_ = 0;						}

	mov	DWORD PTR [eax], 0
	ret	0
??0?$resptr_core@Vref_sound_data@@V?$resptr_base@Vref_sound_data@@@@@@QAE@XZ ENDP ; resptr_core<ref_sound_data,resptr_base<ref_sound_data> >::resptr_core<ref_sound_data,resptr_base<ref_sound_data> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrsound\sound.h
_TEXT	ENDS
;	COMDAT ?create@ref_sound@@QAEXPBDW4esound_type@@H@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_name$ = 12						; size = 4
_game_type$ = 16					; size = 4
?create@ref_sound@@QAEXPBDW4esound_type@@H@Z PROC	; ref_sound::create, COMDAT

; 300  : IC void	ref_sound::create						( LPCSTR name, esound_type sound_type, int	game_type)	{	VERIFY(!::Sound->i_locked()); 	::Sound->create		(*this,name,sound_type,game_type);							}

	mov	eax, DWORD PTR __imp_?Sound@@3PAVCSound_manager_interface@@A
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _game_type$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+28]
	push	eax
	mov	eax, DWORD PTR _name$[esp]
	push	0
	push	eax
	mov	eax, DWORD PTR _this$[esp+8]
	push	eax
	call	edx
	ret	12					; 0000000cH
?create@ref_sound@@QAEXPBDW4esound_type@@H@Z ENDP	; ref_sound::create
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.h
_TEXT	ENDS
;	COMDAT ??0_Rb_tree_base_iterator@priv@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??0_Rb_tree_base_iterator@priv@stlp_std@@QAE@XZ PROC	; stlp_std::priv::_Rb_tree_base_iterator::_Rb_tree_base_iterator, COMDAT
; _this$ = eax

; 141  :   _Rb_tree_base_iterator() : _M_node(0) {}

	mov	DWORD PTR [eax], 0
	ret	0
??0_Rb_tree_base_iterator@priv@stlp_std@@QAE@XZ ENDP	; stlp_std::priv::_Rb_tree_base_iterator::_Rb_tree_base_iterator
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrserverentities\object_destroyer.h
_TEXT	ENDS
;	COMDAT ??$delete_data@$0A@@?$CHelper1@USSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAUSSndChannel@CEnvAmbient@@@Z
_TEXT	SEGMENT
??$delete_data@$0A@@?$CHelper1@USSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAUSSndChannel@CEnvAmbient@@@Z PROC ; CDestroyer::CHelper1<CEnvAmbient::SSndChannel>::delete_data<0>, COMDAT

; 87   : 		{
; 88   : 		}

	ret	0
??$delete_data@$0A@@?$CHelper1@USSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAUSSndChannel@CEnvAmbient@@@Z ENDP ; CDestroyer::CHelper1<CEnvAmbient::SSndChannel>::delete_data<0>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$delete_data@$0A@@?$CHelper1@USEffect@CEnvAmbient@@@CDestroyer@@SAXAAUSEffect@CEnvAmbient@@@Z
_TEXT	SEGMENT
??$delete_data@$0A@@?$CHelper1@USEffect@CEnvAmbient@@@CDestroyer@@SAXAAUSEffect@CEnvAmbient@@@Z PROC ; CDestroyer::CHelper1<CEnvAmbient::SEffect>::delete_data<0>, COMDAT

; 87   : 		{
; 88   : 		}

	ret	0
??$delete_data@$0A@@?$CHelper1@USEffect@CEnvAmbient@@@CDestroyer@@SAXAAUSEffect@CEnvAmbient@@@Z ENDP ; CDestroyer::CHelper1<CEnvAmbient::SEffect>::delete_data<0>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$delete_data@$0A@@?$CHelper2@USSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAUSSndChannel@CEnvAmbient@@@Z
_TEXT	SEGMENT
??$delete_data@$0A@@?$CHelper2@USSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAUSSndChannel@CEnvAmbient@@@Z PROC ; CDestroyer::CHelper2<CEnvAmbient::SSndChannel>::delete_data<0>, COMDAT

; 101  : 		{
; 102  : 			CHelper1<T>::delete_data<object_type_traits::is_base_and_derived<IPureDestroyableObject,T>::value>(data);
; 103  : 		}

	ret	0
??$delete_data@$0A@@?$CHelper2@USSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAUSSndChannel@CEnvAmbient@@@Z ENDP ; CDestroyer::CHelper2<CEnvAmbient::SSndChannel>::delete_data<0>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$delete_data@$0A@@?$CHelper2@USEffect@CEnvAmbient@@@CDestroyer@@SAXAAUSEffect@CEnvAmbient@@@Z
_TEXT	SEGMENT
??$delete_data@$0A@@?$CHelper2@USEffect@CEnvAmbient@@@CDestroyer@@SAXAAUSEffect@CEnvAmbient@@@Z PROC ; CDestroyer::CHelper2<CEnvAmbient::SEffect>::delete_data<0>, COMDAT

; 101  : 		{
; 102  : 			CHelper1<T>::delete_data<object_type_traits::is_base_and_derived<IPureDestroyableObject,T>::value>(data);
; 103  : 		}

	ret	0
??$delete_data@$0A@@?$CHelper2@USEffect@CEnvAmbient@@@CDestroyer@@SAXAAUSEffect@CEnvAmbient@@@Z ENDP ; CDestroyer::CHelper2<CEnvAmbient::SEffect>::delete_data<0>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$delete_data@$0A@@?$CHelper4@USSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAUSSndChannel@CEnvAmbient@@@Z
_TEXT	SEGMENT
??$delete_data@$0A@@?$CHelper4@USSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAUSSndChannel@CEnvAmbient@@@Z PROC ; CDestroyer::CHelper4<CEnvAmbient::SSndChannel>::delete_data<0>, COMDAT

; 130  : 		{
; 131  : 			CHelper2<T>::delete_data<object_type_traits::is_pointer<T>::value>	(data);
; 132  : 		}

	ret	0
??$delete_data@$0A@@?$CHelper4@USSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAUSSndChannel@CEnvAmbient@@@Z ENDP ; CDestroyer::CHelper4<CEnvAmbient::SSndChannel>::delete_data<0>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$delete_data@$0A@@?$CHelper4@USEffect@CEnvAmbient@@@CDestroyer@@SAXAAUSEffect@CEnvAmbient@@@Z
_TEXT	SEGMENT
??$delete_data@$0A@@?$CHelper4@USEffect@CEnvAmbient@@@CDestroyer@@SAXAAUSEffect@CEnvAmbient@@@Z PROC ; CDestroyer::CHelper4<CEnvAmbient::SEffect>::delete_data<0>, COMDAT

; 130  : 		{
; 131  : 			CHelper2<T>::delete_data<object_type_traits::is_pointer<T>::value>	(data);
; 132  : 		}

	ret	0
??$delete_data@$0A@@?$CHelper4@USEffect@CEnvAmbient@@@CDestroyer@@SAXAAUSEffect@CEnvAmbient@@@Z ENDP ; CDestroyer::CHelper4<CEnvAmbient::SEffect>::delete_data<0>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$delete_data@USSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAUSSndChannel@CEnvAmbient@@@Z
_TEXT	SEGMENT
??$delete_data@USSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAUSSndChannel@CEnvAmbient@@@Z PROC ; CDestroyer::delete_data<CEnvAmbient::SSndChannel>, COMDAT

; 144  : 		CHelper4<T>::delete_data<object_type_traits::is_stl_container<T>::value>(data);
; 145  : 	}

	ret	0
??$delete_data@USSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAUSSndChannel@CEnvAmbient@@@Z ENDP ; CDestroyer::delete_data<CEnvAmbient::SSndChannel>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$delete_data@USEffect@CEnvAmbient@@@CDestroyer@@SAXAAUSEffect@CEnvAmbient@@@Z
_TEXT	SEGMENT
??$delete_data@USEffect@CEnvAmbient@@@CDestroyer@@SAXAAUSEffect@CEnvAmbient@@@Z PROC ; CDestroyer::delete_data<CEnvAmbient::SEffect>, COMDAT

; 144  : 		CHelper4<T>::delete_data<object_type_traits::is_stl_container<T>::value>(data);
; 145  : 	}

	ret	0
??$delete_data@USEffect@CEnvAmbient@@@CDestroyer@@SAXAAUSEffect@CEnvAmbient@@@Z ENDP ; CDestroyer::delete_data<CEnvAmbient::SEffect>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.c
_TEXT	ENDS
;	COMDAT ?_Rotate_right@?$_Rb_global@_N@priv@stlp_std@@SAXPAU_Rb_tree_node_base@23@AAPAU423@@Z
_TEXT	SEGMENT
?_Rotate_right@?$_Rb_global@_N@priv@stlp_std@@SAXPAU_Rb_tree_node_base@23@AAPAU423@@Z PROC ; stlp_std::priv::_Rb_global<bool>::_Rotate_right, COMDAT
; ___x$ = ecx
; ___root$ = esi

; 81   :   _Rb_tree_node_base* __y = __x->_M_left;

	mov	eax, DWORD PTR [ecx+8]

; 82   :   __x->_M_left = __y->_M_right;

	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+8], edx

; 83   :   if (__y->_M_right != 0)

	mov	edx, DWORD PTR [eax+12]
	test	edx, edx
	je	SHORT $LN5@Rotate_rig

; 84   :     __y->_M_right->_M_parent = __x;

	mov	DWORD PTR [edx+4], ecx
$LN5@Rotate_rig:

; 85   :   __y->_M_parent = __x->_M_parent;

	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 86   : 
; 87   :   if (__x == __root)

	cmp	ecx, DWORD PTR [esi]
	jne	SHORT $LN4@Rotate_rig

; 88   :     __root = __y;

	mov	DWORD PTR [esi], eax

; 93   :   __y->_M_right = __x;

	mov	DWORD PTR [eax+12], ecx

; 94   :   __x->_M_parent = __y;

	mov	DWORD PTR [ecx+4], eax

; 95   : }

	ret	0
$LN4@Rotate_rig:

; 89   :   else if (__x == __x->_M_parent->_M_right)

	mov	edx, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [edx+12]
	jne	SHORT $LN2@Rotate_rig

; 90   :     __x->_M_parent->_M_right = __y;

	mov	DWORD PTR [edx+12], eax

; 93   :   __y->_M_right = __x;

	mov	DWORD PTR [eax+12], ecx

; 94   :   __x->_M_parent = __y;

	mov	DWORD PTR [ecx+4], eax

; 95   : }

	ret	0
$LN2@Rotate_rig:

; 91   :   else
; 92   :     __x->_M_parent->_M_left = __y;

	mov	DWORD PTR [edx+8], eax

; 93   :   __y->_M_right = __x;

	mov	DWORD PTR [eax+12], ecx

; 94   :   __x->_M_parent = __y;

	mov	DWORD PTR [ecx+4], eax

; 95   : }

	ret	0
?_Rotate_right@?$_Rb_global@_N@priv@stlp_std@@SAXPAU_Rb_tree_node_base@23@AAPAU423@@Z ENDP ; stlp_std::priv::_Rb_global<bool>::_Rotate_right
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Rotate_left@?$_Rb_global@_N@priv@stlp_std@@SAXPAU_Rb_tree_node_base@23@AAPAU423@@Z
_TEXT	SEGMENT
?_Rotate_left@?$_Rb_global@_N@priv@stlp_std@@SAXPAU_Rb_tree_node_base@23@AAPAU423@@Z PROC ; stlp_std::priv::_Rb_global<bool>::_Rotate_left, COMDAT
; ___x$ = ecx
; ___root$ = esi

; 62   :   _Rb_tree_node_base* __y = __x->_M_right;

	mov	eax, DWORD PTR [ecx+12]

; 63   :   __x->_M_right = __y->_M_left;

	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+12], edx

; 64   :   if (__y->_M_left != 0)

	mov	edx, DWORD PTR [eax+8]
	test	edx, edx
	je	SHORT $LN5@Rotate_lef

; 65   :     __y->_M_left->_M_parent = __x;

	mov	DWORD PTR [edx+4], ecx
$LN5@Rotate_lef:

; 66   :   __y->_M_parent = __x->_M_parent;

	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 67   : 
; 68   :   if (__x == __root)

	cmp	ecx, DWORD PTR [esi]
	jne	SHORT $LN4@Rotate_lef

; 69   :     __root = __y;

	mov	DWORD PTR [esi], eax

; 74   :   __y->_M_left = __x;

	mov	DWORD PTR [eax+8], ecx

; 75   :   __x->_M_parent = __y;

	mov	DWORD PTR [ecx+4], eax

; 76   : }

	ret	0
$LN4@Rotate_lef:

; 70   :   else if (__x == __x->_M_parent->_M_left)

	mov	edx, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [edx+8]
	jne	SHORT $LN2@Rotate_lef

; 71   :     __x->_M_parent->_M_left = __y;

	mov	DWORD PTR [edx+8], eax

; 74   :   __y->_M_left = __x;

	mov	DWORD PTR [eax+8], ecx

; 75   :   __x->_M_parent = __y;

	mov	DWORD PTR [ecx+4], eax

; 76   : }

	ret	0
$LN2@Rotate_lef:

; 72   :   else
; 73   :     __x->_M_parent->_M_right = __y;

	mov	DWORD PTR [edx+12], eax

; 74   :   __y->_M_left = __x;

	mov	DWORD PTR [eax+8], ecx

; 75   :   __x->_M_parent = __y;

	mov	DWORD PTR [ecx+4], eax

; 76   : }

	ret	0
?_Rotate_left@?$_Rb_global@_N@priv@stlp_std@@SAXPAU_Rb_tree_node_base@23@AAPAU423@@Z ENDP ; stlp_std::priv::_Rb_global<bool>::_Rotate_left
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Rebalance@?$_Rb_global@_N@priv@stlp_std@@SAXPAU_Rb_tree_node_base@23@AAPAU423@@Z
_TEXT	SEGMENT
?_Rebalance@?$_Rb_global@_N@priv@stlp_std@@SAXPAU_Rb_tree_node_base@23@AAPAU423@@Z PROC ; stlp_std::priv::_Rb_global<bool>::_Rebalance, COMDAT
; ___x$ = eax
; ___root$ = edi

; 100  :   __x->_M_color = _S_rb_tree_red;

	mov	BYTE PTR [eax], 0

; 101  :   while (__x != __root && __x->_M_parent->_M_color == _S_rb_tree_red) {

	cmp	eax, DWORD PTR [edi]
	je	$LN42@Rebalance
	push	esi
	npad	4
$LL10@Rebalance:
	mov	ecx, DWORD PTR [eax+4]
	cmp	BYTE PTR [ecx], 0
	jne	$LN43@Rebalance

; 102  :     if (__x->_M_parent == __x->_M_parent->_M_parent->_M_left) {

	mov	esi, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [esi+8]
	cmp	ecx, edx
	jne	$LN8@Rebalance

; 103  :       _Rb_tree_node_base* __y = __x->_M_parent->_M_parent->_M_right;

	mov	edx, DWORD PTR [esi+12]

; 104  :       if (__y && __y->_M_color == _S_rb_tree_red) {

	test	edx, edx
	je	SHORT $LN7@Rebalance
	cmp	BYTE PTR [edx], 0

; 105  :         __x->_M_parent->_M_color = _S_rb_tree_black;
; 106  :         __y->_M_color = _S_rb_tree_black;
; 107  :         __x->_M_parent->_M_parent->_M_color = _S_rb_tree_red;
; 108  :         __x = __x->_M_parent->_M_parent;
; 109  :       }
; 110  :       else {

	je	$LN46@Rebalance
$LN7@Rebalance:

; 111  :         if (__x == __x->_M_parent->_M_right) {

	cmp	eax, DWORD PTR [ecx+12]
	jne	SHORT $LN18@Rebalance

; 112  :           __x = __x->_M_parent;

	mov	eax, ecx

; 113  :           _Rotate_left(__x, __root);

	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR [ecx+8]
	test	edx, edx
	je	SHORT $LN17@Rebalance
	mov	DWORD PTR [edx+4], eax
$LN17@Rebalance:
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	cmp	eax, DWORD PTR [edi]
	jne	SHORT $LN16@Rebalance
	mov	DWORD PTR [edi], ecx
	jmp	SHORT $LN13@Rebalance
$LN16@Rebalance:
	mov	edx, DWORD PTR [eax+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN14@Rebalance
	mov	DWORD PTR [edx+8], ecx
	jmp	SHORT $LN13@Rebalance
$LN14@Rebalance:
	mov	DWORD PTR [edx+12], ecx
$LN13@Rebalance:
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [eax+4], ecx
$LN18@Rebalance:

; 114  :         }
; 115  :         __x->_M_parent->_M_color = _S_rb_tree_black;

	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx], 1

; 116  :         __x->_M_parent->_M_parent->_M_color = _S_rb_tree_red;

	mov	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [edx+4]
	mov	BYTE PTR [ecx], 0

; 117  :         _Rotate_right(__x->_M_parent->_M_parent, __root);

	mov	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [ecx+8]
	mov	esi, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+8], esi
	mov	esi, DWORD PTR [edx+12]
	test	esi, esi
	je	SHORT $LN24@Rebalance
	mov	DWORD PTR [esi+4], ecx
$LN24@Rebalance:
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], esi
	cmp	ecx, DWORD PTR [edi]
	jne	SHORT $LN23@Rebalance
	mov	DWORD PTR [edi], edx
	mov	DWORD PTR [edx+12], ecx

; 118  :       }
; 119  :     }
; 120  :     else {

	jmp	$LN45@Rebalance

; 117  :         _Rotate_right(__x->_M_parent->_M_parent, __root);

$LN23@Rebalance:
	mov	esi, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [esi+12]
	jne	SHORT $LN21@Rebalance
	mov	DWORD PTR [esi+12], edx
	mov	DWORD PTR [edx+12], ecx

; 118  :       }
; 119  :     }
; 120  :     else {

	jmp	$LN45@Rebalance

; 117  :         _Rotate_right(__x->_M_parent->_M_parent, __root);

$LN21@Rebalance:
	mov	DWORD PTR [esi+8], edx
	mov	DWORD PTR [edx+12], ecx

; 118  :       }
; 119  :     }
; 120  :     else {

	jmp	$LN45@Rebalance
$LN8@Rebalance:

; 121  :       _Rb_tree_node_base* __y = __x->_M_parent->_M_parent->_M_left;
; 122  :       if (__y && __y->_M_color == _S_rb_tree_red) {

	test	edx, edx
	je	SHORT $LN3@Rebalance
	cmp	BYTE PTR [edx], 0
	jne	SHORT $LN3@Rebalance
$LN46@Rebalance:

; 123  :         __x->_M_parent->_M_color = _S_rb_tree_black;

	mov	BYTE PTR [ecx], 1

; 124  :         __y->_M_color = _S_rb_tree_black;

	mov	BYTE PTR [edx], 1

; 125  :         __x->_M_parent->_M_parent->_M_color = _S_rb_tree_red;

	mov	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [edx+4]
	mov	BYTE PTR [ecx], 0

; 126  :         __x = __x->_M_parent->_M_parent;

	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [edx+4]

; 127  :       }
; 128  :       else {

	jmp	$LN39@Rebalance
$LN3@Rebalance:

; 129  :         if (__x == __x->_M_parent->_M_left) {

	cmp	eax, DWORD PTR [ecx+8]
	jne	SHORT $LN32@Rebalance

; 130  :           __x = __x->_M_parent;

	mov	eax, ecx

; 131  :           _Rotate_right(__x, __root);

	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [ecx+12]
	test	edx, edx
	je	SHORT $LN31@Rebalance
	mov	DWORD PTR [edx+4], eax
$LN31@Rebalance:
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	cmp	eax, DWORD PTR [edi]
	jne	SHORT $LN30@Rebalance
	mov	DWORD PTR [edi], ecx
	jmp	SHORT $LN27@Rebalance
$LN30@Rebalance:
	mov	edx, DWORD PTR [eax+4]
	cmp	eax, DWORD PTR [edx+12]
	jne	SHORT $LN28@Rebalance
	mov	DWORD PTR [edx+12], ecx
	jmp	SHORT $LN27@Rebalance
$LN28@Rebalance:
	mov	DWORD PTR [edx+8], ecx
$LN27@Rebalance:
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [eax+4], ecx
$LN32@Rebalance:

; 132  :         }
; 133  :         __x->_M_parent->_M_color = _S_rb_tree_black;

	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx], 1

; 134  :         __x->_M_parent->_M_parent->_M_color = _S_rb_tree_red;

	mov	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [edx+4]
	mov	BYTE PTR [ecx], 0

; 135  :         _Rotate_left(__x->_M_parent->_M_parent, __root);

	mov	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [ecx+12]
	mov	esi, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+12], esi
	mov	esi, DWORD PTR [edx+8]
	test	esi, esi
	je	SHORT $LN38@Rebalance
	mov	DWORD PTR [esi+4], ecx
$LN38@Rebalance:
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], esi
	cmp	ecx, DWORD PTR [edi]
	jne	SHORT $LN37@Rebalance
	mov	DWORD PTR [edi], edx
	jmp	SHORT $LN34@Rebalance
$LN37@Rebalance:
	mov	esi, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [esi+8]
	jne	SHORT $LN35@Rebalance
	mov	DWORD PTR [esi+8], edx
	jmp	SHORT $LN34@Rebalance
$LN35@Rebalance:
	mov	DWORD PTR [esi+12], edx
$LN34@Rebalance:
	mov	DWORD PTR [edx+8], ecx
$LN45@Rebalance:
	mov	DWORD PTR [ecx+4], edx
$LN39@Rebalance:

; 101  :   while (__x != __root && __x->_M_parent->_M_color == _S_rb_tree_red) {

	cmp	eax, DWORD PTR [edi]
	jne	$LL10@Rebalance

; 136  :       }
; 137  :     }
; 138  :   }
; 139  :   __root->_M_color = _S_rb_tree_black;

	mov	eax, DWORD PTR [edi]
	mov	BYTE PTR [eax], 1
	pop	esi

; 140  : }

	ret	0
$LN42@Rebalance:

; 136  :       }
; 137  :     }
; 138  :   }
; 139  :   __root->_M_color = _S_rb_tree_black;

	mov	ecx, DWORD PTR [edi]
	mov	BYTE PTR [ecx], 1

; 140  : }

	ret	0
$LN43@Rebalance:

; 136  :       }
; 137  :     }
; 138  :   }
; 139  :   __root->_M_color = _S_rb_tree_black;

	mov	edx, DWORD PTR [edi]
	mov	BYTE PTR [edx], 1
	pop	esi

; 140  : }

	ret	0
?_Rebalance@?$_Rb_global@_N@priv@stlp_std@@SAXPAU_Rb_tree_node_base@23@AAPAU423@@Z ENDP ; stlp_std::priv::_Rb_global<bool>::_Rebalance
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\type_traits.h
_TEXT	ENDS
;	COMDAT ?_Answer@?$_BothPtrType@PAPAXPAPAX@stlp_std@@SA?AU__true_type@2@XZ
_TEXT	SEGMENT
?_Answer@?$_BothPtrType@PAPAXPAPAX@stlp_std@@SA?AU__true_type@2@XZ PROC ; stlp_std::_BothPtrType<void * *,void * *>::_Answer, COMDAT

; 468  :   static _Ret _Answer() { return _Ret(); }

	xor	al, al
	ret	0
?_Answer@?$_BothPtrType@PAPAXPAPAX@stlp_std@@SA?AU__true_type@2@XZ ENDP ; stlp_std::_BothPtrType<void * *,void * *>::_Answer
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$fill@PAPAXPAX@stlp_std@@YAXPAPAX0ABQAX@Z
_TEXT	SEGMENT
??$fill@PAPAXPAX@stlp_std@@YAXPAPAX0ABQAX@Z PROC	; stlp_std::fill<void * *,void *>, COMDAT
; ___first$ = eax
; ___last$ = ecx
; ___val$ = edx

; 393  :   _STLP_DEBUG_CHECK(_STLP_PRIV __check_range(__first, __last))
; 394  :   for ( ; __first != __last; ++__first)

	cmp	eax, ecx
	je	SHORT $LN1@fill@5
	push	esi
$LL3@fill@5:

; 395  :     *__first = __val;

	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	add	eax, 4
	cmp	eax, ecx
	jne	SHORT $LL3@fill@5
	pop	esi
$LN1@fill@5:

; 396  : }

	ret	0
??$fill@PAPAXPAX@stlp_std@@YAXPAPAX0ABQAX@Z ENDP	; stlp_std::fill<void * *,void *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?_M_set@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@00@Z
_TEXT	SEGMENT
___e$ = 8						; size = 4
?_M_set@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@00@Z PROC ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_set, COMDAT
; _this$ = eax
; ___s$ = ecx
; ___f$ = edx

; 626  :     this->_M_start = __s;

	mov	DWORD PTR [eax], ecx

; 627  :     this->_M_finish = __f;
; 628  :     this->_M_end_of_storage._M_data = __e;

	mov	ecx, DWORD PTR ___e$[esp-4]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx

; 629  :   }

	ret	4
?_M_set@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@00@Z ENDP ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_set
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_is_inside@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@ABE_NABUref_sound@@@Z
_TEXT	SEGMENT
?_M_is_inside@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@ABE_NABUref_sound@@@Z PROC ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_is_inside, COMDAT
; _this$ = ecx
; ___x$ = eax

; 393  :     return (&__x >= this->_M_start && &__x < this->_M_finish);

	cmp	eax, DWORD PTR [ecx]
	jb	SHORT $LN3@M_is_insid@8
	cmp	eax, DWORD PTR [ecx+4]
	jae	SHORT $LN3@M_is_insid@8
	mov	eax, 1

; 394  :   }

	ret	0
$LN3@M_is_insid@8:

; 393  :     return (&__x >= this->_M_start && &__x < this->_M_finish);

	xor	eax, eax

; 394  :   }

	ret	0
?_M_is_inside@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@ABE_NABUref_sound@@@Z ENDP ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_is_inside
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_is_inside@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@ABE_NABQAX@Z
_TEXT	SEGMENT
?_M_is_inside@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@ABE_NABQAX@Z PROC ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_is_inside, COMDAT
; _this$ = ecx
; ___x$ = eax

; 393  :     return (&__x >= this->_M_start && &__x < this->_M_finish);

	cmp	eax, DWORD PTR [ecx]
	jb	SHORT $LN3@M_is_insid@9
	cmp	eax, DWORD PTR [ecx+4]
	jae	SHORT $LN3@M_is_insid@9
	mov	eax, 1

; 394  :   }

	ret	0
$LN3@M_is_insid@9:

; 393  :     return (&__x >= this->_M_start && &__x < this->_M_finish);

	xor	eax, eax

; 394  :   }

	ret	0
?_M_is_inside@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@ABE_NABQAX@Z ENDP ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_is_inside
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??$?0PAVCEnvDescriptor@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAVCEnvDescriptor@@@@@Z
_TEXT	SEGMENT
??$?0PAVCEnvDescriptor@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAVCEnvDescriptor@@@@@Z PROC ; xalloc<void *>::xalloc<void *><CEnvDescriptor *>, COMDAT
; _this$ = eax

; 79   : 	template<class _Other>							xalloc			(const xalloc<_Other>&)					{	}

	ret	0
??$?0PAVCEnvDescriptor@@@?$xalloc@PAX@@QAE@ABV?$xalloc@PAVCEnvDescriptor@@@@@Z ENDP ; xalloc<void *>::xalloc<void *><CEnvDescriptor *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__fill_n@PAVCEnvModifier@@IV1@@priv@stlp_std@@YAPAVCEnvModifier@@PAV2@IABV2@@Z
_TEXT	SEGMENT
??$__fill_n@PAVCEnvModifier@@IV1@@priv@stlp_std@@YAPAVCEnvModifier@@PAV2@IABV2@@Z PROC ; stlp_std::priv::__fill_n<CEnvModifier *,unsigned int,CEnvModifier>, COMDAT
; ___first$ = eax
; ___n$ = edx
; ___val$ = ebx

; 403  :   _STLP_FIX_LITERAL_BUG(__first)
; 404  :   for ( ; __n > 0; --__n, ++__first)

	test	edx, edx
	jbe	SHORT $LN1@fill_n@13
	push	esi
	push	edi
$LL3@fill_n@13:

; 405  :     *__first = __val;

	mov	edi, eax
	sub	edx, 1
	mov	ecx, 20					; 00000014H
	mov	esi, ebx
	add	eax, 80					; 00000050H
	test	edx, edx
	rep movsd
	ja	SHORT $LL3@fill_n@13
	pop	edi
	pop	esi
$LN1@fill_n@13:

; 406  :   return __first;
; 407  : }

	ret	0
??$__fill_n@PAVCEnvModifier@@IV1@@priv@stlp_std@@YAPAVCEnvModifier@@PAV2@IABV2@@Z ENDP ; stlp_std::priv::__fill_n<CEnvModifier *,unsigned int,CEnvModifier>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.h
_TEXT	ENDS
;	COMDAT ?key_comp@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QBE?AUstr_pred@CEnvironment@@XZ
_TEXT	SEGMENT
?key_comp@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QBE?AUstr_pred@CEnvironment@@XZ PROC ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::key_comp, COMDAT
; ___$ReturnUdt$ = eax

; 414  :   _Compare key_comp() const { return _M_key_compare; }

	ret	0
?key_comp@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QBE?AUstr_pred@CEnvironment@@XZ ENDP ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::key_comp
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xalloc@PAVCEnvDescriptor@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xalloc@PAVCEnvDescriptor@@@@QAE@XZ PROC		; xalloc<CEnvDescriptor *>::xalloc<CEnvDescriptor *>, COMDAT
; _this$ = eax

; 77   : 													xalloc			()										{	}

	ret	0
??0?$xalloc@PAVCEnvDescriptor@@@@QAE@XZ ENDP		; xalloc<CEnvDescriptor *>::xalloc<CEnvDescriptor *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max_size@?$xalloc@PAX@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$xalloc@PAX@@QBEIXZ PROC			; xalloc<void *>::max_size, COMDAT

; 87   : 							size_type				max_size		() const								{	size_type _Count = (size_type)(-1) / sizeof (T);	return (0 < _Count ? _Count : 1);	}

	mov	eax, 1073741823				; 3fffffffH
	ret	0
?max_size@?$xalloc@PAX@@QBEIXZ ENDP			; xalloc<void *>::max_size
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
_TEXT	ENDS
;	COMDAT ??R?$xr_special_free@$00VCLensFlare@@@@QAEXAAPAVCLensFlare@@@Z
_TEXT	SEGMENT
??R?$xr_special_free@$00VCLensFlare@@@@QAEXAAPAVCLensFlare@@@Z PROC ; xr_special_free<1,CLensFlare>::operator(), COMDAT
; _ptr$ = esi

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	mov	eax, DWORD PTR [esi]
	push	edi
	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx]
	add	esp, 4
	mov	edi, eax
	mov	eax, DWORD PTR [edx]
	push	0
	call	eax

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	pop	edi

; 135  : 	}

	ret	0
??R?$xr_special_free@$00VCLensFlare@@@@QAEXAAPAVCLensFlare@@@Z ENDP ; xr_special_free<1,CLensFlare>::operator()
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?_M_set@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@AAEXPAVCEnvModifier@@00@Z
_TEXT	SEGMENT
___e$ = 8						; size = 4
?_M_set@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@AAEXPAVCEnvModifier@@00@Z PROC ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::_M_set, COMDAT
; _this$ = eax
; ___s$ = ecx
; ___f$ = edx

; 626  :     this->_M_start = __s;

	mov	DWORD PTR [eax], ecx

; 627  :     this->_M_finish = __f;
; 628  :     this->_M_end_of_storage._M_data = __e;

	mov	ecx, DWORD PTR ___e$[esp-4]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx

; 629  :   }

	ret	4
?_M_set@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@AAEXPAVCEnvModifier@@00@Z ENDP ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::_M_set
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_map.h
_TEXT	ENDS
;	COMDAT ?key_comp@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QBE?AUstr_pred@CEnvironment@@XZ
_TEXT	SEGMENT
?key_comp@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QBE?AUstr_pred@CEnvironment@@XZ PROC ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::key_comp, COMDAT
; ___$ReturnUdt$ = eax

; 157  :   key_compare key_comp() const { return _M_t.key_comp(); }

	ret	0
?key_comp@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QBE?AUstr_pred@CEnvironment@@XZ ENDP ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::key_comp
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?max_size@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBEIXZ PROC ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::max_size, COMDAT

; 182  :     size_type __vector_max_size = size_type(-1) / sizeof(_Tp);
; 183  :     typename allocator_type::size_type __alloc_max_size = this->_M_end_of_storage.max_size();
; 184  :     return (__alloc_max_size < __vector_max_size)?__alloc_max_size:__vector_max_size;

	mov	eax, 1073741823				; 3fffffffH

; 185  :   }

	ret	0
?max_size@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBEIXZ ENDP ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::max_size
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
_TEXT	ENDS
;	COMDAT ??$xr_delete@VCLensFlare@@@@YAXAAPAVCLensFlare@@@Z
_TEXT	SEGMENT
??$xr_delete@VCLensFlare@@@@YAXAAPAVCLensFlare@@@Z PROC	; xr_delete<CLensFlare>, COMDAT
; _ptr$ = esi

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN1@xr_delete@14
	push	edi

; 152  : 	{
; 153  : 		xr_special_free<is_polymorphic<T>::result,T>()(ptr);

	push	eax
	call	___RTCastToVoid
	mov	ecx, DWORD PTR [esi]
	mov	edi, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	add	esp, 4
	push	0
	call	edx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 154  : 		ptr = NULL;

	mov	DWORD PTR [esi], 0
	pop	edi
$LN1@xr_delete@14:

; 155  : 	}
; 156  : }

	ret	0
??$xr_delete@VCLensFlare@@@@YAXAAPAVCLensFlare@@@Z ENDP	; xr_delete<CLensFlare>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xr_trims.h
_TEXT	ENDS
;	COMDAT ??$_GetItem@$0CAI@@@YAPADPBDHAAY0CAI@DD0_N@Z
_TEXT	SEGMENT
??$_GetItem@$0CAI@@@YAPADPBDHAAY0CAI@DD0_N@Z PROC	; _GetItem<520>, COMDAT
; _src$ = edx
; _index$ = ecx
; _dst$ = eax

; 27   : 	return					_GetItem(src,index,dst,count,separator,def,trim);

	push	1
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	44					; 0000002cH
	push	520					; 00000208H
	push	eax
	push	ecx
	push	edx
	call	DWORD PTR __imp_?_GetItem@@YAPADPBDHPADID0_N@Z
	add	esp, 28					; 0000001cH

; 28   : }

	ret	0
??$_GetItem@$0CAI@@@YAPADPBDHAAY0CAI@DD0_N@Z ENDP	; _GetItem<520>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_TEXT	ENDS
;	COMDAT ?to_storage_type_cref@?$_CastTraits@VCEnvModifier@@V1@@priv@stlp_std@@SAABVCEnvModifier@@ABV4@@Z
_TEXT	SEGMENT
?to_storage_type_cref@?$_CastTraits@VCEnvModifier@@V1@@priv@stlp_std@@SAABVCEnvModifier@@ABV4@@Z PROC ; stlp_std::priv::_CastTraits<CEnvModifier,CEnvModifier>::to_storage_type_cref, COMDAT
; ___ref$ = eax

; 254  :   { return __ref; }

	ret	0
?to_storage_type_cref@?$_CastTraits@VCEnvModifier@@V1@@priv@stlp_std@@SAABVCEnvModifier@@ABV4@@Z ENDP ; stlp_std::priv::_CastTraits<CEnvModifier,CEnvModifier>::to_storage_type_cref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_storage_type_cref@?$_CastTraits@Uref_sound@@U1@@priv@stlp_std@@SAABUref_sound@@ABU4@@Z
_TEXT	SEGMENT
?to_storage_type_cref@?$_CastTraits@Uref_sound@@U1@@priv@stlp_std@@SAABUref_sound@@ABU4@@Z PROC ; stlp_std::priv::_CastTraits<ref_sound,ref_sound>::to_storage_type_cref, COMDAT
; ___ref$ = eax

; 254  :   { return __ref; }

	ret	0
?to_storage_type_cref@?$_CastTraits@Uref_sound@@U1@@priv@stlp_std@@SAABUref_sound@@ABU4@@Z ENDP ; stlp_std::priv::_CastTraits<ref_sound,ref_sound>::to_storage_type_cref
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.h
_TEXT	ENDS
;	COMDAT ?empty@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QBE_NXZ PROC ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::empty, COMDAT
; _this$ = ecx

; 427  :   bool empty() const { return _M_node_count == 0; }

	xor	eax, eax
	cmp	DWORD PTR [ecx+16], eax
	sete	al
	ret	0
?empty@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QBE_NXZ ENDP ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::empty
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE@XZ PROC ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >, COMDAT
; _this$ = eax

; 159  :   _Rb_tree_iterator() {}

	mov	DWORD PTR [eax], 0
	ret	0
??0?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE@XZ ENDP ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_map.h
_TEXT	ENDS
;	COMDAT ?empty@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QBE_NXZ PROC ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::empty, COMDAT
; _this$ = ecx

; 169  :   bool empty() const { return _M_t.empty(); }

	xor	eax, eax
	cmp	DWORD PTR [ecx+16], eax
	sete	al
	ret	0
?empty@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QBE_NXZ ENDP ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::empty
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_flags.h
_TEXT	ENDS
;	COMDAT ?test@?$_flags@G@@QBEHG@Z
_TEXT	SEGMENT
_mask$ = 8						; size = 2
?test@?$_flags@G@@QBEHG@Z PROC				; _flags<unsigned short>::test, COMDAT
; _this$ = eax

; 25   : 	IC 	BOOL	test	(const T mask)						const	{ return BOOL(!!(flags&mask));			}

	mov	ax, WORD PTR [eax]
	and	ax, WORD PTR _mask$[esp-4]
	neg	ax
	sbb	eax, eax
	neg	eax
	ret	4
?test@?$_flags@G@@QBEHG@Z ENDP				; _flags<unsigned short>::test
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?set@?$_flags@G@@QAEAAU1@GH@Z
_TEXT	SEGMENT
?set@?$_flags@G@@QAEAAU1@GH@Z PROC			; _flags<unsigned short>::set, COMDAT
; _this$ = eax
; _mask$ = ecx

; 22   : 	IC	SelfRef	set		(const T mask,	BOOL value)					{ if (value) flags|=mask; else flags&=~mask; return *this; }

	or	WORD PTR [eax], cx
	ret	0
?set@?$_flags@G@@QAEAAU1@GH@Z ENDP			; _flags<unsigned short>::set
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?assign@?$_flags@G@@QAEAAU1@G@Z
_TEXT	SEGMENT
?assign@?$_flags@G@@QAEAAU1@G@Z PROC			; _flags<unsigned short>::assign, COMDAT
; _this$ = eax
; _mask$ = ecx

; 21   : 	IC	SelfRef	assign	(const T mask)								{ flags	=	mask;		return *this;	}

	mov	WORD PTR [eax], cx
	ret	0
?assign@?$_flags@G@@QAEAAU1@G@Z ENDP			; _flags<unsigned short>::assign
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?one@?$_flags@G@@QAEAAU1@XZ
_TEXT	SEGMENT
?one@?$_flags@G@@QAEAAU1@XZ PROC			; _flags<unsigned short>::one, COMDAT
; _this$ = eax

; 16   :     IC	SelfRef	one		()											{ flags=T(-1);	return *this;	}

	mov	WORD PTR [eax], 65535			; 0000ffffH
	ret	0
?one@?$_flags@G@@QAEAAU1@XZ ENDP			; _flags<unsigned short>::one
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\include\xrrender\factoryptr.h
_TEXT	ENDS
;	COMDAT ??C?$FactoryPtr@VIEnvDescriptorMixerRender@@@@QBEPAVIEnvDescriptorMixerRender@@XZ
_TEXT	SEGMENT
??C?$FactoryPtr@VIEnvDescriptorMixerRender@@@@QBEPAVIEnvDescriptorMixerRender@@XZ PROC ; FactoryPtr<IEnvDescriptorMixerRender>::operator->, COMDAT
; _this$ = eax

; 40   : 	T* operator->() const {return m_pObject;}

	mov	eax, DWORD PTR [eax]
	ret	0
??C?$FactoryPtr@VIEnvDescriptorMixerRender@@@@QBEPAVIEnvDescriptorMixerRender@@XZ ENDP ; FactoryPtr<IEnvDescriptorMixerRender>::operator->
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??C?$FactoryPtr@VIEnvDescriptorRender@@@@QBEPAVIEnvDescriptorRender@@XZ
_TEXT	SEGMENT
??C?$FactoryPtr@VIEnvDescriptorRender@@@@QBEPAVIEnvDescriptorRender@@XZ PROC ; FactoryPtr<IEnvDescriptorRender>::operator->, COMDAT
; _this$ = eax

; 40   : 	T* operator->() const {return m_pObject;}

	mov	eax, DWORD PTR [eax]
	ret	0
??C?$FactoryPtr@VIEnvDescriptorRender@@@@QBEPAVIEnvDescriptorRender@@XZ ENDP ; FactoryPtr<IEnvDescriptorRender>::operator->
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$FactoryPtr@VIEnvDescriptorRender@@@@QBEAAVIEnvDescriptorRender@@XZ
_TEXT	SEGMENT
??D?$FactoryPtr@VIEnvDescriptorRender@@@@QBEAAVIEnvDescriptorRender@@XZ PROC ; FactoryPtr<IEnvDescriptorRender>::operator*, COMDAT
; _this$ = eax

; 39   : 	T& operator*() const {return *m_pObject;}

	mov	eax, DWORD PTR [eax]
	ret	0
??D?$FactoryPtr@VIEnvDescriptorRender@@@@QBEAAVIEnvDescriptorRender@@XZ ENDP ; FactoryPtr<IEnvDescriptorRender>::operator*
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_vector4.h
_TEXT	ENDS
;	COMDAT ?lerp@?$_vector4@M@@QAEAAU1@ABU1@0M@Z
_TEXT	SEGMENT
?lerp@?$_vector4@M@@QAEAAU1@ABU1@0M@Z PROC		; _vector4<float>::lerp, COMDAT
; _this$ = eax
; _p1$ = edx
; _p2$ = ecx
; _t$ = xmm1s

; 52   : 		T invt = 1.f-t;
; 53   : 		x = p1.x*invt + p2.x*t;

	movss	xmm2, DWORD PTR [edx]
	movss	xmm3, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, xmm1
	mulss	xmm2, xmm0
	mulss	xmm3, xmm1
	addss	xmm2, xmm3
	movss	DWORD PTR [eax], xmm2

; 54   : 		y = p1.y*invt + p2.y*t;

	movss	xmm2, DWORD PTR [edx+4]
	movss	xmm3, DWORD PTR [ecx+4]
	mulss	xmm2, xmm0
	mulss	xmm3, xmm1
	addss	xmm2, xmm3
	movss	DWORD PTR [eax+4], xmm2

; 55   : 		z = p1.z*invt + p2.z*t;

	movss	xmm2, DWORD PTR [edx+8]
	movss	xmm3, DWORD PTR [ecx+8]
	mulss	xmm2, xmm0
	mulss	xmm3, xmm1
	addss	xmm2, xmm3
	movss	DWORD PTR [eax+8], xmm2

; 56   : 		w = p1.w*invt + p2.w*t;

	movss	xmm2, DWORD PTR [edx+12]
	mulss	xmm2, xmm0
	movss	xmm0, DWORD PTR [ecx+12]
	mulss	xmm0, xmm1
	addss	xmm2, xmm0
	movss	DWORD PTR [eax+12], xmm2

; 57   : 		return *this;	
; 58   : 	}

	ret	0
?lerp@?$_vector4@M@@QAEAAU1@ABU1@0M@Z ENDP		; _vector4<float>::lerp
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?mul@?$_vector4@M@@QAEAAU1@M@Z
_TEXT	SEGMENT
?mul@?$_vector4@M@@QAEAAU1@M@Z PROC			; _vector4<float>::mul, COMDAT
; _this$ = eax
; _s$ = xmm0s

; 33   : 	IC  SelfRef		mul(T s)							{ x*=s;		y*=s;		z*=s;		w*=s;		return *this; }

	movss	xmm1, DWORD PTR [eax]
	mulss	xmm1, xmm0
	movss	DWORD PTR [eax], xmm1
	movss	xmm1, DWORD PTR [eax+4]
	mulss	xmm1, xmm0
	movss	DWORD PTR [eax+4], xmm1
	movss	xmm1, DWORD PTR [eax+8]
	mulss	xmm1, xmm0
	movss	DWORD PTR [eax+8], xmm1
	movss	xmm1, DWORD PTR [eax+12]
	mulss	xmm1, xmm0
	movss	DWORD PTR [eax+12], xmm1
	ret	0
?mul@?$_vector4@M@@QAEAAU1@M@Z ENDP			; _vector4<float>::mul
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?set@?$_vector4@M@@QAEAAU1@MMMM@Z
_TEXT	SEGMENT
?set@?$_vector4@M@@QAEAAU1@MMMM@Z PROC			; _vector4<float>::set, COMDAT
; _this$ = eax

; 17   : 	IC	SelfRef 	set(T _x, T _y, T _z, T _w=1)		{ x=_x;		y=_y;		z=_z;		w=_w;		return *this; }

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax], xmm0
	movss	DWORD PTR [eax+4], xmm0
	movss	DWORD PTR [eax+8], xmm0
	movss	DWORD PTR [eax+12], xmm0
	ret	0
?set@?$_vector4@M@@QAEAAU1@MMMM@Z ENDP			; _vector4<float>::set
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_vector3d.h
_TEXT	ENDS
;	COMDAT ?mad@?$_vector3@M@@QAEAAU1@ABU1@M@Z
_TEXT	SEGMENT
?mad@?$_vector3@M@@QAEAAU1@ABU1@M@Z PROC		; _vector3<float>::mad, COMDAT
; _this$ = eax
; _d$ = ecx
; _m$ = xmm0s

; 137  : 		x += d.x*m;

	movss	xmm1, DWORD PTR [ecx]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [eax]
	movss	DWORD PTR [eax], xmm1

; 138  : 		y += d.y*m;

	movss	xmm1, DWORD PTR [ecx+4]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [eax+4]
	movss	DWORD PTR [eax+4], xmm1

; 139  : 		z += d.z*m;

	movss	xmm1, DWORD PTR [ecx+8]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [eax+8]
	movss	DWORD PTR [eax+8], xmm1

; 140  : 		return *this;	
; 141  : 	}

	ret	0
?mad@?$_vector3@M@@QAEAAU1@ABU1@M@Z ENDP		; _vector3<float>::mad
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?lerp@?$_vector3@M@@QAEAAU1@ABU1@0M@Z
_TEXT	SEGMENT
?lerp@?$_vector3@M@@QAEAAU1@ABU1@0M@Z PROC		; _vector3<float>::lerp, COMDAT
; _this$ = eax
; _p1$ = edx
; _p2$ = ecx
; _t$ = xmm1s

; 127  : 		T invt = 1.f-t;
; 128  : 		x = p1.x*invt + p2.x*t;

	movss	xmm2, DWORD PTR [edx]
	movss	xmm3, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, xmm1
	mulss	xmm2, xmm0
	mulss	xmm3, xmm1
	addss	xmm2, xmm3
	movss	DWORD PTR [eax], xmm2

; 129  : 		y = p1.y*invt + p2.y*t;

	movss	xmm2, DWORD PTR [edx+4]
	movss	xmm3, DWORD PTR [ecx+4]
	mulss	xmm2, xmm0
	mulss	xmm3, xmm1
	addss	xmm2, xmm3
	movss	DWORD PTR [eax+4], xmm2

; 130  : 		z = p1.z*invt + p2.z*t;

	movss	xmm2, DWORD PTR [edx+8]
	mulss	xmm2, xmm0
	movss	xmm0, DWORD PTR [ecx+8]
	mulss	xmm0, xmm1
	addss	xmm2, xmm0
	movss	DWORD PTR [eax+8], xmm2

; 131  : 		return *this;	
; 132  : 	}

	ret	0
?lerp@?$_vector3@M@@QAEAAU1@ABU1@0M@Z ENDP		; _vector3<float>::lerp
_TEXT	ENDS
PUBLIC	?clear@CEnvDescriptorMixer@@QAEXXZ		; CEnvDescriptorMixer::clear
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\environment_misc.cpp
;	COMDAT ?clear@CEnvDescriptorMixer@@QAEXXZ
_TEXT	SEGMENT
?clear@CEnvDescriptorMixer@@QAEXXZ PROC			; CEnvDescriptorMixer::clear, COMDAT
; _this$ = ecx

; 366  : 	m_pDescriptorMixer->Clear();

	mov	ecx, DWORD PTR [ecx+188]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	jmp	edx
?clear@CEnvDescriptorMixer@@QAEXXZ ENDP			; CEnvDescriptorMixer::clear
_TEXT	ENDS
PUBLIC	?on_device_destroy@CEnvDescriptor@@QAEXXZ	; CEnvDescriptor::on_device_destroy
; Function compile flags: /Ogtpy
;	COMDAT ?on_device_destroy@CEnvDescriptor@@QAEXXZ
_TEXT	SEGMENT
?on_device_destroy@CEnvDescriptor@@QAEXXZ PROC		; CEnvDescriptor::on_device_destroy, COMDAT
; _this$ = ecx

; 330  : 	m_pDescriptor->OnDeviceDestroy();

	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	jmp	edx
?on_device_destroy@CEnvDescriptor@@QAEXXZ ENDP		; CEnvDescriptor::on_device_destroy
_TEXT	ENDS
PUBLIC	?on_device_create@CEnvDescriptor@@QAEXXZ	; CEnvDescriptor::on_device_create
; Function compile flags: /Ogtpy
;	COMDAT ?on_device_create@CEnvDescriptor@@QAEXXZ
_TEXT	SEGMENT
?on_device_create@CEnvDescriptor@@QAEXXZ PROC		; CEnvDescriptor::on_device_create, COMDAT
; _this$ = ecx

; 314  : {

	mov	eax, ecx

; 315  : 	m_pDescriptor->OnDeviceCreate(*this);

	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 316  : 	/*
; 317  : 	if (sky_texture_name.size())	
; 318  : 		sky_texture.create		(sky_texture_name.c_str());
; 319  : 
; 320  : 	if (sky_texture_env_name.size())
; 321  : 		sky_texture_env.create	(sky_texture_env_name.c_str());
; 322  : 
; 323  : 	if (clouds_texture_name.size())	
; 324  : 		clouds_texture.create	(clouds_texture_name.c_str());
; 325  : 		*/
; 326  : }

	ret	0
?on_device_create@CEnvDescriptor@@QAEXXZ ENDP		; CEnvDescriptor::on_device_create
_TEXT	ENDS
PUBLIC	?load@CEnvModifier@@QAEXPAVIReader@@I@Z		; CEnvModifier::load
; Function compile flags: /Ogtpy
;	COMDAT ?load@CEnvModifier@@QAEXPAVIReader@@I@Z
_TEXT	SEGMENT
_fs$ = 8						; size = 4
_version$ = 12						; size = 4
?load@CEnvModifier@@QAEXPAVIReader@@I@Z PROC		; CEnvModifier::load, COMDAT
; _this$ = ecx

; 16   : {

	push	esi
	push	edi

; 17   : 	use_flags.one					();
; 18   : 	fs->r_fvector3	(position);

	mov	edi, DWORD PTR _fs$[esp+4]
	mov	esi, ecx
	push	esi
	mov	ecx, edi
	mov	WORD PTR [esi+76], 65535		; 0000ffffH
	call	DWORD PTR __imp_?r_fvector3@?$IReaderBase@VIReader@@@@QAEXAAU?$_vector3@M@@@Z

; 19   : 	radius			= fs->r_float	();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_float@?$IReaderBase@VIReader@@@@QAEMXZ
	fstp	DWORD PTR [esi+12]

; 20   : 	power			= fs->r_float	();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_float@?$IReaderBase@VIReader@@@@QAEMXZ
	fstp	DWORD PTR [esi+16]

; 21   : 	far_plane		= fs->r_float	();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_float@?$IReaderBase@VIReader@@@@QAEMXZ
	fstp	DWORD PTR [esi+20]

; 22   : 	fs->r_fvector3	(fog_color);

	lea	eax, DWORD PTR [esi+24]
	push	eax
	mov	ecx, edi
	call	DWORD PTR __imp_?r_fvector3@?$IReaderBase@VIReader@@@@QAEXAAU?$_vector3@M@@@Z

; 23   : 	fog_density		= fs->r_float	();

	mov	ecx, edi
	call	DWORD PTR __imp_?r_float@?$IReaderBase@VIReader@@@@QAEMXZ
	fstp	DWORD PTR [esi+36]

; 24   : 	fs->r_fvector3	(ambient);

	lea	ecx, DWORD PTR [esi+40]
	push	ecx
	mov	ecx, edi
	call	DWORD PTR __imp_?r_fvector3@?$IReaderBase@VIReader@@@@QAEXAAU?$_vector3@M@@@Z

; 25   : 	fs->r_fvector3	(sky_color);

	lea	edx, DWORD PTR [esi+52]
	push	edx
	mov	ecx, edi
	call	DWORD PTR __imp_?r_fvector3@?$IReaderBase@VIReader@@@@QAEXAAU?$_vector3@M@@@Z

; 26   : 	fs->r_fvector3	(hemi_color);

	lea	eax, DWORD PTR [esi+64]
	push	eax
	mov	ecx, edi
	call	DWORD PTR __imp_?r_fvector3@?$IReaderBase@VIReader@@@@QAEXAAU?$_vector3@M@@@Z

; 27   : 
; 28   : 	if(version>=0x0016)

	cmp	DWORD PTR _version$[esp+4], 22		; 00000016H
	jb	SHORT $LN6@load

; 29   : 	{
; 30   : 		use_flags.assign(fs->r_u16());

	mov	ecx, edi
	call	DWORD PTR __imp_?r_u16@?$IReaderBase@VIReader@@@@QAEGXZ
	mov	WORD PTR [esi+76], ax
$LN6@load:
	pop	edi
	pop	esi

; 31   : 	}
; 32   : }

	ret	8
?load@CEnvModifier@@QAEXPAVIReader@@I@Z ENDP		; CEnvModifier::load
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
;	COMDAT ??$_Param_Construct@PAXPAX@stlp_std@@YAXPAPAXABQAX@Z
_TEXT	SEGMENT
??$_Param_Construct@PAXPAX@stlp_std@@YAXPAPAXABQAX@Z PROC ; stlp_std::_Param_Construct<void *,void *>, COMDAT
; ___p$ = eax
; ___val$ = ecx

; 118  : #if defined (_STLP_DEBUG_UNINITIALIZED)
; 119  :   memset((char*)__p, _STLP_SHRED_BYTE, sizeof(_T1));
; 120  : #endif
; 121  :   _STLP_PLACEMENT_NEW (__p) _T1(__val);

	test	eax, eax
	je	SHORT $LN3@Param_Cons@7
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Param_Cons@7:

; 122  : }

	ret	0
??$_Param_Construct@PAXPAX@stlp_std@@YAXPAPAXABQAX@Z ENDP ; stlp_std::_Param_Construct<void *,void *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__ufill@PAPAXPAXH@priv@stlp_std@@YAXPAPAX0ABQAXABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
??$__ufill@PAPAXPAXH@priv@stlp_std@@YAXPAPAX0ABQAXABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__ufill<void * *,void *,int>, COMDAT
; ___first$ = ecx
; ___last$ = eax
; ___x$ = edx

; 247  :   _ForwardIter __cur = __first;
; 248  :   _STLP_TRY {
; 249  :     for (_Distance __n = __last - __first; __n > 0; --__n, ++__cur)

	sub	eax, ecx
	sar	eax, 2
	test	eax, eax
	jle	SHORT $LN1@ufill@5
	push	esi
	npad	6
$LL3@ufill@5:

; 250  :       _Param_Construct(&*__cur, __x);

	test	ecx, ecx
	je	SHORT $LN2@ufill@5
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [ecx], esi
$LN2@ufill@5:
	sub	eax, 1
	add	ecx, 4
	test	eax, eax
	jg	SHORT $LL3@ufill@5
	pop	esi
$LN1@ufill@5:

; 251  :   }
; 252  :   _STLP_UNWIND(_STLP_STD::_Destroy_Range(__first, __cur))
; 253  : }

	ret	0
??$__ufill@PAPAXPAXH@priv@stlp_std@@YAXPAPAX0ABQAXABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__ufill<void * *,void *,int>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@stlp_std@@QAEPAPAUSEffect@CEnvAmbient@@XZ
_TEXT	SEGMENT
?end@?$vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@stlp_std@@QAEPAPAUSEffect@CEnvAmbient@@XZ PROC ; stlp_std::vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::end, COMDAT
; _this$ = eax

; 81   :   iterator end()               { return cast_traits::to_value_type_ptr(_M_impl.end()); }

	mov	eax, DWORD PTR [eax+4]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAUSEffect@CEnvAmbient@@@priv@stlp_std@@SAPAPAUSEffect@CEnvAmbient@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CEnvAmbient::SEffect *>::to_value_type_ptr
	add	esp, 4
	ret	0
?end@?$vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@stlp_std@@QAEPAPAUSEffect@CEnvAmbient@@XZ ENDP ; stlp_std::vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::end
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__uninitialized_fill_n@PAPAXIPAX@priv@stlp_std@@YAPAPAXPAPAXIABQAX@Z
_TEXT	SEGMENT
??$__uninitialized_fill_n@PAPAXIPAX@priv@stlp_std@@YAPAPAXPAPAXIABQAX@Z PROC ; stlp_std::priv::__uninitialized_fill_n<void * *,unsigned int,void *>, COMDAT
; ___first$ = edx
; ___n$ = eax
; ___x$ = esi

; 314  :   _ForwardIter __last = __first + __n;

	lea	eax, DWORD PTR [edx+eax*4]

; 315  :   __ufill(__first, __last, __x, random_access_iterator_tag(), (ptrdiff_t*)0);

	mov	ecx, eax
	sub	ecx, edx
	sar	ecx, 2
	test	ecx, ecx
	jle	SHORT $LN3@uninitiali@4
	push	edi
	npad	1
$LL5@uninitiali@4:
	test	edx, edx
	je	SHORT $LN4@uninitiali@4
	mov	edi, DWORD PTR [esi]
	mov	DWORD PTR [edx], edi
$LN4@uninitiali@4:
	sub	ecx, 1
	add	edx, 4
	test	ecx, ecx
	jg	SHORT $LL5@uninitiali@4
	pop	edi
$LN3@uninitiali@4:

; 316  :   return __last;
; 317  : }

	ret	0
??$__uninitialized_fill_n@PAPAXIPAX@priv@stlp_std@@YAPAPAXPAPAXIABQAX@Z ENDP ; stlp_std::priv::__uninitialized_fill_n<void * *,unsigned int,void *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.h
_TEXT	ENDS
;	COMDAT ??F?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAEAAU012@XZ
_TEXT	SEGMENT
??F?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAEAAU012@XZ PROC ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::operator--, COMDAT
; _this$ = esi

; 187  :     _M_node = _Rb_global_inst::_M_decrement(_M_node);

	mov	eax, DWORD PTR [esi]
	push	eax
	call	?_M_decrement@?$_Rb_global@_N@priv@stlp_std@@SAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_global<bool>::_M_decrement
	mov	DWORD PTR [esi], eax
	add	esp, 4

; 188  :     return *this;

	mov	eax, esi

; 189  :   }

	ret	0
??F?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAEAAU012@XZ ENDP ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::operator--
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.c
_TEXT	ENDS
;	COMDAT ?_M_throw_length_error@?$_Vector_base@PAXV?$xalloc@PAX@@@priv@stlp_std@@IBEXXZ
_TEXT	SEGMENT
?_M_throw_length_error@?$_Vector_base@PAXV?$xalloc@PAX@@@priv@stlp_std@@IBEXXZ PROC ; stlp_std::priv::_Vector_base<void *,xalloc<void *> >::_M_throw_length_error, COMDAT

; 41   :   __stl_throw_length_error("vector");

	push	OFFSET ??_C@_06NBFPPGEG@vector?$AA@
	call	DWORD PTR __imp__puts
	add	esp, 4
	jmp	DWORD PTR __imp__abort
?_M_throw_length_error@?$_Vector_base@PAXV?$xalloc@PAX@@@priv@stlp_std@@IBEXXZ ENDP ; stlp_std::priv::_Vector_base<void *,xalloc<void *> >::_M_throw_length_error
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy_ptrs@PAVCEnvModifier@@PAV1@@priv@stlp_std@@YAPAVCEnvModifier@@PAV2@00ABU__true_type@1@@Z
_TEXT	SEGMENT
??$__copy_ptrs@PAVCEnvModifier@@PAV1@@priv@stlp_std@@YAPAVCEnvModifier@@PAV2@00ABU__true_type@1@@Z PROC ; stlp_std::priv::__copy_ptrs<CEnvModifier *,CEnvModifier *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 255  :   // we know they all pointers, so this cast is OK
; 256  :   //  return (_OutputIter)__copy_trivial(&(*__first), &(*__last), &(*__result));
; 257  :   return (_OutputIter)__copy_trivial(__first, __last, __result);

	sub	ecx, edx
	push	esi
	mov	esi, ecx
	je	SHORT $LN6@copy_ptrs@18
	push	esi
	push	edx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN6@copy_ptrs@18:
	pop	esi

; 258  : }

	ret	0
??$__copy_ptrs@PAVCEnvModifier@@PAV1@@priv@stlp_std@@YAPAVCEnvModifier@@PAV2@00ABU__true_type@1@@Z ENDP ; stlp_std::priv::__copy_ptrs<CEnvModifier *,CEnvModifier *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$_Copy_Construct@VCEnvModifier@@@stlp_std@@YAXPAVCEnvModifier@@ABV1@@Z
_TEXT	SEGMENT
??$_Copy_Construct@VCEnvModifier@@@stlp_std@@YAXPAVCEnvModifier@@ABV1@@Z PROC ; stlp_std::_Copy_Construct<CEnvModifier>, COMDAT
; ___p$ = eax
; ___val$ = edx

; 109  : inline void _Copy_Construct(_Tp* __p, const _Tp& __val) {

	push	edi
	mov	edi, eax

; 110  : #if defined (_STLP_DEBUG_UNINITIALIZED)
; 111  :   memset((char*)__p, _STLP_SHRED_BYTE, sizeof(_Tp));
; 112  : #endif
; 113  :   _STLP_PLACEMENT_NEW (__p) _Tp(__val);

	test	edi, edi
	je	SHORT $LN3@Copy_Const@14
	push	esi
	mov	ecx, 20					; 00000014H
	mov	esi, edx
	rep movsd
	pop	esi
$LN3@Copy_Const@14:
	pop	edi

; 114  : }

	ret	0
??$_Copy_Construct@VCEnvModifier@@@stlp_std@@YAXPAVCEnvModifier@@ABV1@@Z ENDP ; stlp_std::_Copy_Construct<CEnvModifier>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_std_extensions.h
_TEXT	ENDS
;	COMDAT ??$xr_strcat@$0CAI@@@YAHAAY0CAI@DPBD@Z
_TEXT	SEGMENT
??$xr_strcat@$0CAI@@@YAHAAY0CAI@DPBD@Z PROC		; xr_strcat<520>, COMDAT
; _destination$ = edx

; 263  : 	return						xr_strcat( destination, count, source );

	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+1]
$LL13@xr_strcat@2:
	mov	cl, BYTE PTR [eax]
	add	eax, 1
	test	cl, cl
	jne	SHORT $LL13@xr_strcat@2
	sub	eax, esi
	add	eax, edx
	lea	esi, DWORD PTR [edx+519]
	cmp	eax, esi
	ja	SHORT $LN14@xr_strcat@2
	mov	ecx, OFFSET ??_C@_04ICMCOCEO@?4ltx?$AA@
	sub	ecx, eax
$LL5@xr_strcat@2:
	cmp	eax, esi
	je	SHORT $LN3@xr_strcat@2
	mov	dl, BYTE PTR [ecx+eax]
	mov	BYTE PTR [eax], dl
	add	eax, 1
	cmp	BYTE PTR [ecx+eax], 0
	jne	SHORT $LL5@xr_strcat@2
$LN3@xr_strcat@2:
	mov	BYTE PTR [eax], 0
$LN14@xr_strcat@2:
	xor	eax, eax
	pop	esi

; 264  : }

	ret	0
??$xr_strcat@$0CAI@@@YAHAAY0CAI@DPBD@Z ENDP		; xr_strcat<520>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?_M_erase@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@AAEPAVCEnvModifier@@PAV4@0ABU__false_type@3@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
?_M_erase@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@AAEPAVCEnvModifier@@PAV4@0ABU__false_type@3@@Z PROC ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::_M_erase, COMDAT
; ___first$ = ebx
; ___last$ = eax

; 578  :   iterator _M_erase(iterator __first, iterator __last, const __false_type& /*_Movable*/) {

	push	ebp
	mov	ebp, DWORD PTR _this$[esp]
	push	esi
	push	edi

; 579  :     pointer __i = _STLP_PRIV __copy_ptrs(__last, this->_M_finish, __first, _TrivialCopy());

	mov	edi, DWORD PTR [ebp+4]
	sub	edi, eax
	je	SHORT $LN7@M_erase@15
	push	edi
	push	eax
	push	ebx
	call	DWORD PTR __imp__memmove
	mov	esi, eax
	add	esp, 12					; 0000000cH
	add	esi, edi
	jmp	SHORT $LN8@M_erase@15
$LN7@M_erase@15:
	mov	esi, ebx
$LN8@M_erase@15:

; 580  :     _STLP_STD::_Destroy_Range(__i, this->_M_finish);

	mov	eax, DWORD PTR [ebp+4]
	push	eax
	push	esi
	call	??$_Destroy_Range@PAVCEnvModifier@@@stlp_std@@YAXPAVCEnvModifier@@0@Z ; stlp_std::_Destroy_Range<CEnvModifier *>
	add	esp, 8
	pop	edi

; 581  :     this->_M_finish = __i;

	mov	DWORD PTR [ebp+4], esi
	pop	esi

; 582  :     return __first;

	mov	eax, ebx
	pop	ebp

; 583  :   }

	ret	4
?_M_erase@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@AAEPAVCEnvModifier@@PAV4@0ABU__false_type@3@@Z ENDP ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::_M_erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?erase@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEPAVCEnvModifier@@PAV4@0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
?erase@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEPAVCEnvModifier@@PAV4@0@Z PROC ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::erase, COMDAT
; ___first$ = ebx
; ___last$ = eax

; 590  :     if (__first == __last)

	cmp	ebx, eax
	push	ebp
	mov	ebp, DWORD PTR _this$[esp]

; 591  :       return __first;

	je	SHORT $LN18@erase@18
	push	esi
	push	edi

; 592  :     return _M_erase(__first, __last, _Movable());

	mov	edi, DWORD PTR [ebp+4]
	sub	edi, eax
	je	SHORT $LN10@erase@18
	push	edi
	push	eax
	push	ebx
	call	DWORD PTR __imp__memmove
	mov	esi, eax
	add	esp, 12					; 0000000cH
	add	esi, edi
	jmp	SHORT $LN11@erase@18
$LN10@erase@18:
	mov	esi, ebx
$LN11@erase@18:
	mov	eax, DWORD PTR [ebp+4]
	push	eax
	push	esi
	call	??$_Destroy_Range@PAVCEnvModifier@@@stlp_std@@YAXPAVCEnvModifier@@0@Z ; stlp_std::_Destroy_Range<CEnvModifier *>
	add	esp, 8
	pop	edi
	mov	DWORD PTR [ebp+4], esi
	pop	esi
$LN18@erase@18:
	mov	eax, ebx
	pop	ebp

; 593  :   }

	ret	4
?erase@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEPAVCEnvModifier@@PAV4@0@Z ENDP ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::erase
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_TEXT	ENDS
;	COMDAT ?to_value_type_ptr@?$_CastTraits@PAXPAUSSndChannel@CEnvAmbient@@@priv@stlp_std@@SAPAPAUSSndChannel@CEnvAmbient@@PAPAX@Z
_TEXT	SEGMENT
?to_value_type_ptr@?$_CastTraits@PAXPAUSSndChannel@CEnvAmbient@@@priv@stlp_std@@SAPAPAUSSndChannel@CEnvAmbient@@PAPAX@Z PROC ; stlp_std::priv::_CastTraits<void *,CEnvAmbient::SSndChannel *>::to_value_type_ptr, COMDAT
; ___ptr$ = eax

; 207  :   { return __REINTERPRET_CAST(value_type *, cv_traits::cv_ptr(__ptr)); }

	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	ret	0
?to_value_type_ptr@?$_CastTraits@PAXPAUSSndChannel@CEnvAmbient@@@priv@stlp_std@@SAPAPAUSSndChannel@CEnvAmbient@@PAPAX@Z ENDP ; stlp_std::priv::_CastTraits<void *,CEnvAmbient::SSndChannel *>::to_value_type_ptr
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?clear@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?clear@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEXXZ PROC ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::clear, COMDAT

; 610  :   void clear() {

	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+4]

; 611  :     erase(begin(), end());

	mov	ecx, ebp
	call	?end@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEPAVCEnvModifier@@XZ ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::end
	mov	ecx, ebp
	mov	ebx, eax
	call	?begin@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEPAVCEnvModifier@@XZ ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::begin
	cmp	eax, ebx
	je	SHORT $LN10@clear@15
	push	esi
	push	edi
	mov	edi, DWORD PTR [ebp+4]
	sub	edi, ebx
	je	SHORT $LN16@clear@15
	push	edi
	push	ebx
	push	eax
	call	DWORD PTR __imp__memmove
	mov	esi, eax
	add	esp, 12					; 0000000cH
	add	esi, edi
	jmp	SHORT $LN17@clear@15
$LN16@clear@15:
	mov	esi, eax
$LN17@clear@15:
	mov	eax, DWORD PTR [ebp+4]
	push	eax
	push	esi
	call	??$_Destroy_Range@PAVCEnvModifier@@@stlp_std@@YAXPAVCEnvModifier@@0@Z ; stlp_std::_Destroy_Range<CEnvModifier *>
	add	esp, 8
	pop	edi
	mov	DWORD PTR [ebp+4], esi
	pop	esi
$LN10@clear@15:
	pop	ebp
	pop	ebx

; 612  :   }

	ret	4
?clear@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEXXZ ENDP ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::clear
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_TEXT	ENDS
;	COMDAT ?to_storage_type_cref@?$_CastTraits@PAXPAVCEnvDescriptor@@@priv@stlp_std@@SAABQAXABQAVCEnvDescriptor@@@Z
_TEXT	SEGMENT
?to_storage_type_cref@?$_CastTraits@PAXPAVCEnvDescriptor@@@priv@stlp_std@@SAABQAXABQAVCEnvDescriptor@@@Z PROC ; stlp_std::priv::_CastTraits<void *,CEnvDescriptor *>::to_storage_type_cref, COMDAT
; ___ref$ = eax

; 224  :   { return cv_traits::uncv_cref(__REINTERPRET_CAST(void_cv_type const&, __ref)); }

	ret	0
?to_storage_type_cref@?$_CastTraits@PAXPAVCEnvDescriptor@@@priv@stlp_std@@SAABQAXABQAVCEnvDescriptor@@@Z ENDP ; stlp_std::priv::_CastTraits<void *,CEnvDescriptor *>::to_storage_type_cref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_storage_type_cref@?$_CastTraits@PAXPAVCEnvAmbient@@@priv@stlp_std@@SAABQAXABQAVCEnvAmbient@@@Z
_TEXT	SEGMENT
?to_storage_type_cref@?$_CastTraits@PAXPAVCEnvAmbient@@@priv@stlp_std@@SAABQAXABQAVCEnvAmbient@@@Z PROC ; stlp_std::priv::_CastTraits<void *,CEnvAmbient *>::to_storage_type_cref, COMDAT
; ___ref$ = eax

; 224  :   { return cv_traits::uncv_cref(__REINTERPRET_CAST(void_cv_type const&, __ref)); }

	ret	0
?to_storage_type_cref@?$_CastTraits@PAXPAVCEnvAmbient@@@priv@stlp_std@@SAABQAXABQAVCEnvAmbient@@@Z ENDP ; stlp_std::priv::_CastTraits<void *,CEnvAmbient *>::to_storage_type_cref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_value_type_ref@?$_CastTraits@PAXPAVCEnvAmbient@@@priv@stlp_std@@SAAAPAVCEnvAmbient@@AAPAX@Z
_TEXT	SEGMENT
?to_value_type_ref@?$_CastTraits@PAXPAVCEnvAmbient@@@priv@stlp_std@@SAAAPAVCEnvAmbient@@AAPAX@Z PROC ; stlp_std::priv::_CastTraits<void *,CEnvAmbient *>::to_value_type_ref, COMDAT
; ___ref$ = eax

; 213  :   { return __REINTERPRET_CAST(value_type &, cv_traits::cv_ref(__ref)); }

	ret	0
?to_value_type_ref@?$_CastTraits@PAXPAVCEnvAmbient@@@priv@stlp_std@@SAAAPAVCEnvAmbient@@AAPAX@Z ENDP ; stlp_std::priv::_CastTraits<void *,CEnvAmbient *>::to_value_type_ref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_value_type_ptr@?$_CastTraits@PAXPAVCEnvAmbient@@@priv@stlp_std@@SAPAPAVCEnvAmbient@@PAPAX@Z
_TEXT	SEGMENT
?to_value_type_ptr@?$_CastTraits@PAXPAVCEnvAmbient@@@priv@stlp_std@@SAPAPAVCEnvAmbient@@PAPAX@Z PROC ; stlp_std::priv::_CastTraits<void *,CEnvAmbient *>::to_value_type_ptr, COMDAT
; ___ptr$ = eax

; 207  :   { return __REINTERPRET_CAST(value_type *, cv_traits::cv_ptr(__ptr)); }

	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	ret	0
?to_value_type_ptr@?$_CastTraits@PAXPAVCEnvAmbient@@@priv@stlp_std@@SAPAPAVCEnvAmbient@@PAPAX@Z ENDP ; stlp_std::priv::_CastTraits<void *,CEnvAmbient *>::to_value_type_ptr
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_storage_type_cref@?$_CastTraits@PAXPAUSSndChannel@CEnvAmbient@@@priv@stlp_std@@SAABQAXABQAUSSndChannel@CEnvAmbient@@@Z
_TEXT	SEGMENT
?to_storage_type_cref@?$_CastTraits@PAXPAUSSndChannel@CEnvAmbient@@@priv@stlp_std@@SAABQAXABQAUSSndChannel@CEnvAmbient@@@Z PROC ; stlp_std::priv::_CastTraits<void *,CEnvAmbient::SSndChannel *>::to_storage_type_cref, COMDAT
; ___ref$ = eax

; 224  :   { return cv_traits::uncv_cref(__REINTERPRET_CAST(void_cv_type const&, __ref)); }

	ret	0
?to_storage_type_cref@?$_CastTraits@PAXPAUSSndChannel@CEnvAmbient@@@priv@stlp_std@@SAABQAXABQAUSSndChannel@CEnvAmbient@@@Z ENDP ; stlp_std::priv::_CastTraits<void *,CEnvAmbient::SSndChannel *>::to_storage_type_cref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_storage_type_cref@?$_CastTraits@PAXPAUSEffect@CEnvAmbient@@@priv@stlp_std@@SAABQAXABQAUSEffect@CEnvAmbient@@@Z
_TEXT	SEGMENT
?to_storage_type_cref@?$_CastTraits@PAXPAUSEffect@CEnvAmbient@@@priv@stlp_std@@SAABQAXABQAUSEffect@CEnvAmbient@@@Z PROC ; stlp_std::priv::_CastTraits<void *,CEnvAmbient::SEffect *>::to_storage_type_cref, COMDAT
; ___ref$ = eax

; 224  :   { return cv_traits::uncv_cref(__REINTERPRET_CAST(void_cv_type const&, __ref)); }

	ret	0
?to_storage_type_cref@?$_CastTraits@PAXPAUSEffect@CEnvAmbient@@@priv@stlp_std@@SAABQAXABQAUSEffect@CEnvAmbient@@@Z ENDP ; stlp_std::priv::_CastTraits<void *,CEnvAmbient::SEffect *>::to_storage_type_cref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_value_type_ptr@?$_CastTraits@PAXPAUSect@CInifile@@@priv@stlp_std@@SAPAPAUSect@CInifile@@PAPAX@Z
_TEXT	SEGMENT
?to_value_type_ptr@?$_CastTraits@PAXPAUSect@CInifile@@@priv@stlp_std@@SAPAPAUSect@CInifile@@PAPAX@Z PROC ; stlp_std::priv::_CastTraits<void *,CInifile::Sect *>::to_value_type_ptr, COMDAT
; ___ptr$ = eax

; 207  :   { return __REINTERPRET_CAST(value_type *, cv_traits::cv_ptr(__ptr)); }

	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	ret	0
?to_value_type_ptr@?$_CastTraits@PAXPAUSect@CInifile@@@priv@stlp_std@@SAPAPAUSect@CInifile@@PAPAX@Z ENDP ; stlp_std::priv::_CastTraits<void *,CInifile::Sect *>::to_value_type_ptr
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.h
_TEXT	ENDS
;	COMDAT ??0?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE@ABU012@@Z
_TEXT	SEGMENT
??0?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE@ABU012@@Z PROC ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >, COMDAT
; _this$ = eax
; ___it$ = ecx

; 168  :   _Rb_tree_iterator(const iterator& __it) : _Rb_tree_base_iterator(__it._M_node) {}

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	ret	0
??0?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE@ABU012@@Z ENDP ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?clear@?$vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@stlp_std@@QAEXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?clear@?$vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@stlp_std@@QAEXXZ PROC ; stlp_std::vector<CEnvModifier,xalloc<CEnvModifier> >::clear, COMDAT

; 223  :   void clear() { _M_impl.clear(); }

	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+4]
	mov	ecx, ebp
	call	?end@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEPAVCEnvModifier@@XZ ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::end
	mov	ecx, ebp
	mov	ebx, eax
	call	?begin@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEPAVCEnvModifier@@XZ ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::begin
	cmp	eax, ebx
	je	SHORT $LN12@clear@16
	push	esi
	push	edi
	mov	edi, DWORD PTR [ebp+4]
	sub	edi, ebx
	je	SHORT $LN18@clear@16
	push	edi
	push	ebx
	push	eax
	call	DWORD PTR __imp__memmove
	mov	esi, eax
	add	esp, 12					; 0000000cH
	add	esi, edi
	jmp	SHORT $LN19@clear@16
$LN18@clear@16:
	mov	esi, eax
$LN19@clear@16:
	mov	eax, DWORD PTR [ebp+4]
	push	eax
	push	esi
	call	??$_Destroy_Range@PAVCEnvModifier@@@stlp_std@@YAXPAVCEnvModifier@@0@Z ; stlp_std::_Destroy_Range<CEnvModifier *>
	add	esp, 8
	pop	edi
	mov	DWORD PTR [ebp+4], esi
	pop	esi
$LN12@clear@16:
	pop	ebp
	pop	ebx
	ret	4
?clear@?$vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@stlp_std@@QAEXXZ ENDP ; stlp_std::vector<CEnvModifier,xalloc<CEnvModifier> >::clear
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QAEPAPAUSSndChannel@CEnvAmbient@@XZ
_TEXT	SEGMENT
?begin@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QAEPAPAUSSndChannel@CEnvAmbient@@XZ PROC ; stlp_std::vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::begin, COMDAT
; _this$ = eax

; 79   :   iterator begin()             { return cast_traits::to_value_type_ptr(_M_impl.begin()); }

	mov	eax, DWORD PTR [eax]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	ret	0
?begin@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QAEPAPAUSSndChannel@CEnvAmbient@@XZ ENDP ; stlp_std::vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::begin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAUSect@CInifile@@V?$xalloc@PAUSect@CInifile@@@@@stlp_std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAUSect@CInifile@@V?$xalloc@PAUSect@CInifile@@@@@stlp_std@@QBEIXZ PROC ; stlp_std::vector<CInifile::Sect *,xalloc<CInifile::Sect *> >::size, COMDAT
; _this$ = ecx

; 89   :   size_type size() const        { return _M_impl.size(); }

	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
	ret	0
?size@?$vector@PAUSect@CInifile@@V?$xalloc@PAUSect@CInifile@@@@@stlp_std@@QBEIXZ ENDP ; stlp_std::vector<CInifile::Sect *,xalloc<CInifile::Sect *> >::size
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?clear_and_free@?$xr_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?clear_and_free@?$xr_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@@QAEXXZ PROC ; xr_vector<CEnvModifier,xalloc<CEnvModifier> >::clear_and_free, COMDAT

; 128  : 	void	clear_and_free		()									{ inherited::clear();			}

	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+4]
	mov	ecx, ebp
	call	?end@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEPAVCEnvModifier@@XZ ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::end
	mov	ecx, ebp
	mov	ebx, eax
	call	?begin@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEPAVCEnvModifier@@XZ ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::begin
	cmp	eax, ebx
	je	SHORT $LN14@clear_and_@5
	push	esi
	push	edi
	mov	edi, DWORD PTR [ebp+4]
	sub	edi, ebx
	je	SHORT $LN20@clear_and_@5
	push	edi
	push	ebx
	push	eax
	call	DWORD PTR __imp__memmove
	mov	esi, eax
	add	esp, 12					; 0000000cH
	add	esi, edi
	jmp	SHORT $LN21@clear_and_@5
$LN20@clear_and_@5:
	mov	esi, eax
$LN21@clear_and_@5:
	mov	eax, DWORD PTR [ebp+4]
	push	eax
	push	esi
	call	??$_Destroy_Range@PAVCEnvModifier@@@stlp_std@@YAXPAVCEnvModifier@@0@Z ; stlp_std::_Destroy_Range<CEnvModifier *>
	add	esp, 8
	pop	edi
	mov	DWORD PTR [ebp+4], esi
	pop	esi
$LN14@clear_and_@5:
	pop	ebp
	pop	ebx
	ret	4
?clear_and_free@?$xr_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@@QAEXXZ ENDP ; xr_vector<CEnvModifier,xalloc<CEnvModifier> >::clear_and_free
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEPAPAVCEnvAmbient@@XZ
_TEXT	SEGMENT
?end@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEPAPAVCEnvAmbient@@XZ PROC ; stlp_std::vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::end, COMDAT
; _this$ = eax

; 81   :   iterator end()               { return cast_traits::to_value_type_ptr(_M_impl.end()); }

	mov	eax, DWORD PTR [eax+4]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	ret	0
?end@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEPAPAVCEnvAmbient@@XZ ENDP ; stlp_std::vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEPAPAVCEnvAmbient@@XZ
_TEXT	SEGMENT
?begin@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEPAPAVCEnvAmbient@@XZ PROC ; stlp_std::vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::begin, COMDAT
; _this$ = eax

; 79   :   iterator begin()             { return cast_traits::to_value_type_ptr(_M_impl.begin()); }

	mov	eax, DWORD PTR [eax]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	ret	0
?begin@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEPAPAVCEnvAmbient@@XZ ENDP ; stlp_std::vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::begin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?empty@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QBE_NXZ PROC ; stlp_std::vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::empty, COMDAT
; _this$ = ecx

; 93   :   bool empty() const            { return _M_impl.empty(); }

	jmp	?empty@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBE_NXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::empty
?empty@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QBE_NXZ ENDP ; stlp_std::vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::empty
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??A?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@QAEAAPAUSSndChannel@CEnvAmbient@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@QAEAAPAUSSndChannel@CEnvAmbient@@I@Z PROC ; xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::operator[], COMDAT
; _this$ = eax

; 139  : 	reference operator[]		(size_type _Pos)					{ {VERIFY2(_Pos<size(),make_string("index is out of range: index requested[%d], size of container[%d]", _Pos, size()).c_str());} return (*(begin() + _Pos)); }

	mov	eax, DWORD PTR [eax]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	ecx, DWORD PTR __Pos$[esp]
	add	esp, 4
	lea	eax, DWORD PTR [eax+ecx*4]
	ret	4
??A?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@QAEAAPAUSSndChannel@CEnvAmbient@@I@Z ENDP ; xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::operator[]
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\include\xrrender\factoryptr.h
_TEXT	ENDS
;	COMDAT ??0?$FactoryPtr@VIEnvDescriptorMixerRender@@@@QAE@XZ
_TEXT	SEGMENT
??0?$FactoryPtr@VIEnvDescriptorMixerRender@@@@QAE@XZ PROC ; FactoryPtr<IEnvDescriptorMixerRender>::FactoryPtr<IEnvDescriptorMixerRender>, COMDAT
; _this$ = esi

; 24   : 	FactoryPtr() { CreateObject();}

	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+72]
	call	eax
	mov	DWORD PTR [esi], eax
	mov	eax, esi
	ret	0
??0?$FactoryPtr@VIEnvDescriptorMixerRender@@@@QAE@XZ ENDP ; FactoryPtr<IEnvDescriptorMixerRender>::FactoryPtr<IEnvDescriptorMixerRender>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$FactoryPtr@VIEnvDescriptorRender@@@@QAE@XZ
_TEXT	SEGMENT
??0?$FactoryPtr@VIEnvDescriptorRender@@@@QAE@XZ PROC	; FactoryPtr<IEnvDescriptorRender>::FactoryPtr<IEnvDescriptorRender>, COMDAT
; _this$ = esi

; 24   : 	FactoryPtr() { CreateObject();}

	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+80]
	call	eax
	mov	DWORD PTR [esi], eax
	mov	eax, esi
	ret	0
??0?$FactoryPtr@VIEnvDescriptorRender@@@@QAE@XZ ENDP	; FactoryPtr<IEnvDescriptorRender>::FactoryPtr<IEnvDescriptorRender>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAUSect@CInifile@@V?$xalloc@PAUSect@CInifile@@@@@stlp_std@@QAEPAPAUSect@CInifile@@XZ
_TEXT	SEGMENT
?end@?$vector@PAUSect@CInifile@@V?$xalloc@PAUSect@CInifile@@@@@stlp_std@@QAEPAPAUSect@CInifile@@XZ PROC ; stlp_std::vector<CInifile::Sect *,xalloc<CInifile::Sect *> >::end, COMDAT
; _this$ = eax

; 81   :   iterator end()               { return cast_traits::to_value_type_ptr(_M_impl.end()); }

	mov	eax, DWORD PTR [eax+4]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	ret	0
?end@?$vector@PAUSect@CInifile@@V?$xalloc@PAUSect@CInifile@@@@@stlp_std@@QAEPAPAUSect@CInifile@@XZ ENDP ; stlp_std::vector<CInifile::Sect *,xalloc<CInifile::Sect *> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAUSect@CInifile@@V?$xalloc@PAUSect@CInifile@@@@@stlp_std@@QAEPAPAUSect@CInifile@@XZ
_TEXT	SEGMENT
?begin@?$vector@PAUSect@CInifile@@V?$xalloc@PAUSect@CInifile@@@@@stlp_std@@QAEPAPAUSect@CInifile@@XZ PROC ; stlp_std::vector<CInifile::Sect *,xalloc<CInifile::Sect *> >::begin, COMDAT
; _this$ = eax

; 79   :   iterator begin()             { return cast_traits::to_value_type_ptr(_M_impl.begin()); }

	mov	eax, DWORD PTR [eax]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	ret	0
?begin@?$vector@PAUSect@CInifile@@V?$xalloc@PAUSect@CInifile@@@@@stlp_std@@QAEPAPAUSect@CInifile@@XZ ENDP ; stlp_std::vector<CInifile::Sect *,xalloc<CInifile::Sect *> >::begin
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?size@?$xr_vector@PAUSect@CInifile@@V?$xalloc@PAUSect@CInifile@@@@@@QBEIXZ
_TEXT	SEGMENT
?size@?$xr_vector@PAUSect@CInifile@@V?$xalloc@PAUSect@CInifile@@@@@@QBEIXZ PROC ; xr_vector<CInifile::Sect *,xalloc<CInifile::Sect *> >::size, COMDAT
; _this$ = ecx

; 126  : 	u32		size				() const							{ return (u32)inherited::size();} 

	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
	ret	0
?size@?$xr_vector@PAUSect@CInifile@@V?$xalloc@PAUSect@CInifile@@@@@@QBEIXZ ENDP ; xr_vector<CInifile::Sect *,xalloc<CInifile::Sect *> >::size
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?end@?$vector@PADV?$xalloc@PAD@@@stlp_std@@QAEPAPADXZ
_TEXT	SEGMENT
?end@?$vector@PADV?$xalloc@PAD@@@stlp_std@@QAEPAPADXZ PROC ; stlp_std::vector<char *,xalloc<char *> >::end, COMDAT
; _this$ = eax

; 81   :   iterator end()               { return cast_traits::to_value_type_ptr(_M_impl.end()); }

	mov	eax, DWORD PTR [eax+4]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAD@priv@stlp_std@@SAPAPADPAPAX@Z ; stlp_std::priv::_CastTraits<void *,char *>::to_value_type_ptr
	add	esp, 4
	ret	0
?end@?$vector@PADV?$xalloc@PAD@@@stlp_std@@QAEPAPADXZ ENDP ; stlp_std::vector<char *,xalloc<char *> >::end
_TEXT	ENDS
PUBLIC	?mods_unload@CEnvironment@@QAEXXZ		; CEnvironment::mods_unload
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\environment_misc.cpp
;	COMDAT ?mods_unload@CEnvironment@@QAEXXZ
_TEXT	SEGMENT
?mods_unload@CEnvironment@@QAEXXZ PROC			; CEnvironment::mods_unload, COMDAT
; _this$ = ecx

; 531  : {

	push	ebx

; 532  : 	Modifiers.clear_and_free			();

	lea	ebx, DWORD PTR [ecx+208]
	push	ebp
	mov	ecx, ebx
	call	?end@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEPAVCEnvModifier@@XZ ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::end
	mov	ecx, ebx
	mov	ebp, eax
	call	?begin@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEPAVCEnvModifier@@XZ ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::begin
	cmp	eax, ebp
	je	SHORT $LN16@mods_unloa
	push	esi
	push	edi
	mov	edi, DWORD PTR [ebx+4]
	sub	edi, ebp
	je	SHORT $LN22@mods_unloa
	push	edi
	push	ebp
	push	eax
	call	DWORD PTR __imp__memmove
	mov	esi, eax
	add	esp, 12					; 0000000cH
	add	esi, edi
	jmp	SHORT $LN23@mods_unloa
$LN22@mods_unloa:
	mov	esi, eax
$LN23@mods_unloa:
	mov	eax, DWORD PTR [ebx+4]
	push	eax
	push	esi
	call	??$_Destroy_Range@PAVCEnvModifier@@@stlp_std@@YAXPAVCEnvModifier@@0@Z ; stlp_std::_Destroy_Range<CEnvModifier *>
	add	esp, 8
	pop	edi
	mov	DWORD PTR [ebx+4], esi
	pop	esi
$LN16@mods_unloa:
	pop	ebp
	pop	ebx

; 533  : }

	ret	0
?mods_unload@CEnvironment@@QAEXXZ ENDP			; CEnvironment::mods_unload
_TEXT	ENDS
PUBLIC	?destroy@CEnvDescriptorMixer@@QAEXXZ		; CEnvDescriptorMixer::destroy
; Function compile flags: /Ogtpy
;	COMDAT ?destroy@CEnvDescriptorMixer@@QAEXXZ
_TEXT	SEGMENT
?destroy@CEnvDescriptorMixer@@QAEXXZ PROC		; CEnvDescriptorMixer::destroy, COMDAT
; _this$ = ecx

; 347  : {

	push	esi
	mov	esi, ecx

; 348  : 	m_pDescriptorMixer->Destroy();

	mov	ecx, DWORD PTR [esi+188]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 349  : 	/*
; 350  : 	sky_r_textures.clear		();
; 351  : 	sky_r_textures_env.clear	();
; 352  : 	clouds_r_textures.clear		();
; 353  : 	*/
; 354  : 
; 355  : 	//	Reuse existing code
; 356  : 	on_device_destroy();

	mov	ecx, DWORD PTR [esi+20]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	pop	esi
	jmp	edx
?destroy@CEnvDescriptorMixer@@QAEXXZ ENDP		; CEnvDescriptorMixer::destroy
_TEXT	ENDS
PUBLIC	?sum@CEnvModifier@@QAEMAAV1@AAU?$_vector3@M@@@Z	; CEnvModifier::sum
; Function compile flags: /Ogtpy
;	COMDAT ?sum@CEnvModifier@@QAEMAAV1@AAU?$_vector3@M@@@Z
_TEXT	SEGMENT
_M$ = 8							; size = 4
__power$ = 12						; size = 4
__dist_sq$ = 12						; size = 4
_view$ = 12						; size = 4
?sum@CEnvModifier@@QAEMAAV1@AAU?$_vector3@M@@@Z PROC	; CEnvModifier::sum, COMDAT
; _this$ = ecx

; 35   : {

	push	ecx

; 36   : 	float	_dist_sq	=	view.distance_to_sqr(M.position);

	mov	eax, DWORD PTR _view$[esp]
	movss	xmm2, DWORD PTR [eax+4]
	movss	xmm1, DWORD PTR [eax+8]
	movss	xmm0, DWORD PTR [eax]
	push	esi
	push	edi
	mov	edi, DWORD PTR _M$[esp+8]
	subss	xmm2, DWORD PTR [edi+4]
	subss	xmm1, DWORD PTR [edi+8]
	subss	xmm0, DWORD PTR [edi]
	movaps	xmm3, xmm2
	mulss	xmm3, xmm2
	mulss	xmm0, xmm0
	movaps	xmm2, xmm1
	mulss	xmm2, xmm1

; 37   : 	if (_dist_sq>=(M.radius*M.radius))	

	movss	xmm1, DWORD PTR [edi+12]
	addss	xmm0, xmm3
	addss	xmm0, xmm2
	movaps	xmm2, xmm1
	mulss	xmm2, xmm1
	comiss	xmm0, xmm2
	mov	esi, ecx
	movss	DWORD PTR __dist_sq$[esp+8], xmm0
	jb	SHORT $LN7@sum

; 38   : 		return			0;

	fldz

; 76   : 	}
; 77   : 	
; 78   : 	return				_power;
; 79   : }

	pop	edi
	pop	esi
	pop	ecx
	ret	8
$LN7@sum:

; 39   : 
; 40   : 	float	_att		=	1-_sqrt(_dist_sq)/M.radius;	//[0..1];

	fld	DWORD PTR __dist_sq$[esp+8]
	push	ecx
	fstp	DWORD PTR [esp]
	call	_sqrtf
	fdiv	DWORD PTR [edi+12]

; 41   : 	float	_power		=	M.power*_att;
; 42   : 	
; 43   : 
; 44   : 	if(M.use_flags.test(eViewDist))

	mov	eax, 1
	add	esp, 4
	test	BYTE PTR [edi+76], al
	fld1
	fsubrp	ST(1), ST(0)
	fmul	DWORD PTR [edi+16]
	fst	DWORD PTR __power$[esp+8]
	movss	xmm0, DWORD PTR __power$[esp+8]
	je	SHORT $LN18@sum

; 45   : 	{
; 46   : 		far_plane			+=	M.far_plane*_power;

	movss	xmm1, DWORD PTR [edi+20]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [esi+20]
	movss	DWORD PTR [esi+20], xmm1

; 47   : 		use_flags.set		(eViewDist, TRUE);

	or	WORD PTR [esi+76], ax
$LN18@sum:

; 48   : 	}
; 49   : 	if(M.use_flags.test(eFogColor))

	mov	eax, 2
	test	BYTE PTR [edi+76], al
	je	SHORT $LN26@sum

; 50   : 	{
; 51   : 		fog_color.mad		(M.fog_color,_power);

	movss	xmm1, DWORD PTR [edi+24]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [esi+24]
	movss	DWORD PTR [esi+24], xmm1
	movss	xmm1, DWORD PTR [edi+28]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [esi+28]
	movss	DWORD PTR [esi+28], xmm1
	movss	xmm1, DWORD PTR [edi+32]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [esi+32]
	movss	DWORD PTR [esi+32], xmm1

; 52   : 		use_flags.set		(eFogColor, TRUE);

	or	WORD PTR [esi+76], ax
$LN26@sum:

; 53   : 	}
; 54   : 	if(M.use_flags.test(eFogDensity))

	mov	eax, 4
	test	BYTE PTR [edi+76], al
	je	SHORT $LN32@sum

; 55   : 	{
; 56   : 		fog_density			+=	M.fog_density*_power;

	movss	xmm1, DWORD PTR [edi+36]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [esi+36]
	movss	DWORD PTR [esi+36], xmm1

; 57   : 		use_flags.set		(eFogDensity, TRUE);

	or	WORD PTR [esi+76], ax
$LN32@sum:

; 58   : 	}
; 59   : 
; 60   : 	if(M.use_flags.test(eAmbientColor))

	mov	eax, 8
	test	BYTE PTR [edi+76], al
	je	SHORT $LN40@sum

; 61   : 	{
; 62   : 		ambient.mad			(M.ambient,_power);

	movss	xmm1, DWORD PTR [edi+40]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [esi+40]
	movss	DWORD PTR [esi+40], xmm1
	movss	xmm1, DWORD PTR [edi+44]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [esi+44]
	movss	DWORD PTR [esi+44], xmm1
	movss	xmm1, DWORD PTR [edi+48]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [esi+48]
	movss	DWORD PTR [esi+48], xmm1

; 63   : 		use_flags.set		(eAmbientColor, TRUE);

	or	WORD PTR [esi+76], ax
$LN40@sum:

; 64   : 	}
; 65   : 
; 66   : 	if(M.use_flags.test(eSkyColor))

	mov	eax, 16					; 00000010H
	test	BYTE PTR [edi+76], al
	je	SHORT $LN48@sum

; 67   : 	{
; 68   : 		sky_color.mad		(M.sky_color,_power);

	movss	xmm1, DWORD PTR [edi+52]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [esi+52]
	movss	DWORD PTR [esi+52], xmm1
	movss	xmm1, DWORD PTR [edi+56]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [esi+56]
	movss	DWORD PTR [esi+56], xmm1
	movss	xmm1, DWORD PTR [edi+60]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [esi+60]
	movss	DWORD PTR [esi+60], xmm1

; 69   : 		use_flags.set		(eSkyColor, TRUE);

	or	WORD PTR [esi+76], ax
$LN48@sum:

; 70   : 	}
; 71   : 
; 72   : 	if(M.use_flags.test(eHemiColor))

	mov	eax, 32					; 00000020H
	test	BYTE PTR [edi+76], al
	je	SHORT $LN8@sum

; 73   : 	{
; 74   : 		hemi_color.mad		(M.hemi_color,_power);

	movss	xmm1, DWORD PTR [edi+64]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [esi+64]
	movss	DWORD PTR [esi+64], xmm1
	movss	xmm1, DWORD PTR [edi+68]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [esi+68]
	movss	DWORD PTR [esi+68], xmm1
	movss	xmm1, DWORD PTR [edi+72]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR [esi+72]
	movss	DWORD PTR [esi+72], xmm1

; 75   : 		use_flags.set		(eHemiColor, TRUE);

	or	WORD PTR [esi+76], ax
$LN8@sum:

; 76   : 	}
; 77   : 	
; 78   : 	return				_power;
; 79   : }

	pop	edi
	pop	esi
	pop	ecx
	ret	8
?sum@CEnvModifier@@QAEMAAV1@AAU?$_vector3@M@@@Z ENDP	; CEnvModifier::sum
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrsound\sound.h
;	COMDAT ??0ref_sound@@QAE@XZ
_TEXT	SEGMENT
??0ref_sound@@QAE@XZ PROC				; ref_sound::ref_sound, COMDAT
; _this$ = eax

; 116  : 							ref_sound				(){ }

	mov	DWORD PTR [eax], 0
	ret	0
??0ref_sound@@QAE@XZ ENDP				; ref_sound::ref_sound
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy_backward@PAUref_sound@@PAU1@H@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
___first$ = 8						; size = 4
??$__copy_backward@PAUref_sound@@PAU1@H@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__copy_backward<ref_sound *,ref_sound *,int>, COMDAT
; ___last$ = ecx
; ___result$ = eax

; 235  :                                           _Distance*) {

	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 236  :   for (_Distance __n = __last - __first; __n > 0; --__n)

	mov	esi, edi
	sub	esi, DWORD PTR ___first$[esp+8]
	mov	ebx, eax
	sar	esi, 2
	test	esi, esi
	jle	SHORT $LN1@copy_backw@34
$LL3@copy_backw@34:

; 237  :     *--__result = *--__last;

	sub	edi, 4
	sub	ebx, 4
	push	edi
	mov	ecx, ebx
	call	??4ref_sound@@QAEAAU0@ABU0@@Z
	sub	esi, 1
	test	esi, esi
	jg	SHORT $LL3@copy_backw@34

; 238  :   return __result;

	mov	eax, ebx
$LN1@copy_backw@34:
	pop	edi
	pop	esi
	pop	ebx

; 239  : }

	ret	0
??$__copy_backward@PAUref_sound@@PAU1@H@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__copy_backward<ref_sound *,ref_sound *,int>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__ucopy@PAUref_sound@@PAU1@H@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
??$__ucopy@PAUref_sound@@PAU1@H@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__ucopy<ref_sound *,ref_sound *,int>, COMDAT
; ___first$ = ecx
; ___last$ = eax
; ___result$ = edx

; 83   :                            _OutputIter __result, const random_access_iterator_tag &, _Distance*) {

	push	ebx
	push	esi
	mov	esi, eax
	mov	ebx, ecx

; 84   :   _OutputIter __cur = __result;
; 85   :   _STLP_TRY {
; 86   :     for (_Distance __n = __last - __first; __n > 0; --__n) {

	sub	esi, ebx
	sar	esi, 2
	test	esi, esi
	push	edi
	mov	edi, edx
	jle	SHORT $LN21@ucopy@10
$LL3@ucopy@10:

; 87   :       _Param_Construct(&*__cur, *__first);

	push	ebx
	push	edi
	call	??$_Param_Construct@Uref_sound@@U1@@stlp_std@@YAXPAUref_sound@@ABU1@@Z ; stlp_std::_Param_Construct<ref_sound,ref_sound>
	sub	esi, 1
	add	esp, 8

; 88   :       ++__first;

	add	ebx, 4

; 89   :       ++__cur;

	add	edi, 4
	test	esi, esi
	jg	SHORT $LL3@ucopy@10
$LN21@ucopy@10:

; 90   :     }
; 91   :     return __cur;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 92   :   }
; 93   :   _STLP_UNWIND(_STLP_STD::_Destroy_Range(__result, __cur))
; 94   :   _STLP_RET_AFTER_THROW(__cur)
; 95   : }

	ret	0
??$__ucopy@PAUref_sound@@PAU1@H@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__ucopy<ref_sound *,ref_sound *,int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__ufill@PAUref_sound@@U1@H@priv@stlp_std@@YAXPAUref_sound@@0ABU2@ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
??$__ufill@PAUref_sound@@U1@H@priv@stlp_std@@YAXPAUref_sound@@0ABU2@ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__ufill<ref_sound *,ref_sound,int>, COMDAT
; ___first$ = ecx
; ___last$ = eax
; ___x$ = ebx

; 246  :                     const _Tp& __x, const random_access_iterator_tag &, _Distance*) {

	push	esi
	push	edi
	mov	esi, eax
	mov	edi, ecx

; 247  :   _ForwardIter __cur = __first;
; 248  :   _STLP_TRY {
; 249  :     for (_Distance __n = __last - __first; __n > 0; --__n, ++__cur)

	sub	esi, edi
	sar	esi, 2
	test	esi, esi
	jle	SHORT $LN1@ufill@10
	npad	1
$LL3@ufill@10:

; 250  :       _Param_Construct(&*__cur, __x);

	push	ebx
	push	edi
	call	??$_Param_Construct@Uref_sound@@U1@@stlp_std@@YAXPAUref_sound@@ABU1@@Z ; stlp_std::_Param_Construct<ref_sound,ref_sound>
	sub	esi, 1
	add	esp, 8
	add	edi, 4
	test	esi, esi
	jg	SHORT $LL3@ufill@10
$LN1@ufill@10:
	pop	edi
	pop	esi

; 251  :   }
; 252  :   _STLP_UNWIND(_STLP_STD::_Destroy_Range(__first, __cur))
; 253  : }

	ret	0
??$__ufill@PAUref_sound@@U1@H@priv@stlp_std@@YAXPAUref_sound@@0ABU2@ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__ufill<ref_sound *,ref_sound,int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__ucopy_aux@PAPAXPAPAX@priv@stlp_std@@YAPAPAXPAPAX00ABU__true_type@1@@Z
_TEXT	SEGMENT
??$__ucopy_aux@PAPAXPAPAX@priv@stlp_std@@YAPAPAXPAPAX00ABU__true_type@1@@Z PROC ; stlp_std::priv::__ucopy_aux<void * *,void * *>, COMDAT
; ___first$ = ecx
; ___last$ = edx
; ___result$ = eax

; 125  :                                const __true_type& /*BothPtrType*/) {

	push	esi
	mov	esi, edx

; 126  :   return __ucopy_ptrs(__first, __last, __result,
; 127  :                       _UseTrivialUCopy(_STLP_VALUE_TYPE(__first, _InputIter),
; 128  :                                        _STLP_VALUE_TYPE(__result, _OutputIter))._Answer());

	cmp	esi, ecx
	je	SHORT $LN12@ucopy_aux@9
	sub	esi, ecx
	push	esi
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN12@ucopy_aux@9:
	pop	esi

; 129  : }

	ret	0
??$__ucopy_aux@PAPAXPAPAX@priv@stlp_std@@YAPAPAXPAPAX00ABU__true_type@1@@Z ENDP ; stlp_std::priv::__ucopy_aux<void * *,void * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_pair.h
_TEXT	ENDS
;	COMDAT ??0?$pair@U?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@_N@stlp_std@@QAE@ABU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@1@AB_N@Z
_TEXT	SEGMENT
___b$ = 8						; size = 4
??0?$pair@U?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@_N@stlp_std@@QAE@ABU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@1@AB_N@Z PROC ; stlp_std::pair<stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >,bool>::pair<stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >,bool>, COMDAT
; _this$ = eax
; ___a$ = ecx

; 56   :   pair(const _T1& __a, const _T2& __b) : first(__a), second(__b) {}

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ___b$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax+4], dl
	ret	4
??0?$pair@U?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@_N@stlp_std@@QAE@ABU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@1@AB_N@Z ENDP ; stlp_std::pair<stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >,bool>::pair<stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >,bool>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QAEPAPAUSSndChannel@CEnvAmbient@@XZ
_TEXT	SEGMENT
?end@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QAEPAPAUSSndChannel@CEnvAmbient@@XZ PROC ; stlp_std::vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::end, COMDAT
; _this$ = eax

; 81   :   iterator end()               { return cast_traits::to_value_type_ptr(_M_impl.end()); }

	mov	eax, DWORD PTR [eax+4]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	ret	0
?end@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QAEPAPAUSSndChannel@CEnvAmbient@@XZ ENDP ; stlp_std::vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::end
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$fill@PAUref_sound@@U1@@stlp_std@@YAXPAUref_sound@@0ABU1@@Z
_TEXT	SEGMENT
??$fill@PAUref_sound@@U1@@stlp_std@@YAXPAUref_sound@@0ABU1@@Z PROC ; stlp_std::fill<ref_sound *,ref_sound>, COMDAT
; ___first$ = eax
; ___last$ = edi
; ___val$ = ebx

; 392  : void fill(_ForwardIter __first, _ForwardIter __last, const _Tp& __val) {

	push	esi
	mov	esi, eax

; 393  :   _STLP_DEBUG_CHECK(_STLP_PRIV __check_range(__first, __last))
; 394  :   for ( ; __first != __last; ++__first)

	cmp	esi, edi
	je	SHORT $LN1@fill@10
$LL3@fill@10:

; 395  :     *__first = __val;

	push	ebx
	mov	ecx, esi
	call	??4ref_sound@@QAEAAU0@ABU0@@Z
	add	esi, 4
	cmp	esi, edi
	jne	SHORT $LL3@fill@10
$LN1@fill@10:
	pop	esi

; 396  : }

	ret	0
??$fill@PAUref_sound@@U1@@stlp_std@@YAXPAUref_sound@@0ABU1@@Z ENDP ; stlp_std::fill<ref_sound *,ref_sound>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__copy_backward_ptrs@PAUref_sound@@PAU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABU__false_type@1@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 4
??$__copy_backward_ptrs@PAUref_sound@@PAU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABU__false_type@1@@Z PROC ; stlp_std::priv::__copy_backward_ptrs<ref_sound *,ref_sound *>, COMDAT
; ___last$ = ecx
; ___result$ = eax

; 288  :                                         _OutputIter __result, const __false_type& /*TrivialAssignment*/) {

	push	ebx
	push	esi
	mov	ebx, ecx

; 289  :   return __copy_backward(__first, __last, __result, _STLP_ITERATOR_CATEGORY(__first, _InputIter), _STLP_DISTANCE_TYPE(__first, _InputIter));

	mov	esi, ebx
	sub	esi, DWORD PTR ___first$[esp+4]
	push	edi
	sar	esi, 2
	test	esi, esi
	mov	edi, eax
	jle	SHORT $LN3@copy_backw@35
	sub	ebx, edi
$LL5@copy_backw@35:
	sub	edi, 4
	lea	eax, DWORD PTR [ebx+edi]
	push	eax
	mov	ecx, edi
	call	??4ref_sound@@QAEAAU0@ABU0@@Z
	sub	esi, 1
	test	esi, esi
	jg	SHORT $LL5@copy_backw@35
	mov	eax, edi
$LN3@copy_backw@35:
	pop	edi
	pop	esi
	pop	ebx

; 290  : }

	ret	0
??$__copy_backward_ptrs@PAUref_sound@@PAU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABU__false_type@1@@Z ENDP ; stlp_std::priv::__copy_backward_ptrs<ref_sound *,ref_sound *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__ucopy_ptrs@PAUref_sound@@PAU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABU__false_type@1@@Z
_TEXT	SEGMENT
??$__ucopy_ptrs@PAUref_sound@@PAU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABU__false_type@1@@Z PROC ; stlp_std::priv::__ucopy_ptrs<ref_sound *,ref_sound *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 113  : { return __ucopy(__first, __last, __result, random_access_iterator_tag(), (ptrdiff_t*)0); }

	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	ebx, edx
	sub	edi, ebx
	sar	edi, 2
	test	edi, edi
	mov	esi, eax
	jle	SHORT $LN3@ucopy_ptrs@26
	sub	ebx, esi
$LL5@ucopy_ptrs@26:
	lea	eax, DWORD PTR [ebx+esi]
	push	eax
	push	esi
	call	??$_Param_Construct@Uref_sound@@U1@@stlp_std@@YAXPAUref_sound@@ABU1@@Z ; stlp_std::_Param_Construct<ref_sound,ref_sound>
	sub	edi, 1
	add	esp, 8
	add	esi, 4
	test	edi, edi
	jg	SHORT $LL5@ucopy_ptrs@26
	mov	eax, esi
$LN3@ucopy_ptrs@26:
	pop	edi
	pop	esi
	pop	ebx
	ret	0
??$__ucopy_ptrs@PAUref_sound@@PAU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABU__false_type@1@@Z ENDP ; stlp_std::priv::__ucopy_ptrs<ref_sound *,ref_sound *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__uninitialized_fill_n@PAUref_sound@@IU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@IABU2@@Z
_TEXT	SEGMENT
??$__uninitialized_fill_n@PAUref_sound@@IU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@IABU2@@Z PROC ; stlp_std::priv::__uninitialized_fill_n<ref_sound *,unsigned int,ref_sound>, COMDAT
; ___first$ = ecx
; ___n$ = eax
; ___x$ = ebx

; 313  : inline _ForwardIter __uninitialized_fill_n(_ForwardIter __first, _Size __n, const _Tp& __x) {

	push	ebp
	push	esi
	push	edi
	mov	edi, ecx

; 314  :   _ForwardIter __last = __first + __n;

	lea	ebp, DWORD PTR [edi+eax*4]

; 315  :   __ufill(__first, __last, __x, random_access_iterator_tag(), (ptrdiff_t*)0);

	mov	esi, ebp
	sub	esi, edi
	sar	esi, 2
	test	esi, esi
	jle	SHORT $LN23@uninitiali@16
$LL5@uninitiali@16:
	push	ebx
	push	edi
	call	??$_Param_Construct@Uref_sound@@U1@@stlp_std@@YAXPAUref_sound@@ABU1@@Z ; stlp_std::_Param_Construct<ref_sound,ref_sound>
	sub	esi, 1
	add	esp, 8
	add	edi, 4
	test	esi, esi
	jg	SHORT $LL5@uninitiali@16
$LN23@uninitiali@16:
	pop	edi
	pop	esi

; 316  :   return __last;

	mov	eax, ebp
	pop	ebp

; 317  : }

	ret	0
??$__uninitialized_fill_n@PAUref_sound@@IU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@IABU2@@Z ENDP ; stlp_std::priv::__uninitialized_fill_n<ref_sound *,unsigned int,ref_sound>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$_Copy_Construct@Uref_sound@@@stlp_std@@YAXPAUref_sound@@ABU1@@Z
_TEXT	SEGMENT
??$_Copy_Construct@Uref_sound@@@stlp_std@@YAXPAUref_sound@@ABU1@@Z PROC ; stlp_std::_Copy_Construct<ref_sound>, COMDAT
; ___p$ = ecx
; ___val$ = eax

; 110  : #if defined (_STLP_DEBUG_UNINITIALIZED)
; 111  :   memset((char*)__p, _STLP_SHRED_BYTE, sizeof(_Tp));
; 112  : #endif
; 113  :   _STLP_PLACEMENT_NEW (__p) _Tp(__val);

	test	ecx, ecx
	je	SHORT $LN3@Copy_Const@23
	push	eax
	call	??0ref_sound@@QAE@ABU0@@Z
$LN3@Copy_Const@23:

; 114  : }

	ret	0
??$_Copy_Construct@Uref_sound@@@stlp_std@@YAXPAUref_sound@@ABU1@@Z ENDP ; stlp_std::_Copy_Construct<ref_sound>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__uninitialized_move@PAUref_sound@@PAU1@U__false_type@stlp_std@@@priv@stlp_std@@YAPAUref_sound@@PAU2@00U__false_type@1@ABU31@@Z
_TEXT	SEGMENT
___trivial_ucpy$ = 8					; size = 1
??$__uninitialized_move@PAUref_sound@@PAU1@U__false_type@stlp_std@@@priv@stlp_std@@YAPAUref_sound@@PAU2@00U__false_type@1@ABU31@@Z PROC ; stlp_std::priv::__uninitialized_move<ref_sound *,ref_sound *,stlp_std::__false_type>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 414  : { return __ucopy_ptrs(__first, __last, __result, __trivial_ucpy); }

	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	ebx, edx
	sub	edi, ebx
	sar	edi, 2
	test	edi, edi
	mov	esi, eax
	jle	SHORT $LN5@uninitiali@17
	sub	ebx, esi
$LL7@uninitiali@17:
	lea	eax, DWORD PTR [ebx+esi]
	push	eax
	push	esi
	call	??$_Param_Construct@Uref_sound@@U1@@stlp_std@@YAXPAUref_sound@@ABU1@@Z ; stlp_std::_Param_Construct<ref_sound,ref_sound>
	sub	edi, 1
	add	esp, 8
	add	esi, 4
	test	edi, edi
	jg	SHORT $LL7@uninitiali@17
	mov	eax, esi
$LN5@uninitiali@17:
	pop	edi
	pop	esi
	pop	ebx
	ret	0
??$__uninitialized_move@PAUref_sound@@PAU1@U__false_type@stlp_std@@@priv@stlp_std@@YAPAUref_sound@@PAU2@00U__false_type@1@ABU31@@Z ENDP ; stlp_std::priv::__uninitialized_move<ref_sound *,ref_sound *,stlp_std::__false_type>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$uninitialized_copy@PAPAXPAPAX@stlp_std@@YAPAPAXPAPAX00@Z
_TEXT	SEGMENT
??$uninitialized_copy@PAPAXPAPAX@stlp_std@@YAPAPAXPAPAX00@Z PROC ; stlp_std::uninitialized_copy<void * *,void * *>, COMDAT
; ___first$ = ecx
; ___last$ = edx
; ___result$ = eax

; 144  : { return _STLP_PRIV __ucopy_aux(__first, __last, __result, _BothPtrType< _InputIter, _ForwardIter>::_Answer()); }

	push	esi
	mov	esi, edx
	cmp	esi, ecx
	je	SHORT $LN16@uninitiali@18
	sub	esi, ecx
	push	esi
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN16@uninitiali@18:
	pop	esi
	ret	0
??$uninitialized_copy@PAPAXPAPAX@stlp_std@@YAPAPAXPAPAX00@Z ENDP ; stlp_std::uninitialized_copy<void * *,void * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy@PAUref_sound@@PAU1@H@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
??$__copy@PAUref_sound@@PAU1@H@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__copy<ref_sound *,ref_sound *,int>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 200  :        _OutputIter __result, const random_access_iterator_tag &, _Distance*) {

	push	ebx
	push	esi
	push	edi
	mov	esi, ecx
	mov	edi, edx

; 201  :   for (_Distance __n = __last - __first; __n > 0; --__n) {

	sub	esi, edi
	sar	esi, 2
	test	esi, esi
	mov	ebx, eax
	jle	SHORT $LN1@copy@14
$LL3@copy@14:

; 202  :     *__result = *__first;

	push	edi
	mov	ecx, ebx
	call	??4ref_sound@@QAEAAU0@ABU0@@Z
	sub	esi, 1

; 203  :     ++__first;

	add	edi, 4

; 204  :     ++__result;

	add	ebx, 4
	test	esi, esi
	jg	SHORT $LL3@copy@14

; 205  :   }
; 206  :   return __result;

	mov	eax, ebx
$LN1@copy@14:
	pop	edi
	pop	esi
	pop	ebx

; 207  : }

	ret	0
??$__copy@PAUref_sound@@PAU1@H@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__copy<ref_sound *,ref_sound *,int>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ??$_M_allocate_and_copy@PAPAX@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEPAPAXAAIPAPAX1@Z
_TEXT	SEGMENT
??$_M_allocate_and_copy@PAPAX@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEPAPAXAAIPAPAX1@Z PROC ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_allocate_and_copy<void * *>, COMDAT
; ___n$ = eax
; ___first$ = ebx
; ___last$ = ecx

; 634  :                                _ForwardIterator __first, _ForwardIterator __last)
; 635  : #else /* _STLP_MEMBER_TEMPLATES */
; 636  :   pointer _M_allocate_and_copy(size_type& __n,
; 637  :                                const_pointer __first, const_pointer __last)
; 638  : #endif /* _STLP_MEMBER_TEMPLATES */
; 639  :   {
; 640  :     pointer __result = this->_M_end_of_storage.allocate(__n, __n);

	mov	eax, DWORD PTR [eax]
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [eax*4]
	push	edi
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 641  :     _STLP_TRY {
; 642  :       uninitialized_copy(__first, __last, __result);

	cmp	esi, ebx
	mov	edi, eax
	je	SHORT $LN28@M_allocate@9
	sub	esi, ebx
	push	esi
	push	ebx
	push	edi
	call	_memcpy
	add	esp, 12					; 0000000cH

; 643  :       return __result;

	mov	eax, edi
$LN28@M_allocate@9:
	pop	edi
	pop	esi

; 644  :     }
; 645  :     _STLP_UNWIND(this->_M_end_of_storage.deallocate(__result, __n))
; 646  :     _STLP_RET_AFTER_THROW(__result)
; 647  :   }

	ret	0
??$_M_allocate_and_copy@PAPAX@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEPAPAXAAIPAPAX1@Z ENDP ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_allocate_and_copy<void * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.c
_TEXT	ENDS
;	COMDAT ?_M_fill_insert_aux@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXIABQAXABU__false_type@3@@Z
_TEXT	SEGMENT
___x_copy$136762 = -4					; size = 4
tv333 = 8						; size = 4
___last$313126 = 8					; size = 4
___pos$ = 8						; size = 4
___n$ = 12						; size = 4
$T313027 = 16						; size = 1
___x$ = 16						; size = 4
___formal$ = 20						; size = 4
?_M_fill_insert_aux@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXIABQAXABU__false_type@3@@Z PROC ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_fill_insert_aux, COMDAT
; _this$ = ecx

; 143  :                                               const _Tp& __x, const __false_type& /*_Movable*/) {

	push	ecx

; 144  :   //Here self referencing needs to be checked even for non movable types.
; 145  :   if (_M_is_inside(__x)) {

	mov	edx, DWORD PTR ___x$[esp]
	push	ebp
	mov	ebp, ecx
	cmp	edx, DWORD PTR [ebp]
	jb	SHORT $LN3@M_fill_ins@10
	cmp	edx, DWORD PTR [ebp+4]
	jae	SHORT $LN3@M_fill_ins@10

; 146  :     _Tp __x_copy = __x;

	mov	eax, DWORD PTR [edx]

; 147  :     _M_fill_insert_aux(__pos, __n, __x_copy, __false_type());

	lea	ecx, DWORD PTR $T313027[esp+4]
	push	ecx
	mov	ecx, DWORD PTR ___pos$[esp+8]
	lea	edx, DWORD PTR ___x_copy$136762[esp+12]
	mov	DWORD PTR ___x_copy$136762[esp+12], eax
	mov	eax, DWORD PTR ___n$[esp+8]
	push	edx
	push	eax
	push	ecx
	mov	ecx, ebp
	mov	BYTE PTR $T313027[esp+20], 0
	call	?_M_fill_insert_aux@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXIABQAXABU__false_type@3@@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_fill_insert_aux
	pop	ebp

; 162  :   }
; 163  : }

	pop	ecx
	ret	16					; 00000010H
$LN3@M_fill_ins@10:

; 148  :     return;
; 149  :   }
; 150  :   const size_type __elems_after = this->_M_finish - __pos;
; 151  :   pointer __old_finish = this->_M_finish;
; 152  :   if (__elems_after > __n) {

	mov	eax, DWORD PTR ___n$[esp+4]
	push	ebx
	mov	ebx, DWORD PTR ___pos$[esp+8]
	push	esi
	mov	esi, DWORD PTR [ebp+4]
	push	edi
	mov	edi, esi
	sub	edi, ebx
	sar	edi, 2
	cmp	edi, eax
	jbe	SHORT $LN2@M_fill_ins@10

; 153  :     _STLP_PRIV __ucopy_ptrs(this->_M_finish - __n, this->_M_finish, this->_M_finish, _TrivialUCopy());

	lea	ecx, DWORD PTR [eax*4]
	mov	edi, esi
	sub	edi, ecx
	cmp	esi, edi
	mov	DWORD PTR tv333[esp+16], ecx
	je	SHORT $LN15@M_fill_ins@10
	mov	edx, esi
	sub	edx, edi
	push	edx
	push	edi
	push	esi
	call	_memcpy
	mov	ecx, DWORD PTR tv333[esp+28]
	mov	edx, DWORD PTR ___x$[esp+28]
	add	esp, 12					; 0000000cH
$LN15@M_fill_ins@10:

; 154  :     this->_M_finish += __n;

	add	DWORD PTR [ebp+4], ecx

; 155  :     _STLP_PRIV __copy_backward_ptrs(__pos, __old_finish - __n, __old_finish, _TrivialCopy());

	sub	edi, ebx
	test	edi, edi
	jle	SHORT $LN20@M_fill_ins@10
	push	edi
	push	ebx
	sub	esi, edi
	push	esi
	call	DWORD PTR __imp__memmove
	mov	ecx, DWORD PTR tv333[esp+28]
	mov	edx, DWORD PTR ___x$[esp+28]
	add	esp, 12					; 0000000cH
$LN20@M_fill_ins@10:

; 156  :     _STLP_STD::fill(__pos, __pos + __n, __x);

	add	ecx, ebx
	cmp	ebx, ecx
	mov	eax, ebx
	je	SHORT $LN58@M_fill_ins@10
$LL24@M_fill_ins@10:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	add	eax, 4
	cmp	eax, ecx
	jne	SHORT $LL24@M_fill_ins@10
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp

; 162  :   }
; 163  : }

	pop	ecx
	ret	16					; 00000010H
$LN2@M_fill_ins@10:

; 157  :   } else {
; 158  :     this->_M_finish = _STLP_PRIV __uninitialized_fill_n(this->_M_finish, __n - __elems_after, __x);

	sub	eax, edi
	lea	edx, DWORD PTR [esi+eax*4]
	mov	eax, edx
	sub	eax, esi
	sar	eax, 2
	test	eax, eax
	mov	DWORD PTR ___last$313126[esp+16], edx
	mov	ecx, esi
	jle	SHORT $LN29@M_fill_ins@10
$LL31@M_fill_ins@10:
	test	ecx, ecx
	je	SHORT $LN30@M_fill_ins@10
	mov	edx, DWORD PTR ___x$[esp+16]
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR ___last$313126[esp+16]
$LN30@M_fill_ins@10:
	sub	eax, 1
	add	ecx, 4
	test	eax, eax
	jg	SHORT $LL31@M_fill_ins@10
$LN29@M_fill_ins@10:

; 159  :     _STLP_PRIV __ucopy_ptrs(__pos, __old_finish, this->_M_finish, _TrivialUCopy());

	cmp	esi, ebx
	mov	DWORD PTR [ebp+4], edx
	je	SHORT $LN45@M_fill_ins@10
	mov	eax, esi
	sub	eax, ebx
	push	eax
	push	ebx
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN45@M_fill_ins@10:

; 160  :     this->_M_finish += __elems_after;

	lea	ecx, DWORD PTR [edi*4]
	add	DWORD PTR [ebp+4], ecx

; 161  :     _STLP_STD::fill(__pos, __old_finish, __x);

	cmp	ebx, esi
	mov	eax, ebx
	je	SHORT $LN58@M_fill_ins@10
$LL48@M_fill_ins@10:
	mov	edx, DWORD PTR ___x$[esp+16]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	add	eax, 4
	cmp	eax, esi
	jne	SHORT $LL48@M_fill_ins@10
$LN58@M_fill_ins@10:
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp

; 162  :   }
; 163  : }

	pop	ecx
	ret	16					; 00000010H
?_M_fill_insert_aux@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXIABQAXABU__false_type@3@@Z ENDP ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_fill_insert_aux
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ??0?$vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@stlp_std@@QAE@ABV?$xalloc@PAVCEnvDescriptor@@@@@Z
_TEXT	SEGMENT
??0?$vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@stlp_std@@QAE@ABV?$xalloc@PAVCEnvDescriptor@@@@@Z PROC ; stlp_std::vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >::vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >, COMDAT
; _this$ = eax

; 106  :   explicit vector(const allocator_type& __a = allocator_type())

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@stlp_std@@QAE@ABV?$xalloc@PAVCEnvDescriptor@@@@@Z ENDP ; stlp_std::vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >::vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy_ptrs@PAUref_sound@@PAU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABU__false_type@1@@Z
_TEXT	SEGMENT
??$__copy_ptrs@PAUref_sound@@PAU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABU__false_type@1@@Z PROC ; stlp_std::priv::__copy_ptrs<ref_sound *,ref_sound *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 249  :                                const __false_type& /*IsOKToMemCpy*/) {

	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	ebx, edx

; 250  :   return __copy(__first, __last, __result, random_access_iterator_tag(), (ptrdiff_t*)0);

	sub	edi, ebx
	sar	edi, 2
	test	edi, edi
	mov	esi, eax
	jle	SHORT $LN3@copy_ptrs@39
	sub	ebx, esi
$LL5@copy_ptrs@39:
	lea	eax, DWORD PTR [ebx+esi]
	push	eax
	mov	ecx, esi
	call	??4ref_sound@@QAEAAU0@ABU0@@Z
	sub	edi, 1
	add	esi, 4
	test	edi, edi
	jg	SHORT $LL5@copy_ptrs@39
	mov	eax, esi
$LN3@copy_ptrs@39:
	pop	edi
	pop	esi
	pop	ebx

; 251  : }

	ret	0
??$__copy_ptrs@PAUref_sound@@PAU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABU__false_type@1@@Z ENDP ; stlp_std::priv::__copy_ptrs<ref_sound *,ref_sound *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.h
_TEXT	ENDS
;	COMDAT ??E?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAEAAU012@XZ
_TEXT	SEGMENT
??E?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAEAAU012@XZ PROC ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::operator++, COMDAT
; _this$ = eax

; 177  :     _M_node = _Rb_global_inst::_M_increment(_M_node);

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	test	edx, edx
	je	SHORT $LN7@operator@49
	mov	ecx, DWORD PTR [edx+8]
	test	ecx, ecx
	je	SHORT $LN10@operator@49
$LL11@operator@49:
	mov	edx, ecx
	mov	ecx, DWORD PTR [edx+8]
	test	ecx, ecx
	jne	SHORT $LL11@operator@49
$LN10@operator@49:
	mov	DWORD PTR [eax], edx

; 178  :     return *this;
; 179  :   }

	ret	0

; 177  :     _M_node = _Rb_global_inst::_M_increment(_M_node);

$LN7@operator@49:
	mov	edx, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [edx+12]
	jne	SHORT $LN4@operator@49
$LL5@operator@49:
	mov	ecx, edx
	mov	edx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [edx+12]
	je	SHORT $LL5@operator@49
$LN4@operator@49:
	cmp	DWORD PTR [ecx+12], edx
	jne	SHORT $LN10@operator@49
	mov	DWORD PTR [eax], ecx

; 178  :     return *this;
; 179  :   }

	ret	0
??E?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAEAAU012@XZ ENDP ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@XZ
_TEXT	SEGMENT
?begin@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@XZ PROC ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::begin, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi

; 416  :   iterator begin() { return iterator(_M_leftmost()); }

	call	?_M_leftmost@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_leftmost
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi], eax
	mov	eax, esi
	ret	0
?begin@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@XZ ENDP ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::begin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE?AU012@H@Z
_TEXT	SEGMENT
??E?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE?AU012@H@Z PROC ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::operator++, COMDAT
; _this$ = esi
; ___$ReturnUdt$ = eax

; 181  :     _Self __tmp = *this;

	mov	ecx, DWORD PTR [esi]

; 182  :     ++(*this);

	mov	edx, DWORD PTR [ecx+12]
	test	edx, edx
	mov	DWORD PTR [eax], ecx
	je	SHORT $LN13@operator@50
	mov	ecx, DWORD PTR [edx+8]
	test	ecx, ecx
	je	SHORT $LN16@operator@50
$LL17@operator@50:
	mov	edx, ecx
	mov	ecx, DWORD PTR [edx+8]
	test	ecx, ecx
	jne	SHORT $LL17@operator@50
$LN16@operator@50:
	mov	DWORD PTR [esi], edx

; 183  :     return __tmp;
; 184  :   }

	ret	0

; 182  :     ++(*this);

$LN13@operator@50:
	mov	edx, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [edx+12]
	jne	SHORT $LN10@operator@50
$LL11@operator@50:
	mov	ecx, edx
	mov	edx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [edx+12]
	je	SHORT $LL11@operator@50
$LN10@operator@50:
	cmp	DWORD PTR [ecx+12], edx
	jne	SHORT $LN16@operator@50
	mov	DWORD PTR [esi], ecx

; 183  :     return __tmp;
; 184  :   }

	ret	0
??E?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAE?AU012@H@Z ENDP ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::operator++
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_map.h
_TEXT	ENDS
;	COMDAT ?begin@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@2@XZ
_TEXT	SEGMENT
?begin@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@2@XZ PROC ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::begin, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi

; 161  :   iterator begin() { return _M_t.begin(); }

	call	?_M_leftmost@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_leftmost
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi], eax
	mov	eax, esi
	ret	0
?begin@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@2@XZ ENDP ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::begin
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?back@?$vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@stlp_std@@QAEAAPAVCEnvDescriptor@@XZ
_TEXT	SEGMENT
?back@?$vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@stlp_std@@QAEAAPAVCEnvDescriptor@@XZ PROC ; stlp_std::vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >::back, COMDAT
; _this$ = eax

; 100  :   reference back()              { return cast_traits::to_value_type_ref(_M_impl.back()); }

	mov	eax, DWORD PTR [eax+4]
	sub	eax, 4
	ret	0
?back@?$vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@stlp_std@@QAEAAPAVCEnvDescriptor@@XZ ENDP ; stlp_std::vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >::back
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?back@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEAAPAVCEnvAmbient@@XZ
_TEXT	SEGMENT
?back@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEAAPAVCEnvAmbient@@XZ PROC ; stlp_std::vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::back, COMDAT
; _this$ = eax

; 100  :   reference back()              { return cast_traits::to_value_type_ref(_M_impl.back()); }

	mov	eax, DWORD PTR [eax+4]
	sub	eax, 4
	ret	0
?back@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEAAPAVCEnvAmbient@@XZ ENDP ; stlp_std::vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::back
_TEXT	ENDS
PUBLIC	__real@3f59999a
PUBLIC	__real@3f7d70a4
PUBLIC	?lerp@CEnvDescriptorMixer@@QAEXPAVCEnvironment@@AAVCEnvDescriptor@@1MAAVCEnvModifier@@M@Z ; CEnvDescriptorMixer::lerp
;	COMDAT __real@3f59999a
; File d:\clearsky\sources\engine\xrcore\_std_extensions.h
CONST	SEGMENT
__real@3f59999a DD 03f59999ar			; 0.85
CONST	ENDS
;	COMDAT __real@3f7d70a4
CONST	SEGMENT
__real@3f7d70a4 DD 03f7d70a4r			; 0.99
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\environment_misc.cpp
CONST	ENDS
;	COMDAT ?lerp@CEnvDescriptorMixer@@QAEXPAVCEnvironment@@AAVCEnvDescriptor@@1MAAVCEnvModifier@@M@Z
_TEXT	SEGMENT
tv1445 = -12						; size = 4
tv835 = -12						; size = 4
tv1448 = -8						; size = 4
_modif_power$ = -8					; size = 4
_mag$313619 = -4					; size = 4
_fi$ = -4						; size = 4
___formal$ = 8						; size = 4
_A$ = 12						; size = 4
_B$ = 16						; size = 4
_f$ = 20						; size = 4
_Mdf$ = 24						; size = 4
_modifier_power$ = 28					; size = 4
?lerp@CEnvDescriptorMixer@@QAEXPAVCEnvironment@@AAVCEnvDescriptor@@1MAAVCEnvModifier@@M@Z PROC ; CEnvDescriptorMixer::lerp, COMDAT
; _this$ = ecx

; 389  : {

	push	ebp
	mov	ebp, esp
	and	esp, -64				; ffffffc0H
	sub	esp, 52					; 00000034H

; 390  : 	float	modif_power		=	1.f/(modifier_power+1);	// the environment itself

	movss	xmm0, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR _modifier_power$[ebp]
	push	ebx

; 391  : 	float	fi				=	1-f;
; 392  : 
; 393  : 	m_pDescriptorMixer->lerp(&*A.m_pDescriptor, &*B.m_pDescriptor);

	mov	ebx, DWORD PTR _A$[ebp]
	push	esi
	push	edi
	mov	edi, DWORD PTR _B$[ebp]
	mov	edx, DWORD PTR [edi+20]
	mov	esi, ecx
	mov	ecx, DWORD PTR [esi+188]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+16]
	push	edx
	mov	edx, DWORD PTR [ebx+20]
	addss	xmm2, xmm0
	movaps	xmm1, xmm0
	subss	xmm0, DWORD PTR _f$[ebp]
	divss	xmm1, xmm2
	push	edx
	movss	DWORD PTR _modif_power$[esp+72], xmm1
	movss	DWORD PTR tv835[esp+72], xmm0
	movss	DWORD PTR _fi$[esp+72], xmm0
	call	eax

; 394  : 	/*
; 395  : 	sky_r_textures.clear		();
; 396  : 	sky_r_textures.push_back	(mk_pair(0,A.sky_texture));
; 397  : 	sky_r_textures.push_back	(mk_pair(1,B.sky_texture));
; 398  : 
; 399  : 	sky_r_textures_env.clear	();
; 400  : 
; 401  : 	sky_r_textures_env.push_back(mk_pair(0,A.sky_texture_env));
; 402  : 	sky_r_textures_env.push_back(mk_pair(1,B.sky_texture_env));
; 403  : 
; 404  : 	clouds_r_textures.clear		();
; 405  : 	clouds_r_textures.push_back	(mk_pair(0,A.clouds_texture));
; 406  : 	clouds_r_textures.push_back	(mk_pair(1,B.clouds_texture));
; 407  : 	*/
; 408  : 
; 409  : 	weight					=	f;

	movss	xmm0, DWORD PTR _f$[ebp]

; 410  : 
; 411  : 	clouds_color.lerp		(A.clouds_color,B.clouds_color,f);

	movss	xmm3, DWORD PTR tv835[esp+64]
	movss	DWORD PTR [esi+192], xmm0
	movss	xmm2, DWORD PTR [edi+24]
	mulss	xmm2, xmm0

; 412  : 
; 413  : 	sky_rotation			=	(fi*A.sky_rotation + f*B.sky_rotation);
; 414  : 
; 415  : //.	far_plane				=	(fi*A.far_plane + f*B.far_plane + Mdf.far_plane)*psVisDistance*modif_power;
; 416  : 	if(Mdf.use_flags.test(eViewDist))

	mov	eax, DWORD PTR _Mdf$[ebp]
	movaps	xmm1, xmm3
	movaps	xmm4, xmm1
	mulss	xmm4, DWORD PTR [ebx+24]
	addss	xmm2, xmm4
	movss	DWORD PTR [esi+24], xmm2
	movss	xmm2, DWORD PTR [ebx+28]
	movss	xmm4, DWORD PTR [edi+28]
	mulss	xmm2, xmm1
	mulss	xmm4, xmm0
	addss	xmm2, xmm4
	movss	DWORD PTR [esi+28], xmm2
	movss	xmm2, DWORD PTR [ebx+32]
	movss	xmm4, DWORD PTR [edi+32]
	mulss	xmm2, xmm1
	mulss	xmm4, xmm0
	addss	xmm2, xmm4
	movss	DWORD PTR [esi+32], xmm2
	movss	xmm2, DWORD PTR [ebx+36]
	mulss	xmm2, xmm1
	movss	xmm1, DWORD PTR [edi+36]
	mulss	xmm1, xmm0
	addss	xmm2, xmm1
	movss	xmm1, DWORD PTR _fi$[esp+64]
	movss	DWORD PTR [esi+36], xmm2
	movss	xmm2, DWORD PTR [ebx+52]
	movss	xmm4, DWORD PTR [edi+52]
	mulss	xmm2, xmm1
	mulss	xmm4, xmm0
	addss	xmm2, xmm4
	movss	DWORD PTR [esi+52], xmm2
	test	BYTE PTR [eax+76], 1

; 417  : 		far_plane				=	(fi*A.far_plane + f*B.far_plane + Mdf.far_plane)*psVisDistance*modif_power;

	movss	xmm2, DWORD PTR [ebx+56]
	movss	xmm4, DWORD PTR [edi+56]
	mulss	xmm4, xmm0
	mulss	xmm2, xmm1
	addss	xmm2, xmm4
	movss	xmm4, DWORD PTR _modif_power$[esp+64]
	je	SHORT $LN22@lerp
	addss	xmm2, DWORD PTR [eax+20]
	mulss	xmm2, DWORD PTR ?psVisDistance@@3MA
	mulss	xmm2, xmm4

; 418  : 	else

	jmp	SHORT $LN133@lerp
$LN22@lerp:

; 419  : 		far_plane				=	(fi*A.far_plane + f*B.far_plane)*psVisDistance;

	mulss	xmm2, DWORD PTR ?psVisDistance@@3MA
$LN133@lerp:
	movss	DWORD PTR [esi+56], xmm2

; 420  : 	
; 421  : //.	fog_color.lerp			(A.fog_color,B.fog_color,f).add(Mdf.fog_color).mul(modif_power);
; 422  : 	fog_color.lerp			(A.fog_color,B.fog_color,f);

	movss	xmm5, DWORD PTR [ebx+60]
	movss	xmm6, DWORD PTR [edi+60]
	movaps	xmm2, xmm3
	mulss	xmm5, xmm2
	mulss	xmm6, xmm0
	addss	xmm5, xmm6
	movss	DWORD PTR [esi+60], xmm5
	movss	xmm5, DWORD PTR [ebx+64]
	movss	xmm6, DWORD PTR [edi+64]
	mulss	xmm5, xmm2
	mulss	xmm6, xmm0
	addss	xmm5, xmm6
	movss	DWORD PTR [esi+64], xmm5
	movss	xmm5, DWORD PTR [ebx+68]
	mulss	xmm5, xmm2
	movss	xmm2, DWORD PTR [edi+68]
	mulss	xmm2, xmm0
	addss	xmm5, xmm2
	movss	DWORD PTR [esi+68], xmm5

; 423  : 	if(Mdf.use_flags.test(eFogColor))

	test	BYTE PTR [eax+76], 2
	je	SHORT $LN41@lerp

; 424  : 		fog_color.add(Mdf.fog_color).mul(modif_power);

	movss	xmm2, DWORD PTR [esi+60]
	addss	xmm2, DWORD PTR [eax+24]
	movss	DWORD PTR [esi+60], xmm2
	movss	xmm2, DWORD PTR [eax+28]
	addss	xmm2, DWORD PTR [esi+64]
	movss	DWORD PTR [esi+64], xmm2
	movss	xmm2, DWORD PTR [eax+32]
	addss	xmm2, DWORD PTR [esi+68]
	movss	DWORD PTR [esi+68], xmm2
	movss	xmm2, DWORD PTR [esi+60]
	mulss	xmm2, xmm4
	movss	DWORD PTR [esi+60], xmm2
	movss	xmm2, DWORD PTR [esi+64]
	mulss	xmm2, xmm4
	movss	DWORD PTR [esi+64], xmm2
	movss	xmm2, DWORD PTR [esi+68]
	mulss	xmm2, xmm4
	movss	DWORD PTR [esi+68], xmm2
$LN41@lerp:

; 425  : 
; 426  : //.	fog_density				=	(fi*A.fog_density + f*B.fog_density + Mdf.fog_density)*modif_power;
; 427  : 	fog_density				=	(fi*A.fog_density + f*B.fog_density);

	movss	xmm2, DWORD PTR [ebx+72]
	movss	xmm5, DWORD PTR [edi+72]
	mulss	xmm2, xmm1
	mulss	xmm5, xmm0
	addss	xmm2, xmm5
	movss	DWORD PTR [esi+72], xmm2

; 428  : 	if(Mdf.use_flags.test(eFogDensity))

	test	BYTE PTR [eax+76], 4
	je	SHORT $LN19@lerp

; 429  : 	{
; 430  : 		fog_density			+= Mdf.fog_density;

	movss	xmm5, DWORD PTR [eax+36]
	addss	xmm5, xmm2

; 431  : 		fog_density			*= modif_power;

	mulss	xmm5, xmm4
	movss	DWORD PTR [esi+72], xmm5
$LN19@lerp:

; 432  : 	}
; 433  : 
; 434  : 	fog_distance			=	(fi*A.fog_distance + f*B.fog_distance);

	movss	xmm2, DWORD PTR [ebx+76]
	movss	xmm5, DWORD PTR [edi+76]
	mulss	xmm2, xmm1
	mulss	xmm5, xmm0
	addss	xmm2, xmm5
	movss	DWORD PTR [esi+76], xmm2

; 435  : 	fog_near				=	(1.0f - fog_density)*0.85f * fog_distance;

	movss	xmm5, DWORD PTR __real@3f800000
	subss	xmm5, DWORD PTR [esi+72]
	mulss	xmm5, xmm2

; 436  : 	fog_far					=	0.99f * fog_distance;

	mulss	xmm2, DWORD PTR __real@3f7d70a4
	mulss	xmm5, DWORD PTR __real@3f59999a
	movss	DWORD PTR [esi+200], xmm2
	movss	DWORD PTR [esi+196], xmm5

; 437  : 	
; 438  : 	rain_density			=	fi*A.rain_density + f*B.rain_density;

	movss	xmm2, DWORD PTR [ebx+80]
	movss	xmm5, DWORD PTR [edi+80]
	mulss	xmm2, xmm1
	mulss	xmm5, xmm0
	addss	xmm2, xmm5
	movss	DWORD PTR [esi+80], xmm2

; 439  : 	rain_color.lerp			(A.rain_color,B.rain_color,f);

	movss	xmm5, DWORD PTR [ebx+84]
	movss	xmm6, DWORD PTR [edi+84]
	movaps	xmm2, xmm3
	mulss	xmm5, xmm2
	mulss	xmm6, xmm0
	addss	xmm5, xmm6
	movss	DWORD PTR [esi+84], xmm5
	movss	xmm5, DWORD PTR [ebx+88]
	movss	xmm6, DWORD PTR [edi+88]
	mulss	xmm5, xmm2
	mulss	xmm6, xmm0
	addss	xmm5, xmm6
	movss	DWORD PTR [esi+88], xmm5
	movss	xmm5, DWORD PTR [ebx+92]
	mulss	xmm5, xmm2
	movss	xmm2, DWORD PTR [edi+92]
	mulss	xmm2, xmm0
	addss	xmm5, xmm2
	movss	DWORD PTR [esi+92], xmm5

; 440  : 	bolt_period				=	fi*A.bolt_period + f*B.bolt_period;

	movss	xmm2, DWORD PTR [ebx+96]
	movss	xmm5, DWORD PTR [edi+96]
	mulss	xmm2, xmm1
	mulss	xmm5, xmm0
	addss	xmm2, xmm5
	movss	DWORD PTR [esi+96], xmm2

; 441  : 	bolt_duration			=	fi*A.bolt_duration + f*B.bolt_duration;

	movss	xmm2, DWORD PTR [ebx+100]
	movss	xmm5, DWORD PTR [edi+100]
	mulss	xmm2, xmm1
	mulss	xmm5, xmm0
	addss	xmm2, xmm5
	movss	DWORD PTR [esi+100], xmm2

; 442  : 	// wind
; 443  : 	wind_velocity			=	fi*A.wind_velocity + f*B.wind_velocity;

	movss	xmm2, DWORD PTR [ebx+104]
	movss	xmm5, DWORD PTR [edi+104]
	mulss	xmm2, xmm1
	mulss	xmm5, xmm0
	addss	xmm2, xmm5
	movss	DWORD PTR [esi+104], xmm2

; 444  : 	wind_direction			=	fi*A.wind_direction + f*B.wind_direction;

	movss	xmm2, DWORD PTR [ebx+108]
	movss	xmm5, DWORD PTR [edi+108]
	mulss	xmm2, xmm1
	mulss	xmm5, xmm0
	addss	xmm2, xmm5
	movss	DWORD PTR [esi+108], xmm2

; 445  : 
; 446  : 	m_fSunShaftsIntensity	=	fi*A.m_fSunShaftsIntensity + f*B.m_fSunShaftsIntensity;

	movss	xmm2, DWORD PTR [ebx+164]
	movss	xmm5, DWORD PTR [edi+164]
	mulss	xmm2, xmm1
	mulss	xmm5, xmm0
	addss	xmm2, xmm5
	movss	DWORD PTR [esi+164], xmm2

; 447  : 	m_fWaterIntensity		=	fi*A.m_fWaterIntensity + f*B.m_fWaterIntensity;

	movss	xmm2, DWORD PTR [ebx+168]
	mulss	xmm2, xmm1
	movss	xmm1, DWORD PTR [edi+168]
	mulss	xmm1, xmm0
	addss	xmm2, xmm1
	movss	DWORD PTR [esi+168], xmm2

; 448  : 
; 449  : 	// colors
; 450  : //.	sky_color.lerp			(A.sky_color,B.sky_color,f).add(Mdf.sky_color).mul(modif_power);
; 451  : 	sky_color.lerp			(A.sky_color,B.sky_color,f);

	movss	xmm2, DWORD PTR [ebx+40]
	movss	xmm5, DWORD PTR [edi+40]
	movaps	xmm1, xmm3
	mulss	xmm2, xmm1
	mulss	xmm5, xmm0
	addss	xmm2, xmm5
	movss	DWORD PTR [esi+40], xmm2
	movss	xmm2, DWORD PTR [ebx+44]
	movss	xmm5, DWORD PTR [edi+44]
	mulss	xmm2, xmm1
	mulss	xmm5, xmm0
	addss	xmm2, xmm5
	movss	DWORD PTR [esi+44], xmm2
	movss	xmm2, DWORD PTR [ebx+48]
	mulss	xmm2, xmm1
	movss	xmm1, DWORD PTR [edi+48]
	mulss	xmm1, xmm0
	addss	xmm2, xmm1
	movss	DWORD PTR [esi+48], xmm2

; 452  : 	if(Mdf.use_flags.test(eSkyColor))

	test	BYTE PTR [eax+76], 16			; 00000010H
	je	SHORT $LN53@lerp

; 453  : 		sky_color.add(Mdf.sky_color).mul(modif_power);

	movss	xmm1, DWORD PTR [eax+52]
	addss	xmm1, DWORD PTR [esi+40]
	movss	DWORD PTR [esi+40], xmm1
	movss	xmm1, DWORD PTR [eax+56]
	addss	xmm1, DWORD PTR [esi+44]
	movss	DWORD PTR [esi+44], xmm1
	movss	xmm1, DWORD PTR [eax+60]
	addss	xmm1, DWORD PTR [esi+48]
	movss	DWORD PTR [esi+48], xmm1
	movaps	xmm1, xmm4
	mulss	xmm1, DWORD PTR [esi+40]
	movss	DWORD PTR [esi+40], xmm1
	movss	xmm1, DWORD PTR [esi+44]
	mulss	xmm1, xmm4
	movss	DWORD PTR [esi+44], xmm1
	movss	xmm1, DWORD PTR [esi+48]
	mulss	xmm1, xmm4
	movss	DWORD PTR [esi+48], xmm1
$LN53@lerp:

; 454  : 
; 455  : //.	ambient.lerp			(A.ambient,B.ambient,f).add(Mdf.ambient).mul(modif_power);
; 456  : 	ambient.lerp			(A.ambient,B.ambient,f);

	movss	xmm2, DWORD PTR [ebx+112]
	movss	xmm5, DWORD PTR [edi+112]
	movaps	xmm1, xmm3
	mulss	xmm2, xmm1
	mulss	xmm5, xmm0
	addss	xmm2, xmm5
	movss	DWORD PTR [esi+112], xmm2
	movss	xmm2, DWORD PTR [ebx+116]
	movss	xmm5, DWORD PTR [edi+116]
	mulss	xmm2, xmm1
	mulss	xmm5, xmm0
	addss	xmm2, xmm5
	movss	DWORD PTR [esi+116], xmm2
	movss	xmm2, DWORD PTR [ebx+120]
	mulss	xmm2, xmm1
	movss	xmm1, DWORD PTR [edi+120]
	mulss	xmm1, xmm0
	addss	xmm2, xmm1
	movss	DWORD PTR [esi+120], xmm2

; 457  : 	if(Mdf.use_flags.test(eAmbientColor))

	test	BYTE PTR [eax+76], 8
	je	SHORT $LN61@lerp

; 458  : 		ambient.add(Mdf.ambient).mul(modif_power);

	movss	xmm1, DWORD PTR [esi+112]
	addss	xmm1, DWORD PTR [eax+40]
	movss	DWORD PTR [esi+112], xmm1
	movss	xmm1, DWORD PTR [eax+44]
	addss	xmm1, DWORD PTR [esi+116]
	movss	DWORD PTR [esi+116], xmm1
	movss	xmm1, DWORD PTR [eax+48]
	addss	xmm1, DWORD PTR [esi+120]
	movss	DWORD PTR [esi+120], xmm1
	movss	xmm1, DWORD PTR [esi+112]
	mulss	xmm1, xmm4
	movss	DWORD PTR [esi+112], xmm1
	movss	xmm1, DWORD PTR [esi+116]
	mulss	xmm1, xmm4
	movss	DWORD PTR [esi+116], xmm1
	movss	xmm1, DWORD PTR [esi+120]
	mulss	xmm1, xmm4
	movss	DWORD PTR [esi+120], xmm1
$LN61@lerp:

; 459  : 
; 460  : 	hemi_color.lerp			(A.hemi_color,B.hemi_color,f);

	movss	xmm2, DWORD PTR [ebx+124]
	movss	xmm5, DWORD PTR [edi+124]
	movaps	xmm1, xmm3
	mulss	xmm2, xmm1
	mulss	xmm5, xmm0
	addss	xmm2, xmm5
	movss	DWORD PTR [esi+124], xmm2
	movss	xmm2, DWORD PTR [ebx+128]
	movss	xmm5, DWORD PTR [edi+128]
	mulss	xmm2, xmm1
	mulss	xmm5, xmm0
	addss	xmm2, xmm5
	movss	DWORD PTR [esi+128], xmm2
	movss	xmm2, DWORD PTR [ebx+132]
	movss	xmm5, DWORD PTR [edi+132]
	mulss	xmm2, xmm1
	mulss	xmm5, xmm0
	addss	xmm2, xmm5
	movss	DWORD PTR [esi+132], xmm2
	movss	xmm2, DWORD PTR [ebx+136]
	mulss	xmm2, xmm1
	movss	xmm1, DWORD PTR [edi+136]
	mulss	xmm1, xmm0
	addss	xmm2, xmm1
	movss	DWORD PTR [esi+136], xmm2

; 461  : 
; 462  : 	if(Mdf.use_flags.test(eHemiColor))

	test	BYTE PTR [eax+76], 32			; 00000020H
	je	SHORT $LN16@lerp

; 463  : 	{
; 464  : 		hemi_color.x			+= Mdf.hemi_color.x;

	movss	xmm1, DWORD PTR [eax+64]
	addss	xmm1, DWORD PTR [esi+124]
	movss	DWORD PTR [esi+124], xmm1

; 465  : 		hemi_color.y			+= Mdf.hemi_color.y; 

	movss	xmm1, DWORD PTR [eax+68]
	addss	xmm1, DWORD PTR [esi+128]
	movss	DWORD PTR [esi+128], xmm1

; 466  : 		hemi_color.z			+= Mdf.hemi_color.z;

	movss	xmm1, DWORD PTR [eax+72]
	addss	xmm1, DWORD PTR [esi+132]
	movss	DWORD PTR [esi+132], xmm1

; 467  : 		hemi_color.x			*= modif_power;

	movss	xmm1, DWORD PTR [esi+124]
	mulss	xmm1, xmm4
	movss	DWORD PTR [esi+124], xmm1

; 468  : 		hemi_color.y			*= modif_power;

	movaps	xmm1, xmm4
	mulss	xmm1, DWORD PTR [esi+128]
	movss	DWORD PTR [esi+128], xmm1

; 469  : 		hemi_color.z			*= modif_power;

	movss	xmm1, DWORD PTR [esi+132]
	mulss	xmm1, xmm4
	movss	DWORD PTR [esi+132], xmm1
$LN16@lerp:

; 470  : 	}
; 471  : 
; 472  : 	sun_color.lerp			(A.sun_color,B.sun_color,f);

	movss	xmm2, DWORD PTR [edi+140]
	movss	xmm4, DWORD PTR [ebx+140]
	mulss	xmm2, xmm0
	movaps	xmm1, xmm3
	mulss	xmm4, xmm1
	addss	xmm2, xmm4
	movss	DWORD PTR [esi+140], xmm2
	movss	xmm2, DWORD PTR [ebx+144]
	movss	xmm4, DWORD PTR [edi+144]
	mulss	xmm2, xmm1
	mulss	xmm4, xmm0
	addss	xmm2, xmm4
	movss	DWORD PTR [esi+144], xmm2
	movss	xmm2, DWORD PTR [ebx+148]
	mulss	xmm2, xmm1
	movss	xmm1, DWORD PTR [edi+148]
	mulss	xmm1, xmm0
	addss	xmm2, xmm1
	movss	DWORD PTR [esi+148], xmm2

; 473  : 
; 474  : 	R_ASSERT				( _valid(A.sun_dir) );

	cmp	BYTE PTR ?ignore_always@?BD@??lerp@CEnvDescriptorMixer@@QAEXPAVCEnvironment@@AAVCEnvDescriptor@@1MAAVCEnvModifier@@M@Z@4_NA, 0
	jne	$LN14@lerp
	fld	DWORD PTR [ebx+152]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp___fpclass
	add	esp, 8
	test	eax, 663				; 00000297H
	jne	SHORT $LN71@lerp
	fld	DWORD PTR [ebx+156]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp___fpclass
	add	esp, 8
	test	eax, 663				; 00000297H
	jne	SHORT $LN71@lerp
	fld	DWORD PTR [ebx+160]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp___fpclass
	add	esp, 8
	test	eax, 663				; 00000297H
	je	SHORT $LN131@lerp
$LN71@lerp:
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BD@??lerp@CEnvDescriptorMixer@@QAEXPAVCEnvironment@@AAVCEnvDescriptor@@1MAAVCEnvModifier@@M@Z@4_NA
	push	OFFSET ??_C@_0BK@JGPMIJHM@CEnvDescriptorMixer?3?3lerp?$AA@
	push	474					; 000001daH
	push	OFFSET ??_C@_0DJ@LMFGIIMF@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BC@CPBJAOIM@_valid?$CIA?4sun_dir?$CJ?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN131@lerp:
	movss	xmm0, DWORD PTR _f$[ebp]
	movss	xmm3, DWORD PTR tv835[esp+64]
$LN14@lerp:

; 475  : 	R_ASSERT				( _valid(B.sun_dir) );

	cmp	BYTE PTR ?ignore_always@?BH@??lerp@CEnvDescriptorMixer@@QAEXPAVCEnvironment@@AAVCEnvDescriptor@@1MAAVCEnvModifier@@M@Z@4_NA, 0
	jne	$LN10@lerp
	fld	DWORD PTR [edi+152]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp___fpclass
	add	esp, 8
	test	eax, 663				; 00000297H
	jne	SHORT $LN84@lerp
	fld	DWORD PTR [edi+156]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp___fpclass
	add	esp, 8
	test	eax, 663				; 00000297H
	jne	SHORT $LN84@lerp
	fld	DWORD PTR [edi+160]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp___fpclass
	add	esp, 8
	test	eax, 663				; 00000297H
	je	SHORT $LN132@lerp
$LN84@lerp:
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BH@??lerp@CEnvDescriptorMixer@@QAEXPAVCEnvironment@@AAVCEnvDescriptor@@1MAAVCEnvModifier@@M@Z@4_NA
	push	OFFSET ??_C@_0BK@JGPMIJHM@CEnvDescriptorMixer?3?3lerp?$AA@
	push	475					; 000001dbH
	push	OFFSET ??_C@_0DJ@LMFGIIMF@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BC@LGPLGIIN@_valid?$CIB?4sun_dir?$CJ?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN132@lerp:
	movss	xmm0, DWORD PTR _f$[ebp]
	movss	xmm3, DWORD PTR tv835[esp+64]
$LN10@lerp:

; 476  : 	sun_dir.lerp			(A.sun_dir,B.sun_dir,f).normalize();

	movss	xmm1, DWORD PTR [edi+152]
	movss	xmm2, DWORD PTR [ebx+152]
	mulss	xmm1, xmm0
	mulss	xmm2, xmm3
	addss	xmm1, xmm2
	movss	DWORD PTR [esi+152], xmm1
	movss	xmm1, DWORD PTR [ebx+156]
	movss	xmm2, DWORD PTR [edi+156]
	mulss	xmm2, xmm0
	mulss	xmm1, xmm3
	addss	xmm1, xmm2
	movss	DWORD PTR [esi+156], xmm1
	movss	xmm1, DWORD PTR [ebx+160]
	movss	xmm2, DWORD PTR [edi+160]
	mulss	xmm2, xmm0
	movss	xmm0, DWORD PTR [esi+156]
	mulss	xmm1, xmm3
	addss	xmm1, xmm2
	movss	xmm2, DWORD PTR [esi+152]
	movaps	xmm3, xmm2
	mulss	xmm3, xmm2
	movss	DWORD PTR tv1445[esp+64], xmm0
	movss	DWORD PTR tv1448[esp+64], xmm2
	movaps	xmm2, xmm0
	mulss	xmm2, xmm0
	movaps	xmm0, xmm1
	mulss	xmm0, xmm1
	addss	xmm3, xmm2
	addss	xmm3, xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	push	ecx
	divss	xmm0, xmm3
	movss	DWORD PTR [esi+160], xmm1
	movss	DWORD PTR [esp], xmm0
	call	_sqrtf
	fst	DWORD PTR _mag$313619[esp+68]
	movss	xmm1, DWORD PTR _mag$313619[esp+68]
	fmul	DWORD PTR [esi+160]
	movss	xmm0, DWORD PTR tv1448[esp+68]
	mulss	xmm0, xmm1
	movss	DWORD PTR [esi+152], xmm0
	fstp	DWORD PTR [esi+160]
	movss	xmm0, DWORD PTR tv1445[esp+68]
	mulss	xmm0, xmm1
	add	esp, 4
	movss	DWORD PTR [esi+156], xmm0

; 477  : 	R_ASSERT				( _valid(sun_dir) );

	cmp	BYTE PTR ?ignore_always@?BL@??lerp@CEnvDescriptorMixer@@QAEXPAVCEnvironment@@AAVCEnvDescriptor@@1MAAVCEnvModifier@@M@Z@4_NA, 0
	jne	SHORT $LN6@lerp
	fld	DWORD PTR [esi+152]
	mov	edi, DWORD PTR __imp___fpclass
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	edi
	add	esp, 8
	test	eax, 663				; 00000297H
	jne	SHORT $LN108@lerp
	fld	DWORD PTR [esi+156]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	edi
	add	esp, 8
	test	eax, 663				; 00000297H
	jne	SHORT $LN108@lerp
	fld	DWORD PTR [esi+160]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	edi
	add	esp, 8
	test	eax, 663				; 00000297H
	je	SHORT $LN6@lerp
$LN108@lerp:
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BL@??lerp@CEnvDescriptorMixer@@QAEXPAVCEnvironment@@AAVCEnvDescriptor@@1MAAVCEnvModifier@@M@Z@4_NA
	push	OFFSET ??_C@_0BK@JGPMIJHM@CEnvDescriptorMixer?3?3lerp?$AA@
	push	477					; 000001ddH
	push	OFFSET ??_C@_0DJ@LMFGIIMF@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BA@MPNGEPPI@_valid?$CIsun_dir?$CJ?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN6@lerp:

; 478  : 
; 479  : 	VERIFY2					(sun_dir.y<0,"Invalid sun direction settings while lerp");}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?lerp@CEnvDescriptorMixer@@QAEXPAVCEnvironment@@AAVCEnvDescriptor@@1MAAVCEnvModifier@@M@Z ENDP ; CEnvDescriptorMixer::lerp
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
;	COMDAT ??$__destroy_mv_srcs@V?$reverse_iterator@PAUref_sound@@@stlp_std@@Uref_sound@@@stlp_std@@YAXV?$reverse_iterator@PAUref_sound@@@0@0PAUref_sound@@@Z
_TEXT	SEGMENT
$T386767 = -1						; size = 1
___first$ = 8						; size = 4
___last$ = 12						; size = 4
??$__destroy_mv_srcs@V?$reverse_iterator@PAUref_sound@@@stlp_std@@Uref_sound@@@stlp_std@@YAXV?$reverse_iterator@PAUref_sound@@@0@0PAUref_sound@@@Z PROC ; stlp_std::__destroy_mv_srcs<stlp_std::reverse_iterator<ref_sound *>,ref_sound>, COMDAT

; 192  : __destroy_mv_srcs(_ForwardIterator __first, _ForwardIterator __last, _Tp *__ptr) {

	push	ecx

; 193  :   typedef typename __move_traits<_Tp>::complete _CompleteMove;
; 194  :   __destroy_range_aux(__first, __last, __ptr, _CompleteMove());

	lea	eax, DWORD PTR $T386767[esp+4]
	push	eax
	push	0
	push	ecx
	lea	edx, DWORD PTR ___last$[esp+12]
	mov	ecx, esp
	push	edx
	mov	BYTE PTR $T386767[esp+20], 0
	call	??0?$reverse_iterator@PAUref_sound@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<ref_sound *>::reverse_iterator<ref_sound *>
	push	ecx
	lea	eax, DWORD PTR ___first$[esp+16]
	mov	ecx, esp
	push	eax
	call	??0?$reverse_iterator@PAUref_sound@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<ref_sound *>::reverse_iterator<ref_sound *>
	call	??$__destroy_range_aux@V?$reverse_iterator@PAUref_sound@@@stlp_std@@Uref_sound@@@stlp_std@@YAXV?$reverse_iterator@PAUref_sound@@@0@0PAUref_sound@@ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<ref_sound *>,ref_sound>

; 195  : }

	add	esp, 20					; 00000014H
	ret	0
??$__destroy_mv_srcs@V?$reverse_iterator@PAUref_sound@@@stlp_std@@Uref_sound@@@stlp_std@@YAXV?$reverse_iterator@PAUref_sound@@@0@0PAUref_sound@@@Z ENDP ; stlp_std::__destroy_mv_srcs<stlp_std::reverse_iterator<ref_sound *>,ref_sound>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.h
_TEXT	ENDS
;	COMDAT ??$_M_lower_bound@PAD@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@ABEPAU_Rb_tree_node_base@12@ABQAD@Z
_TEXT	SEGMENT
___k$ = 8						; size = 4
??$_M_lower_bound@PAD@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@ABEPAU_Rb_tree_node_base@12@ABQAD@Z PROC ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_lower_bound<char *>, COMDAT
; _this$ = ecx

; 562  :   _Base_ptr _M_lower_bound(const _KT& __k) const {

	push	ebp
	push	edi

; 563  :     _Base_ptr __y = __CONST_CAST(_Base_ptr, &this->_M_header._M_data); /* Last node which is not less than __k. */

	mov	ebp, ecx

; 564  :     _Base_ptr __x = _M_root(); /* Current node. */

	call	?_M_root@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IBEPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_root
	mov	edi, eax

; 565  : 
; 566  :     while (__x != 0)

	test	edi, edi
	je	$LN57@M_lower_bo@5
	push	ebx
	mov	ebx, DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	push	esi
	npad	5
$LL4@M_lower_bo@5:

; 567  :       if (!_M_key_compare(_S_key(__x), __k))

	mov	eax, DWORD PTR ___k$[esp+12]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	ecx, DWORD PTR [ecx]
	push	eax
	call	ebx
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN14@M_lower_bo@5
	add	DWORD PTR [esi], 1
$LN14@M_lower_bo@5:
	push	edi
	call	?_S_value@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@PAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_value
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	eax, esi
	jne	SHORT $LN27@M_lower_bo@5
	xor	eax, eax
	jmp	SHORT $LN56@M_lower_bo@5
$LN27@M_lower_bo@5:
	test	esi, esi
	je	SHORT $LN34@M_lower_bo@5
	lea	ecx, DWORD PTR [esi+16]
	jmp	SHORT $LN35@M_lower_bo@5
$LN34@M_lower_bo@5:
	xor	ecx, ecx
$LN35@M_lower_bo@5:
	test	eax, eax
	je	SHORT $LN38@M_lower_bo@5
	add	eax, 16					; 00000010H
	jmp	SHORT $LL39@M_lower_bo@5
$LN38@M_lower_bo@5:
	xor	eax, eax
$LL39@M_lower_bo@5:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN54@M_lower_bo@5
	test	dl, dl
	je	SHORT $LN55@M_lower_bo@5
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN54@M_lower_bo@5
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL39@M_lower_bo@5
$LN55@M_lower_bo@5:
	xor	eax, eax
	jmp	SHORT $LN56@M_lower_bo@5
$LN54@M_lower_bo@5:
	sbb	eax, eax
	sbb	eax, -1
$LN56@M_lower_bo@5:
	test	eax, eax
	setge	al
	test	esi, esi
	je	SHORT $LN44@M_lower_bo@5
	add	DWORD PTR [esi], -1
$LN44@M_lower_bo@5:
	test	al, al

; 568  :         __y = __x, __x = _S_left(__x);

	push	edi
	je	SHORT $LN2@M_lower_bo@5
	mov	ebp, edi
	call	?_S_left@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_left

; 569  :       else

	jmp	SHORT $LN58@M_lower_bo@5
$LN2@M_lower_bo@5:

; 570  :         __x = _S_right(__x);

	call	?_S_right@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_right
$LN58@M_lower_bo@5:
	mov	edi, DWORD PTR [eax]
	add	esp, 4
	test	edi, edi
	jne	$LL4@M_lower_bo@5
	pop	esi
	pop	ebx
$LN57@M_lower_bo@5:
	pop	edi

; 571  : 
; 572  :     return __y;

	mov	eax, ebp
	pop	ebp

; 573  :   }

	ret	4
??$_M_lower_bound@PAD@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@ABEPAU_Rb_tree_node_base@12@ABQAD@Z ENDP ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_lower_bound<char *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$_Destroy_Moved_Range@V?$reverse_iterator@PAUref_sound@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUref_sound@@@0@0@Z
_TEXT	SEGMENT
$T386910 = -9						; size = 1
$T386914 = -8						; size = 4
$T386915 = -4						; size = 4
___first$ = 8						; size = 4
___last$ = 12						; size = 4
??$_Destroy_Moved_Range@V?$reverse_iterator@PAUref_sound@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUref_sound@@@0@0@Z PROC ; stlp_std::_Destroy_Moved_Range<stlp_std::reverse_iterator<ref_sound *> >, COMDAT

; 198  : inline void _Destroy_Moved_Range(_ForwardIterator __first, _ForwardIterator __last) {

	sub	esp, 12					; 0000000cH

; 199  :   __destroy_mv_srcs(__first, __last, _STLP_VALUE_TYPE(__first, _ForwardIterator));

	lea	eax, DWORD PTR ___last$[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T386914[esp+16]
	call	??0?$reverse_iterator@PAUref_sound@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<ref_sound *>::reverse_iterator<ref_sound *>
	lea	ecx, DWORD PTR ___first$[esp+8]
	push	ecx
	lea	ecx, DWORD PTR $T386915[esp+16]
	call	??0?$reverse_iterator@PAUref_sound@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<ref_sound *>::reverse_iterator<ref_sound *>
	lea	edx, DWORD PTR $T386910[esp+12]
	push	edx
	push	0
	push	ecx
	lea	eax, DWORD PTR $T386914[esp+24]
	mov	ecx, esp
	push	eax
	mov	BYTE PTR $T386910[esp+28], 0
	call	??0?$reverse_iterator@PAUref_sound@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<ref_sound *>::reverse_iterator<ref_sound *>
	push	ecx
	lea	edx, DWORD PTR $T386915[esp+28]
	mov	ecx, esp
	push	edx
	call	??0?$reverse_iterator@PAUref_sound@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<ref_sound *>::reverse_iterator<ref_sound *>
	call	??$__destroy_range_aux@V?$reverse_iterator@PAUref_sound@@@stlp_std@@Uref_sound@@@stlp_std@@YAXV?$reverse_iterator@PAUref_sound@@@0@0PAUref_sound@@ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<ref_sound *>,ref_sound>

; 200  : }

	add	esp, 28					; 0000001cH
	ret	0
??$_Destroy_Moved_Range@V?$reverse_iterator@PAUref_sound@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUref_sound@@@0@0@Z ENDP ; stlp_std::_Destroy_Moved_Range<stlp_std::reverse_iterator<ref_sound *> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.h
_TEXT	ENDS
;	COMDAT ??$lower_bound@PAD@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@12@ABQAD@Z
_TEXT	SEGMENT
??$lower_bound@PAD@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@12@ABQAD@Z PROC ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::lower_bound<char *>, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; ___x$ = eax

; 596  :   iterator lower_bound(const _KT& __x) { return iterator(_M_lower_bound(__x)); }

	push	eax
	call	??$_M_lower_bound@PAD@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@ABEPAU_Rb_tree_node_base@12@ABQAD@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_lower_bound<char *>
	mov	DWORD PTR [esi], eax
	mov	eax, esi
	ret	0
??$lower_bound@PAD@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@12@ABQAD@Z ENDP ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::lower_bound<char *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?_M_clear_after_move@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXXZ
_TEXT	SEGMENT
$T386963 = -17						; size = 1
$T386966 = -16						; size = 4
$T386967 = -12						; size = 4
$T386955 = -8						; size = 4
$T386956 = -4						; size = 4
?_M_clear_after_move@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXXZ PROC ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_clear_after_move, COMDAT
; _this$ = eax

; 620  :   void _M_clear_after_move() {

	sub	esp, 20					; 00000014H
	push	esi
	mov	esi, eax

; 621  :     _STLP_STD::_Destroy_Moved_Range(rbegin(), rend());

	lea	eax, DWORD PTR $T386966[esp+24]
	push	eax
	mov	ecx, esi
	call	?rend@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUref_sound@@@3@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::rend
	lea	ecx, DWORD PTR $T386967[esp+24]
	push	ecx
	mov	ecx, esi
	call	?rbegin@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUref_sound@@@3@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::rbegin
	lea	edx, DWORD PTR $T386966[esp+24]
	push	edx
	lea	ecx, DWORD PTR $T386955[esp+28]
	call	??0?$reverse_iterator@PAUref_sound@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<ref_sound *>::reverse_iterator<ref_sound *>
	lea	eax, DWORD PTR $T386967[esp+24]
	push	eax
	lea	ecx, DWORD PTR $T386956[esp+28]
	call	??0?$reverse_iterator@PAUref_sound@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<ref_sound *>::reverse_iterator<ref_sound *>
	lea	ecx, DWORD PTR $T386963[esp+24]
	push	ecx
	push	0
	push	ecx
	lea	edx, DWORD PTR $T386955[esp+36]
	mov	ecx, esp
	push	edx
	mov	BYTE PTR $T386963[esp+40], 0
	call	??0?$reverse_iterator@PAUref_sound@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<ref_sound *>::reverse_iterator<ref_sound *>
	push	ecx
	lea	eax, DWORD PTR $T386956[esp+40]
	mov	ecx, esp
	push	eax
	call	??0?$reverse_iterator@PAUref_sound@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<ref_sound *>::reverse_iterator<ref_sound *>
	call	??$__destroy_range_aux@V?$reverse_iterator@PAUref_sound@@@stlp_std@@Uref_sound@@@stlp_std@@YAXV?$reverse_iterator@PAUref_sound@@@0@0PAUref_sound@@ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<ref_sound *>,ref_sound>

; 622  :     this->_M_end_of_storage.deallocate(this->_M_start, this->_M_end_of_storage._M_data - this->_M_start);

	mov	edx, DWORD PTR [esi+8]
	lea	ecx, DWORD PTR [esi+8]
	mov	esi, DWORD PTR [esi]
	sub	edx, esi
	add	esp, 16					; 00000010H
	sar	edx, 2
	push	edx
	push	esi
	call	?deallocate@?$xalloc@Uref_sound@@@@QBEXPAUref_sound@@I@Z ; xalloc<ref_sound>::deallocate

; 623  :   }

	pop	esi
	add	esp, 20					; 00000014H
	ret	0
?_M_clear_after_move@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXXZ ENDP ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_clear_after_move
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_map.h
_TEXT	ENDS
;	COMDAT ??$lower_bound@PAD@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@1@ABQAD@Z
_TEXT	SEGMENT
??$lower_bound@PAD@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@1@ABQAD@Z PROC ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::lower_bound<char *>, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; ___x$ = eax

; 211  :   iterator lower_bound(const _KT& __x) { return _M_t.lower_bound(__x); }

	push	eax
	call	??$_M_lower_bound@PAD@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@ABEPAU_Rb_tree_node_base@12@ABQAD@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_lower_bound<char *>
	mov	DWORD PTR [esi], eax
	mov	eax, esi
	ret	0
??$lower_bound@PAD@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@1@ABQAD@Z ENDP ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::lower_bound<char *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.c
_TEXT	ENDS
;	COMDAT ?_M_fill_insert_aux@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@IABU4@ABU__false_type@3@@Z
_TEXT	SEGMENT
___x_copy$137581 = -4					; size = 4
tv308 = 8						; size = 4
___elems_after$ = 8					; size = 4
___pos$ = 8						; size = 4
___n$ = 12						; size = 4
$T387045 = 16						; size = 1
$T386992 = 16						; size = 1
___x$ = 16						; size = 4
___formal$ = 20						; size = 4
?_M_fill_insert_aux@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@IABU4@ABU__false_type@3@@Z PROC ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_fill_insert_aux, COMDAT
; _this$ = ecx

; 143  :                                               const _Tp& __x, const __false_type& /*_Movable*/) {

	push	ecx
	push	ebx

; 144  :   //Here self referencing needs to be checked even for non movable types.
; 145  :   if (_M_is_inside(__x)) {

	mov	ebx, DWORD PTR ___x$[esp+4]
	push	ebp
	mov	ebp, ecx
	cmp	ebx, DWORD PTR [ebp]
	jb	SHORT $LN3@M_fill_ins@16
	cmp	ebx, DWORD PTR [ebp+4]
	jae	SHORT $LN3@M_fill_ins@16

; 146  :     _Tp __x_copy = __x;

	push	ebx
	lea	ecx, DWORD PTR ___x_copy$137581[esp+16]
	call	??0ref_sound@@QAE@ABU0@@Z

; 147  :     _M_fill_insert_aux(__pos, __n, __x_copy, __false_type());

	mov	edx, DWORD PTR ___n$[esp+8]
	lea	eax, DWORD PTR $T386992[esp+8]
	push	eax
	mov	eax, DWORD PTR ___pos$[esp+12]
	lea	ecx, DWORD PTR ___x_copy$137581[esp+16]
	push	ecx
	push	edx
	xor	ebx, ebx
	push	eax
	mov	ecx, ebp
	mov	BYTE PTR $T386992[esp+24], bl
	call	?_M_fill_insert_aux@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@IABU4@ABU__false_type@3@@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_fill_insert_aux

; 148  :     return;

	mov	eax, DWORD PTR ___x_copy$137581[esp+12]
	cmp	eax, ebx
	je	$LN55@M_fill_ins@16
	add	DWORD PTR [eax+4], -1
	mov	ecx, DWORD PTR ___x_copy$137581[esp+12]
	cmp	DWORD PTR [ecx+4], ebx
	jne	$LN55@M_fill_ins@16
	lea	edx, DWORD PTR ___x_copy$137581[esp+12]
	push	edx
	lea	ecx, DWORD PTR $T387045[esp+12]
	mov	BYTE PTR $T387045[esp+12], bl
	call	??R?$xr_special_free@$00Vref_sound_data@@@@QAEXAAPAVref_sound_data@@@Z ; xr_special_free<1,ref_sound_data>::operator()
	pop	ebp
	pop	ebx

; 162  :   }
; 163  : }

	pop	ecx
	ret	16					; 00000010H
$LN3@M_fill_ins@16:

; 149  :   }
; 150  :   const size_type __elems_after = this->_M_finish - __pos;
; 151  :   pointer __old_finish = this->_M_finish;
; 152  :   if (__elems_after > __n) {

	mov	eax, DWORD PTR ___n$[esp+8]
	push	esi
	mov	esi, DWORD PTR [ebp+4]
	push	edi
	mov	edi, DWORD PTR ___pos$[esp+16]
	mov	ecx, esi
	sub	ecx, edi
	sar	ecx, 2
	cmp	ecx, eax
	mov	DWORD PTR ___elems_after$[esp+16], ecx
	jbe	SHORT $LN2@M_fill_ins@16

; 153  :     _STLP_PRIV __ucopy_ptrs(this->_M_finish - __n, this->_M_finish, this->_M_finish, _TrivialUCopy());

	lea	ebx, DWORD PTR [eax*4]
	mov	edx, esi
	sub	edx, ebx
	mov	eax, esi
	mov	ecx, esi
	mov	DWORD PTR tv308[esp+16], edx
	call	??$__ucopy_ptrs@PAUref_sound@@PAU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABU__false_type@1@@Z ; stlp_std::priv::__ucopy_ptrs<ref_sound *,ref_sound *>

; 154  :     this->_M_finish += __n;
; 155  :     _STLP_PRIV __copy_backward_ptrs(__pos, __old_finish - __n, __old_finish, _TrivialCopy());

	mov	ecx, DWORD PTR tv308[esp+16]
	add	DWORD PTR [ebp+4], ebx
	push	edi
	mov	eax, esi
	call	??$__copy_backward_ptrs@PAUref_sound@@PAU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABU__false_type@1@@Z ; stlp_std::priv::__copy_backward_ptrs<ref_sound *,ref_sound *>

; 156  :     _STLP_STD::fill(__pos, __pos + __n, __x);

	add	ebx, edi
	add	esp, 4
	cmp	edi, ebx
	je	SHORT $LN85@M_fill_ins@16
	npad	1
$LL32@M_fill_ins@16:
	mov	eax, DWORD PTR ___x$[esp+16]
	push	eax
	mov	ecx, edi
	call	??4ref_sound@@QAEAAU0@ABU0@@Z
	add	edi, 4
	cmp	edi, ebx
	jne	SHORT $LL32@M_fill_ins@16
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 162  :   }
; 163  : }

	pop	ecx
	ret	16					; 00000010H
$LN2@M_fill_ins@16:

; 157  :   } else {
; 158  :     this->_M_finish = _STLP_PRIV __uninitialized_fill_n(this->_M_finish, __n - __elems_after, __x);

	sub	eax, ecx
	mov	ecx, esi
	call	??$__uninitialized_fill_n@PAUref_sound@@IU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@IABU2@@Z ; stlp_std::priv::__uninitialized_fill_n<ref_sound *,unsigned int,ref_sound>

; 159  :     _STLP_PRIV __ucopy_ptrs(__pos, __old_finish, this->_M_finish, _TrivialUCopy());

	mov	ecx, esi
	mov	edx, edi
	mov	DWORD PTR [ebp+4], eax
	call	??$__ucopy_ptrs@PAUref_sound@@PAU1@@priv@stlp_std@@YAPAUref_sound@@PAU2@00ABU__false_type@1@@Z ; stlp_std::priv::__ucopy_ptrs<ref_sound *,ref_sound *>

; 160  :     this->_M_finish += __elems_after;

	mov	ecx, DWORD PTR ___elems_after$[esp+16]
	lea	edx, DWORD PTR [ecx*4]
	add	DWORD PTR [ebp+4], edx

; 161  :     _STLP_STD::fill(__pos, __old_finish, __x);

	cmp	edi, esi
	je	SHORT $LN85@M_fill_ins@16
$LL57@M_fill_ins@16:
	mov	eax, ebx
	push	eax
	mov	ecx, edi
	call	??4ref_sound@@QAEAAU0@ABU0@@Z
	add	edi, 4
	cmp	edi, esi
	jne	SHORT $LL57@M_fill_ins@16
$LN85@M_fill_ins@16:
	pop	edi
	pop	esi
$LN55@M_fill_ins@16:
	pop	ebp
	pop	ebx

; 162  :   }
; 163  : }

	pop	ecx
	ret	16					; 00000010H
?_M_fill_insert_aux@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@IABU4@ABU__false_type@3@@Z ENDP ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_fill_insert_aux
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_insert_overflow_aux@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@ABU4@ABU__false_type@3@I_N@Z
_TEXT	SEGMENT
___len$ = -12						; size = 4
___new_start$ = -8					; size = 4
tv259 = -4						; size = 4
___old_size$ = 8					; size = 4
_this$ = 8						; size = 4
___pos$ = 12						; size = 4
___x$ = 16						; size = 4
___fill_len$ = 20					; size = 4
?_M_insert_overflow_aux@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@ABU4@ABU__false_type@3@I_N@Z PROC ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_insert_overflow_aux, COMDAT

; 84   :                                                  size_type __fill_len, bool __atend ) {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+16]
	push	esi
	push	edi

; 85   :   const size_type __old_size = size();

	mov	ecx, ebp
	call	?size@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QBEIXZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::size
	mov	DWORD PTR ___old_size$[esp+24], eax

; 86   :   size_type __len = __old_size + (max)(__old_size, __fill_len);

	lea	eax, DWORD PTR ___fill_len$[esp+24]
	push	eax
	lea	ecx, DWORD PTR ___old_size$[esp+28]
	push	ecx
	call	??$max@I@stlp_std@@YAABIABI0@Z		; stlp_std::max<unsigned int>
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR ___old_size$[esp+32]
	add	esp, 8

; 87   : 
; 88   :   pointer __new_start = this->_M_end_of_storage.allocate(__len, __len);

	lea	edx, DWORD PTR ___len$[esp+28]
	push	edx
	lea	ecx, DWORD PTR [ebp+8]
	push	eax
	mov	DWORD PTR ___len$[esp+36], eax
	mov	DWORD PTR tv259[esp+36], ecx
	call	?allocate@?$_STLP_alloc_proxy@PAUref_sound@@U1@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEPAUref_sound@@IAAI@Z ; stlp_std::priv::_STLP_alloc_proxy<ref_sound *,ref_sound,xalloc<ref_sound> >::allocate

; 89   :   pointer __new_finish = __new_start;
; 90   :   _STLP_TRY {
; 91   :     __new_finish = _STLP_PRIV __uninitialized_move(this->_M_start, __pos, __new_start, _TrivialUCopy(), _Movable());

	mov	ebx, DWORD PTR [ebp]
	mov	esi, DWORD PTR ___pos$[esp+24]
	sub	esi, ebx
	sar	esi, 2
	test	esi, esi
	mov	DWORD PTR ___new_start$[esp+28], eax
	mov	edi, eax
	jle	SHORT $LN26@M_insert_o@16
	npad	6
$LL28@M_insert_o@16:
	push	ebx
	push	edi
	call	??$_Param_Construct@Uref_sound@@U1@@stlp_std@@YAXPAUref_sound@@ABU1@@Z ; stlp_std::_Param_Construct<ref_sound,ref_sound>
	sub	esi, 1
	add	esp, 8
	add	ebx, 4
	add	edi, 4
	test	esi, esi
	jg	SHORT $LL28@M_insert_o@16
$LN26@M_insert_o@16:

; 92   :     // handle insertion
; 93   :     if (__fill_len == 1) {

	mov	eax, DWORD PTR ___fill_len$[esp+24]
	cmp	eax, 1
	jne	SHORT $LN3@M_insert_o@16

; 94   :       _Copy_Construct(__new_finish, __x);

	test	edi, edi
	je	SHORT $LN46@M_insert_o@16
	mov	eax, DWORD PTR ___x$[esp+24]
	push	eax
	mov	ecx, edi
	call	??0ref_sound@@QAE@ABU0@@Z
$LN46@M_insert_o@16:

; 95   :       ++__new_finish;

	add	edi, 4

; 96   :     } else

	jmp	SHORT $LN107@M_insert_o@16
$LN3@M_insert_o@16:

; 97   :       __new_finish = _STLP_PRIV __uninitialized_fill_n(__new_finish, __fill_len, __x);

	lea	ebx, DWORD PTR [edi+eax*4]
	mov	esi, ebx
	sub	esi, edi
	sar	esi, 2
	test	esi, esi
	jle	SHORT $LN59@M_insert_o@16
$LL61@M_insert_o@16:
	mov	ecx, DWORD PTR ___x$[esp+24]
	push	ecx
	push	edi
	call	??$_Param_Construct@Uref_sound@@U1@@stlp_std@@YAXPAUref_sound@@ABU1@@Z ; stlp_std::_Param_Construct<ref_sound,ref_sound>
	sub	esi, 1
	add	esp, 8
	add	edi, 4
	test	esi, esi
	jg	SHORT $LL61@M_insert_o@16
$LN59@M_insert_o@16:
	mov	edi, ebx
$LN107@M_insert_o@16:

; 98   :     if (!__atend)
; 99   :       __new_finish = _STLP_PRIV __uninitialized_move(__pos, this->_M_finish, __new_finish, _TrivialUCopy(), _Movable()); // copy remainder

	mov	esi, DWORD PTR [ebp+4]
	mov	ebx, DWORD PTR ___pos$[esp+24]
	sub	esi, ebx
	sar	esi, 2
	test	esi, esi
	jle	SHORT $LN81@M_insert_o@16
	sub	ebx, edi
	npad	1
$LL83@M_insert_o@16:
	lea	edx, DWORD PTR [ebx+edi]
	push	edx
	push	edi
	call	??$_Param_Construct@Uref_sound@@U1@@stlp_std@@YAXPAUref_sound@@ABU1@@Z ; stlp_std::_Param_Construct<ref_sound,ref_sound>
	sub	esi, 1
	add	esp, 8
	add	edi, 4
	test	esi, esi
	jg	SHORT $LL83@M_insert_o@16
$LN81@M_insert_o@16:

; 100  :   }
; 101  :   _STLP_UNWIND((_STLP_STD::_Destroy_Range(__new_start,__new_finish),
; 102  :                this->_M_end_of_storage.deallocate(__new_start,__len)))
; 103  :   _M_clear_after_move();

	mov	eax, ebp
	call	?_M_clear_after_move@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXXZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_clear_after_move

; 104  :   _M_set(__new_start, __new_finish, __new_start + __len);

	mov	eax, DWORD PTR ___new_start$[esp+28]
	mov	ecx, DWORD PTR ___len$[esp+28]
	mov	DWORD PTR [ebp+4], edi
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], eax
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR tv259[esp+20]
	pop	ebp
	mov	DWORD PTR [eax], edx
	pop	ebx

; 105  : }

	add	esp, 12					; 0000000cH
	ret	16					; 00000010H
?_M_insert_overflow_aux@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@ABU4@ABU__false_type@3@I_N@Z ENDP ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_insert_overflow_aux
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCEffect_Rain@@QAEPAXI@Z
_TEXT	SEGMENT
??_GCEffect_Rain@@QAEPAXI@Z PROC			; CEffect_Rain::`scalar deleting destructor', COMDAT
; _this$ = esi
	mov	ecx, esi
	call	??1CEffect_Rain@@QAE@XZ			; CEffect_Rain::~CEffect_Rain
	mov	eax, esi
	ret	0
??_GCEffect_Rain@@QAEPAXI@Z ENDP			; CEffect_Rain::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCEnvDescriptor@@QAEPAXI@Z
_TEXT	SEGMENT
??_GCEnvDescriptor@@QAEPAXI@Z PROC			; CEnvDescriptor::`scalar deleting destructor', COMDAT
; _this$ = esi
	mov	ecx, esi
	call	??1CEnvDescriptor@@QAE@XZ
	mov	eax, esi
	ret	0
??_GCEnvDescriptor@@QAEPAXI@Z ENDP			; CEnvDescriptor::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
_TEXT	ENDS
;	COMDAT ??R?$xr_special_free@$0A@VCEffect_Rain@@@@QAEXAAPAVCEffect_Rain@@@Z
_TEXT	SEGMENT
??R?$xr_special_free@$0A@VCEffect_Rain@@@@QAEXAAPAVCEffect_Rain@@@Z PROC ; xr_special_free<0,CEffect_Rain>::operator(), COMDAT
; _ptr$ = esi

; 143  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi]
	call	??1CEffect_Rain@@QAE@XZ			; CEffect_Rain::~CEffect_Rain

; 144  : 		Memory.mem_free	(ptr);

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 145  : 	}

	ret	0
??R?$xr_special_free@$0A@VCEffect_Rain@@@@QAEXAAPAVCEffect_Rain@@@Z ENDP ; xr_special_free<0,CEffect_Rain>::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??R?$xr_special_free@$0A@VCEnvDescriptor@@@@QAEXAAPAVCEnvDescriptor@@@Z
_TEXT	SEGMENT
??R?$xr_special_free@$0A@VCEnvDescriptor@@@@QAEXAAPAVCEnvDescriptor@@@Z PROC ; xr_special_free<0,CEnvDescriptor>::operator(), COMDAT
; _ptr$ = esi

; 143  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi]
	call	??1CEnvDescriptor@@QAE@XZ

; 144  : 		Memory.mem_free	(ptr);

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 145  : 	}

	ret	0
??R?$xr_special_free@$0A@VCEnvDescriptor@@@@QAEXAAPAVCEnvDescriptor@@@Z ENDP ; xr_special_free<0,CEnvDescriptor>::operator()
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@QAE@XZ PROC ; xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >::xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >, COMDAT
; _this$ = eax

; 123  : 			xr_vector			()									: inherited	()					{}

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@QAE@XZ ENDP ; xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >::xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?_M_insert_overflow@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@ABU4@ABU__false_type@3@I_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
?_M_insert_overflow@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@ABU4@ABU__false_type@3@I_N@Z PROC ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_insert_overflow, COMDAT
; ___pos$ = edx
; ___x$ = ecx
; ___fill_len$ = eax

; 161  :   { _M_insert_overflow_aux(__pos, __x, _Movable(), __fill_len, __atend); }

	push	eax
	mov	eax, DWORD PTR _this$[esp]
	push	ecx
	push	edx
	push	eax
	call	?_M_insert_overflow_aux@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@ABU4@ABU__false_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_insert_overflow_aux
	ret	4
?_M_insert_overflow@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@ABU4@ABU__false_type@3@I_N@Z ENDP ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_insert_overflow
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0SEffect@CEnvAmbient@@QAE@XZ
_TEXT	SEGMENT
??0SEffect@CEnvAmbient@@QAE@XZ PROC			; CEnvAmbient::SEffect::SEffect, COMDAT
; _this$ = eax
	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0SEffect@CEnvAmbient@@QAE@XZ ENDP			; CEnvAmbient::SEffect::SEffect
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
_TEXT	ENDS
;	COMDAT ??$xr_delete@VCEffect_Rain@@@@YAXAAPAVCEffect_Rain@@@Z
_TEXT	SEGMENT
??$xr_delete@VCEffect_Rain@@@@YAXAAPAVCEffect_Rain@@@Z PROC ; xr_delete<CEffect_Rain>, COMDAT
; _ptr$ = esi

; 151  : 	if (ptr) 

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN1@xr_delete@33

; 152  : 	{
; 153  : 		xr_special_free<is_polymorphic<T>::result,T>()(ptr);

	call	??1CEffect_Rain@@QAE@XZ			; CEffect_Rain::~CEffect_Rain
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 154  : 		ptr = NULL;

	mov	DWORD PTR [esi], 0
$LN1@xr_delete@33:

; 155  : 	}
; 156  : }

	ret	0
??$xr_delete@VCEffect_Rain@@@@YAXAAPAVCEffect_Rain@@@Z ENDP ; xr_delete<CEffect_Rain>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_delete@VCEnvDescriptor@@@@YAXAAPAVCEnvDescriptor@@@Z
_TEXT	SEGMENT
??$xr_delete@VCEnvDescriptor@@@@YAXAAPAVCEnvDescriptor@@@Z PROC ; xr_delete<CEnvDescriptor>, COMDAT
; _ptr$ = esi

; 151  : 	if (ptr) 

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN1@xr_delete@34

; 152  : 	{
; 153  : 		xr_special_free<is_polymorphic<T>::result,T>()(ptr);

	call	??1CEnvDescriptor@@QAE@XZ
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 154  : 		ptr = NULL;

	mov	DWORD PTR [esi], 0
$LN1@xr_delete@34:

; 155  : 	}
; 156  : }

	ret	0
??$xr_delete@VCEnvDescriptor@@@@YAXAAPAVCEnvDescriptor@@@Z ENDP ; xr_delete<CEnvDescriptor>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_new@VCEffect_Thunderbolt@@@@YAPAVCEffect_Thunderbolt@@XZ
_TEXT	SEGMENT
??$xr_new@VCEffect_Thunderbolt@@@@YAPAVCEffect_Thunderbolt@@XZ PROC ; xr_new<CEffect_Thunderbolt>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	edi
	push	136					; 00000088H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
	xor	edi, edi
	cmp	esi, edi
	je	SHORT $LN3@xr_new@18
	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	DWORD PTR [esi], edi
	mov	DWORD PTR [esi+4], edi
	mov	DWORD PTR [esi+8], edi
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+104]
	call	eax
	xorps	xmm0, xmm0
	mov	DWORD PTR [esi+92], eax
	mov	DWORD PTR [esi+12], edi
	mov	DWORD PTR [esi+96], edi
	mov	DWORD PTR [esi+132], edi
	pop	edi
	movss	DWORD PTR [esi+120], xmm0
	movss	DWORD PTR [esi+128], xmm0
	mov	eax, esi
	pop	esi

; 70   : }

	ret	0
$LN3@xr_new@18:
	pop	edi

; 69   : 	return new (ptr) T();

	xor	eax, eax
	pop	esi

; 70   : }

	ret	0
??$xr_new@VCEffect_Thunderbolt@@@@YAPAVCEffect_Thunderbolt@@XZ ENDP ; xr_new<CEffect_Thunderbolt>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_new@VCLensFlare@@@@YAPAVCLensFlare@@XZ
_TEXT	SEGMENT
??$xr_new@VCLensFlare@@@@YAPAVCLensFlare@@XZ PROC	; xr_new<CLensFlare>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	500					; 000001f4H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	test	eax, eax
	je	SHORT $LN3@xr_new@19
	mov	ecx, eax
	jmp	??0CLensFlare@@QAE@XZ			; CLensFlare::CLensFlare
$LN3@xr_new@19:
	xor	eax, eax

; 70   : }

	ret	0
??$xr_new@VCLensFlare@@@@YAPAVCLensFlare@@XZ ENDP	; xr_new<CLensFlare>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_new@VCEffect_Rain@@@@YAPAVCEffect_Rain@@XZ
_TEXT	SEGMENT
??$xr_new@VCEffect_Rain@@@@YAPAVCEffect_Rain@@XZ PROC	; xr_new<CEffect_Rain>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	44					; 0000002cH
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	test	eax, eax
	je	SHORT $LN3@xr_new@20
	mov	ecx, eax
	jmp	??0CEffect_Rain@@QAE@XZ			; CEffect_Rain::CEffect_Rain
$LN3@xr_new@20:
	xor	eax, eax

; 70   : }

	ret	0
??$xr_new@VCEffect_Rain@@@@YAPAVCEffect_Rain@@XZ ENDP	; xr_new<CEffect_Rain>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_new@USEffect@CEnvAmbient@@@@YAPAUSEffect@CEnvAmbient@@XZ
_TEXT	SEGMENT
??$xr_new@USEffect@CEnvAmbient@@@@YAPAUSEffect@CEnvAmbient@@XZ PROC ; xr_new<CEnvAmbient::SEffect>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	52					; 00000034H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	xor	ecx, ecx
	cmp	eax, ecx
	je	SHORT $LN3@xr_new@21
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx

; 70   : }

	ret	0
$LN3@xr_new@21:

; 69   : 	return new (ptr) T();

	xor	eax, eax

; 70   : }

	ret	0
??$xr_new@USEffect@CEnvAmbient@@@@YAPAUSEffect@CEnvAmbient@@XZ ENDP ; xr_new<CEnvAmbient::SEffect>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.c
_TEXT	ENDS
;	COMDAT ?_M_insert_overflow@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@AAEXPAVCEnvModifier@@ABV4@ABU__true_type@3@I_N@Z
_TEXT	SEGMENT
___fill_len$ = -16					; size = 4
___len$ = -12						; size = 4
___new_start$ = -8					; size = 4
tv163 = -4						; size = 4
___old_size$ = 8					; size = 4
_this$ = 8						; size = 4
___x$ = 12						; size = 4
?_M_insert_overflow@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@AAEXPAVCEnvModifier@@ABV4@ABU__true_type@3@I_N@Z PROC ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::_M_insert_overflow, COMDAT
; ___pos$ = eax

; 109  :                                              size_type __fill_len, bool __atend ) {

	sub	esp, 16					; 00000010H
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+20]
	push	esi
	push	edi

; 110  :   const size_type __old_size = size();

	mov	ecx, ebp
	mov	esi, eax
	mov	DWORD PTR ___fill_len$[esp+32], 1
	call	?size@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QBEIXZ ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::size
	mov	DWORD PTR ___old_size$[esp+28], eax

; 111  :   size_type __len = __old_size + (max)(__old_size, __fill_len);

	lea	eax, DWORD PTR ___fill_len$[esp+32]
	push	eax
	lea	ecx, DWORD PTR ___old_size$[esp+32]
	push	ecx
	call	??$max@I@stlp_std@@YAABIABI0@Z		; stlp_std::max<unsigned int>
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR ___old_size$[esp+36]
	add	esp, 8

; 112  : 
; 113  :   pointer __new_start = this->_M_end_of_storage.allocate(__len, __len);

	lea	edx, DWORD PTR ___len$[esp+32]
	push	edx
	lea	ecx, DWORD PTR [ebp+8]
	push	eax
	mov	DWORD PTR ___len$[esp+40], eax
	mov	DWORD PTR tv163[esp+40], ecx
	call	?allocate@?$_STLP_alloc_proxy@PAVCEnvModifier@@V1@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEPAVCEnvModifier@@IAAI@Z ; stlp_std::priv::_STLP_alloc_proxy<CEnvModifier *,CEnvModifier,xalloc<CEnvModifier> >::allocate
	mov	edi, eax

; 114  :   pointer __new_finish = __STATIC_CAST(pointer, _STLP_PRIV __copy_trivial(this->_M_start, __pos, __new_start));

	mov	eax, DWORD PTR [ebp]
	sub	esi, eax
	mov	DWORD PTR ___new_start$[esp+32], edi
	je	SHORT $LN22@M_insert_o@17
	push	esi
	push	eax
	push	edi
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
	jmp	SHORT $LN23@M_insert_o@17
$LN22@M_insert_o@17:
	mov	eax, edi
$LN23@M_insert_o@17:

; 115  :   // handle insertion
; 116  :   __new_finish = _STLP_PRIV __fill_n(__new_finish, __fill_len, __x);

	mov	edx, DWORD PTR ___fill_len$[esp+32]
	test	edx, edx
	mov	ebx, eax
	jbe	SHORT $LN24@M_insert_o@17
$LL26@M_insert_o@17:
	mov	esi, DWORD PTR ___x$[esp+28]
	mov	edi, ebx
	sub	edx, 1
	mov	ecx, 20					; 00000014H
	add	ebx, 80					; 00000050H
	test	edx, edx
	rep movsd
	ja	SHORT $LL26@M_insert_o@17
	mov	edi, DWORD PTR ___new_start$[esp+32]
$LN24@M_insert_o@17:

; 117  :   if (!__atend)
; 118  :     __new_finish = __STATIC_CAST(pointer, _STLP_PRIV __copy_trivial(__pos, this->_M_finish, __new_finish)); // copy remainder
; 119  :   _M_clear();

	mov	ecx, ebp
	call	?_M_clear@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@AAEXXZ ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::_M_clear

; 120  :   _M_set(__new_start, __new_finish, __new_start + __len);

	mov	eax, DWORD PTR ___len$[esp+32]
	mov	ecx, DWORD PTR tv163[esp+32]
	lea	eax, DWORD PTR [eax+eax*4]
	shl	eax, 4
	mov	DWORD PTR [ebp], edi
	add	eax, edi
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp+4], ebx
	pop	ebp
	mov	DWORD PTR [ecx], eax
	pop	ebx

; 121  : }

	add	esp, 16					; 00000010H
	ret	8
?_M_insert_overflow@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@AAEXPAVCEnvModifier@@ABV4@ABU__true_type@3@I_N@Z ENDP ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::_M_insert_overflow
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_fill_insert@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@IABU4@@Z
_TEXT	SEGMENT
$T387765 = -1						; size = 1
?_M_fill_insert@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@IABU4@@Z PROC ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_fill_insert, COMDAT
; _this$ = ecx
; ___pos$ = esi
; ___n$ = eax
; ___x$ = edx

; 167  :                                          size_type __n, const _Tp& __x) {

	push	ecx

; 168  :   if (__n != 0) {

	test	eax, eax
	je	SHORT $LN6@M_fill_ins@17
	push	edi

; 169  :     if (size_type(this->_M_end_of_storage._M_data - this->_M_finish) >= __n) {

	mov	edi, DWORD PTR [ecx+8]
	sub	edi, DWORD PTR [ecx+4]
	sar	edi, 2
	cmp	edi, eax
	jb	SHORT $LN2@M_fill_ins@17

; 170  :       _M_fill_insert_aux(__pos, __n, __x, _Movable());

	lea	edi, DWORD PTR $T387765[esp+8]
	push	edi
	push	edx
	push	eax
	push	esi
	call	?_M_fill_insert_aux@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@IABU4@ABU__false_type@3@@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_fill_insert_aux
	pop	edi

; 173  :   }
; 174  : }

	pop	ecx
	ret	0
$LN2@M_fill_ins@17:

; 171  :     } else
; 172  :       _M_insert_overflow(__pos, __x, _TrivialCopy(), __n);

	push	eax
	push	edx
	push	esi
	push	ecx
	call	?_M_insert_overflow_aux@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@ABU4@ABU__false_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_insert_overflow_aux
	pop	edi
$LN6@M_fill_ins@17:

; 173  :   }
; 174  : }

	pop	ecx
	ret	0
?_M_fill_insert@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@IABU4@@Z ENDP ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_fill_insert
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?reserve@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXI@Z
_TEXT	SEGMENT
___result$387925 = -8					; size = 4
___old_size$133198 = -4					; size = 4
?reserve@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXI@Z PROC ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::reserve, COMDAT
; _this$ = ebx
; ___n$ = ecx

; 65   :   if (capacity() < __n) {

	mov	eax, DWORD PTR [ebx+8]
	sub	esp, 8
	push	ebp
	push	esi
	mov	esi, DWORD PTR [ebx]
	sub	eax, esi
	sar	eax, 2
	cmp	eax, ecx
	push	edi
	jae	$LN95@reserve@3

; 66   :     if (max_size() < __n) {

	cmp	ecx, 1073741823				; 3fffffffH
	jbe	SHORT $LN3@reserve@3

; 67   :       this->_M_throw_length_error();

	push	OFFSET ??_C@_06NBFPPGEG@vector?$AA@
	call	DWORD PTR __imp__puts
	add	esp, 4
	jmp	DWORD PTR __imp__abort
$LN3@reserve@3:

; 68   :     }
; 69   : 
; 70   :     const size_type __old_size = size();

	mov	edi, DWORD PTR [ebx+4]
	mov	eax, edi
	sub	eax, esi

; 71   :     pointer __tmp;
; 72   :     if (this->_M_start) {
; 73   :       __tmp = _M_allocate_and_copy(__n, this->_M_start, this->_M_finish);

	lea	ebp, DWORD PTR [ecx*4]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	sar	eax, 2
	push	ebp
	mov	DWORD PTR ___old_size$133198[esp+24], eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	test	esi, esi
	je	SHORT $LN2@reserve@3
	cmp	edi, esi
	mov	DWORD PTR ___result$387925[esp+20], eax
	je	SHORT $LN51@reserve@3
	sub	edi, esi
	push	edi
	push	esi
	push	eax
	call	_memcpy
	mov	eax, DWORD PTR ___result$387925[esp+32]
	add	esp, 12					; 0000000cH
$LN51@reserve@3:
	mov	esi, eax

; 74   :       _M_clear();

	mov	eax, DWORD PTR [ebx]
	test	eax, eax
	je	SHORT $LN1@reserve@3
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 75   :     } else {

	jmp	SHORT $LN1@reserve@3
$LN2@reserve@3:

; 76   :       __tmp = this->_M_end_of_storage.allocate(__n, __n);

	mov	esi, eax
$LN1@reserve@3:

; 77   :     }
; 78   :     _M_set(__tmp, __tmp + __old_size, __tmp + __n);

	mov	ecx, DWORD PTR ___old_size$133198[esp+20]
	lea	edx, DWORD PTR [esi+ecx*4]
	add	ebp, esi
	mov	DWORD PTR [ebx], esi
	mov	DWORD PTR [ebx+4], edx
	mov	DWORD PTR [ebx+8], ebp
$LN95@reserve@3:

; 79   :   }
; 80   : }

	pop	edi
	pop	esi
	pop	ebp
	add	esp, 8
	ret	0
?reserve@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXI@Z ENDP ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::reserve
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?_M_erase@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEPAUref_sound@@PAU4@0ABU__false_type@3@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___first$ = 12						; size = 4
?_M_erase@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEPAUref_sound@@PAU4@0ABU__false_type@3@@Z PROC ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_erase, COMDAT
; ___last$ = eax

; 578  :   iterator _M_erase(iterator __first, iterator __last, const __false_type& /*_Movable*/) {

	push	ebx
	push	ebp
	mov	ebp, DWORD PTR ___first$[esp+4]
	push	esi
	mov	ebx, eax

; 579  :     pointer __i = _STLP_PRIV __copy_ptrs(__last, this->_M_finish, __first, _TrivialCopy());

	mov	eax, DWORD PTR _this$[esp+8]
	mov	esi, DWORD PTR [eax+4]
	sub	esi, ebx
	sar	esi, 2
	test	esi, esi
	push	edi
	mov	edi, ebp
	jle	SHORT $LN5@M_erase@32
	sub	ebx, ebp
	npad	2
$LL7@M_erase@32:
	lea	ecx, DWORD PTR [ebx+edi]
	push	ecx
	mov	ecx, edi
	call	??4ref_sound@@QAEAAU0@ABU0@@Z
	sub	esi, 1
	add	edi, 4
	test	esi, esi
	jg	SHORT $LL7@M_erase@32
$LN5@M_erase@32:

; 580  :     _STLP_STD::_Destroy_Range(__i, this->_M_finish);

	mov	edx, DWORD PTR _this$[esp+12]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	edi
	call	??$_Destroy_Range@PAUref_sound@@@stlp_std@@YAXPAUref_sound@@0@Z ; stlp_std::_Destroy_Range<ref_sound *>

; 581  :     this->_M_finish = __i;

	mov	ecx, DWORD PTR _this$[esp+20]
	add	esp, 8
	mov	DWORD PTR [ecx+4], edi
	pop	edi
	pop	esi

; 582  :     return __first;

	mov	eax, ebp
	pop	ebp
	pop	ebx

; 583  :   }

	ret	8
?_M_erase@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEPAUref_sound@@PAU4@0ABU__false_type@3@@Z ENDP ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?erase@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEPAUref_sound@@PAU4@0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
?erase@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEPAUref_sound@@PAU4@0@Z PROC ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::erase, COMDAT
; ___first$ = eax
; ___last$ = ecx

; 590  :     if (__first == __last)

	cmp	eax, ecx

; 591  :       return __first;

	je	SHORT $LN2@erase@50

; 592  :     return _M_erase(__first, __last, _Movable());

	push	eax
	mov	eax, DWORD PTR _this$[esp]
	push	eax
	mov	eax, ecx
	call	?_M_erase@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEPAUref_sound@@PAU4@0ABU__false_type@3@@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_erase
$LN2@erase@50:

; 593  :   }

	ret	4
?erase@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEPAUref_sound@@PAU4@0@Z ENDP ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?insert@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEXPAUref_sound@@IABU4@@Z
_TEXT	SEGMENT
$T388302 = -1						; size = 1
?insert@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEXPAUref_sound@@IABU4@@Z PROC ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::insert, COMDAT
; _this$ = ecx
; ___pos$ = esi
; ___n$ = eax
; ___x$ = edx

; 529  :   { _M_fill_insert(__pos, __n, __x); }

	push	ecx
	test	eax, eax
	je	SHORT $LN8@insert@8
	push	edi
	mov	edi, DWORD PTR [ecx+8]
	sub	edi, DWORD PTR [ecx+4]
	sar	edi, 2
	cmp	edi, eax
	jb	SHORT $LN4@insert@8
	lea	edi, DWORD PTR $T388302[esp+8]
	push	edi
	push	edx
	push	eax
	push	esi
	call	?_M_fill_insert_aux@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@IABU4@ABU__false_type@3@@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_fill_insert_aux
	pop	edi
	pop	ecx
	ret	0
$LN4@insert@8:
	push	eax
	push	edx
	push	esi
	push	ecx
	call	?_M_insert_overflow_aux@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@ABU4@ABU__false_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_insert_overflow_aux
	pop	edi
$LN8@insert@8:
	pop	ecx
	ret	0
?insert@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEXPAUref_sound@@IABU4@@Z ENDP ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::insert
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?push_back@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEXABVCEnvModifier@@@Z
_TEXT	SEGMENT
?push_back@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEXABVCEnvModifier@@@Z PROC ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::push_back, COMDAT
; _this$ = edx
; ___x$ = eax

; 360  :   void push_back(const _Tp& __x) {

	push	esi
	mov	esi, eax

; 361  : #endif /*!_STLP_DONT_SUP_DFLT_PARAM && !_STLP_NO_ANACHRONISMS*/
; 362  :     if (this->_M_finish != this->_M_end_of_storage._M_data) {

	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR [edx+8]
	je	SHORT $LN2@push_back@26

; 363  :       _Copy_Construct(this->_M_finish, __x);

	test	eax, eax
	je	SHORT $LN7@push_back@26
	push	edi
	mov	ecx, 20					; 00000014H
	mov	edi, eax
	rep movsd
	pop	edi
$LN7@push_back@26:

; 364  :       ++this->_M_finish;

	add	DWORD PTR [edx+4], 80			; 00000050H
	pop	esi

; 368  :   }

	ret	0
$LN2@push_back@26:

; 365  :     }
; 366  :     else
; 367  :       _M_insert_overflow(this->_M_finish, __x, _TrivialCopy(), 1UL, true);

	push	esi
	push	edx
	call	?_M_insert_overflow@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@AAEXPAVCEnvModifier@@ABV4@ABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::_M_insert_overflow
	pop	esi

; 368  :   }

	ret	0
?push_back@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEXABVCEnvModifier@@@Z ENDP ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::push_back
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?resize@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEXIABUref_sound@@@Z
_TEXT	SEGMENT
$T388368 = -1						; size = 1
?resize@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEXIABUref_sound@@@Z PROC ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::resize, COMDAT
; _this$ = esi
; ___new_size$ = ecx
; ___x$ = eax

; 596  :   void resize(size_type __new_size, const _Tp& __x = _STLP_DEFAULT_CONSTRUCTED(_Tp)) {

	push	ecx
	push	ebx
	push	edi
	mov	edi, ecx

; 597  : #else
; 598  :   void resize(size_type __new_size, const _Tp& __x) {
; 599  : #endif /*_STLP_DONT_SUP_DFLT_PARAM*/
; 600  :     if (__new_size < size())

	mov	ecx, esi
	mov	ebx, eax
	call	?size@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QBEIXZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::size
	cmp	edi, eax

; 601  :       erase(begin() + __new_size, end());

	mov	ecx, esi
	jae	SHORT $LN2@resize@6
	call	?end@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEPAUref_sound@@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::end
	mov	ecx, esi
	mov	ebx, eax
	call	?begin@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEPAUref_sound@@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::begin
	lea	eax, DWORD PTR [eax+edi*4]
	cmp	eax, ebx
	je	SHORT $LN25@resize@6
	push	eax
	push	esi
	mov	eax, ebx
	call	?_M_erase@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEPAUref_sound@@PAU4@0ABU__false_type@3@@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_erase
	pop	edi
	pop	ebx

; 604  :   }

	pop	ecx
	ret	0
$LN2@resize@6:

; 602  :     else
; 603  :       insert(end(), __new_size - size(), __x);

	call	?size@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QBEIXZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::size
	mov	ecx, esi
	sub	edi, eax
	call	?end@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEPAUref_sound@@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::end
	test	edi, edi
	je	SHORT $LN25@resize@6
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, DWORD PTR [esi+4]
	sar	ecx, 2
	cmp	ecx, edi
	jb	SHORT $LN21@resize@6
	lea	edx, DWORD PTR $T388368[esp+12]
	push	edx
	push	ebx
	push	edi
	push	eax
	mov	ecx, esi
	call	?_M_fill_insert_aux@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@IABU4@ABU__false_type@3@@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_fill_insert_aux
	pop	edi
	pop	ebx

; 604  :   }

	pop	ecx
	ret	0

; 602  :     else
; 603  :       insert(end(), __new_size - size(), __x);

$LN21@resize@6:
	push	edi
	push	ebx
	push	eax
	push	esi
	call	?_M_insert_overflow_aux@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@AAEXPAUref_sound@@ABU4@ABU__false_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::_M_insert_overflow_aux
$LN25@resize@6:
	pop	edi
	pop	ebx

; 604  :   }

	pop	ecx
	ret	0
?resize@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEXIABUref_sound@@@Z ENDP ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::resize
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@stlp_std@@QAEXABVCEnvModifier@@@Z
_TEXT	SEGMENT
?push_back@?$vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@stlp_std@@QAEXABVCEnvModifier@@@Z PROC ; stlp_std::vector<CEnvModifier,xalloc<CEnvModifier> >::push_back, COMDAT
; _this$ = edx
; ___x$ = eax

; 171  :   { _M_impl.push_back(cast_traits::to_storage_type_cref(__x)); }

	push	esi
	mov	esi, eax
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR [edx+8]
	je	SHORT $LN6@push_back@27
	test	eax, eax
	je	SHORT $LN11@push_back@27
	push	edi
	mov	ecx, 20					; 00000014H
	mov	edi, eax
	rep movsd
	pop	edi
$LN11@push_back@27:
	add	DWORD PTR [edx+4], 80			; 00000050H
	pop	esi
	ret	0
$LN6@push_back@27:
	push	esi
	push	edx
	call	?_M_insert_overflow@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@AAEXPAVCEnvModifier@@ABV4@ABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::_M_insert_overflow
	pop	esi
	ret	0
?push_back@?$vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@stlp_std@@QAEXABVCEnvModifier@@@Z ENDP ; stlp_std::vector<CEnvModifier,xalloc<CEnvModifier> >::push_back
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?reserve@?$vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@stlp_std@@QAEXI@Z
_TEXT	SEGMENT
?reserve@?$vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@stlp_std@@QAEXI@Z PROC ; stlp_std::vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >::reserve, COMDAT
; _this$ = ebx
; ___n$ = ecx

; 151  :   void reserve(size_type __n) {_M_impl.reserve(__n);}

	jmp	?reserve@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXI@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::reserve
?reserve@?$vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@stlp_std@@QAEXI@Z ENDP ; stlp_std::vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >::reserve
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?resize@?$vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@stlp_std@@QAEXIABUref_sound@@@Z
_TEXT	SEGMENT
?resize@?$vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@stlp_std@@QAEXIABUref_sound@@@Z PROC ; stlp_std::vector<ref_sound,xalloc<ref_sound> >::resize, COMDAT
; _this$ = esi
; ___new_size$ = ecx
; ___x$ = eax

; 217  :   { _M_impl.resize(__new_size, cast_traits::to_storage_type_cref(__x)); }

	jmp	?resize@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEXIABUref_sound@@@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::resize
?resize@?$vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@stlp_std@@QAEXIABUref_sound@@@Z ENDP ; stlp_std::vector<ref_sound,xalloc<ref_sound> >::resize
_TEXT	ENDS
PUBLIC	__real@43c80000
PUBLIC	??0CEnvDescriptor@@QAE@ABVshared_str@@@Z	; CEnvDescriptor::CEnvDescriptor
;	COMDAT __real@43c80000
; File d:\clearsky\sources\engine\xrcore\xrstring.h
CONST	SEGMENT
__real@43c80000 DD 043c80000r			; 400
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\environment_misc.cpp
CONST	ENDS
;	COMDAT ??0CEnvDescriptor@@QAE@ABVshared_str@@@Z
_TEXT	SEGMENT
_identifier$ = 8					; size = 4
??0CEnvDescriptor@@QAE@ABVshared_str@@@Z PROC		; CEnvDescriptor::CEnvDescriptor, COMDAT
; _this$ = ecx

; 206  : {

	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	push	esi
	mov	esi, ecx
	push	edi
	xor	edi, edi
	mov	DWORD PTR [esi+8], edi
	mov	DWORD PTR [esi+12], edi
	mov	DWORD PTR [esi+16], edi
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+80]
	call	eax
	mov	ecx, DWORD PTR _identifier$[esp+4]
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+172], edi
	mov	DWORD PTR [esi+176], edi
	mov	DWORD PTR [esi+184], edi
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, edi
	je	SHORT $LN19@CEnvDescri@2
	add	DWORD PTR [ecx], 1
$LN19@CEnvDescri@2:
	mov	eax, DWORD PTR [esi+184]
	cmp	eax, edi
	je	SHORT $LN22@CEnvDescri@2
	add	DWORD PTR [eax], -1
	mov	edx, DWORD PTR [esi+184]
	cmp	DWORD PTR [edx], edi
	jne	SHORT $LN22@CEnvDescri@2
	mov	DWORD PTR [esi+184], edi
$LN22@CEnvDescri@2:

; 207  : 	exec_time			= 0.0f;

	xorps	xmm0, xmm0

; 208  : 	exec_time_loaded	= 0.0f;
; 209  : 	
; 210  : 	clouds_color.set	(1,1,1,1);

	movss	xmm1, DWORD PTR __real@3f800000
	mov	DWORD PTR [esi+184], ecx

; 211  : 	sky_color.set		(1,1,1);
; 212  : 	sky_rotation		= 0.0f;
; 213  : 
; 214  : 	far_plane			= 400.0f;;

	movss	xmm2, DWORD PTR __real@43c80000
	movss	DWORD PTR [esi], xmm0
	movss	DWORD PTR [esi+4], xmm0
	movss	DWORD PTR [esi+24], xmm1
	movss	DWORD PTR [esi+28], xmm1
	movss	DWORD PTR [esi+32], xmm1
	movss	DWORD PTR [esi+36], xmm1
	movss	DWORD PTR [esi+40], xmm1
	movss	DWORD PTR [esi+44], xmm1
	movss	DWORD PTR [esi+48], xmm1

; 215  : 
; 216  : 	fog_color.set		(1,1,1);
; 217  : 	fog_density			= 0.0f;
; 218  : 	fog_distance		= 400.0f;
; 219  : 
; 220  : 	rain_density		= 0.0f;
; 221  : 	rain_color.set		(0,0,0);
; 222  : 
; 223  : 	bolt_period			= 0.0f;
; 224  : 	bolt_duration		= 0.0f;
; 225  : 
; 226  :     wind_velocity		= 0.0f;
; 227  :     wind_direction		= 0.0f;
; 228  :     
; 229  : 	ambient.set			(0,0,0);
; 230  : 	hemi_color.set		(1,1,1,1);
; 231  : 	sun_color.set		(1,1,1);
; 232  : 	sun_dir.set			(0,-1,0);
; 233  : 
; 234  : 	m_fSunShaftsIntensity = 0;
; 235  : 	m_fWaterIntensity = 1;
; 236  : 
; 237  :     lens_flare_id		= "";

	mov	eax, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	movss	DWORD PTR [esi+56], xmm2
	movss	DWORD PTR [esi+52], xmm0
	movss	DWORD PTR [esi+60], xmm1
	movss	DWORD PTR [esi+64], xmm1
	movss	DWORD PTR [esi+68], xmm1
	movss	DWORD PTR [esi+76], xmm2
	movss	xmm2, DWORD PTR __real@bf800000
	movss	DWORD PTR [esi+72], xmm0
	movss	DWORD PTR [esi+80], xmm0
	movss	DWORD PTR [esi+84], xmm0
	movss	DWORD PTR [esi+88], xmm0
	movss	DWORD PTR [esi+92], xmm0
	movss	DWORD PTR [esi+96], xmm0
	movss	DWORD PTR [esi+100], xmm0
	movss	DWORD PTR [esi+104], xmm0
	movss	DWORD PTR [esi+108], xmm0
	movss	DWORD PTR [esi+112], xmm0
	movss	DWORD PTR [esi+116], xmm0
	movss	DWORD PTR [esi+120], xmm0
	movss	DWORD PTR [esi+124], xmm1
	movss	DWORD PTR [esi+128], xmm1
	movss	DWORD PTR [esi+132], xmm1
	movss	DWORD PTR [esi+136], xmm1
	movss	DWORD PTR [esi+140], xmm1
	movss	DWORD PTR [esi+144], xmm1
	movss	DWORD PTR [esi+148], xmm1
	push	ebx
	mov	ebx, DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	movss	DWORD PTR [esi+152], xmm0
	movss	DWORD PTR [esi+156], xmm2
	movss	DWORD PTR [esi+160], xmm0
	movss	DWORD PTR [esi+164], xmm0
	movss	DWORD PTR [esi+168], xmm1
	mov	ecx, DWORD PTR [eax]
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	call	ebx
	cmp	eax, edi
	je	SHORT $LN44@CEnvDescri@2
	add	DWORD PTR [eax], 1
$LN44@CEnvDescri@2:
	mov	ecx, DWORD PTR [esi+172]
	cmp	ecx, edi
	je	SHORT $LN47@CEnvDescri@2
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [esi+172]
	cmp	DWORD PTR [ecx], edi
	jne	SHORT $LN47@CEnvDescri@2
	mov	DWORD PTR [esi+172], edi
$LN47@CEnvDescri@2:

; 238  : 	tb_id				= "";

	mov	edx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	DWORD PTR [esi+172], eax
	mov	ecx, DWORD PTR [edx]
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	call	ebx
	cmp	eax, edi
	pop	ebx
	je	SHORT $LN53@CEnvDescri@2
	add	DWORD PTR [eax], 1
$LN53@CEnvDescri@2:
	mov	ecx, DWORD PTR [esi+176]
	cmp	ecx, edi
	je	SHORT $LN56@CEnvDescri@2
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [esi+176]
	cmp	DWORD PTR [ecx], edi
	jne	SHORT $LN56@CEnvDescri@2
	mov	DWORD PTR [esi+176], edi
$LN56@CEnvDescri@2:
	mov	DWORD PTR [esi+176], eax

; 239  :     
; 240  : 	env_ambient			= NULL;

	mov	DWORD PTR [esi+180], edi
	pop	edi

; 241  : }

	mov	eax, esi
	pop	esi
	ret	4
??0CEnvDescriptor@@QAE@ABVshared_str@@@Z ENDP		; CEnvDescriptor::CEnvDescriptor
_TEXT	ENDS
PUBLIC	?create_effect@CEnvAmbient@@QAEPAUSEffect@1@AAVCInifile@@PBD@Z ; CEnvAmbient::create_effect
; Function compile flags: /Ogtpy
;	COMDAT ?create_effect@CEnvAmbient@@QAEPAUSEffect@1@AAVCInifile@@PBD@Z
_TEXT	SEGMENT
$T388573 = -12						; size = 12
__cp$388698 = 8						; size = 4
_config$ = 8						; size = 4
$T388701 = 12						; size = 4
_a$388621 = 12						; size = 4
_id$ = 12						; size = 4
?create_effect@CEnvAmbient@@QAEPAUSEffect@1@AAVCInifile@@PBD@Z PROC ; CEnvAmbient::create_effect, COMDAT
; _this$ = ecx

; 117  : 	SEffect*					result = xr_new<SEffect>();

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi
	push	edi
	push	52					; 00000034H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	xor	esi, esi
	cmp	eax, esi
	je	SHORT $LN10@create_eff
	mov	DWORD PTR [eax+4], esi
	mov	DWORD PTR [eax+8], esi
	mov	esi, eax
$LN10@create_eff:

; 118  : 	result->life_time			= iFloor(config.r_float(id,"life_time")*1000.f);

	mov	ebx, DWORD PTR _id$[esp+24]
	mov	ebp, DWORD PTR _config$[esp+24]
	push	OFFSET ??_C@_09HEFANMD@life_time?$AA@
	push	ebx
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fmul	DWORD PTR _fuzzy_update_novis
	mov	ecx, 158				; 0000009eH

; 119  : 	result->particles			= config.r_string	(id,"particles");		

	push	OFFSET ??_C@_09JNOBNNGJ@particles?$AA@
	fstp	DWORD PTR _a$388621[esp+28]
	push	ebx
	mov	edi, DWORD PTR _a$388621[esp+32]
	mov	eax, edi
	sar	eax, 23					; 00000017H
	and	eax, 255				; 000000ffH
	sub	ecx, eax
	mov	edx, edi
	or	edx, -8388608				; ff800000H
	shl	edx, 8
	shr	edx, cl
	sub	ecx, 96					; 00000060H
	mov	eax, 1
	shl	eax, cl
	sub	eax, 1
	sar	eax, 8
	and	eax, edi
	neg	eax
	sbb	eax, eax
	sar	edi, 31					; 0000001fH
	add	eax, 1
	and	eax, edi
	add	ecx, 64					; 00000040H
	sub	edx, eax
	sar	ecx, 31					; 0000001fH
	and	edx, ecx
	xor	edx, edi
	mov	edi, DWORD PTR __imp_?r_string@CInifile@@QBEPBDPBD0@Z
	mov	ecx, ebp
	mov	DWORD PTR [esi], edx
	call	edi
	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	ecx, DWORD PTR [ecx]
	push	eax
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	test	eax, eax
	je	SHORT $LN26@create_eff
	add	DWORD PTR [eax], 1
$LN26@create_eff:
	mov	ecx, DWORD PTR [esi+8]
	test	ecx, ecx
	je	SHORT $LN29@create_eff
	add	DWORD PTR [ecx], -1
	mov	edx, DWORD PTR [esi+8]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN29@create_eff
	mov	DWORD PTR [esi+8], 0
$LN29@create_eff:

; 120  : 	VERIFY						(result->particles.size());
; 121  : 	result->offset				= config.r_fvector3	(id,"offset");

	push	OFFSET ??_C@_06KLHHMIGM@offset?$AA@
	mov	DWORD PTR [esi+8], eax
	push	ebx
	lea	eax, DWORD PTR $T388573[esp+36]
	push	eax
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_fvector3@CInifile@@QBE?AU?$_vector3@M@@PBD0@Z
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi+12], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+16], edx
	mov	eax, DWORD PTR [eax+8]

; 122  : 	result->wind_gust_factor	= config.r_float(id,"wind_gust_factor");

	push	OFFSET ??_C@_0BB@CCMBLOMC@wind_gust_factor?$AA@
	push	ebx
	mov	ecx, ebp
	mov	DWORD PTR [esi+20], eax
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fstp	DWORD PTR [esi+24]

; 123  : 	
; 124  : 	if (config.line_exist(id,"sound"))

	push	OFFSET ??_C@_05MHNANJII@sound?$AA@
	push	ebx
	mov	ecx, ebp
	call	DWORD PTR __imp_?line_exist@CInifile@@QBEHPBD0@Z
	test	eax, eax
	je	SHORT $LN36@create_eff

; 125  : 		result->sound.create	(config.r_string(id,"sound"),st_Effect,sg_SourceType);

	push	OFFSET ??_C@_05MHNANJII@sound?$AA@
	push	ebx
	mov	ecx, ebp
	call	edi
	mov	ecx, DWORD PTR __imp_?Sound@@3PAVCSound_manager_interface@@A
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+28]
	push	-1
	push	0
	push	eax
	lea	eax, DWORD PTR [esi+4]
	push	eax
	call	edx
$LN36@create_eff:

; 126  : 
; 127  : 	if (config.line_exist(id,"wind_blast_strength")) {

	push	OFFSET ??_C@_0BE@KFMLMFEH@wind_blast_strength?$AA@
	push	ebx
	mov	ecx, ebp
	call	DWORD PTR __imp_?line_exist@CInifile@@QBEHPBD0@Z
	test	eax, eax
	je	$LN1@create_eff

; 128  : 		result->wind_blast_strength		= config.r_float(id,"wind_blast_strength");

	push	OFFSET ??_C@_0BE@KFMLMFEH@wind_blast_strength?$AA@
	push	ebx
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fstp	DWORD PTR [esi+36]

; 129  : 		result->wind_blast_direction.setHP	(deg2rad(config.r_float(id,"wind_blast_longitude")), 0.f);

	push	OFFSET ??_C@_0BF@DPMPPAHL@wind_blast_longitude?$AA@
	push	ebx
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fmul	DWORD PTR __real@3c8efa35
	push	ecx
	fstp	DWORD PTR $T388701[esp+28]
	fldz
	fstp	DWORD PTR [esp]
	call	_cosf
	fstp	DWORD PTR __cp$388698[esp+28]
	fld	DWORD PTR $T388701[esp+28]
	fstp	DWORD PTR [esp]
	call	_sinf
	fmul	DWORD PTR __cp$388698[esp+28]
	fchs
	fstp	DWORD PTR [esi+40]
	fldz
	fstp	DWORD PTR [esp]
	call	_sinf
	fstp	DWORD PTR [esi+44]
	fld	DWORD PTR $T388701[esp+28]
	fstp	DWORD PTR [esp]
	call	_cosf
	fmul	DWORD PTR __cp$388698[esp+28]
	add	esp, 4

; 130  : 		result->wind_blast_in_time		= config.r_float(id,"wind_blast_in_time");

	push	OFFSET ??_C@_0BD@IJOHBNIL@wind_blast_in_time?$AA@
	push	ebx
	mov	ecx, ebp
	fstp	DWORD PTR [esi+48]
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fstp	DWORD PTR [esi+28]

; 131  : 		result->wind_blast_out_time		= config.r_float(id,"wind_blast_out_time");

	push	OFFSET ??_C@_0BE@IJHCHLOP@wind_blast_out_time?$AA@
	push	ebx
	mov	ecx, ebp
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fstp	DWORD PTR [esi+32]

; 137  : 	result->wind_blast_in_time			= 0.f;
; 138  : 	result->wind_blast_out_time			= 0.f;
; 139  : 
; 140  : 	return								(result);

	mov	eax, esi

; 141  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	8
$LN1@create_eff:

; 132  : 		return							(result);
; 133  : 	}
; 134  : 
; 135  : 	result->wind_blast_strength			= 0.f;

	xorps	xmm0, xmm0

; 136  : 	result->wind_blast_direction.set	(0.f, 0.f, 1.f);

	movss	xmm1, DWORD PTR __real@3f800000
	movss	DWORD PTR [esi+36], xmm0
	movss	DWORD PTR [esi+40], xmm0
	movss	DWORD PTR [esi+44], xmm0
	movss	DWORD PTR [esi+48], xmm1

; 141  : }

	pop	edi
	movss	DWORD PTR [esi+28], xmm0
	movss	DWORD PTR [esi+32], xmm0
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	8
?create_effect@CEnvAmbient@@QAEPAUSEffect@1@AAVCInifile@@PBD@Z ENDP ; CEnvAmbient::create_effect
_TEXT	ENDS
PUBLIC	?load@SSndChannel@CEnvAmbient@@QAEXAAVCInifile@@PBD@Z ; CEnvAmbient::SSndChannel::load
; Function compile flags: /Ogtpy
;	COMDAT ?load@SSndChannel@CEnvAmbient@@QAEXAAVCInifile@@PBD@Z
_TEXT	SEGMENT
$T388787 = -529						; size = 1
$T388711 = -528						; size = 4
_snds$ = -524						; size = 4
_tmp$ = -520						; size = 520
_sect$ = 8						; size = 4
?load@SSndChannel@CEnvAmbient@@QAEXAAVCInifile@@PBD@Z PROC ; CEnvAmbient::SSndChannel::load, COMDAT
; _this$ = ecx
; _config$ = eax

; 85   : {

	sub	esp, 532				; 00000214H
	push	ebx

; 86   : 	m_load_section			= sect;

	mov	ebx, DWORD PTR _sect$[esp+532]
	push	ebp
	push	esi
	push	edi
	mov	edi, eax
	mov	eax, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	esi, ecx
	mov	ecx, DWORD PTR [eax]
	push	ebx
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	test	eax, eax
	je	SHORT $LN21@load@3
	add	DWORD PTR [eax], 1
$LN21@load@3:
	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN24@load@3
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [esi]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN24@load@3
	mov	DWORD PTR [esi], 0
$LN24@load@3:

; 87   : 
; 88   : 	m_sound_dist.x		= config.r_float		(m_load_section, "min_distance");

	push	OFFSET ??_C@_0N@OILKOPDA@min_distance?$AA@
	push	esi
	mov	ecx, edi
	mov	DWORD PTR [esi], eax
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMABVshared_str@@PBD@Z
	fstp	DWORD PTR [esi+4]

; 89   : 	m_sound_dist.y		= config.r_float		(m_load_section, "max_distance");

	push	OFFSET ??_C@_0N@KIPFJHEG@max_distance?$AA@
	push	esi
	mov	ecx, edi
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMABVshared_str@@PBD@Z
	fstp	DWORD PTR [esi+8]

; 90   : 	m_sound_period.x	= config.r_s32			(m_load_section, "period0");

	push	OFFSET ??_C@_07MOBGNJOI@period0?$AA@
	push	esi
	mov	ecx, edi
	call	DWORD PTR __imp_?r_s32@CInifile@@QBEHABVshared_str@@PBD@Z

; 91   : 	m_sound_period.y	= config.r_s32			(m_load_section, "period1");

	push	OFFSET ??_C@_07NHANOIKJ@period1?$AA@
	push	esi
	mov	ecx, edi
	mov	DWORD PTR [esi+12], eax
	call	DWORD PTR __imp_?r_s32@CInifile@@QBEHABVshared_str@@PBD@Z

; 92   : 	m_sound_period.z	= config.r_s32			(m_load_section, "period2");

	push	OFFSET ??_C@_07PMCALLGK@period2?$AA@
	push	esi
	mov	ecx, edi
	mov	DWORD PTR [esi+16], eax
	call	DWORD PTR __imp_?r_s32@CInifile@@QBEHABVshared_str@@PBD@Z

; 93   : 	m_sound_period.w	= config.r_s32			(m_load_section, "period3");

	push	OFFSET ??_C@_07OFDLIKCL@period3?$AA@
	push	esi
	mov	ecx, edi
	mov	DWORD PTR [esi+20], eax
	call	DWORD PTR __imp_?r_s32@CInifile@@QBEHABVshared_str@@PBD@Z
	mov	DWORD PTR [esi+24], eax

; 94   : 
; 95   : //	m_sound_period			= config.r_ivector4(sect,"sound_period");
; 96   : 	R_ASSERT				(m_sound_period.x <= m_sound_period.y && m_sound_period.z <= m_sound_period.w);

	cmp	BYTE PTR ?ignore_always@?3??load@SSndChannel@CEnvAmbient@@QAEXAAVCInifile@@PBD@Z@4_NA, 0
	jne	SHORT $LN15@load@3
	mov	edx, DWORD PTR [esi+12]
	cmp	edx, DWORD PTR [esi+16]
	jg	SHORT $LN12@load@3
	cmp	DWORD PTR [esi+20], eax
	jle	SHORT $LN15@load@3
$LN12@load@3:
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??load@SSndChannel@CEnvAmbient@@QAEXAAVCInifile@@PBD@Z@4_NA
	push	OFFSET ??_C@_0BP@KOPBFBGJ@CEnvAmbient?3?3SSndChannel?3?3load?$AA@
	push	96					; 00000060H
	push	OFFSET ??_C@_0DJ@LMFGIIMF@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0EN@KLGKENFP@m_sound_period?4x?5?$DM?$DN?5m_sound_peri@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN15@load@3:

; 97   : //	m_sound_period.mul		(1000);// now in ms
; 98   : //	m_sound_dist			= config.r_fvector2(sect,"sound_dist"); 
; 99   : 	R_ASSERT2				(m_sound_dist.y > m_sound_dist.x, sect);

	cmp	BYTE PTR ?ignore_always@?7??load@SSndChannel@CEnvAmbient@@QAEXAAVCInifile@@PBD@Z@4_NA, 0
	jne	SHORT $LN10@load@3
	movss	xmm0, DWORD PTR [esi+8]
	comiss	xmm0, DWORD PTR [esi+4]
	ja	SHORT $LN10@load@3
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?7??load@SSndChannel@CEnvAmbient@@QAEXAAVCInifile@@PBD@Z@4_NA
	push	OFFSET ??_C@_0BP@KOPBFBGJ@CEnvAmbient?3?3SSndChannel?3?3load?$AA@
	push	99					; 00000063H
	push	OFFSET ??_C@_0DJ@LMFGIIMF@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	ebx
	push	OFFSET ??_C@_0CA@NAJJMFOP@m_sound_dist?4y?5?$DO?5m_sound_dist?4x?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD00H0AA_N@Z
$LN10@load@3:

; 100  : 
; 101  : 	LPCSTR snds				= config.r_string	(sect,"sounds");

	push	OFFSET ??_C@_06OHLGPBPO@sounds?$AA@
	push	ebx
	mov	ecx, edi
	call	DWORD PTR __imp_?r_string@CInifile@@QBEPBDPBD0@Z
	mov	ebx, eax

; 102  : 	u32 cnt					= _GetItemCount			(snds);

	push	44					; 0000002cH
	push	ebx
	mov	DWORD PTR _snds$[esp+556], ebx
	call	DWORD PTR __imp_?_GetItemCount@@YAHPBDD@Z
	add	esp, 8

; 103  : 	string_path				tmp;
; 104  : 	R_ASSERT3				(cnt,"sounds empty", sect);

	cmp	BYTE PTR ?ignore_always@?M@??load@SSndChannel@CEnvAmbient@@QAEXAAVCInifile@@PBD@Z@4_NA, 0
	mov	ebp, eax
	jne	SHORT $LN6@load@3
	test	ebp, ebp
	jne	SHORT $LN6@load@3
	mov	eax, DWORD PTR _sect$[esp+544]
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?M@??load@SSndChannel@CEnvAmbient@@QAEXAAVCInifile@@PBD@Z@4_NA
	push	OFFSET ??_C@_0BP@KOPBFBGJ@CEnvAmbient?3?3SSndChannel?3?3load?$AA@
	push	104					; 00000068H
	push	OFFSET ??_C@_0DJ@LMFGIIMF@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	eax
	push	OFFSET ??_C@_0N@POGEGAMB@sounds?5empty?$AA@
	push	OFFSET ??_C@_03PODCCCNG@cnt?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD000H0AA_N@Z
$LN6@load@3:

; 105  : 
; 106  : 	m_sounds.resize			(cnt);

	xor	edi, edi
	add	esi, 28					; 0000001cH
	lea	eax, DWORD PTR $T388711[esp+548]
	mov	ecx, ebp
	mov	DWORD PTR $T388711[esp+548], edi
	call	?resize@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEXIABUref_sound@@@Z ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::resize
	mov	eax, DWORD PTR $T388711[esp+548]
	cmp	eax, edi
	je	SHORT $LN44@load@3
	add	DWORD PTR [eax+4], -1
	mov	ecx, DWORD PTR $T388711[esp+548]
	cmp	DWORD PTR [ecx+4], edi
	jne	SHORT $LN44@load@3
	lea	edx, DWORD PTR $T388711[esp+548]
	push	edx
	lea	ecx, DWORD PTR $T388787[esp+552]
	mov	BYTE PTR $T388787[esp+552], 0
	call	??R?$xr_special_free@$00Vref_sound_data@@@@QAEXAAPAVref_sound_data@@@Z ; xr_special_free<1,ref_sound_data>::operator()
$LN44@load@3:

; 107  : 
; 108  : 	for (u32 k=0; k<cnt; ++k)

	test	ebp, ebp
	jbe	SHORT $LN1@load@3
	jmp	SHORT $LN3@load@3
	npad	9
$LL69@load@3:
	mov	ebx, DWORD PTR _snds$[esp+548]
$LN3@load@3:

; 109  : 	{
; 110  : 		_GetItem			(snds,k,tmp);

	push	1
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	44					; 0000002cH
	push	520					; 00000208H
	lea	eax, DWORD PTR _tmp$[esp+564]
	push	eax
	push	edi
	push	ebx
	call	DWORD PTR __imp_?_GetItem@@YAPADPBDHPADID0_N@Z
	add	esp, 28					; 0000001cH

; 111  : 		m_sounds[k].create	(tmp,st_Effect,sg_SourceType);

	mov	ecx, esi
	call	?begin@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAEPAUref_sound@@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::begin
	mov	ecx, DWORD PTR __imp_?Sound@@3PAVCSound_manager_interface@@A
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+28]
	push	-1
	push	0
	lea	ebx, DWORD PTR _tmp$[esp+556]
	push	ebx
	lea	eax, DWORD PTR [eax+edi*4]
	push	eax
	call	edx
	add	edi, 1
	cmp	edi, ebp
	jb	SHORT $LL69@load@3
$LN1@load@3:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 112  : 	}
; 113  : }

	add	esp, 532				; 00000214H
	ret	4
?load@SSndChannel@CEnvAmbient@@QAEXAAVCInifile@@PBD@Z ENDP ; CEnvAmbient::SSndChannel::load
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\environment.h
_TEXT	ENDS
;	COMDAT ??1SEffect@CEnvAmbient@@QAE@XZ
_TEXT	SEGMENT
$T388879 = -1						; size = 1
??1SEffect@CEnvAmbient@@QAE@XZ PROC			; CEnvAmbient::SEffect::~SEffect, COMDAT
; _this$ = ecx

; 66   : 		INGAME_EDITOR_VIRTUAL	~SEffect				()	{}

	push	ecx
	mov	eax, DWORD PTR [ecx+8]
	test	eax, eax
	je	SHORT $LN5@SEffect
	add	DWORD PTR [eax], -1
	mov	eax, DWORD PTR [ecx+8]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@SEffect
	mov	DWORD PTR [ecx+8], 0
$LN5@SEffect:
	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	push	esi
	lea	esi, DWORD PTR [ecx+4]
	je	SHORT $LN17@SEffect
	add	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN17@SEffect
	test	eax, eax
	je	SHORT $LN17@SEffect
	push	esi
	lea	ecx, DWORD PTR $T388879[esp+12]
	mov	BYTE PTR $T388879[esp+12], 0
	call	??R?$xr_special_free@$00Vref_sound_data@@@@QAEXAAPAVref_sound_data@@@Z ; xr_special_free<1,ref_sound_data>::operator()
	mov	DWORD PTR [esi], 0
$LN17@SEffect:
	pop	esi
	pop	ecx
	ret	0
??1SEffect@CEnvAmbient@@QAE@XZ ENDP			; CEnvAmbient::SEffect::~SEffect
; Function compile flags: /Ogtpy
;	COMDAT ??_GSEffect@CEnvAmbient@@QAEPAXI@Z
_TEXT	SEGMENT
$T453870 = -1						; size = 1
??_GSEffect@CEnvAmbient@@QAEPAXI@Z PROC			; CEnvAmbient::SEffect::`scalar deleting destructor', COMDAT
; _this$ = edi
	push	ecx
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN8@scalar@69
	add	DWORD PTR [eax], -1
	mov	eax, DWORD PTR [edi+8]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN8@scalar@69
	mov	DWORD PTR [edi+8], 0
$LN8@scalar@69:
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	push	esi
	lea	esi, DWORD PTR [edi+4]
	je	SHORT $LN32@scalar@69
	add	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN32@scalar@69
	test	eax, eax
	je	SHORT $LN32@scalar@69
	push	esi
	lea	ecx, DWORD PTR $T453870[esp+12]
	mov	BYTE PTR $T453870[esp+12], 0
	call	??R?$xr_special_free@$00Vref_sound_data@@@@QAEXAAPAVref_sound_data@@@Z ; xr_special_free<1,ref_sound_data>::operator()
	mov	DWORD PTR [esi], 0
$LN32@scalar@69:
	mov	eax, edi
	pop	esi
	pop	ecx
	ret	0
??_GSEffect@CEnvAmbient@@QAEPAXI@Z ENDP			; CEnvAmbient::SEffect::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
_TEXT	ENDS
;	COMDAT ??R?$xr_special_free@$0A@USEffect@CEnvAmbient@@@@QAEXAAPAUSEffect@CEnvAmbient@@@Z
_TEXT	SEGMENT
$T453997 = -1						; size = 1
??R?$xr_special_free@$0A@USEffect@CEnvAmbient@@@@QAEXAAPAUSEffect@CEnvAmbient@@@Z PROC ; xr_special_free<0,CEnvAmbient::SEffect>::operator(), COMDAT
; _ptr$ = edi

; 142  : 	{

	push	ecx

; 143  : 		ptr->~T			();

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN10@operator@111
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [eax+8]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN10@operator@111
	mov	DWORD PTR [eax+8], 0
$LN10@operator@111:
	push	esi
	lea	esi, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN22@operator@111
	add	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN22@operator@111
	test	eax, eax
	je	SHORT $LN22@operator@111
	push	esi
	lea	ecx, DWORD PTR $T453997[esp+12]
	mov	BYTE PTR $T453997[esp+12], 0
	call	??R?$xr_special_free@$00Vref_sound_data@@@@QAEXAAPAVref_sound_data@@@Z ; xr_special_free<1,ref_sound_data>::operator()
	mov	DWORD PTR [esi], 0
$LN22@operator@111:

; 144  : 		Memory.mem_free	(ptr);

	mov	edx, DWORD PTR [edi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edx
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	pop	esi

; 145  : 	}

	pop	ecx
	ret	0
??R?$xr_special_free@$0A@USEffect@CEnvAmbient@@@@QAEXAAPAUSEffect@CEnvAmbient@@@Z ENDP ; xr_special_free<0,CEnvAmbient::SEffect>::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_delete@USEffect@CEnvAmbient@@@@YAXAAPAUSEffect@CEnvAmbient@@@Z
_TEXT	SEGMENT
??$xr_delete@USEffect@CEnvAmbient@@@@YAXAAPAUSEffect@CEnvAmbient@@@Z PROC ; xr_delete<CEnvAmbient::SEffect>, COMDAT
; _ptr$ = eax

; 150  : {

	push	edi
	mov	edi, eax

; 151  : 	if (ptr) 

	cmp	DWORD PTR [edi], 0
	je	SHORT $LN1@xr_delete@40

; 152  : 	{
; 153  : 		xr_special_free<is_polymorphic<T>::result,T>()(ptr);

	call	??R?$xr_special_free@$0A@USEffect@CEnvAmbient@@@@QAEXAAPAUSEffect@CEnvAmbient@@@Z ; xr_special_free<0,CEnvAmbient::SEffect>::operator()

; 154  : 		ptr = NULL;

	mov	DWORD PTR [edi], 0
$LN1@xr_delete@40:
	pop	edi

; 155  : 	}
; 156  : }

	ret	0
??$xr_delete@USEffect@CEnvAmbient@@@@YAXAAPAUSEffect@CEnvAmbient@@@Z ENDP ; xr_delete<CEnvAmbient::SEffect>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrserverentities\object_destroyer.h
_TEXT	ENDS
;	COMDAT ??$delete_data@$00@?$CHelper2@PAUSEffect@CEnvAmbient@@@CDestroyer@@SAXAAPAUSEffect@CEnvAmbient@@@Z
_TEXT	SEGMENT
??$delete_data@$00@?$CHelper2@PAUSEffect@CEnvAmbient@@@CDestroyer@@SAXAAPAUSEffect@CEnvAmbient@@@Z PROC ; CDestroyer::CHelper2<CEnvAmbient::SEffect *>::delete_data<1>, COMDAT
; _data$ = eax

; 106  : 		IC	static void delete_data<true>(T &data)

	push	edi
	mov	edi, eax

; 107  : 		{
; 108  : 			if (data)
; 109  : 				CDestroyer::delete_data	(*data);
; 110  : 			xr_delete					(data);

	cmp	DWORD PTR [edi], 0
	je	SHORT $LN4@delete_dat@9
	call	??R?$xr_special_free@$0A@USEffect@CEnvAmbient@@@@QAEXAAPAUSEffect@CEnvAmbient@@@Z ; xr_special_free<0,CEnvAmbient::SEffect>::operator()
	mov	DWORD PTR [edi], 0
$LN4@delete_dat@9:
	pop	edi

; 111  : 		}

	ret	0
??$delete_data@$00@?$CHelper2@PAUSEffect@CEnvAmbient@@@CDestroyer@@SAXAAPAUSEffect@CEnvAmbient@@@Z ENDP ; CDestroyer::CHelper2<CEnvAmbient::SEffect *>::delete_data<1>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$delete_data@$0A@@?$CHelper4@PAUSEffect@CEnvAmbient@@@CDestroyer@@SAXAAPAUSEffect@CEnvAmbient@@@Z
_TEXT	SEGMENT
??$delete_data@$0A@@?$CHelper4@PAUSEffect@CEnvAmbient@@@CDestroyer@@SAXAAPAUSEffect@CEnvAmbient@@@Z PROC ; CDestroyer::CHelper4<CEnvAmbient::SEffect *>::delete_data<0>, COMDAT
; _data$ = eax

; 129  : 		IC	static void delete_data(T &data)

	push	edi
	mov	edi, eax

; 130  : 		{
; 131  : 			CHelper2<T>::delete_data<object_type_traits::is_pointer<T>::value>	(data);

	cmp	DWORD PTR [edi], 0
	je	SHORT $LN6@delete_dat@10
	call	??R?$xr_special_free@$0A@USEffect@CEnvAmbient@@@@QAEXAAPAUSEffect@CEnvAmbient@@@Z ; xr_special_free<0,CEnvAmbient::SEffect>::operator()
	mov	DWORD PTR [edi], 0
$LN6@delete_dat@10:
	pop	edi

; 132  : 		}

	ret	0
??$delete_data@$0A@@?$CHelper4@PAUSEffect@CEnvAmbient@@@CDestroyer@@SAXAAPAUSEffect@CEnvAmbient@@@Z ENDP ; CDestroyer::CHelper4<CEnvAmbient::SEffect *>::delete_data<0>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$delete_data@PAUSEffect@CEnvAmbient@@@CDestroyer@@SAXAAPAUSEffect@CEnvAmbient@@@Z
_TEXT	SEGMENT
??$delete_data@PAUSEffect@CEnvAmbient@@@CDestroyer@@SAXAAPAUSEffect@CEnvAmbient@@@Z PROC ; CDestroyer::delete_data<CEnvAmbient::SEffect *>, COMDAT
; _data$ = eax

; 143  : 	{

	push	edi
	mov	edi, eax

; 144  : 		CHelper4<T>::delete_data<object_type_traits::is_stl_container<T>::value>(data);

	cmp	DWORD PTR [edi], 0
	je	SHORT $LN8@delete_dat@11
	call	??R?$xr_special_free@$0A@USEffect@CEnvAmbient@@@@QAEXAAPAUSEffect@CEnvAmbient@@@Z ; xr_special_free<0,CEnvAmbient::SEffect>::operator()
	mov	DWORD PTR [edi], 0
$LN8@delete_dat@11:
	pop	edi

; 145  : 	}

	ret	0
??$delete_data@PAUSEffect@CEnvAmbient@@@CDestroyer@@SAXAAPAUSEffect@CEnvAmbient@@@Z ENDP ; CDestroyer::delete_data<CEnvAmbient::SEffect *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?clear@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QAEXXZ PROC ; stlp_std::vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::clear, COMDAT
; _this$ = edi

; 223  :   void clear() { _M_impl.clear(); }

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN12@clear@57
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN18@clear@57
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN18@clear@57:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN12@clear@57:
	ret	0
?clear@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QAEXXZ ENDP ; stlp_std::vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::clear
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?clear@?$vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@stlp_std@@QAEXXZ PROC ; stlp_std::vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::clear, COMDAT
; _this$ = edi

; 223  :   void clear() { _M_impl.clear(); }

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN12@clear@58
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN18@clear@58
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN18@clear@58:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN12@clear@58:
	ret	0
?clear@?$vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@stlp_std@@QAEXXZ ENDP ; stlp_std::vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::clear
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?clear_and_free@?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@QAEXXZ
_TEXT	SEGMENT
?clear_and_free@?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@QAEXXZ PROC ; xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::clear_and_free, COMDAT
; _this$ = edi

; 128  : 	void	clear_and_free		()									{ inherited::clear();			}

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN14@clear_and_@20
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN20@clear_and_@20
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN20@clear_and_@20:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN14@clear_and_@20:
	ret	0
?clear_and_free@?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@QAEXXZ ENDP ; xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::clear_and_free
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?clear_and_free@?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@QAEXXZ
_TEXT	SEGMENT
?clear_and_free@?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@QAEXXZ PROC ; xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::clear_and_free, COMDAT
; _this$ = edi

; 128  : 	void	clear_and_free		()									{ inherited::clear();			}

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN14@clear_and_@21
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN20@clear_and_@21
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN20@clear_and_@21:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN14@clear_and_@21:
	ret	0
?clear_and_free@?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@QAEXXZ ENDP ; xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::clear_and_free
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?clear@?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@QAEXXZ
_TEXT	SEGMENT
?clear@?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@QAEXXZ PROC ; xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::clear, COMDAT
; _this$ = edi

; 133  : 	void	clear				()									{ clear_and_free	();			}

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN16@clear@59
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN22@clear@59
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN22@clear@59:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN16@clear@59:
	ret	0
?clear@?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@QAEXXZ ENDP ; xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::clear
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?clear@?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@QAEXXZ
_TEXT	SEGMENT
?clear@?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@QAEXXZ PROC ; xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::clear, COMDAT
; _this$ = edi

; 133  : 	void	clear				()									{ clear_and_free	();			}

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN16@clear@60
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN22@clear@60
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN22@clear@60:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN16@clear@60:
	ret	0
?clear@?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@QAEXXZ ENDP ; xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::clear
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrserverentities\object_destroyer.h
_TEXT	ENDS
;	COMDAT ??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z
_TEXT	SEGMENT
$T454998 = -1						; size = 1
_data$ = 8						; size = 4
??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z PROC ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >, COMDAT

; 117  : 		{

	push	ecx
	push	ebp
	push	esi

; 118  : 			T::iterator					I = data.begin();

	mov	esi, DWORD PTR _data$[esp+8]
	push	edi
	mov	ecx, esi
	call	?begin@?$vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@stlp_std@@QAEPAPAUSEffect@CEnvAmbient@@XZ ; stlp_std::vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::begin
	mov	edi, eax

; 119  : 			T::iterator					E = data.end();

	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	?to_value_type_ptr@?$_CastTraits@PAXPAUSEffect@CEnvAmbient@@@priv@stlp_std@@SAPAPAUSEffect@CEnvAmbient@@PAPAX@Z ; stlp_std::priv::_CastTraits<void *,CEnvAmbient::SEffect *>::to_value_type_ptr
	mov	ebp, eax
	add	esp, 4

; 120  : 			for ( ; I != E; ++I)

	cmp	edi, ebp
	je	SHORT $LN1@delete_dat@12
	push	ebx
	xor	ebx, ebx
$LL3@delete_dat@12:

; 121  : 				CDestroyer::delete_data	(*I);

	mov	eax, DWORD PTR [edi]
	cmp	eax, ebx
	je	SHORT $LN2@delete_dat@12
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, ebx
	je	SHORT $LN88@delete_dat@12
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [eax+8]
	cmp	DWORD PTR [ecx], ebx
	jne	SHORT $LN88@delete_dat@12
	mov	DWORD PTR [eax+8], ebx
$LN88@delete_dat@12:
	lea	esi, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [esi]
	cmp	eax, ebx
	je	SHORT $LN53@delete_dat@12
	add	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+4], ebx
	jne	SHORT $LN53@delete_dat@12
	cmp	eax, ebx
	je	SHORT $LN53@delete_dat@12
	push	esi
	lea	ecx, DWORD PTR $T454998[esp+24]
	mov	BYTE PTR $T454998[esp+24], bl
	call	??R?$xr_special_free@$00Vref_sound_data@@@@QAEXAAPAVref_sound_data@@@Z ; xr_special_free<1,ref_sound_data>::operator()
	mov	DWORD PTR [esi], ebx
$LN53@delete_dat@12:
	mov	edx, DWORD PTR [edi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edx
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	esi, DWORD PTR _data$[esp+16]
	mov	DWORD PTR [edi], ebx
$LN2@delete_dat@12:
	add	edi, 4
	cmp	edi, ebp
	jne	SHORT $LL3@delete_dat@12
	pop	ebx
$LN1@delete_dat@12:

; 122  : 			data.clear					();

	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi]
	cmp	eax, ecx
	je	SHORT $LN78@delete_dat@12
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN84@delete_dat@12
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN84@delete_dat@12:
	mov	ecx, DWORD PTR _data$[esp+12]
	mov	DWORD PTR [ecx+4], eax
$LN78@delete_dat@12:
	pop	edi
	pop	esi
	pop	ebp

; 123  : 		}

	pop	ecx
	ret	0
??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z ENDP ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.c
_TEXT	ENDS
;	COMDAT ?_M_insert@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@PAU_Rb_tree_node_base@23@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@00@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___on_left$ = 12					; size = 4
___on_right$ = 16					; size = 4
?_M_insert@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@PAU_Rb_tree_node_base@23@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@00@Z PROC ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_insert, COMDAT
; _this$ = ebx
; ___parent$ = ecx
; ___val$ = eax

; 353  :                                                                       _Rb_tree_node_base * __on_right) {

	push	ebp
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp]
	push	esi
	push	edi
	mov	edi, ecx

; 354  :   // We do not create the node here as, depending on tests, we might call
; 355  :   // _M_key_compare that can throw an exception.
; 356  :   _Base_ptr __new_node;
; 357  : 
; 358  :   if ( __parent == &this->_M_header._M_data ) {

	cmp	edi, ebx
	mov	esi, eax
	jne	SHORT $LN7@M_insert@7

; 359  :     __new_node = _M_create_node(__val);

	push	esi
	mov	ecx, ebx
	call	?_M_create_node@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEPAU_Rb_tree_node_base@23@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_create_node

; 360  :     _S_left(__parent) = __new_node;   // also makes _M_leftmost() = __new_node

	push	edi
	mov	esi, eax
	call	?_S_left@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_left
	add	esp, 4

; 361  :     _M_root() = __new_node;

	mov	ecx, ebx
	mov	DWORD PTR [eax], esi
	call	?_M_root@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_root
	mov	DWORD PTR [eax], esi

; 362  :     _M_rightmost() = __new_node;
; 363  :   }
; 364  :   else if ( __on_right == 0 &&     // If __on_right != 0, the remainder fails to false

	jmp	SHORT $LN42@M_insert@7
$LN7@M_insert@7:

; 365  :            ( __on_left != 0 ||     // If __on_left != 0, the remainder succeeds to true
; 366  :              _M_key_compare( _KeyOfValue()(__val), _S_key(__parent) ) ) ) {

	cmp	DWORD PTR ___on_right$[esp+8], 0
	jne	SHORT $LN5@M_insert@7
	cmp	DWORD PTR ___on_left$[esp+8], 0
	jne	SHORT $LN4@M_insert@7
	push	edi
	call	?_S_value@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@PAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_value
	mov	ecx, eax
	add	esp, 4
	mov	eax, esi
	call	??Rstr_pred@CEnvironment@@QBE_NABVshared_str@@0@Z ; CEnvironment::str_pred::operator()
	test	al, al
	je	SHORT $LN5@M_insert@7
$LN4@M_insert@7:

; 367  :     __new_node = _M_create_node(__val);

	push	esi
	mov	ecx, ebx
	call	?_M_create_node@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEPAU_Rb_tree_node_base@23@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_create_node

; 368  :     _S_left(__parent) = __new_node;

	push	edi
	mov	esi, eax
	call	?_S_left@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_left
	add	esp, 4

; 369  :     if (__parent == _M_leftmost())

	mov	ecx, ebx
	mov	DWORD PTR [eax], esi
	call	?_M_leftmost@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_leftmost
	cmp	edi, DWORD PTR [eax]
	jne	SHORT $LN1@M_insert@7

; 370  :       _M_leftmost() = __new_node;   // maintain _M_leftmost() pointing to min node

	mov	ecx, ebx
	call	?_M_leftmost@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_leftmost

; 371  :   }
; 372  :   else {

	jmp	SHORT $LN43@M_insert@7
$LN5@M_insert@7:

; 373  :     __new_node = _M_create_node(__val);

	push	esi
	mov	ecx, ebx
	call	?_M_create_node@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEPAU_Rb_tree_node_base@23@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_create_node

; 374  :     _S_right(__parent) = __new_node;

	push	edi
	mov	esi, eax
	call	?_S_right@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_right
	add	esp, 4

; 375  :     if (__parent == _M_rightmost())

	mov	ecx, ebx
	mov	DWORD PTR [eax], esi
	call	?_M_rightmost@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_rightmost
	cmp	edi, DWORD PTR [eax]
	jne	SHORT $LN1@M_insert@7
$LN42@M_insert@7:

; 376  :       _M_rightmost() = __new_node;  // maintain _M_rightmost() pointing to max node

	mov	ecx, ebx
	call	?_M_rightmost@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_rightmost
$LN43@M_insert@7:
	mov	DWORD PTR [eax], esi
$LN1@M_insert@7:

; 377  :   }
; 378  :   _S_parent(__new_node) = __parent;

	push	esi
	call	?_S_parent@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_parent
	mov	DWORD PTR [eax], edi
	add	esp, 4

; 379  :   _Rb_global_inst::_Rebalance(__new_node, this->_M_header._M_data._M_parent);

	lea	edi, DWORD PTR [ebx+4]
	mov	eax, esi
	call	?_Rebalance@?$_Rb_global@_N@priv@stlp_std@@SAXPAU_Rb_tree_node_base@23@AAPAU423@@Z ; stlp_std::priv::_Rb_global<bool>::_Rebalance

; 380  :   ++_M_node_count;

	add	DWORD PTR [ebx+16], 1
	pop	edi

; 381  :   return iterator(__new_node);

	mov	DWORD PTR [ebp], esi
	pop	esi
	mov	eax, ebp
	pop	ebp

; 382  : }

	ret	12					; 0000000cH
?_M_insert@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@PAU_Rb_tree_node_base@23@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@00@Z ENDP ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_insert
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrserverentities\object_destroyer.h
_TEXT	ENDS
;	COMDAT ??$delete_data@$00@?$CHelper4@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z
_TEXT	SEGMENT
??$delete_data@$00@?$CHelper4@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z PROC ; CDestroyer::CHelper4<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >::delete_data<1>, COMDAT
; _data$ = eax

; 136  : 		{
; 137  : 			CHelper3::delete_data	(data);

	push	eax
	call	??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >
	pop	ecx

; 138  : 		}

	ret	0
??$delete_data@$00@?$CHelper4@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z ENDP ; CDestroyer::CHelper4<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >::delete_data<1>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z
_TEXT	SEGMENT
??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z PROC ; CDestroyer::delete_data<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >, COMDAT
; _data$ = eax

; 144  : 		CHelper4<T>::delete_data<object_type_traits::is_stl_container<T>::value>(data);

	push	eax
	call	??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >
	pop	ecx

; 145  : 	}

	ret	0
??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z ENDP ; CDestroyer::delete_data<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_pair.h
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@QAE@ABVshared_str@@ABV?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@Z
_TEXT	SEGMENT
___b$ = 8						; size = 4
??0?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@QAE@ABVshared_str@@ABV?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@Z PROC ; stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >, COMDAT
; _this$ = esi
; ___a$ = eax

; 56   :   pair(const _T1& __a, const _T2& __b) : first(__a), second(__b) {}

	mov	DWORD PTR [esi], 0
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN5@pair@14
	add	DWORD PTR [ecx], 1
$LN5@pair@14:
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN8@pair@14
	add	DWORD PTR [eax], -1
	mov	edx, DWORD PTR [esi]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN8@pair@14
	mov	DWORD PTR [esi], 0
$LN8@pair@14:
	mov	eax, DWORD PTR ___b$[esp-4]
	mov	DWORD PTR [esi], ecx
	push	eax
	lea	ecx, DWORD PTR [esi+4]
	call	??0?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@QAE@ABV0@@Z
	mov	eax, esi
	ret	4
??0?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@QAE@ABVshared_str@@ABV?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@Z ENDP ; stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
_TEXT	ENDS
;	COMDAT ??$xr_new@VCEnvDescriptor@@Vshared_str@@@@YAPAVCEnvDescriptor@@ABVshared_str@@@Z
_TEXT	SEGMENT
_p1$ = 8						; size = 4
??$xr_new@VCEnvDescriptor@@Vshared_str@@@@YAPAVCEnvDescriptor@@ABVshared_str@@@Z PROC ; xr_new<CEnvDescriptor,shared_str>, COMDAT

; 74   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	188					; 000000bcH
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 75   : 	return new (ptr) T(p1);

	test	eax, eax
	je	SHORT $LN3@xr_new@32
	mov	ecx, DWORD PTR _p1$[esp-4]
	push	ecx
	mov	ecx, eax
	call	??0CEnvDescriptor@@QAE@ABVshared_str@@@Z ; CEnvDescriptor::CEnvDescriptor

; 76   : }

	ret	0
$LN3@xr_new@32:

; 75   : 	return new (ptr) T(p1);

	xor	eax, eax

; 76   : }

	ret	0
??$xr_new@VCEnvDescriptor@@Vshared_str@@@@YAPAVCEnvDescriptor@@ABVshared_str@@@Z ENDP ; xr_new<CEnvDescriptor,shared_str>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_new@VCEnvAmbient@@@@YAPAVCEnvAmbient@@XZ
_TEXT	SEGMENT
??$xr_new@VCEnvAmbient@@@@YAPAVCEnvAmbient@@XZ PROC	; xr_new<CEnvAmbient>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	40					; 00000028H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	mov	esi, eax
	test	esi, esi
	je	SHORT $LN3@xr_new@33
	lea	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], 0
	call	??0?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@QAE@XZ ; xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >
	lea	ecx, DWORD PTR [esi+24]
	call	??0?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@QAE@XZ ; xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >
	mov	DWORD PTR [esi+36], 0
	mov	eax, esi
	pop	esi

; 70   : }

	ret	0
$LN3@xr_new@33:

; 69   : 	return new (ptr) T();

	xor	eax, eax
	pop	esi

; 70   : }

	ret	0
??$xr_new@VCEnvAmbient@@@@YAPAVCEnvAmbient@@XZ ENDP	; xr_new<CEnvAmbient>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrserverentities\object_destroyer.h
_TEXT	ENDS
;	COMDAT ??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@@YAXABV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z
_TEXT	SEGMENT
??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@@YAXABV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z PROC ; delete_data<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >, COMDAT
; _data$ = eax

; 151  : 	T	*temp = const_cast<T*>(&data);
; 152  : 	CDestroyer::delete_data(*temp);

	push	eax
	call	??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >
	pop	ecx

; 153  : }

	ret	0
??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@@YAXABV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z ENDP ; delete_data<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.c
_TEXT	ENDS
;	COMDAT ?_M_fill_insert@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXIABQAX@Z
_TEXT	SEGMENT
$T455364 = -1						; size = 1
?_M_fill_insert@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXIABQAX@Z PROC ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_fill_insert, COMDAT
; _this$ = ecx
; ___pos$ = esi
; ___n$ = edx
; ___x$ = eax

; 167  :                                          size_type __n, const _Tp& __x) {

	push	ecx
	push	edi

; 168  :   if (__n != 0) {
; 169  :     if (size_type(this->_M_end_of_storage._M_data - this->_M_finish) >= __n) {

	mov	edi, DWORD PTR [ecx+8]
	sub	edi, DWORD PTR [ecx+4]
	sar	edi, 2
	cmp	edi, edx
	jb	SHORT $LN2@M_fill_ins@21

; 170  :       _M_fill_insert_aux(__pos, __n, __x, _Movable());

	lea	edi, DWORD PTR $T455364[esp+8]
	push	edi
	push	eax
	push	edx
	push	esi
	call	?_M_fill_insert_aux@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXIABQAXABU__false_type@3@@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_fill_insert_aux
	pop	edi

; 173  :   }
; 174  : }

	pop	ecx
	ret	0
$LN2@M_fill_ins@21:

; 171  :     } else
; 172  :       _M_insert_overflow(__pos, __x, _TrivialCopy(), __n);

	push	0
	push	edx
	push	esi
	mov	edi, ecx
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
	pop	edi

; 173  :   }
; 174  : }

	pop	ecx
	ret	0
?_M_fill_insert@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXIABQAX@Z ENDP ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_fill_insert
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?clear@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEXXZ PROC ; stlp_std::vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::clear, COMDAT
; _this$ = edi

; 223  :   void clear() { _M_impl.clear(); }

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN12@clear@61
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN18@clear@61
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN18@clear@61:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN12@clear@61:
	ret	0
?clear@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEXXZ ENDP ; stlp_std::vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::clear
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?insert@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXPAPAXIABQAX@Z
_TEXT	SEGMENT
$T455460 = -1						; size = 1
?insert@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXPAPAXIABQAX@Z PROC ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::insert, COMDAT
; _this$ = ecx
; ___pos$ = esi
; ___n$ = edx
; ___x$ = eax

; 529  :   { _M_fill_insert(__pos, __n, __x); }

	push	ecx
	test	edx, edx
	je	SHORT $LN3@insert@12
	push	edi
	mov	edi, DWORD PTR [ecx+8]
	sub	edi, DWORD PTR [ecx+4]
	sar	edi, 2
	cmp	edi, edx
	jb	SHORT $LN4@insert@12
	lea	edi, DWORD PTR $T455460[esp+8]
	push	edi
	push	eax
	push	edx
	push	esi
	call	?_M_fill_insert_aux@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXIABQAXABU__false_type@3@@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_fill_insert_aux
	pop	edi
	pop	ecx
	ret	0
$LN4@insert@12:
	push	0
	push	edx
	push	esi
	mov	edi, ecx
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
	pop	edi
$LN3@insert@12:
	pop	ecx
	ret	0
?insert@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXPAPAXIABQAX@Z ENDP ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::insert
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?clear_and_free@?$xr_vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@@QAEXXZ
_TEXT	SEGMENT
?clear_and_free@?$xr_vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@@QAEXXZ PROC ; xr_vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::clear_and_free, COMDAT
; _this$ = edi

; 128  : 	void	clear_and_free		()									{ inherited::clear();			}

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN14@clear_and_@22
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN20@clear_and_@22
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN20@clear_and_@22:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN14@clear_and_@22:
	ret	0
?clear_and_free@?$xr_vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@@QAEXXZ ENDP ; xr_vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::clear_and_free
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?resize@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXIABQAX@Z
_TEXT	SEGMENT
$T455654 = -1						; size = 1
?resize@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXIABQAX@Z PROC ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::resize, COMDAT
; _this$ = edx
; ___new_size$ = ecx
; ___x$ = eax

; 596  :   void resize(size_type __new_size, const _Tp& __x = _STLP_DEFAULT_CONSTRUCTED(_Tp)) {

	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	edi, edx

; 597  : #else
; 598  :   void resize(size_type __new_size, const _Tp& __x) {
; 599  : #endif /*_STLP_DONT_SUP_DFLT_PARAM*/
; 600  :     if (__new_size < size())

	mov	ebx, DWORD PTR [edi]
	mov	esi, ecx
	mov	ecx, DWORD PTR [edi+4]
	mov	edx, ecx
	sub	edx, ebx
	sar	edx, 2
	cmp	esi, edx
	jae	SHORT $LN2@resize@10

; 601  :       erase(begin() + __new_size, end());

	lea	eax, DWORD PTR [ebx+esi*4]
	cmp	eax, ecx
	je	SHORT $LN28@resize@10
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN20@resize@10
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN20@resize@10:
	mov	DWORD PTR [edi+4], eax
	pop	edi
	pop	esi
	pop	ebx

; 604  :   }

	pop	ecx
	ret	0
$LN2@resize@10:

; 602  :     else
; 603  :       insert(end(), __new_size - size(), __x);

	sub	esi, edx
	je	SHORT $LN28@resize@10
	mov	edx, DWORD PTR [edi+8]
	sub	edx, ecx
	sar	edx, 2
	cmp	edx, esi
	jb	SHORT $LN29@resize@10
	lea	edx, DWORD PTR $T455654[esp+16]
	push	edx
	push	eax
	push	esi
	push	ecx
	mov	ecx, edi
	call	?_M_fill_insert_aux@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXIABQAXABU__false_type@3@@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_fill_insert_aux
	pop	edi
	pop	esi
	pop	ebx

; 604  :   }

	pop	ecx
	ret	0

; 602  :     else
; 603  :       insert(end(), __new_size - size(), __x);

$LN29@resize@10:
	push	0
	push	esi
	push	ecx
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
$LN28@resize@10:
	pop	edi
	pop	esi
	pop	ebx

; 604  :   }

	pop	ecx
	ret	0
?resize@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXIABQAX@Z ENDP ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::resize
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_map.h
_TEXT	ENDS
;	COMDAT ?clear@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAEXXZ PROC ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::clear, COMDAT
; _this$ = ecx

; 201  :   void clear() { _M_t.clear(); }

	jmp	?clear@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::clear
?clear@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAEXXZ ENDP ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::clear
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@stlp_std@@QAEXABQAVCEnvDescriptor@@@Z
_TEXT	SEGMENT
?push_back@?$vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@stlp_std@@QAEXABQAVCEnvDescriptor@@@Z PROC ; stlp_std::vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >::push_back, COMDAT
; _this$ = ecx
; ___x$ = eax

; 171  :   { _M_impl.push_back(cast_traits::to_storage_type_cref(__x)); }

	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [edi+4]
	cmp	ecx, DWORD PTR [edi+8]
	je	SHORT $LN8@push_back@54
	push	eax
	push	ecx
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [edi+4], 4
	pop	edi
	ret	0
$LN8@push_back@54:
	push	1
	push	1
	push	ecx
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
	pop	edi
	ret	0
?push_back@?$vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@stlp_std@@QAEXABQAVCEnvDescriptor@@@Z ENDP ; stlp_std::vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >::push_back
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEXABQAVCEnvAmbient@@@Z
_TEXT	SEGMENT
?push_back@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEXABQAVCEnvAmbient@@@Z PROC ; stlp_std::vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::push_back, COMDAT
; _this$ = ecx
; ___x$ = eax

; 171  :   { _M_impl.push_back(cast_traits::to_storage_type_cref(__x)); }

	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [edi+4]
	cmp	ecx, DWORD PTR [edi+8]
	je	SHORT $LN8@push_back@55
	push	eax
	push	ecx
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [edi+4], 4
	pop	edi
	ret	0
$LN8@push_back@55:
	push	1
	push	1
	push	ecx
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
	pop	edi
	ret	0
?push_back@?$vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@stlp_std@@QAEXABQAVCEnvAmbient@@@Z ENDP ; stlp_std::vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::push_back
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?clear@?$xr_vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@@QAEXXZ
_TEXT	SEGMENT
?clear@?$xr_vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@@QAEXXZ PROC ; xr_vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::clear, COMDAT
; _this$ = edi

; 133  : 	void	clear				()									{ clear_and_free	();			}

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN16@clear@62
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN22@clear@62
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN22@clear@62:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN16@clear@62:
	ret	0
?clear@?$xr_vector@PAVCEnvAmbient@@V?$xalloc@PAVCEnvAmbient@@@@@@QAEXXZ ENDP ; xr_vector<CEnvAmbient *,xalloc<CEnvAmbient *> >::clear
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?resize@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QAEXIABQAUSSndChannel@CEnvAmbient@@@Z
_TEXT	SEGMENT
?resize@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QAEXIABQAUSSndChannel@CEnvAmbient@@@Z PROC ; stlp_std::vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::resize, COMDAT
; _this$ = edx
; ___new_size$ = ecx
; ___x$ = eax

; 217  :   { _M_impl.resize(__new_size, cast_traits::to_storage_type_cref(__x)); }

	jmp	?resize@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXIABQAX@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::resize
?resize@?$vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@stlp_std@@QAEXIABQAUSSndChannel@CEnvAmbient@@@Z ENDP ; stlp_std::vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::resize
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?resize@?$vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@stlp_std@@QAEXIABQAUSEffect@CEnvAmbient@@@Z
_TEXT	SEGMENT
?resize@?$vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@stlp_std@@QAEXIABQAUSEffect@CEnvAmbient@@@Z PROC ; stlp_std::vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::resize, COMDAT
; _this$ = edx
; ___new_size$ = ecx
; ___x$ = eax

; 217  :   { _M_impl.resize(__new_size, cast_traits::to_storage_type_cref(__x)); }

	jmp	?resize@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXIABQAX@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::resize
?resize@?$vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@stlp_std@@QAEXIABQAUSEffect@CEnvAmbient@@@Z ENDP ; stlp_std::vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::resize
_TEXT	ENDS
PUBLIC	??0CEnvDescriptorMixer@@QAE@ABVshared_str@@@Z	; CEnvDescriptorMixer::CEnvDescriptorMixer
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\environment_misc.cpp
;	COMDAT ??0CEnvDescriptorMixer@@QAE@ABVshared_str@@@Z
_TEXT	SEGMENT
_identifier$ = 8					; size = 4
??0CEnvDescriptorMixer@@QAE@ABVshared_str@@@Z PROC	; CEnvDescriptorMixer::CEnvDescriptorMixer, COMDAT
; _this$ = ecx

; 343  : {

	mov	eax, DWORD PTR _identifier$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0CEnvDescriptor@@QAE@ABVshared_str@@@Z ; CEnvDescriptor::CEnvDescriptor
	mov	ecx, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+72]
	call	eax
	mov	DWORD PTR [esi+188], eax

; 344  : }

	mov	eax, esi
	pop	esi
	ret	4
??0CEnvDescriptorMixer@@QAE@ABVshared_str@@@Z ENDP	; CEnvDescriptorMixer::CEnvDescriptorMixer
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\environment.h
_TEXT	ENDS
;	COMDAT ??1SSndChannel@CEnvAmbient@@QAE@XZ
_TEXT	SEGMENT
??1SSndChannel@CEnvAmbient@@QAE@XZ PROC			; CEnvAmbient::SSndChannel::~SSndChannel, COMDAT
; _this$ = edi

; 82   : 		INGAME_EDITOR_VIRTUAL	~SSndChannel			()	{}

	push	esi
	push	ecx
	lea	esi, DWORD PTR [edi+28]
	push	esp
	mov	ecx, esi
	call	?rend@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUref_sound@@@3@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::rend
	push	ecx
	push	esp
	mov	ecx, esi
	call	?rbegin@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUref_sound@@@3@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::rbegin
	call	??$_Destroy_Range@V?$reverse_iterator@PAUref_sound@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUref_sound@@@0@0@Z ; stlp_std::_Destroy_Range<stlp_std::reverse_iterator<ref_sound *> >
	mov	eax, DWORD PTR [esi]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN33@SSndChanne@2
	mov	edx, DWORD PTR [esi+8]
	lea	ecx, DWORD PTR [esi+8]
	sub	edx, eax
	sar	edx, 2
	push	edx
	push	eax
	call	?deallocate@?$xalloc@Uref_sound@@@@QBEXPAUref_sound@@I@Z ; xalloc<ref_sound>::deallocate
$LN33@SSndChanne@2:
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN43@SSndChanne@2
	add	DWORD PTR [eax], -1
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN43@SSndChanne@2
	mov	DWORD PTR [edi], 0
$LN43@SSndChanne@2:
	pop	esi
	ret	0
??1SSndChannel@CEnvAmbient@@QAE@XZ ENDP			; CEnvAmbient::SSndChannel::~SSndChannel
; Function compile flags: /Ogtpy
;	COMDAT ??_GSSndChannel@CEnvAmbient@@QAEPAXI@Z
_TEXT	SEGMENT
??_GSSndChannel@CEnvAmbient@@QAEPAXI@Z PROC		; CEnvAmbient::SSndChannel::`scalar deleting destructor', COMDAT
; _this$ = edi
	push	esi
	push	ecx
	lea	esi, DWORD PTR [edi+28]
	push	esp
	mov	ecx, esi
	call	?rend@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUref_sound@@@3@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::rend
	push	ecx
	push	esp
	mov	ecx, esi
	call	?rbegin@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUref_sound@@@3@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::rbegin
	call	??$_Destroy_Range@V?$reverse_iterator@PAUref_sound@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUref_sound@@@0@0@Z ; stlp_std::_Destroy_Range<stlp_std::reverse_iterator<ref_sound *> >
	mov	eax, DWORD PTR [esi]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN36@scalar@77
	mov	edx, DWORD PTR [esi+8]
	lea	ecx, DWORD PTR [esi+8]
	sub	edx, eax
	sar	edx, 2
	push	edx
	push	eax
	call	?deallocate@?$xalloc@Uref_sound@@@@QBEXPAUref_sound@@I@Z ; xalloc<ref_sound>::deallocate
$LN36@scalar@77:
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN56@scalar@77
	add	DWORD PTR [eax], -1
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax], 0
	mov	eax, edi
	jne	SHORT $LN46@scalar@77
	mov	DWORD PTR [edi], 0
	pop	esi
	ret	0
$LN56@scalar@77:
	mov	eax, edi
$LN46@scalar@77:
	pop	esi
	ret	0
??_GSSndChannel@CEnvAmbient@@QAEPAXI@Z ENDP		; CEnvAmbient::SSndChannel::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
_TEXT	ENDS
;	COMDAT ??R?$xr_special_free@$0A@USSndChannel@CEnvAmbient@@@@QAEXAAPAUSSndChannel@CEnvAmbient@@@Z
_TEXT	SEGMENT
??R?$xr_special_free@$0A@USSndChannel@CEnvAmbient@@@@QAEXAAPAUSSndChannel@CEnvAmbient@@@Z PROC ; xr_special_free<0,CEnvAmbient::SSndChannel>::operator(), COMDAT
; _ptr$ = esi

; 142  : 	{

	push	edi

; 143  : 		ptr->~T			();

	mov	edi, DWORD PTR [esi]
	call	??_GSSndChannel@CEnvAmbient@@QAEPAXI@Z

; 144  : 		Memory.mem_free	(ptr);

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	pop	edi

; 145  : 	}

	ret	0
??R?$xr_special_free@$0A@USSndChannel@CEnvAmbient@@@@QAEXAAPAUSSndChannel@CEnvAmbient@@@Z ENDP ; xr_special_free<0,CEnvAmbient::SSndChannel>::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_delete@USSndChannel@CEnvAmbient@@@@YAXAAPAUSSndChannel@CEnvAmbient@@@Z
_TEXT	SEGMENT
??$xr_delete@USSndChannel@CEnvAmbient@@@@YAXAAPAUSSndChannel@CEnvAmbient@@@Z PROC ; xr_delete<CEnvAmbient::SSndChannel>, COMDAT
; _ptr$ = esi

; 150  : {

	push	edi

; 151  : 	if (ptr) 

	mov	edi, DWORD PTR [esi]
	test	edi, edi
	je	SHORT $LN1@xr_delete@45

; 152  : 	{
; 153  : 		xr_special_free<is_polymorphic<T>::result,T>()(ptr);

	call	??_GSSndChannel@CEnvAmbient@@QAEPAXI@Z
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 154  : 		ptr = NULL;

	mov	DWORD PTR [esi], 0
$LN1@xr_delete@45:
	pop	edi

; 155  : 	}
; 156  : }

	ret	0
??$xr_delete@USSndChannel@CEnvAmbient@@@@YAXAAPAUSSndChannel@CEnvAmbient@@@Z ENDP ; xr_delete<CEnvAmbient::SSndChannel>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrserverentities\object_destroyer.h
_TEXT	ENDS
;	COMDAT ??$delete_data@$00@?$CHelper2@PAUSSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAPAUSSndChannel@CEnvAmbient@@@Z
_TEXT	SEGMENT
??$delete_data@$00@?$CHelper2@PAUSSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAPAUSSndChannel@CEnvAmbient@@@Z PROC ; CDestroyer::CHelper2<CEnvAmbient::SSndChannel *>::delete_data<1>, COMDAT
; _data$ = esi

; 106  : 		IC	static void delete_data<true>(T &data)

	push	edi

; 107  : 		{
; 108  : 			if (data)
; 109  : 				CDestroyer::delete_data	(*data);
; 110  : 			xr_delete					(data);

	mov	edi, DWORD PTR [esi]
	test	edi, edi
	je	SHORT $LN4@delete_dat@13
	call	??_GSSndChannel@CEnvAmbient@@QAEPAXI@Z
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
$LN4@delete_dat@13:
	pop	edi

; 111  : 		}

	ret	0
??$delete_data@$00@?$CHelper2@PAUSSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAPAUSSndChannel@CEnvAmbient@@@Z ENDP ; CDestroyer::CHelper2<CEnvAmbient::SSndChannel *>::delete_data<1>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$delete_data@$0A@@?$CHelper4@PAUSSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAPAUSSndChannel@CEnvAmbient@@@Z
_TEXT	SEGMENT
??$delete_data@$0A@@?$CHelper4@PAUSSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAPAUSSndChannel@CEnvAmbient@@@Z PROC ; CDestroyer::CHelper4<CEnvAmbient::SSndChannel *>::delete_data<0>, COMDAT
; _data$ = esi

; 129  : 		IC	static void delete_data(T &data)

	push	edi

; 130  : 		{
; 131  : 			CHelper2<T>::delete_data<object_type_traits::is_pointer<T>::value>	(data);

	mov	edi, DWORD PTR [esi]
	test	edi, edi
	je	SHORT $LN6@delete_dat@14
	call	??_GSSndChannel@CEnvAmbient@@QAEPAXI@Z
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
$LN6@delete_dat@14:
	pop	edi

; 132  : 		}

	ret	0
??$delete_data@$0A@@?$CHelper4@PAUSSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAPAUSSndChannel@CEnvAmbient@@@Z ENDP ; CDestroyer::CHelper4<CEnvAmbient::SSndChannel *>::delete_data<0>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$delete_data@PAUSSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAPAUSSndChannel@CEnvAmbient@@@Z
_TEXT	SEGMENT
??$delete_data@PAUSSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAPAUSSndChannel@CEnvAmbient@@@Z PROC ; CDestroyer::delete_data<CEnvAmbient::SSndChannel *>, COMDAT
; _data$ = esi

; 143  : 	{

	push	edi

; 144  : 		CHelper4<T>::delete_data<object_type_traits::is_stl_container<T>::value>(data);

	mov	edi, DWORD PTR [esi]
	test	edi, edi
	je	SHORT $LN8@delete_dat@15
	call	??_GSSndChannel@CEnvAmbient@@QAEPAXI@Z
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
$LN8@delete_dat@15:
	pop	edi

; 145  : 	}

	ret	0
??$delete_data@PAUSSndChannel@CEnvAmbient@@@CDestroyer@@SAXAAPAUSSndChannel@CEnvAmbient@@@Z ENDP ; CDestroyer::delete_data<CEnvAmbient::SSndChannel *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z PROC ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >, COMDAT

; 117  : 		{

	push	ebx
	push	ebp
	push	esi

; 118  : 			T::iterator					I = data.begin();

	mov	esi, DWORD PTR _data$[esp+8]
	mov	eax, DWORD PTR [esi]
	push	edi
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	ebx, eax

; 119  : 			T::iterator					E = data.end();

	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	ebp, eax
	add	esp, 8

; 120  : 			for ( ; I != E; ++I)

	cmp	ebx, ebp
	je	SHORT $LN1@delete_dat@16
$LL3@delete_dat@16:

; 121  : 				CDestroyer::delete_data	(*I);

	mov	edi, DWORD PTR [ebx]
	test	edi, edi
	je	SHORT $LN2@delete_dat@16
	push	ecx
	lea	esi, DWORD PTR [edi+28]
	push	esp
	mov	ecx, esi
	call	?rend@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUref_sound@@@3@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::rend
	push	ecx
	push	esp
	mov	ecx, esi
	call	?rbegin@?$_Impl_vector@Uref_sound@@V?$xalloc@Uref_sound@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUref_sound@@@3@XZ ; stlp_std::priv::_Impl_vector<ref_sound,xalloc<ref_sound> >::rbegin
	call	??$_Destroy_Range@V?$reverse_iterator@PAUref_sound@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUref_sound@@@0@0@Z ; stlp_std::_Destroy_Range<stlp_std::reverse_iterator<ref_sound *> >
	mov	eax, DWORD PTR [esi]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN109@delete_dat@16
	mov	edx, DWORD PTR [esi+8]
	lea	ecx, DWORD PTR [esi+8]
	sub	edx, eax
	sar	edx, 2
	push	edx
	push	eax
	call	?deallocate@?$xalloc@Uref_sound@@@@QBEXPAUref_sound@@I@Z ; xalloc<ref_sound>::deallocate
$LN109@delete_dat@16:
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN119@delete_dat@16
	add	DWORD PTR [eax], -1
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN119@delete_dat@16
	mov	DWORD PTR [edi], 0
$LN119@delete_dat@16:
	mov	ecx, DWORD PTR [ebx]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	esi, DWORD PTR _data$[esp+12]
	mov	DWORD PTR [ebx], 0
$LN2@delete_dat@16:
	add	ebx, 4
	cmp	ebx, ebp
	jne	SHORT $LL3@delete_dat@16
$LN1@delete_dat@16:

; 122  : 			data.clear					();

	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi]
	cmp	eax, ecx
	je	SHORT $LN143@delete_dat@16
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN149@delete_dat@16
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN149@delete_dat@16:
	mov	edx, DWORD PTR _data$[esp+12]
	mov	DWORD PTR [edx+4], eax
$LN143@delete_dat@16:

; 123  : 		}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z ENDP ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.c
_TEXT	ENDS
;	COMDAT ?insert_unique@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$pair@U?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@_N@3@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
$T496225 = 16						; size = 4
___val$ = 16						; size = 4
?insert_unique@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$pair@U?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@_N@3@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@@Z PROC ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::insert_unique, COMDAT

; 406  :   _Base_ptr __y = &this->_M_header._M_data;

	mov	ecx, DWORD PTR _this$[esp-4]
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	ebp, ecx

; 407  :   _Base_ptr __x = _M_root();

	call	?_M_root@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_root
	mov	edi, DWORD PTR [eax]

; 408  :   bool __comp = true;
; 409  :   while (__x != 0) {

	test	edi, edi
	mov	bl, 1
	je	SHORT $LN5@insert_uni@8
$LL6@insert_uni@8:

; 410  :     __y = __x;
; 411  :     __comp = _M_key_compare(_KeyOfValue()(__val), _S_key(__x));

	push	edi
	mov	ebp, edi
	call	?_S_value@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@PAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_value
	mov	ecx, DWORD PTR ___val$[esp+16]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	edx, eax
	jne	SHORT $LN24@insert_uni@8
	xor	eax, eax
	jmp	SHORT $LN94@insert_uni@8
$LN24@insert_uni@8:
	test	eax, eax
	je	SHORT $LN31@insert_uni@8
	add	eax, 16					; 00000010H
	jmp	SHORT $LN32@insert_uni@8
$LN31@insert_uni@8:
	xor	eax, eax
$LN32@insert_uni@8:
	test	edx, edx
	je	SHORT $LN35@insert_uni@8
	add	edx, 16					; 00000010H
	jmp	SHORT $LN36@insert_uni@8
$LN35@insert_uni@8:
	xor	edx, edx
$LN36@insert_uni@8:
	mov	ecx, eax
	mov	eax, edx
	npad	4
$LL91@insert_uni@8:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN92@insert_uni@8
	test	dl, dl
	je	SHORT $LN93@insert_uni@8
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN92@insert_uni@8
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL91@insert_uni@8
$LN93@insert_uni@8:
	xor	eax, eax
	jmp	SHORT $LN94@insert_uni@8
$LN92@insert_uni@8:
	sbb	eax, eax
	sbb	eax, -1
$LN94@insert_uni@8:
	test	eax, eax
	setl	bl

; 412  :     __x = __comp ? _S_left(__x) : _S_right(__x);

	test	bl, bl
	push	edi
	je	SHORT $LN9@insert_uni@8
	call	?_S_left@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_left
	jmp	SHORT $LN95@insert_uni@8
$LN9@insert_uni@8:
	call	?_S_right@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_right
$LN95@insert_uni@8:
	mov	edi, DWORD PTR [eax]
	add	esp, 4
	test	edi, edi
	jne	SHORT $LL6@insert_uni@8
$LN5@insert_uni@8:

; 413  :   }
; 414  :   iterator __j = iterator(__y);
; 415  :   if (__comp) {

	test	bl, bl
	mov	esi, ebp
	je	SHORT $LN67@insert_uni@8

; 416  :     if (__j == begin())

	mov	ebx, DWORD PTR _this$[esp+12]
	mov	ecx, ebx
	call	?_M_leftmost@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_leftmost
	cmp	ebp, DWORD PTR [eax]
	jne	SHORT $LN3@insert_uni@8

; 417  :       return pair<iterator,bool>(_M_insert(__y, __val, /* __x*/ __y), true);

	mov	eax, DWORD PTR ___val$[esp+12]
	push	0
	push	ebp
$LN97@insert_uni@8:
	lea	edx, DWORD PTR $T496225[esp+20]
	mov	ecx, ebp
	push	edx
	call	?_M_insert@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@PAU_Rb_tree_node_base@23@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@00@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_insert
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+12]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], ecx
	mov	BYTE PTR [eax+4], 1
	pop	ebx

; 425  : }

	ret	12					; 0000000cH
$LN3@insert_uni@8:

; 418  :     else
; 419  :       --__j;

	push	ebp
	call	?_M_decrement@?$_Rb_global@_N@priv@stlp_std@@SAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_global<bool>::_M_decrement
	add	esp, 4
	mov	esi, eax
$LN67@insert_uni@8:

; 420  :   }
; 421  :   if (_M_key_compare(_S_key(__j._M_node), _KeyOfValue()(__val))) {

	push	esi
	call	?_S_value@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@PAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_value
	mov	ebx, DWORD PTR ___val$[esp+16]
	add	esp, 4
	mov	ecx, ebx
	call	??Rstr_pred@CEnvironment@@QBE_NABVshared_str@@0@Z ; CEnvironment::str_pred::operator()
	test	al, al
	je	SHORT $LN1@insert_uni@8

; 422  :     return pair<iterator,bool>(_M_insert(__y, __val, __x), true);

	push	0
	mov	eax, ebx
	mov	ebx, DWORD PTR _this$[esp+16]
	push	edi
	jmp	SHORT $LN97@insert_uni@8
$LN1@insert_uni@8:

; 423  :   }
; 424  :   return pair<iterator,bool>(__j, false);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+12]
	pop	edi
	mov	DWORD PTR [eax], esi
	pop	esi
	pop	ebp
	mov	BYTE PTR [eax+4], 0
	pop	ebx

; 425  : }

	ret	12					; 0000000cH
?insert_unique@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$pair@U?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@_N@3@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@@Z ENDP ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::insert_unique
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrserverentities\object_destroyer.h
_TEXT	ENDS
;	COMDAT ??$delete_data@$00@?$CHelper4@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z
_TEXT	SEGMENT
??$delete_data@$00@?$CHelper4@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z PROC ; CDestroyer::CHelper4<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >::delete_data<1>, COMDAT
; _data$ = eax

; 136  : 		{
; 137  : 			CHelper3::delete_data	(data);

	push	eax
	call	??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >
	pop	ecx

; 138  : 		}

	ret	0
??$delete_data@$00@?$CHelper4@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z ENDP ; CDestroyer::CHelper4<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >::delete_data<1>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z
_TEXT	SEGMENT
??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z PROC ; CDestroyer::delete_data<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >, COMDAT
; _data$ = eax

; 144  : 		CHelper4<T>::delete_data<object_type_traits::is_stl_container<T>::value>(data);

	push	eax
	call	??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >
	pop	ecx

; 145  : 	}

	ret	0
??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z ENDP ; CDestroyer::delete_data<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_tree.c
_TEXT	ENDS
;	COMDAT ?insert_unique@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@U423@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@@Z
_TEXT	SEGMENT
$T496447 = -12						; size = 8
___after$137804 = -12					; size = 4
$T496442 = -12						; size = 8
$T496436 = -12						; size = 8
___comp_pos_v$137805 = 8				; size = 1
___before$137794 = 8					; size = 4
___position$ = 8					; size = 4
___comp_v_pos$137795 = 12				; size = 1
___after$137775 = 12					; size = 4
___val$ = 12						; size = 4
?insert_unique@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@U423@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@@Z PROC ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::insert_unique, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = esi

; 433  :                                                                           const _Value& __val) {

	sub	esp, 16					; 00000010H
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR ___val$[esp+20]
	push	edi

; 434  :   if (__position._M_node == this->_M_header._M_data._M_left) { // begin()

	mov	edi, DWORD PTR ___position$[esp+24]
	mov	ebx, eax
	cmp	edi, DWORD PTR [ebx+8]
	jne	$LN27@insert_uni@9

; 435  : 
; 436  :     // if the container is empty, fall back on insert_unique.
; 437  :     if (empty())

	cmp	DWORD PTR [ebx+16], 0
	jne	SHORT $LN26@insert_uni@9

; 438  :       return insert_unique(__val).first;

	push	ebp
	lea	eax, DWORD PTR $T496436[esp+32]
	push	eax
	push	ebx
	call	?insert_unique@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$pair@U?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@_N@3@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::insert_unique
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi], ecx

; 529  :         else
; 530  :           return insert_unique(__val).first;

	mov	eax, esi

; 531  :       }
; 532  :     }
; 533  :   }
; 534  : }

	pop	edi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
$LN26@insert_uni@9:

; 439  : 
; 440  :     if (_M_key_compare(_KeyOfValue()(__val), _S_key(__position._M_node))) {

	push	edi
	call	?_S_value@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@PAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_value
	mov	ecx, eax
	add	esp, 4
	mov	eax, ebp
	call	??Rstr_pred@CEnvironment@@QBE_NABVshared_str@@0@Z ; CEnvironment::str_pred::operator()
	test	al, al
	je	SHORT $LN25@insert_uni@9

; 441  :       return _M_insert(__position._M_node, __val, __position._M_node);

	push	0
	push	edi
	push	esi
	mov	eax, ebp
	mov	ecx, edi
	call	?_M_insert@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@PAU_Rb_tree_node_base@23@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@00@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_insert

; 529  :         else
; 530  :           return insert_unique(__val).first;

	mov	eax, esi

; 531  :       }
; 532  :     }
; 533  :   }
; 534  : }

	pop	edi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
$LN25@insert_uni@9:

; 442  :     }
; 443  :     // first argument just needs to be non-null
; 444  :     else {
; 445  :       bool __comp_pos_v = _M_key_compare( _S_key(__position._M_node), _KeyOfValue()(__val) );

	push	edi
	call	?_S_value@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@PAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_value
	add	esp, 4
	mov	ecx, ebp
	call	??Rstr_pred@CEnvironment@@QBE_NABVshared_str@@0@Z ; CEnvironment::str_pred::operator()

; 446  : 
; 447  :       if (__comp_pos_v == false)  // compare > and compare < both false so compare equal

	test	al, al
	jne	SHORT $LN23@insert_uni@9
$LN144@insert_uni@9:

; 448  :         return __position;

	mov	DWORD PTR [esi], edi

; 529  :         else
; 530  :           return insert_unique(__val).first;

	mov	eax, esi

; 531  :       }
; 532  :     }
; 533  :   }
; 534  : }

	pop	edi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
$LN23@insert_uni@9:

; 449  :       //Below __comp_pos_v == true
; 450  : 
; 451  :       // Standard-conformance - does the insertion point fall immediately AFTER
; 452  :       // the hint?
; 453  :       iterator __after = __position;
; 454  :       ++__after;

	lea	eax, DWORD PTR ___after$137775[esp+24]
	mov	DWORD PTR ___after$137775[esp+24], edi
	call	??E?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAEAAU012@XZ ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::operator++

; 455  : 
; 456  :       // Check for only one member -- in that case, __position points to itself,
; 457  :       // and attempting to increment will cause an infinite loop.
; 458  :       if (__after._M_node == &this->_M_header._M_data)

	mov	eax, DWORD PTR ___after$137775[esp+24]
	cmp	eax, ebx
	jne	SHORT $LN22@insert_uni@9

; 459  :         // Check guarantees exactly one member, so comparison was already
; 460  :         // performed and we know the result; skip repeating it in _M_insert
; 461  :         // by specifying a non-zero fourth argument.
; 462  :         return _M_insert(__position._M_node, __val, 0, __position._M_node);

	push	edi
	push	0
	push	esi
	mov	eax, ebp
	mov	ecx, edi
	call	?_M_insert@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@PAU_Rb_tree_node_base@23@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@00@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_insert

; 529  :         else
; 530  :           return insert_unique(__val).first;

	mov	eax, esi

; 531  :       }
; 532  :     }
; 533  :   }
; 534  : }

	pop	edi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
$LN22@insert_uni@9:

; 463  : 
; 464  :       // All other cases:
; 465  : 
; 466  :       // Optimization to catch insert-equivalent -- save comparison results,
; 467  :       // and we get this for free.
; 468  :       if (_M_key_compare( _KeyOfValue()(__val), _S_key(__after._M_node) )) {

	push	eax
	call	?_S_value@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@PAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_value
	mov	ecx, eax
	add	esp, 4
	mov	eax, ebp
	call	??Rstr_pred@CEnvironment@@QBE_NABVshared_str@@0@Z ; CEnvironment::str_pred::operator()
	test	al, al
	je	$LN2@insert_uni@9

; 469  :         if (_S_right(__position._M_node) == 0)

	push	edi
	call	?_S_right@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_right
	add	esp, 4
	cmp	DWORD PTR [eax], 0

; 470  :           return _M_insert(__position._M_node, __val, 0, __position._M_node);

	mov	eax, ebp
	jne	SHORT $LN20@insert_uni@9
$LN147@insert_uni@9:
	push	edi
	push	0
	push	esi
	mov	ecx, edi
	call	?_M_insert@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@PAU_Rb_tree_node_base@23@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@00@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_insert

; 529  :         else
; 530  :           return insert_unique(__val).first;

	mov	eax, esi

; 531  :       }
; 532  :     }
; 533  :   }
; 534  : }

	pop	edi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
$LN20@insert_uni@9:

; 471  :         else
; 472  :           return _M_insert(__after._M_node, __val, __after._M_node);

	mov	ecx, DWORD PTR ___after$137775[esp+24]
	push	0
	push	ecx
	push	esi
	call	?_M_insert@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@PAU_Rb_tree_node_base@23@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@00@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_insert

; 529  :         else
; 530  :           return insert_unique(__val).first;

	mov	eax, esi

; 531  :       }
; 532  :     }
; 533  :   }
; 534  : }

	pop	edi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
$LN27@insert_uni@9:

; 473  :       }
; 474  :       else {
; 475  :         return insert_unique(__val).first;
; 476  :       }
; 477  :     }
; 478  :   }
; 479  :   else if (__position._M_node == &this->_M_header._M_data) { // end()

	cmp	edi, ebx
	jne	SHORT $LN16@insert_uni@9

; 480  :     if (_M_key_compare(_S_key(_M_rightmost()), _KeyOfValue()(__val))) {

	mov	ecx, ebx
	call	?_M_rightmost@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_rightmost
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_S_value@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@PAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_value
	add	esp, 4
	mov	ecx, ebp
	call	??Rstr_pred@CEnvironment@@QBE_NABVshared_str@@0@Z ; CEnvironment::str_pred::operator()
	test	al, al
	je	SHORT $LN15@insert_uni@9

; 481  :         // pass along to _M_insert that it can skip comparing
; 482  :         // v, Key ; since compare Key, v was true, compare v, Key must be false.
; 483  :         return _M_insert(_M_rightmost(), __val, 0, __position._M_node); // Last argument only needs to be non-null

	mov	ecx, ebx
	call	?_M_rightmost@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_rightmost
	push	edi
	mov	ecx, eax
	mov	ecx, DWORD PTR [ecx]
	push	0
	push	esi
	mov	eax, ebp
	call	?_M_insert@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@PAU_Rb_tree_node_base@23@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@00@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_insert

; 529  :         else
; 530  :           return insert_unique(__val).first;

	mov	eax, esi

; 531  :       }
; 532  :     }
; 533  :   }
; 534  : }

	pop	edi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
$LN15@insert_uni@9:

; 484  :     }
; 485  :     else
; 486  :       return insert_unique(__val).first;

	push	ebp
	lea	ecx, DWORD PTR $T496442[esp+32]
	push	ecx
	push	ebx
	call	?insert_unique@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$pair@U?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@_N@3@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::insert_unique
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [esi], edx

; 529  :         else
; 530  :           return insert_unique(__val).first;

	mov	eax, esi

; 531  :       }
; 532  :     }
; 533  :   }
; 534  : }

	pop	edi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
$LN16@insert_uni@9:

; 487  :   }
; 488  :   else {
; 489  :     iterator __before = __position;
; 490  :     --__before;

	push	edi
	call	?_M_decrement@?$_Rb_global@_N@priv@stlp_std@@SAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_global<bool>::_M_decrement

; 491  : 
; 492  :     bool __comp_v_pos = _M_key_compare(_KeyOfValue()(__val), _S_key(__position._M_node));

	push	edi
	mov	DWORD PTR ___before$137794[esp+32], eax
	call	?_S_value@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@PAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_value
	mov	ecx, eax
	add	esp, 8
	mov	eax, ebp
	call	??Rstr_pred@CEnvironment@@QBE_NABVshared_str@@0@Z ; CEnvironment::str_pred::operator()

; 493  : 
; 494  :     if (__comp_v_pos
; 495  :         && _M_key_compare( _S_key(__before._M_node), _KeyOfValue()(__val) )) {

	test	al, al
	mov	BYTE PTR ___comp_v_pos$137795[esp+24], al
	je	SHORT $LN12@insert_uni@9
	mov	eax, DWORD PTR ___before$137794[esp+24]
	push	eax
	call	?_S_value@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@PAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_value
	add	esp, 4
	mov	ecx, ebp
	call	??Rstr_pred@CEnvironment@@QBE_NABVshared_str@@0@Z ; CEnvironment::str_pred::operator()
	test	al, al
	je	SHORT $LN12@insert_uni@9

; 496  : 
; 497  :       if (_S_right(__before._M_node) == 0)

	mov	ecx, DWORD PTR ___before$137794[esp+24]
	push	ecx
	call	?_S_right@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_right
	add	esp, 4
	cmp	DWORD PTR [eax], 0

; 498  :         return _M_insert(__before._M_node, __val, 0, __before._M_node); // Last argument only needs to be non-null

	mov	eax, ebp
	jne	SHORT $LN11@insert_uni@9
	mov	ecx, DWORD PTR ___before$137794[esp+24]
	push	ecx
	push	0
	push	esi
	call	?_M_insert@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@PAU_Rb_tree_node_base@23@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@00@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_insert

; 529  :         else
; 530  :           return insert_unique(__val).first;

	mov	eax, esi

; 531  :       }
; 532  :     }
; 533  :   }
; 534  : }

	pop	edi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
$LN11@insert_uni@9:

; 499  :       else
; 500  :         return _M_insert(__position._M_node, __val, __position._M_node);

	push	0
	push	edi
	push	esi
	mov	ecx, edi
	call	?_M_insert@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@PAU_Rb_tree_node_base@23@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@00@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_insert

; 529  :         else
; 530  :           return insert_unique(__val).first;

	mov	eax, esi

; 531  :       }
; 532  :     }
; 533  :   }
; 534  : }

	pop	edi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
$LN12@insert_uni@9:

; 501  :       // first argument just needs to be non-null
; 502  :     }
; 503  :     else {
; 504  :       // Does the insertion point fall immediately AFTER the hint?
; 505  :       iterator __after = __position;
; 506  :       ++__after;

	lea	eax, DWORD PTR ___after$137804[esp+28]
	mov	DWORD PTR ___after$137804[esp+28], edi
	call	??E?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@QAEAAU012@XZ ; stlp_std::priv::_Rb_tree_iterator<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::operator++

; 507  :       // Optimization to catch equivalent cases and avoid unnecessary comparisons
; 508  :       bool __comp_pos_v = !__comp_v_pos;  // Stored this result earlier

	mov	al, BYTE PTR ___comp_v_pos$137795[esp+24]
	test	al, al
	sete	cl

; 509  :       // If the earlier comparison was true, this comparison doesn't need to be
; 510  :       // performed because it must be false.  However, if the earlier comparison
; 511  :       // was false, we need to perform this one because in the equal case, both will
; 512  :       // be false.
; 513  :       if (!__comp_v_pos) {

	test	al, al
	jne	SHORT $LN7@insert_uni@9

; 514  :         __comp_pos_v = _M_key_compare(_S_key(__position._M_node), _KeyOfValue()(__val));

	push	edi
	call	?_S_value@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@PAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_value
	add	esp, 4
	mov	ecx, ebp
	call	??Rstr_pred@CEnvironment@@QBE_NABVshared_str@@0@Z ; CEnvironment::str_pred::operator()

; 515  :       }
; 516  : 
; 517  :       if ( (!__comp_v_pos) // comp_v_pos true implies comp_v_pos false
; 518  :           && __comp_pos_v
; 519  :           && (__after._M_node == &this->_M_header._M_data ||
; 520  :               _M_key_compare( _KeyOfValue()(__val), _S_key(__after._M_node) ))) {

	test	al, al
	mov	BYTE PTR ___comp_pos_v$137805[esp+24], al
	je	$LN144@insert_uni@9
	mov	eax, DWORD PTR ___after$137804[esp+28]
	cmp	eax, ebx
	je	SHORT $LN6@insert_uni@9
	push	eax
	call	?_S_value@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@PAU_Rb_tree_node_base@23@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_value
	mov	ecx, eax
	add	esp, 4
	mov	eax, ebp
	call	??Rstr_pred@CEnvironment@@QBE_NABVshared_str@@0@Z ; CEnvironment::str_pred::operator()
	test	al, al
	je	SHORT $LN145@insert_uni@9
$LN6@insert_uni@9:

; 521  :         if (_S_right(__position._M_node) == 0)

	push	edi
	call	?_S_right@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@KAAAPAU_Rb_tree_node_base@23@PAU423@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_S_right
	add	esp, 4
	cmp	DWORD PTR [eax], 0

; 522  :           return _M_insert(__position._M_node, __val, 0, __position._M_node);

	mov	eax, ebp
	je	$LN147@insert_uni@9

; 523  :         else
; 524  :           return _M_insert(__after._M_node, __val, __after._M_node);

	mov	ecx, DWORD PTR ___after$137804[esp+28]
	push	0
	push	ecx
	push	esi
	call	?_M_insert@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@AAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@PAU_Rb_tree_node_base@23@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@00@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_insert

; 529  :         else
; 530  :           return insert_unique(__val).first;

	mov	eax, esi

; 531  :       }
; 532  :     }
; 533  :   }
; 534  : }

	pop	edi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
$LN145@insert_uni@9:

; 523  :         else
; 524  :           return _M_insert(__after._M_node, __val, __after._M_node);

	mov	al, BYTE PTR ___comp_v_pos$137795[esp+24]
	mov	cl, BYTE PTR ___comp_pos_v$137805[esp+24]
$LN7@insert_uni@9:

; 525  :       } else {
; 526  :         // Test for equivalent case
; 527  :         if (__comp_v_pos == __comp_pos_v)

	cmp	al, cl

; 528  :           return __position;

	je	$LN144@insert_uni@9
$LN2@insert_uni@9:

; 529  :         else
; 530  :           return insert_unique(__val).first;

	push	ebp
	lea	edx, DWORD PTR $T496447[esp+32]
	push	edx
	push	ebx
	call	?insert_unique@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$pair@U?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@stlp_std@@_N@3@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::insert_unique
	mov	eax, DWORD PTR [eax]

; 531  :       }
; 532  :     }
; 533  :   }
; 534  : }

	pop	edi
	pop	ebp
	mov	DWORD PTR [esi], eax
	mov	eax, esi
	pop	ebx
	add	esp, 16					; 00000010H
	ret	8
?insert_unique@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@U423@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@@Z ENDP ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::insert_unique
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCEffect_Thunderbolt@@QAEPAXI@Z
_TEXT	SEGMENT
??_GCEffect_Thunderbolt@@QAEPAXI@Z PROC			; CEffect_Thunderbolt::`scalar deleting destructor', COMDAT
; _this$ = esi
	mov	ecx, esi
	call	??1CEffect_Thunderbolt@@QAE@XZ		; CEffect_Thunderbolt::~CEffect_Thunderbolt
	mov	eax, esi
	ret	0
??_GCEffect_Thunderbolt@@QAEPAXI@Z ENDP			; CEffect_Thunderbolt::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
_TEXT	ENDS
;	COMDAT ??R?$xr_special_free@$0A@VCEffect_Thunderbolt@@@@QAEXAAPAVCEffect_Thunderbolt@@@Z
_TEXT	SEGMENT
??R?$xr_special_free@$0A@VCEffect_Thunderbolt@@@@QAEXAAPAVCEffect_Thunderbolt@@@Z PROC ; xr_special_free<0,CEffect_Thunderbolt>::operator(), COMDAT
; _ptr$ = esi

; 143  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi]
	call	??1CEffect_Thunderbolt@@QAE@XZ		; CEffect_Thunderbolt::~CEffect_Thunderbolt

; 144  : 		Memory.mem_free	(ptr);

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 145  : 	}

	ret	0
??R?$xr_special_free@$0A@VCEffect_Thunderbolt@@@@QAEXAAPAVCEffect_Thunderbolt@@@Z ENDP ; xr_special_free<0,CEffect_Thunderbolt>::operator()
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_map.h
_TEXT	ENDS
;	COMDAT ?insert@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@2@U342@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@2@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___pos$ = 12						; size = 4
?insert@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@2@U342@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@2@@Z PROC ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::insert, COMDAT
; ___$ReturnUdt$ = ecx
; ___x$ = eax

; 186  :   { return _M_t.insert_unique(__pos, __x); }

	push	esi
	push	eax
	push	ecx
	mov	esi, ecx
	mov	ecx, DWORD PTR ___pos$[esp+8]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[esp+8]
	call	?insert_unique@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@U423@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::insert_unique
	mov	eax, esi
	pop	esi
	ret	8
?insert@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@priv@2@U342@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@2@@Z ENDP ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::insert
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0SSndChannel@CEnvAmbient@@QAE@XZ
_TEXT	SEGMENT
??0SSndChannel@CEnvAmbient@@QAE@XZ PROC			; CEnvAmbient::SSndChannel::SSndChannel, COMDAT
; _this$ = eax
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+28], ecx
	mov	DWORD PTR [eax+32], ecx
	mov	DWORD PTR [eax+36], ecx
	ret	0
??0SSndChannel@CEnvAmbient@@QAE@XZ ENDP			; CEnvAmbient::SSndChannel::SSndChannel
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
_TEXT	ENDS
;	COMDAT ??$xr_delete@VCEffect_Thunderbolt@@@@YAXAAPAVCEffect_Thunderbolt@@@Z
_TEXT	SEGMENT
??$xr_delete@VCEffect_Thunderbolt@@@@YAXAAPAVCEffect_Thunderbolt@@@Z PROC ; xr_delete<CEffect_Thunderbolt>, COMDAT
; _ptr$ = esi

; 151  : 	if (ptr) 

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN1@xr_delete@46

; 152  : 	{
; 153  : 		xr_special_free<is_polymorphic<T>::result,T>()(ptr);

	call	??1CEffect_Thunderbolt@@QAE@XZ		; CEffect_Thunderbolt::~CEffect_Thunderbolt
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 154  : 		ptr = NULL;

	mov	DWORD PTR [esi], 0
$LN1@xr_delete@46:

; 155  : 	}
; 156  : }

	ret	0
??$xr_delete@VCEffect_Thunderbolt@@@@YAXAAPAVCEffect_Thunderbolt@@@Z ENDP ; xr_delete<CEffect_Thunderbolt>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_map.h
_TEXT	ENDS
;	COMDAT ??$?APAD@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAEAAV?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@ABQAD@Z
_TEXT	SEGMENT
$T496839 = -32						; size = 4
$T496838 = -32						; size = 4
$T496831 = -32						; size = 4
$T496835 = -28						; size = 12
$T496834 = -16						; size = 16
_this$ = 8						; size = 4
___k$ = 12						; size = 4
??$?APAD@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAEAAV?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@ABQAD@Z PROC ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::operator[]<char *>, COMDAT

; 173  :   _Tp& operator[](const _KT& __k) {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 36					; 00000024H

; 174  :     iterator __i = lower_bound(__k);

	mov	eax, DWORD PTR ___k$[ebp]
	push	ebx
	push	esi
	push	edi
	mov	edi, DWORD PTR _this$[ebp]
	xor	ebx, ebx
	push	eax
	mov	ecx, edi
	mov	DWORD PTR $T496839[esp+52], ebx
	call	??$_M_lower_bound@PAD@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@ABEPAU_Rb_tree_node_base@12@ABQAD@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_lower_bound<char *>
	mov	esi, eax

; 175  :     // __i->first is greater than or equivalent to __k.
; 176  :     if (__i == end() || key_comp()(__k, (*__i).first))

	cmp	esi, edi
	je	SHORT $LN198@operator@126
	mov	ecx, DWORD PTR ___k$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	ecx, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	test	eax, eax
	je	SHORT $LN34@operator@126
	add	DWORD PTR [eax], 1
$LN34@operator@126:
	mov	edi, eax
	lea	ecx, DWORD PTR [esi+16]
	lea	eax, DWORD PTR $T496831[esp+48]
	mov	DWORD PTR $T496831[esp+48], edi
	mov	ebx, 1
	call	??Rstr_pred@CEnvironment@@QBE_NABVshared_str@@0@Z ; CEnvironment::str_pred::operator()
	test	al, al
	jne	SHORT $LN4@operator@126
	jmp	SHORT $LN5@operator@126
$LN198@operator@126:
	mov	edi, DWORD PTR $T496831[esp+48]
$LN4@operator@126:
	mov	al, 1
$LN5@operator@126:
	test	bl, 1
	je	SHORT $LN46@operator@126
	test	edi, edi
	je	SHORT $LN46@operator@126
	add	DWORD PTR [edi], -1
$LN46@operator@126:
	test	al, al
	je	$LN196@operator@126

; 177  :       __i = insert(__i, value_type(__k, _STLP_DEFAULT_CONSTRUCTED(_Tp)));

	mov	eax, DWORD PTR ___k$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	ecx, DWORD PTR [ecx]
	push	eax
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	mov	edi, eax
	xor	ecx, ecx
	cmp	edi, ecx
	je	SHORT $LN55@operator@126
	add	DWORD PTR [edi], 1
$LN55@operator@126:
	cmp	edi, ecx
	mov	DWORD PTR $T496835[esp+48], ecx
	mov	DWORD PTR $T496835[esp+52], ecx
	mov	DWORD PTR $T496835[esp+56], ecx
	mov	DWORD PTR $T496834[esp+48], ecx
	je	SHORT $LN82@operator@126
	add	DWORD PTR [edi], 1
	mov	eax, DWORD PTR $T496834[esp+48]
	cmp	eax, ecx
	je	SHORT $LN82@operator@126
	add	DWORD PTR [eax], -1
$LN82@operator@126:
	lea	edx, DWORD PTR $T496835[esp+48]
	push	edx
	lea	ecx, DWORD PTR $T496834[esp+56]
	mov	DWORD PTR $T496834[esp+52], edi
	call	??0?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@QAE@ABV0@@Z
	lea	eax, DWORD PTR $T496834[esp+48]
	push	eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], esi
	mov	eax, DWORD PTR _this$[ebp]
	lea	esi, DWORD PTR $T496838[esp+56]
	call	?insert_unique@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAE?AU?$_Rb_tree_iterator@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@2@@23@U423@ABU?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@3@@Z ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::insert_unique
	mov	esi, DWORD PTR $T496838[esp+48]
	lea	ecx, DWORD PTR $T496834[esp+48]
	call	??1?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@QAE@XZ
	lea	ecx, DWORD PTR $T496835[esp+48]
	call	??1?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@QAE@XZ
	test	edi, edi

; 178  :     return (*__i).second;

	lea	eax, DWORD PTR [esi+20]
	je	SHORT $LN190@operator@126

; 177  :       __i = insert(__i, value_type(__k, _STLP_DEFAULT_CONSTRUCTED(_Tp)));

	add	DWORD PTR [edi], -1

; 179  :   }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN196@operator@126:

; 178  :     return (*__i).second;

	lea	eax, DWORD PTR [esi+20]

; 177  :       __i = insert(__i, value_type(__k, _STLP_DEFAULT_CONSTRUCTED(_Tp)));

$LN190@operator@126:

; 179  :   }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??$?APAD@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAEAAV?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@ABQAD@Z ENDP ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::operator[]<char *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrserverentities\object_destroyer.h
_TEXT	ENDS
;	COMDAT ??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@@YAXABV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z
_TEXT	SEGMENT
??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@@YAXABV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z PROC ; delete_data<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >, COMDAT
; _data$ = eax

; 151  : 	T	*temp = const_cast<T*>(&data);
; 152  : 	CDestroyer::delete_data(*temp);

	push	eax
	call	??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >
	pop	ecx

; 153  : }

	ret	0
??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@@YAXABV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z ENDP ; delete_data<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
_TEXT	ENDS
;	COMDAT ??$xr_new@USSndChannel@CEnvAmbient@@@@YAPAUSSndChannel@CEnvAmbient@@XZ
_TEXT	SEGMENT
??$xr_new@USSndChannel@CEnvAmbient@@@@YAPAUSSndChannel@CEnvAmbient@@XZ PROC ; xr_new<CEnvAmbient::SSndChannel>, COMDAT

; 68   : 	T* ptr	= (T*)Memory.mem_alloc(sizeof(T));

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	40					; 00000028H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 69   : 	return new (ptr) T();

	xor	ecx, ecx
	cmp	eax, ecx
	je	SHORT $LN3@xr_new@40
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+28], ecx
	mov	DWORD PTR [eax+32], ecx
	mov	DWORD PTR [eax+36], ecx

; 70   : }

	ret	0
$LN3@xr_new@40:

; 69   : 	return new (ptr) T();

	xor	eax, eax

; 70   : }

	ret	0
??$xr_new@USSndChannel@CEnvAmbient@@@@YAPAUSSndChannel@CEnvAmbient@@XZ ENDP ; xr_new<CEnvAmbient::SSndChannel>
_TEXT	ENDS
PUBLIC	?destroy@CEnvAmbient@@QAEXXZ			; CEnvAmbient::destroy
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\environment_misc.cpp
;	COMDAT ?destroy@CEnvAmbient@@QAEXXZ
_TEXT	SEGMENT
?destroy@CEnvAmbient@@QAEXXZ PROC			; CEnvAmbient::destroy, COMDAT
; _this$ = ecx

; 156  : {

	push	esi
	mov	esi, ecx

; 157  : 	delete_data				(m_effects);

	lea	eax, DWORD PTR [esi+4]
	push	eax
	call	??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >

; 158  : 	delete_data				(m_sound_channels);

	add	esi, 24					; 00000018H
	push	esi
	call	??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >
	add	esp, 8
	pop	esi

; 159  : }

	ret	0
?destroy@CEnvAmbient@@QAEXXZ ENDP			; CEnvAmbient::destroy
_TEXT	ENDS
PUBLIC	??1CEnvAmbient@@QAE@XZ				; CEnvAmbient::~CEnvAmbient
; Function compile flags: /Ogtpy
;	COMDAT ??1CEnvAmbient@@QAE@XZ
_TEXT	SEGMENT
??1CEnvAmbient@@QAE@XZ PROC				; CEnvAmbient::~CEnvAmbient, COMDAT
; _this$ = ecx

; 151  : {

	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx
	push	edi

; 152  : 	destroy					();

	lea	ebx, DWORD PTR [esi+4]
	push	ebx
	call	??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >
	lea	edi, DWORD PTR [esi+24]
	push	edi
	call	??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >

; 153  : }

	mov	eax, DWORD PTR [esi+36]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN19@CEnvAmbien@2
	add	DWORD PTR [eax], -1
	mov	eax, DWORD PTR [esi+36]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN19@CEnvAmbien@2
	mov	DWORD PTR [esi+36], 0
$LN19@CEnvAmbien@2:
	mov	edi, DWORD PTR [edi]
	test	edi, edi
	mov	ebp, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	je	SHORT $LN60@CEnvAmbien@2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	ebp
$LN60@CEnvAmbien@2:
	mov	ebx, DWORD PTR [ebx]
	test	ebx, ebx
	je	SHORT $LN100@CEnvAmbien@2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	ebx
	call	ebp
$LN100@CEnvAmbien@2:
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN105@CEnvAmbien@2
	add	DWORD PTR [eax], -1
	mov	ecx, DWORD PTR [esi]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN105@CEnvAmbien@2
	mov	DWORD PTR [esi], 0
$LN105@CEnvAmbien@2:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
??1CEnvAmbient@@QAE@XZ ENDP				; CEnvAmbient::~CEnvAmbient
_TEXT	ENDS
PUBLIC	?create_sound_channel@CEnvAmbient@@QAEPAUSSndChannel@1@AAVCInifile@@PBD@Z ; CEnvAmbient::create_sound_channel
; Function compile flags: /Ogtpy
;	COMDAT ?create_sound_channel@CEnvAmbient@@QAEPAUSSndChannel@1@AAVCInifile@@PBD@Z
_TEXT	SEGMENT
_config$ = 8						; size = 4
_id$ = 12						; size = 4
?create_sound_channel@CEnvAmbient@@QAEPAUSSndChannel@1@AAVCInifile@@PBD@Z PROC ; CEnvAmbient::create_sound_channel, COMDAT
; _this$ = ecx

; 145  : 	SSndChannel*			result = xr_new<SSndChannel>();

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	push	40					; 00000028H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	xor	esi, esi
	cmp	eax, esi
	je	SHORT $LN5@create_sou
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [eax+28], esi
	mov	DWORD PTR [eax+32], esi
	mov	DWORD PTR [eax+36], esi
	mov	esi, eax
$LN5@create_sou:

; 146  : 	result->load			(config, id);

	mov	eax, DWORD PTR _id$[esp]
	push	eax
	mov	eax, DWORD PTR _config$[esp+4]
	mov	ecx, esi
	call	?load@SSndChannel@CEnvAmbient@@QAEXAAVCInifile@@PBD@Z ; CEnvAmbient::SSndChannel::load

; 147  : 	return					(result);

	mov	eax, esi
	pop	esi

; 148  : }

	ret	8
?create_sound_channel@CEnvAmbient@@QAEPAUSSndChannel@1@AAVCInifile@@PBD@Z ENDP ; CEnvAmbient::create_sound_channel
; Function compile flags: /Ogtpy
;	COMDAT ??_GCEnvAmbient@@QAEPAXI@Z
_TEXT	SEGMENT
??_GCEnvAmbient@@QAEPAXI@Z PROC				; CEnvAmbient::`scalar deleting destructor', COMDAT
; _this$ = esi
	mov	ecx, esi
	call	??1CEnvAmbient@@QAE@XZ			; CEnvAmbient::~CEnvAmbient
	mov	eax, esi
	ret	0
??_GCEnvAmbient@@QAEPAXI@Z ENDP				; CEnvAmbient::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
_TEXT	ENDS
;	COMDAT ??R?$xr_special_free@$0A@VCEnvAmbient@@@@QAEXAAPAVCEnvAmbient@@@Z
_TEXT	SEGMENT
??R?$xr_special_free@$0A@VCEnvAmbient@@@@QAEXAAPAVCEnvAmbient@@@Z PROC ; xr_special_free<0,CEnvAmbient>::operator(), COMDAT
; _ptr$ = esi

; 143  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi]
	call	??1CEnvAmbient@@QAE@XZ			; CEnvAmbient::~CEnvAmbient

; 144  : 		Memory.mem_free	(ptr);

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 145  : 	}

	ret	0
??R?$xr_special_free@$0A@VCEnvAmbient@@@@QAEXAAPAVCEnvAmbient@@@Z ENDP ; xr_special_free<0,CEnvAmbient>::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_delete@VCEnvAmbient@@@@YAXAAPAVCEnvAmbient@@@Z
_TEXT	SEGMENT
??$xr_delete@VCEnvAmbient@@@@YAXAAPAVCEnvAmbient@@@Z PROC ; xr_delete<CEnvAmbient>, COMDAT
; _ptr$ = esi

; 151  : 	if (ptr) 

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN1@xr_delete@47

; 152  : 	{
; 153  : 		xr_special_free<is_polymorphic<T>::result,T>()(ptr);

	call	??1CEnvAmbient@@QAE@XZ			; CEnvAmbient::~CEnvAmbient
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 154  : 		ptr = NULL;

	mov	DWORD PTR [esi], 0
$LN1@xr_delete@47:

; 155  : 	}
; 156  : }

	ret	0
??$xr_delete@VCEnvAmbient@@@@YAXAAPAVCEnvAmbient@@@Z ENDP ; xr_delete<CEnvAmbient>
_TEXT	ENDS
PUBLIC	?unload@CEnvironment@@QAEXXZ			; CEnvironment::unload
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\environment_misc.cpp
;	COMDAT ?unload@CEnvironment@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?unload@CEnvironment@@QAEXXZ PROC			; CEnvironment::unload, COMDAT
; _this$ = ecx

; 736  : {

	push	ecx
	push	ebx
	push	ebp
	mov	ebx, ecx
	push	esi

; 737  : 	EnvsMapIt _I,_E;
; 738  : 	// clear weathers
; 739  : 	_I		= WeatherCycles.begin();

	lea	ebp, DWORD PTR [ebx+160]
	push	edi
	mov	ecx, ebp
	mov	DWORD PTR _this$[esp+20], ebx
	call	?_M_leftmost@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_leftmost
	mov	edi, DWORD PTR [eax]

; 740  : 	_E		= WeatherCycles.end();
; 741  : 	for (; _I!=_E; _I++){

	cmp	edi, ebp
	setne	al
	test	al, al
	je	$LN13@unload
$LL50@unload:

; 742  : 		for (EnvIt it=_I->second.begin(); it!=_I->second.end(); it++)

	mov	eax, DWORD PTR [edi+20]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	esi, eax
	mov	eax, DWORD PTR [edi+24]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 8
	cmp	esi, eax
	je	SHORT $LN14@unload
$LL12@unload:

; 743  : 			xr_delete	(*it);

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN11@unload
	call	??1CEnvDescriptor@@QAE@XZ
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
$LN11@unload:
	mov	eax, DWORD PTR [edi+24]
	push	eax
	add	esi, 4
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	cmp	esi, eax
	jne	SHORT $LL12@unload
$LN14@unload:

; 740  : 	_E		= WeatherCycles.end();
; 741  : 	for (; _I!=_E; _I++){

	mov	eax, DWORD PTR [edi+12]
	test	eax, eax
	je	SHORT $LN56@unload
	mov	edi, eax
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN52@unload
$LL60@unload:
	mov	edi, eax
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	jne	SHORT $LL60@unload
	jmp	SHORT $LN52@unload
$LN56@unload:
	mov	eax, DWORD PTR [edi+4]
	cmp	edi, DWORD PTR [eax+12]
	jne	SHORT $LN53@unload
$LL54@unload:
	mov	edi, eax
	mov	eax, DWORD PTR [eax+4]
	cmp	edi, DWORD PTR [eax+12]
	je	SHORT $LL54@unload
$LN53@unload:
	cmp	DWORD PTR [edi+12], eax
	je	SHORT $LN52@unload
	mov	edi, eax
$LN52@unload:
	cmp	edi, ebp
	setne	al
	test	al, al
	jne	$LL50@unload
$LN13@unload:

; 744  : 	}
; 745  : 
; 746  : 	WeatherCycles.clear		();

	mov	ecx, ebp
	call	?clear@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::clear

; 747  : 	// clear weather effect
; 748  : 	_I		= WeatherFXs.begin();

	lea	ebp, DWORD PTR [ebx+184]
	mov	ecx, ebp
	call	?_M_leftmost@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_leftmost
	mov	edi, DWORD PTR [eax]

; 749  : 	_E		= WeatherFXs.end();
; 750  : 	for (; _I!=_E; _I++){

	cmp	edi, ebp
	setne	al
	test	al, al
	je	$LN7@unload
	npad	7
$LL218@unload:

; 751  : 		for (EnvIt it=_I->second.begin(); it!=_I->second.end(); it++)

	mov	eax, DWORD PTR [edi+20]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	esi, eax
	mov	eax, DWORD PTR [edi+24]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 8
	cmp	esi, eax
	je	SHORT $LN8@unload
	npad	5
$LL6@unload:

; 752  : 			xr_delete	(*it);

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN5@unload
	call	??1CEnvDescriptor@@QAE@XZ
	mov	ecx, DWORD PTR [esi]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
$LN5@unload:
	mov	eax, DWORD PTR [edi+24]
	push	eax
	add	esi, 4
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	cmp	esi, eax
	jne	SHORT $LL6@unload
$LN8@unload:

; 749  : 	_E		= WeatherFXs.end();
; 750  : 	for (; _I!=_E; _I++){

	mov	eax, DWORD PTR [edi+12]
	test	eax, eax
	je	SHORT $LN224@unload
	mov	edi, eax
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN220@unload
$LL228@unload:
	mov	edi, eax
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	jne	SHORT $LL228@unload
	jmp	SHORT $LN220@unload
$LN224@unload:
	mov	eax, DWORD PTR [edi+4]
	cmp	edi, DWORD PTR [eax+12]
	jne	SHORT $LN221@unload
$LL222@unload:
	mov	edi, eax
	mov	eax, DWORD PTR [eax+4]
	cmp	edi, DWORD PTR [eax+12]
	je	SHORT $LL222@unload
$LN221@unload:
	cmp	DWORD PTR [edi+12], eax
	je	SHORT $LN220@unload
	mov	edi, eax
$LN220@unload:
	cmp	edi, ebp
	setne	al
	test	al, al
	jne	$LL218@unload
$LN7@unload:

; 753  : 	}
; 754  : 	WeatherFXs.clear		();

	mov	ecx, ebp
	call	?clear@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::clear

; 755  : 	// clear ambient
; 756  : 	for (EnvAmbVecIt it=Ambients.begin(); it!=Ambients.end(); it++)

	mov	eax, DWORD PTR [ebx+220]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	ebp, eax
	mov	eax, DWORD PTR [ebx+224]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 8
	cmp	ebp, eax
	je	$LN595@unload
$LL3@unload:

; 757  : 		xr_delete		(*it);

	mov	esi, DWORD PTR [ebp]
	xor	ebx, ebx
	cmp	esi, ebx
	je	$LN2@unload
	lea	ebx, DWORD PTR [esi+4]
	push	ebx
	call	??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >
	lea	edi, DWORD PTR [esi+24]
	push	edi
	call	??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >
	mov	eax, DWORD PTR [esi+36]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN404@unload
	add	DWORD PTR [eax], -1
	mov	edx, DWORD PTR [esi+36]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN404@unload
	mov	DWORD PTR [esi+36], 0
$LN404@unload:
	mov	edi, DWORD PTR [edi]
	test	edi, edi
	je	SHORT $LN594@unload
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	call	edi
	jmp	SHORT $LN445@unload
$LN594@unload:
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN445@unload:
	mov	eax, DWORD PTR [ebx]
	test	eax, eax
	je	SHORT $LN485@unload
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	edi
$LN485@unload:
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN490@unload
	add	DWORD PTR [eax], -1
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN490@unload
	mov	DWORD PTR [esi], 0
$LN490@unload:
	mov	ecx, DWORD PTR [ebp]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	edi
	mov	DWORD PTR [ebp], 0
	xor	ebx, ebx
$LN2@unload:
	mov	edx, DWORD PTR _this$[esp+20]
	mov	eax, DWORD PTR [edx+224]
	push	eax
	add	ebp, 4
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	cmp	ebp, eax
	jne	$LL3@unload

; 755  : 	// clear ambient
; 756  : 	for (EnvAmbVecIt it=Ambients.begin(); it!=Ambients.end(); it++)

	jmp	SHORT $LN1@unload
$LN595@unload:
	xor	ebx, ebx
$LN1@unload:

; 758  : 	Ambients.clear		();

	mov	ebp, DWORD PTR _this$[esp+20]
	mov	ecx, DWORD PTR [ebp+224]
	mov	eax, DWORD PTR [ebp+220]
	cmp	eax, ecx
	je	SHORT $LN514@unload
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN520@unload
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN520@unload:
	mov	DWORD PTR [ebp+224], eax
$LN514@unload:

; 759  : 	// misc
; 760  : 	xr_delete			(eff_Rain);

	mov	ecx, DWORD PTR [ebp+232]
	cmp	ecx, ebx
	je	SHORT $LN596@unload
	call	??1CEffect_Rain@@QAE@XZ			; CEffect_Rain::~CEffect_Rain
	mov	eax, DWORD PTR [ebp+232]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	push	eax
	call	edi
	mov	DWORD PTR [ebp+232], ebx
	jmp	SHORT $LN522@unload
$LN596@unload:
	mov	edi, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN522@unload:

; 761  : 	xr_delete			(eff_LensFlare);

	mov	eax, DWORD PTR [ebp+236]
	cmp	eax, ebx
	je	SHORT $LN535@unload
	push	eax
	call	___RTCastToVoid
	mov	ecx, DWORD PTR [ebp+236]
	mov	edx, DWORD PTR [ecx]
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR [edx]
	push	ebx
	call	eax
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	edi
	mov	DWORD PTR [ebp+236], ebx
$LN535@unload:

; 762  : 	xr_delete			(eff_Thunderbolt);

	mov	ecx, DWORD PTR [ebp+240]
	cmp	ecx, ebx
	je	SHORT $LN540@unload
	call	??1CEffect_Thunderbolt@@QAE@XZ		; CEffect_Thunderbolt::~CEffect_Thunderbolt
	mov	ecx, DWORD PTR [ebp+240]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	edi
	mov	DWORD PTR [ebp+240], ebx
$LN540@unload:

; 763  : 	CurrentWeather		= 0;
; 764  : 	CurrentWeatherName	= 0;

	mov	edx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	DWORD PTR [ebp+148], ebx
	mov	ecx, DWORD PTR [edx]
	push	ebx
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	cmp	eax, ebx
	je	SHORT $LN555@unload
	add	DWORD PTR [eax], 1
$LN555@unload:
	mov	ecx, DWORD PTR [ebp+152]
	cmp	ecx, ebx
	je	SHORT $LN558@unload
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [ebp+152]
	cmp	DWORD PTR [ecx], ebx
	jne	SHORT $LN558@unload
	mov	DWORD PTR [ebp+152], ebx
$LN558@unload:
	mov	DWORD PTR [ebp+152], eax

; 765  : 	CurrentEnv->clear	();

	mov	edx, DWORD PTR [ebp+120]
	mov	ecx, DWORD PTR [edx+188]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	call	edx

; 766  : 	Invalidate			();

	mov	eax, DWORD PTR [ebp+236]
	cmp	eax, ebx
	mov	BYTE PTR [ebp+132], 0
	mov	DWORD PTR [ebp+124], ebx
	mov	DWORD PTR [ebp+128], ebx
	je	SHORT $LN569@unload
	mov	DWORD PTR [eax+492], ebx
$LN569@unload:

; 767  : 
; 768  : 	m_pRender->OnUnload	();

	mov	ecx, DWORD PTR [ebp+32]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]

; 769  : //	tonemap				= 0;
; 770  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 4

; 767  : 
; 768  : 	m_pRender->OnUnload	();

	jmp	edx
?unload@CEnvironment@@QAEXXZ ENDP			; CEnvironment::unload
_TEXT	ENDS
PUBLIC	?load@CEnvAmbient@@QAEXAAVCInifile@@00ABVshared_str@@@Z ; CEnvAmbient::load
; Function compile flags: /Ogtpy
;	COMDAT ?load@CEnvAmbient@@QAEXAAVCInifile@@00ABVshared_str@@@Z
_TEXT	SEGMENT
$T535437 = -544						; size = 4
_a$535239 = -544					; size = 4
$T535064 = -544						; size = 4
$T534991 = -544						; size = 4
$T534990 = -544						; size = 4
_a$535247 = -540					; size = 4
tv166 = -540						; size = 4
_channels$ = -540					; size = 4
$T535430 = -533						; size = 1
_effs$ = -532						; size = 4
_this$ = -532						; size = 4
tv480 = -528						; size = 4
_tmp$ = -524						; size = 520
_ambients_config$ = 8					; size = 4
_sound_channels_config$ = 12				; size = 4
_effects_config$ = 16					; size = 4
_sect$ = 20						; size = 4
?load@CEnvAmbient@@QAEXAAVCInifile@@00ABVshared_str@@@Z PROC ; CEnvAmbient::load, COMDAT
; _this$ = ecx

; 167  : {

	sub	esp, 548				; 00000224H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 168  : 	m_ambients_config_filename = ambients_config.fname();

	mov	edi, DWORD PTR _ambients_config$[esp+560]
	mov	esi, ecx
	mov	ecx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	ecx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [edi+5]
	push	eax
	mov	DWORD PTR _this$[esp+568], esi
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	test	eax, eax
	je	SHORT $LN17@load@9
	add	DWORD PTR [eax], 1
$LN17@load@9:
	mov	ecx, DWORD PTR [esi+36]
	test	ecx, ecx
	je	SHORT $LN20@load@9
	add	DWORD PTR [ecx], -1
	mov	edx, DWORD PTR [esi+36]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN20@load@9
	mov	DWORD PTR [esi+36], 0
$LN20@load@9:

; 169  : 	m_load_section		= sect;

	mov	ebx, DWORD PTR _sect$[esp+560]
	mov	DWORD PTR [esi+36], eax
	mov	eax, DWORD PTR [ebx]
	test	eax, eax
	je	SHORT $LN26@load@9
	add	DWORD PTR [eax], 1
$LN26@load@9:
	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN29@load@9
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [esi]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN29@load@9
	mov	DWORD PTR [esi], 0
$LN29@load@9:

; 170  : 	string_path			tmp;
; 171  : 	
; 172  : 	// sounds
; 173  : 	LPCSTR channels			= ambients_config.r_string	(sect,"sound_channels");

	push	OFFSET ??_C@_0P@DNBEMGJE@sound_channels?$AA@
	push	ebx
	mov	ecx, edi
	mov	DWORD PTR [esi], eax
	call	DWORD PTR __imp_?r_string@CInifile@@QBEPBDABVshared_str@@PBD@Z
	mov	edi, eax

; 174  : 	u32 cnt					= _GetItemCount(channels);

	push	44					; 0000002cH
	push	edi
	mov	DWORD PTR _channels$[esp+572], edi
	call	DWORD PTR __imp_?_GetItemCount@@YAHPBDD@Z
	mov	ebp, eax

; 175  : //	R_ASSERT3				(cnt,"sound_channels empty", sect.c_str());
; 176  : 	m_sound_channels.resize	(cnt);

	add	esi, 24					; 00000018H
	add	esp, 8
	lea	eax, DWORD PTR $T534990[esp+564]
	mov	ecx, ebp
	mov	edx, esi
	mov	DWORD PTR $T534990[esp+564], 0
	mov	DWORD PTR tv480[esp+564], esi
	call	?resize@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXIABQAX@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::resize

; 177  : 
; 178  : 	for (u32 i=0; i<cnt; ++i)

	xor	esi, esi
	test	ebp, ebp
	jbe	SHORT $LN8@load@9
	jmp	SHORT $LN10@load@9
	npad	6
$LL152@load@9:
	mov	edi, DWORD PTR _channels$[esp+564]
$LN10@load@9:

; 179  : 		m_sound_channels[i]	= create_sound_channel(sound_channels_config, _GetItem(channels,i,tmp));

	push	1
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	44					; 0000002cH
	push	520					; 00000208H
	lea	edx, DWORD PTR _tmp$[esp+580]
	push	edx
	push	esi
	push	edi
	call	DWORD PTR __imp_?_GetItem@@YAPADPBDHPADID0_N@Z
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	add	esp, 28					; 0000001cH
	push	40					; 00000028H
	mov	DWORD PTR $T535064[esp+568], eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	xor	edi, edi
	cmp	eax, edi
	je	SHORT $LN45@load@9
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+28], edi
	mov	DWORD PTR [eax+32], edi
	mov	DWORD PTR [eax+36], edi
	mov	edi, eax
$LN45@load@9:
	mov	eax, DWORD PTR $T535064[esp+564]
	push	eax
	mov	eax, DWORD PTR _sound_channels_config$[esp+564]
	mov	ecx, edi
	call	?load@SSndChannel@CEnvAmbient@@QAEXAAVCInifile@@PBD@Z ; CEnvAmbient::SSndChannel::load
	mov	ecx, DWORD PTR tv480[esp+564]
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	DWORD PTR [eax+esi*4], edi
	add	esi, 1
	add	esp, 4
	cmp	esi, ebp
	jb	SHORT $LL152@load@9
$LN8@load@9:

; 180  : 
; 181  : 	// effects
; 182  : 	m_effect_period.set		(
; 183  : 		iFloor(
; 184  : 			ambients_config.r_float(sect,"min_effect_period")*1000.f
; 185  : 		),
; 186  : 		iFloor(
; 187  : 			ambients_config.r_float(sect,"max_effect_period")*1000.f
; 188  : 		)
; 189  : 	);

	mov	ecx, DWORD PTR _ambients_config$[esp+560]
	push	OFFSET ??_C@_0BC@GGMJBMHC@max_effect_period?$AA@
	push	ebx
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMABVshared_str@@PBD@Z
	fmul	DWORD PTR _fuzzy_update_novis
	mov	ebp, 158				; 0000009eH
	mov	esi, 1
	fstp	DWORD PTR _a$535239[esp+564]
	mov	eax, DWORD PTR _a$535239[esp+564]
	mov	edx, eax
	sar	edx, 23					; 00000017H
	and	edx, 255				; 000000ffH
	sub	ebp, edx
	mov	edi, eax
	or	edi, -8388608				; ff800000H
	shl	edi, 8
	mov	ecx, ebp
	shr	edi, cl
	sub	ebp, 96					; 00000060H
	mov	ecx, ebp
	shl	esi, cl
	mov	ecx, DWORD PTR _ambients_config$[esp+560]
	push	OFFSET ??_C@_0BC@DFGPAEJG@min_effect_period?$AA@
	push	ebx
	sub	esi, 1
	sar	esi, 8
	and	esi, eax
	neg	esi
	sbb	esi, esi
	sar	eax, 31					; 0000001fH
	add	esi, 1
	mov	DWORD PTR _a$535239[esp+572], eax
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMABVshared_str@@PBD@Z
	fmul	DWORD PTR _fuzzy_update_novis
	mov	ecx, 158				; 0000009eH
	fstp	DWORD PTR _a$535247[esp+564]
	mov	edx, DWORD PTR _a$535247[esp+564]
	mov	ebx, DWORD PTR _a$535247[esp+564]
	mov	eax, edx
	sar	eax, 23					; 00000017H
	and	eax, 255				; 000000ffH
	sub	ecx, eax
	or	edx, -8388608				; ff800000H
	shl	edx, 8
	shr	edx, cl
	sub	ecx, 96					; 00000060H
	mov	eax, 1
	shl	eax, cl
	sub	eax, 1
	sar	eax, 8
	and	eax, ebx
	neg	eax
	sbb	eax, eax
	sar	ebx, 31					; 0000001fH
	mov	DWORD PTR _a$535247[esp+564], ebx
	mov	ebx, DWORD PTR _a$535239[esp+564]
	and	esi, ebx
	sub	edi, esi
	mov	esi, DWORD PTR _a$535247[esp+564]
	add	eax, 1
	add	ebp, 64					; 00000040H
	add	ecx, 64					; 00000040H
	sar	ebp, 31					; 0000001fH
	and	eax, esi
	sub	edx, eax
	sar	ecx, 31					; 0000001fH
	and	edi, ebp
	mov	ebp, DWORD PTR _this$[esp+564]
	and	edx, ecx
	xor	edi, ebx
	push	edi
	xor	edx, esi
	push	edx
	lea	ecx, DWORD PTR [ebp+16]
	call	?set@?$_vector2@H@@QAEAAU1@HH@Z		; _vector2<int>::set

; 190  : 	LPCSTR effs				= ambients_config.r_string	(sect,"effects");

	mov	ecx, DWORD PTR _sect$[esp+560]
	push	OFFSET ??_C@_07BLLGFBLI@effects?$AA@
	push	ecx
	mov	ecx, DWORD PTR _ambients_config$[esp+568]
	call	DWORD PTR __imp_?r_string@CInifile@@QBEPBDABVshared_str@@PBD@Z
	mov	DWORD PTR _effs$[esp+564], eax

; 191  : 	cnt						= _GetItemCount(effs);

	push	44					; 0000002cH
	push	eax
	call	DWORD PTR __imp_?_GetItemCount@@YAHPBDD@Z

; 192  : //	R_ASSERT3				(cnt,"effects empty", sect.c_str());
; 193  : 
; 194  : 	m_effects.resize		(cnt);

	mov	ecx, DWORD PTR [ebp+8]
	mov	edx, DWORD PTR [ebp+4]
	lea	edi, DWORD PTR [ebp+4]
	mov	ebx, eax
	mov	eax, ecx
	sub	eax, edx
	sar	eax, 2
	add	esp, 8
	cmp	ebx, eax
	mov	DWORD PTR $T534991[esp+564], 0
	jae	SHORT $LN93@load@9
	lea	eax, DWORD PTR [edx+ebx*4]
	cmp	eax, ecx
	je	SHORT $LN119@load@9
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN111@load@9
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN111@load@9:
	mov	DWORD PTR [edi+4], eax
	jmp	SHORT $LN119@load@9
$LN93@load@9:
	mov	edx, ebx
	sub	edx, eax
	je	SHORT $LN119@load@9
	mov	eax, DWORD PTR [edi+8]
	sub	eax, ecx
	sar	eax, 2
	cmp	eax, edx
	jb	SHORT $LN120@load@9
	lea	eax, DWORD PTR $T535430[esp+564]
	push	eax
	lea	eax, DWORD PTR $T534991[esp+568]
	push	eax
	push	edx
	push	ecx
	mov	ecx, edi
	call	?_M_fill_insert_aux@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXIABQAXABU__false_type@3@@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_fill_insert_aux
	jmp	SHORT $LN119@load@9
$LN120@load@9:
	push	0
	push	edx
	push	ecx
	lea	eax, DWORD PTR $T534991[esp+576]
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
$LN119@load@9:

; 195  : 	for (u32 k=0; k<cnt; ++k)

	xor	esi, esi
	test	ebx, ebx
	jbe	SHORT $LN4@load@9
	npad	4
$LL7@load@9:

; 196  : 		m_effects[k]		= create_effect(effects_config, _GetItem(effs,k,tmp));

	mov	edx, DWORD PTR _effs$[esp+564]
	push	1
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	44					; 0000002cH
	push	520					; 00000208H
	lea	ecx, DWORD PTR _tmp$[esp+580]
	push	ecx
	push	esi
	push	edx
	call	DWORD PTR __imp_?_GetItem@@YAPADPBDHPADID0_N@Z
	add	esp, 28					; 0000001cH
	push	esi
	mov	ecx, edi
	mov	DWORD PTR $T535437[esp+568], eax
	call	??A?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@QAEAAPAUSEffect@CEnvAmbient@@I@Z ; xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::operator[]
	mov	ecx, DWORD PTR _effects_config$[esp+560]
	mov	DWORD PTR tv166[esp+564], eax
	mov	eax, DWORD PTR $T535437[esp+564]
	push	eax
	push	ecx
	mov	ecx, ebp
	call	?create_effect@CEnvAmbient@@QAEPAUSEffect@1@AAVCInifile@@PBD@Z ; CEnvAmbient::create_effect
	mov	edx, DWORD PTR tv166[esp+564]
	add	esi, 1
	cmp	esi, ebx
	mov	DWORD PTR [edx], eax
	jb	SHORT $LL7@load@9
$LN4@load@9:

; 197  : 
; 198  : 	R_ASSERT					(!m_sound_channels.empty() || !m_effects.empty());

	cmp	BYTE PTR ?ignore_always@?5??load@CEnvAmbient@@QAEXAAVCInifile@@00ABVshared_str@@@Z@4_NA, 0
	jne	SHORT $LN3@load@9
	mov	ecx, DWORD PTR tv480[esp+564]
	call	?empty@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QBE_NXZ ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::empty
	test	al, al
	je	SHORT $LN3@load@9
	mov	ecx, edi
	call	?empty@?$vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@stlp_std@@QBE_NXZ ; stlp_std::vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::empty
	test	al, al
	je	SHORT $LN3@load@9
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?5??load@CEnvAmbient@@QAEXAAVCInifile@@00ABVshared_str@@@Z@4_NA
	push	OFFSET ??_C@_0BC@HDHPDBCF@CEnvAmbient?3?3load?$AA@
	push	198					; 000000c6H
	push	OFFSET ??_C@_0DJ@LMFGIIMF@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0DA@LDDMEOP@?$CBm_sound_channels?4empty?$CI?$CJ?5?$HM?$HM?5?$CBm_@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN3@load@9:

; 199  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 548				; 00000224H
	ret	16					; 00000010H
?load@CEnvAmbient@@QAEXAAVCInifile@@00ABVshared_str@@@Z ENDP ; CEnvAmbient::load
PUBLIC	?load_level_specific_ambients@CEnvironment@@IAEXXZ ; CEnvironment::load_level_specific_ambients
; Function compile flags: /Ogtpy
;	COMDAT ?load_level_specific_ambients@CEnvironment@@IAEXXZ
_TEXT	SEGMENT
_level_ambients$128842 = -1056				; size = 4
_level_name$128836 = -1052				; size = 4
_section_name$128866 = -1048				; size = 4
_E$128861 = -1044					; size = 4
_path$128838 = -1040					; size = 520
_full_path$128841 = -520				; size = 520
?load_level_specific_ambients@CEnvironment@@IAEXXZ PROC	; CEnvironment::load_level_specific_ambients, COMDAT
; _this$ = ecx

; 536  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 1056				; 00000420H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	ebp, ecx

; 537  : 	SECUROM_MARKER_PERFORMANCE_ON(13)

	DB	-21					; ffffffebH
	DB	14					; 0000000eH
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	48					; 00000030H
	DB	87					; 00000057H
	DB	121					; 00000079H
	DB	71					; 00000047H
	DB	49					; 00000031H
	DB	107					; 0000006bH
	DB	109					; 0000006dH
	DB	1
	DB	13					; 0000000dH
	DB	0
	DB	0
	DB	0

; 538  : 
; 539  : 	const shared_str level_name = g_pGameLevel->name();

	mov	ecx, DWORD PTR ?g_pGameLevel@@3PAVIGame_Level@@A ; g_pGameLevel
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+8]
	lea	edx, DWORD PTR _level_name$128836[esp+1072]
	push	edx
	call	eax

; 540  : 
; 541  : 	string_path path;
; 542  : 	strconcat(sizeof(path), path, "environment\\ambients\\", level_name.c_str(), ".ltx");

	mov	eax, DWORD PTR _level_name$128836[esp+1072]
	test	eax, eax
	je	SHORT $LN11@load_level@3
	add	eax, 16					; 00000010H
	jmp	SHORT $LN12@load_level@3
$LN11@load_level@3:
	xor	eax, eax
$LN12@load_level@3:
	push	OFFSET ??_C@_04ICMCOCEO@?4ltx?$AA@
	push	eax
	push	OFFSET ??_C@_0BG@KCNLLLEN@environment?2ambients?2?$AA@
	lea	ecx, DWORD PTR _path$128838[esp+1084]
	push	ecx
	push	520					; 00000208H
	call	DWORD PTR __imp_?strconcat@@YAPADHPADPBD11@Z

; 543  : 
; 544  : 	string_path full_path;
; 545  : 	CInifile* level_ambients = xr_new<CInifile>(
; 546  : 			FS.update_path(full_path, "$game_config$", path),
; 547  : 			TRUE,
; 548  : 			TRUE,
; 549  : 			FALSE);

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [ecx]
	add	esp, 20					; 00000014H
	lea	edx, DWORD PTR _path$128838[esp+1072]
	push	edx
	push	OFFSET ??_C@_0O@MGNGOECP@$game_config$?$AA@
	lea	eax, DWORD PTR _full_path$128841[esp+1080]
	push	eax
	call	DWORD PTR __imp_?update_path@CLocatorAPI@@QAEPBDAAY0CAI@DPBD1@Z
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	540					; 0000021cH
	mov	edi, eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN15@load_level@3
	sub	esp, 8
	mov	ecx, esp
	call	??0?$FastDelegate@$$A6A_NPBD@Z@fastdelegate@@QAE@XZ ; fastdelegate::FastDelegate<bool __cdecl(char const *)>::FastDelegate<bool __cdecl(char const *)>
	push	0
	push	0
	push	1
	push	1
	push	edi
	mov	ecx, esi
	call	DWORD PTR __imp_??0CInifile@@QAE@PBDHHHIV?$FastDelegate@$$A6A_NPBD@Z@fastdelegate@@@Z
	mov	DWORD PTR _level_ambients$128842[esp+1072], eax
	jmp	SHORT $LN16@load_level@3
$LN15@load_level@3:
	mov	DWORD PTR _level_ambients$128842[esp+1072], 0
$LN16@load_level@3:

; 550  : 
; 551  : 	for ( EnvAmbVecIt I=Ambients.begin(), E=Ambients.end(); I!=E; ++I )

	mov	eax, DWORD PTR [ebp+220]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	ebx, eax
	mov	eax, DWORD PTR [ebp+224]
	add	esp, 4
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	cmp	ebx, eax
	mov	DWORD PTR _E$128861[esp+1072], eax
	je	$LN2@load_level@3
	npad	1
$LL4@load_level@3:

; 552  : 	{
; 553  : 		CEnvAmbient* ambient = *I;

	mov	esi, DWORD PTR [ebx]

; 554  : 
; 555  : 		shared_str section_name = ambient->name();

	mov	DWORD PTR _section_name$128866[esp+1072], 0
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN54@load_level@3
	add	DWORD PTR [eax], 1
	mov	ecx, DWORD PTR _section_name$128866[esp+1072]
	test	ecx, ecx
	je	SHORT $LN54@load_level@3
	add	DWORD PTR [ecx], -1
$LN54@load_level@3:

; 556  : 
; 557  : 		// choose a source ini file
; 558  : 		CInifile* source = (level_ambients && level_ambients->section_exist(section_name)) ? 
; 559  : 							level_ambients : m_ambients_config;

	mov	ecx, DWORD PTR _level_ambients$128842[esp+1072]
	test	ecx, ecx
	mov	DWORD PTR _section_name$128866[esp+1072], eax
	je	SHORT $LN7@load_level@3
	lea	edx, DWORD PTR _section_name$128866[esp+1072]
	push	edx
	call	DWORD PTR __imp_?section_exist@CInifile@@QBEHABVshared_str@@@Z
	test	eax, eax
	mov	edi, DWORD PTR _level_ambients$128842[esp+1072]
	jne	SHORT $LN8@load_level@3
$LN7@load_level@3:
	mov	edi, DWORD PTR [ebp+252]
$LN8@load_level@3:

; 560  : 
; 561  : 
; 562  : 		// check and reload if needed
; 563  : 		if ( xr_strcmp( ambient->get_ambients_config_filename().c_str(), source->fname() ) )

	mov	eax, DWORD PTR [esi+36]
	test	eax, eax
	je	SHORT $LN64@load_level@3
	add	eax, 16					; 00000010H
	jmp	SHORT $LN65@load_level@3
$LN64@load_level@3:
	xor	eax, eax
$LN65@load_level@3:
	lea	ecx, DWORD PTR [edi+5]
$LL101@load_level@3:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN102@load_level@3
	test	dl, dl
	je	SHORT $LN103@load_level@3
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN102@load_level@3
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL101@load_level@3
$LN103@load_level@3:
	xor	eax, eax
	jmp	SHORT $LN104@load_level@3
$LN102@load_level@3:
	sbb	eax, eax
	sbb	eax, -1
$LN104@load_level@3:
	test	eax, eax
	je	SHORT $LN1@load_level@3

; 564  : 		{
; 565  : 			ambient->destroy();

	lea	eax, DWORD PTR [esi+4]
	push	eax
	call	??$delete_data@V?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@@Z ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> > >
	lea	ecx, DWORD PTR [esi+24]
	add	esp, 4
	push	ecx
	call	??$delete_data@V?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@CHelper3@CDestroyer@@SAXAAV?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@@Z ; CDestroyer::CHelper3::delete_data<xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> > >

; 566  : 			ambient->load(*source, *m_sound_channels_config, *m_effects_config, section_name);

	mov	eax, DWORD PTR [ebp+260]
	mov	ecx, DWORD PTR [ebp+256]
	add	esp, 4
	lea	edx, DWORD PTR _section_name$128866[esp+1072]
	push	edx
	push	eax
	push	ecx
	push	edi
	mov	ecx, esi
	call	?load@CEnvAmbient@@QAEXAAVCInifile@@00ABVshared_str@@@Z ; CEnvAmbient::load
$LN1@load_level@3:

; 567  : 		}
; 568  : 	}

	mov	eax, DWORD PTR _section_name$128866[esp+1072]
	test	eax, eax
	je	SHORT $LN3@load_level@3
	add	DWORD PTR [eax], -1
$LN3@load_level@3:

; 550  : 
; 551  : 	for ( EnvAmbVecIt I=Ambients.begin(), E=Ambients.end(); I!=E; ++I )

	add	ebx, 4
	cmp	ebx, DWORD PTR _E$128861[esp+1072]
	jne	$LL4@load_level@3
$LN2@load_level@3:

; 569  : 
; 570  : 	xr_delete(level_ambients);

	lea	edx, DWORD PTR _level_ambients$128842[esp+1072]
	push	edx
	call	??$xr_delete@VCInifile@@@@YAXAAPAVCInifile@@@Z ; xr_delete<CInifile>
	add	esp, 4

; 571  : 
; 572  : 	SECUROM_MARKER_PERFORMANCE_OFF(13)

	DB	-21					; ffffffebH
	DB	14					; 0000000eH
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	48					; 00000030H
	DB	87					; 00000057H
	DB	121					; 00000079H
	DB	71					; 00000047H
	DB	49					; 00000031H
	DB	107					; 0000006bH
	DB	109					; 0000006dH
	DB	2
	DB	13					; 0000000dH
	DB	0
	DB	0
	DB	0
	mov	eax, DWORD PTR _level_name$128836[esp+1072]
	test	eax, eax
	je	SHORT $LN95@load_level@3
	add	DWORD PTR [eax], -1
$LN95@load_level@3:

; 573  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?load_level_specific_ambients@CEnvironment@@IAEXXZ ENDP	; CEnvironment::load_level_specific_ambients
_TEXT	ENDS
PUBLIC	?mods_load@CEnvironment@@QAEXXZ			; CEnvironment::mods_load
; Function compile flags: /Ogtpy
;	COMDAT ?mods_load@CEnvironment@@QAEXXZ
_TEXT	SEGMENT
_fs$128819 = -612					; size = 4
_ver$128821 = -608					; size = 4
_this$ = -604						; size = 4
_E$128829 = -600					; size = 80
_path$ = -520						; size = 520
?mods_load@CEnvironment@@QAEXXZ PROC			; CEnvironment::mods_load, COMDAT
; _this$ = ecx

; 501  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 616				; 00000268H
	push	ebx
	push	ebp
	push	esi

; 502  : 	Modifiers.clear_and_free			();

	lea	ebx, DWORD PTR [ecx+208]
	mov	DWORD PTR _this$[esp+628], ecx
	push	edi
	mov	ecx, ebx
	call	?end@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEPAVCEnvModifier@@XZ ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::end
	mov	ecx, ebx
	mov	ebp, eax
	call	?begin@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@QAEPAVCEnvModifier@@XZ ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::begin
	cmp	eax, ebp
	je	SHORT $LN21@mods_load
	mov	edi, DWORD PTR [ebx+4]
	sub	edi, ebp
	je	SHORT $LN27@mods_load
	push	edi
	push	ebp
	push	eax
	call	DWORD PTR __imp__memmove
	mov	esi, eax
	add	esp, 12					; 0000000cH
	add	esi, edi
	jmp	SHORT $LN28@mods_load
$LN27@mods_load:
	mov	esi, eax
$LN28@mods_load:
	mov	eax, DWORD PTR [ebx+4]
	push	eax
	push	esi
	call	??$_Destroy_Range@PAVCEnvModifier@@@stlp_std@@YAXPAVCEnvModifier@@0@Z ; stlp_std::_Destroy_Range<CEnvModifier *>
	add	esp, 8
	mov	DWORD PTR [ebx+4], esi
$LN21@mods_load:

; 503  : 	string_path							path;
; 504  : 	if (FS.exist(path,"$level$","level.env_mod"))	

	mov	edx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	push	OFFSET ??_C@_0O@FPEAHABB@level?4env_mod?$AA@
	push	OFFSET ??_C@_07DJIBDFPO@$level$?$AA@
	lea	ecx, DWORD PTR _path$[esp+640]
	push	ecx
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?exist@CLocatorAPI@@QAEPBUfile@1@AAY0CAI@DPBD1@Z
	test	eax, eax
	je	$LN5@mods_load

; 505  : 	{
; 506  : 		IReader*	fs	= FS.r_open		(path);

	mov	eax, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR _path$[esp+632]
	push	edx
	push	0
	call	DWORD PTR __imp_?r_open@CLocatorAPI@@QAEPAVIReader@@PBD0@Z

; 507  : 		u32			id	= 0;

	xor	ebp, ebp

; 508  : 		u32 ver		= 0x0015;
; 509  : 		u32 sz;
; 510  : 
; 511  : 		while( 0!=(sz=fs->find_chunk(id)) )	

	push	ebp
	push	ebp
	mov	ecx, eax
	mov	DWORD PTR _fs$128819[esp+640], eax
	mov	DWORD PTR _ver$128821[esp+640], 21	; 00000015H
	call	DWORD PTR __imp_?find_chunk@IReader@@QAEIIPAH@Z
	test	eax, eax
	je	SHORT $LN3@mods_load
$LN4@mods_load:

; 512  : 		{
; 513  : 			if(id==0 && sz==sizeof(u32))

	test	ebp, ebp
	jne	SHORT $LN2@mods_load
	cmp	eax, 4
	jne	SHORT $LN2@mods_load

; 514  : 			{
; 515  : 				ver				= fs->r_u32();

	mov	ecx, DWORD PTR _fs$128819[esp+632]
	call	DWORD PTR __imp_?r_u32@?$IReaderBase@VIReader@@@@QAEIXZ
	mov	DWORD PTR _ver$128821[esp+632], eax

; 516  : 			}else

	jmp	SHORT $LN41@mods_load
$LN2@mods_load:

; 517  : 			{
; 518  : 				CEnvModifier		E;
; 519  : 				E.load				(fs, ver);

	mov	eax, DWORD PTR _ver$128821[esp+632]
	mov	ecx, DWORD PTR _fs$128819[esp+632]
	push	eax
	push	ecx
	lea	ecx, DWORD PTR _E$128829[esp+640]
	call	?load@CEnvModifier@@QAEXPAVIReader@@I@Z	; CEnvModifier::load

; 520  : 				Modifiers.push_back	(E);

	mov	eax, DWORD PTR [ebx+4]
	cmp	eax, DWORD PTR [ebx+8]
	je	SHORT $LN42@mods_load
	test	eax, eax
	je	SHORT $LN47@mods_load
	mov	ecx, 20					; 00000014H
	lea	esi, DWORD PTR _E$128829[esp+632]
	mov	edi, eax
	rep movsd
$LN47@mods_load:
	add	DWORD PTR [ebx+4], 80			; 00000050H
	jmp	SHORT $LN41@mods_load
$LN42@mods_load:
	lea	edx, DWORD PTR _E$128829[esp+632]
	push	edx
	push	ebx
	call	?_M_insert_overflow@?$_Impl_vector@VCEnvModifier@@V?$xalloc@VCEnvModifier@@@@@priv@stlp_std@@AAEXPAVCEnvModifier@@ABV4@ABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<CEnvModifier,xalloc<CEnvModifier> >::_M_insert_overflow
$LN41@mods_load:
	mov	ecx, DWORD PTR _fs$128819[esp+632]
	push	0

; 521  : 			}
; 522  : 			id					++;

	add	ebp, 1
	push	ebp
	call	DWORD PTR __imp_?find_chunk@IReader@@QAEIIPAH@Z
	test	eax, eax
	jne	SHORT $LN4@mods_load
$LN3@mods_load:

; 523  : 		}
; 524  : 		FS.r_close	(fs);

	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [ecx]
	lea	eax, DWORD PTR _fs$128819[esp+632]
	push	eax
	call	DWORD PTR __imp_?r_close@CLocatorAPI@@QAEXAAPAVIReader@@@Z
$LN5@mods_load:

; 525  : 	}
; 526  : 
; 527  : 	load_level_specific_ambients ();

	mov	ecx, DWORD PTR _this$[esp+632]
	call	?load_level_specific_ambients@CEnvironment@@IAEXXZ ; CEnvironment::load_level_specific_ambients

; 528  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?mods_load@CEnvironment@@QAEXXZ ENDP			; CEnvironment::mods_load
_TEXT	ENDS
PUBLIC	?AppendEnvAmb@CEnvironment@@QAEPAVCEnvAmbient@@ABVshared_str@@@Z ; CEnvironment::AppendEnvAmb
; Function compile flags: /Ogtpy
;	COMDAT ?AppendEnvAmb@CEnvironment@@QAEPAVCEnvAmbient@@ABVshared_str@@@Z
_TEXT	SEGMENT
$T545548 = -12						; size = 4
___old_size$546086 = -8					; size = 4
$T546002 = -4						; size = 4
_sect$ = 8						; size = 4
?AppendEnvAmb@CEnvironment@@QAEPAVCEnvAmbient@@ABVshared_str@@@Z PROC ; CEnvironment::AppendEnvAmb, COMDAT
; _this$ = ecx

; 485  : {

	sub	esp, 16					; 00000010H
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx

; 486  : 	for (EnvAmbVecIt it=Ambients.begin(); it!=Ambients.end(); it++)

	mov	eax, DWORD PTR [esi+220]
	push	edi
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	edi, eax
	mov	eax, DWORD PTR [esi+224]
	add	esp, 4
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	cmp	edi, eax
	je	SHORT $LN2@AppendEnvA
	npad	3
$LL4@AppendEnvA:

; 487  : 		if ((*it)->name().equal(sect))

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _sect$[esp+28]
	cmp	ecx, DWORD PTR [edx]
	je	$LN5@AppendEnvA
	mov	eax, DWORD PTR [esi+224]
	push	eax
	add	edi, 4
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 4
	cmp	edi, eax
	jne	SHORT $LL4@AppendEnvA
$LN2@AppendEnvA:

; 488  : 			return						(*it);
; 489  : 
; 490  : 	Ambients.push_back		(xr_new<CEnvAmbient>());

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	ebx, DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	push	40					; 00000028H
	call	ebx
	mov	edi, eax
	xor	ebp, ebp
	cmp	edi, ebp
	je	SHORT $LN29@AppendEnvA
	lea	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [edi], ebp
	call	??0?$xr_vector@PAUSEffect@CEnvAmbient@@V?$xalloc@PAUSEffect@CEnvAmbient@@@@@@QAE@XZ ; xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >::xr_vector<CEnvAmbient::SEffect *,xalloc<CEnvAmbient::SEffect *> >
	lea	ecx, DWORD PTR [edi+24]
	call	??0?$xr_vector@PAUSSndChannel@CEnvAmbient@@V?$xalloc@PAUSSndChannel@CEnvAmbient@@@@@@QAE@XZ ; xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >::xr_vector<CEnvAmbient::SSndChannel *,xalloc<CEnvAmbient::SSndChannel *> >
	mov	DWORD PTR [edi+36], ebp
	mov	DWORD PTR $T545548[esp+32], edi
	jmp	SHORT $LN30@AppendEnvA
$LN29@AppendEnvA:
	mov	DWORD PTR $T545548[esp+32], ebp
$LN30@AppendEnvA:
	mov	edi, DWORD PTR [esi+224]
	cmp	edi, DWORD PTR [esi+228]
	je	SHORT $LN78@AppendEnvA
	lea	eax, DWORD PTR $T545548[esp+32]
	push	eax
	push	edi
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [esi+224], 4
	jmp	$LN152@AppendEnvA
$LN78@AppendEnvA:
	mov	ecx, edi
	sub	ecx, DWORD PTR [esi+220]
	lea	edx, DWORD PTR $T546002[esp+32]
	push	edx
	lea	eax, DWORD PTR ___old_size$546086[esp+36]
	sar	ecx, 2
	push	eax
	mov	DWORD PTR $T546002[esp+40], 1
	mov	DWORD PTR ___old_size$546086[esp+40], ecx
	call	??$max@I@stlp_std@@YAABIABI0@Z		; stlp_std::max<unsigned int>
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR ___old_size$546086[esp+40]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	add	esp, 8
	lea	ebp, DWORD PTR [eax*4]
	push	ebp
	call	ebx
	mov	ebx, eax
	mov	eax, DWORD PTR [esi+220]
	sub	edi, eax
	je	SHORT $LN108@AppendEnvA
	push	edi
	push	eax
	push	ebx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, edi
	jmp	SHORT $LN109@AppendEnvA
$LN108@AppendEnvA:
	mov	eax, ebx
$LN109@AppendEnvA:
	mov	ecx, DWORD PTR $T546002[esp+32]
	test	ecx, ecx
	mov	edi, eax
	jbe	SHORT $LN110@AppendEnvA
	npad	4
$LL112@AppendEnvA:
	mov	edx, DWORD PTR $T545548[esp+32]
	mov	DWORD PTR [edi], edx
	sub	ecx, 1
	add	edi, 4
	test	ecx, ecx
	ja	SHORT $LL112@AppendEnvA
$LN110@AppendEnvA:
	mov	eax, DWORD PTR [esi+220]
	test	eax, eax
	je	SHORT $LN149@AppendEnvA
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN149@AppendEnvA:
	add	ebp, ebx
	mov	DWORD PTR [esi+220], ebx
	mov	DWORD PTR [esi+224], edi
	mov	DWORD PTR [esi+228], ebp
$LN152@AppendEnvA:

; 491  : 	Ambients.back()->load	(
; 492  : 		*m_ambients_config,
; 493  : 		*m_sound_channels_config,
; 494  : 		*m_effects_config,
; 495  : 		sect
; 496  : 	);

	mov	eax, DWORD PTR _sect$[esp+28]
	mov	ecx, DWORD PTR [esi+260]
	mov	edx, DWORD PTR [esi+256]
	push	eax
	mov	eax, DWORD PTR [esi+252]
	push	ecx
	mov	ecx, DWORD PTR [esi+224]
	mov	ecx, DWORD PTR [ecx-4]
	push	edx
	push	eax
	call	?load@CEnvAmbient@@QAEXAAVCInifile@@00ABVshared_str@@@Z ; CEnvAmbient::load

; 497  : 	return					(Ambients.back());

	mov	edx, DWORD PTR [esi+224]
	mov	eax, DWORD PTR [edx-4]
$LN5@AppendEnvA:

; 498  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	4
?AppendEnvAmb@CEnvironment@@QAEPAVCEnvAmbient@@ABVshared_str@@@Z ENDP ; CEnvironment::AppendEnvAmb
_TEXT	ENDS
PUBLIC	__real@45610000
PUBLIC	__real@42700000
PUBLIC	?load@CEnvDescriptor@@QAEXAAVCEnvironment@@AAVCInifile@@@Z ; CEnvDescriptor::load
;	COMDAT __real@45610000
; File d:\clearsky\sources\engine\include\xrrender\factoryptr.h
CONST	SEGMENT
__real@45610000 DD 045610000r			; 3600
CONST	ENDS
;	COMDAT __real@42700000
CONST	SEGMENT
__real@42700000 DD 042700000r			; 60
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\environment_misc.cpp
CONST	ENDS
;	COMDAT ?load@CEnvDescriptor@@QAEXAAVCEnvironment@@AAVCInifile@@@Z
_TEXT	SEGMENT
$T546593 = -1088					; size = 4
tv459 = -1088						; size = 4
tv414 = -1088						; size = 4
$T546248 = -1088					; size = 4
$T546247 = -1088					; size = 4
$T546594 = -1084					; size = 4
$T546253 = -1084					; size = 4
__cp$546590 = -1080					; size = 4
$T546544 = -1080					; size = 4
_tm$ = -1076						; size = 12
_multiplier$ = -1064					; size = 4
$T546256 = -1060					; size = 4
$T546246 = -1056					; size = 12
$T546245 = -1056					; size = 16
$T546244 = -1056					; size = 12
$T546243 = -1056					; size = 12
$T546240 = -1056					; size = 12
$T546239 = -1056					; size = 12
_st$ = -1040						; size = 520
_st_env$ = -520						; size = 520
_environment$ = 8					; size = 4
_config$ = 12						; size = 4
?load@CEnvDescriptor@@QAEXAAVCEnvironment@@AAVCInifile@@@Z PROC ; CEnvDescriptor::load, COMDAT
; _this$ = ecx

; 245  : {

	push	ebp
	mov	ebp, esp
	and	esp, -64				; ffffffc0H
	sub	esp, 1140				; 00000474H
	push	ebx
	push	esi
	mov	esi, ecx

; 246  : 	Ivector3 tm				={0,0,0};
; 247  : 	sscanf					(m_identifier.c_str(),"%d:%d:%d",&tm.x,&tm.y,&tm.z);

	mov	eax, DWORD PTR [esi+184]
	push	edi
	xor	edi, edi
	cmp	eax, edi
	mov	DWORD PTR $T546256[esp+1152], edi
	mov	DWORD PTR _tm$[esp+1152], edi
	mov	DWORD PTR _tm$[esp+1156], edi
	mov	DWORD PTR _tm$[esp+1160], edi
	je	SHORT $LN42@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN43@load@10
$LN42@load@10:
	xor	eax, eax
$LN43@load@10:
	lea	ecx, DWORD PTR _tm$[esp+1160]
	push	ecx
	lea	edx, DWORD PTR _tm$[esp+1160]
	push	edx
	lea	ecx, DWORD PTR _tm$[esp+1160]
	push	ecx
	push	OFFSET ??_C@_08BCHAAPIF@?$CFd?3?$CFd?3?$CFd?$AA@
	push	eax
	call	DWORD PTR __imp__sscanf
	add	esp, 20					; 00000014H

; 248  : 	R_ASSERT3				((tm.x>=0)&&(tm.x<24)&&(tm.y>=0)&&(tm.y<60)&&(tm.z>=0)&&(tm.z<60),"Incorrect weather time",m_identifier.c_str());

	cmp	BYTE PTR ?ignore_always@?3??load@CEnvDescriptor@@QAEXAAVCEnvironment@@AAVCInifile@@@Z@4_NA, 0
	jne	SHORT $LN29@load@10
	cmp	DWORD PTR _tm$[esp+1152], 23		; 00000017H
	ja	SHORT $LN26@load@10
	cmp	DWORD PTR _tm$[esp+1156], 59		; 0000003bH
	ja	SHORT $LN26@load@10
	mov	eax, DWORD PTR _tm$[esp+1160]
	cmp	eax, edi
	jl	SHORT $LN26@load@10
	cmp	eax, 60					; 0000003cH
	jl	SHORT $LN29@load@10
$LN26@load@10:
	mov	eax, DWORD PTR [esi+184]
	cmp	eax, edi
	je	SHORT $LN46@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN47@load@10
$LN46@load@10:
	xor	eax, eax
$LN47@load@10:
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?3??load@CEnvDescriptor@@QAEXAAVCEnvironment@@AAVCInifile@@@Z@4_NA
	push	OFFSET ??_C@_0BF@EANFLFCA@CEnvDescriptor?3?3load?$AA@
	push	248					; 000000f8H
	push	OFFSET ??_C@_0DJ@LMFGIIMF@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	eax
	push	OFFSET ??_C@_0BH@MPEMKMHJ@Incorrect?5weather?5time?$AA@
	push	OFFSET ??_C@_0EB@NFPMNHOA@?$CItm?4x?$DO?$DN0?$CJ?$CG?$CG?$CItm?4x?$DM24?$CJ?$CG?$CG?$CItm?4y?$DO?$DN0?$CJ?$CG@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD000H0AA_N@Z
$LN29@load@10:

; 249  : 	exec_time				= tm.x*3600.f+tm.y*60.f+tm.z;

	cvtsi2ss xmm0, DWORD PTR _tm$[esp+1156]
	mulss	xmm0, DWORD PTR __real@42700000
	cvtsi2ss xmm1, DWORD PTR _tm$[esp+1152]
	mulss	xmm1, DWORD PTR __real@45610000
	addss	xmm0, xmm1
	cvtsi2ss xmm1, DWORD PTR _tm$[esp+1160]
	addss	xmm0, xmm1
	movss	DWORD PTR [esi], xmm0

; 250  : 	exec_time_loaded		= exec_time;

	movss	DWORD PTR [esi+4], xmm0

; 251  : 	string_path				st,st_env;
; 252  : 	xr_strcpy				(st,config.r_string	(m_identifier.c_str(),"sky_texture"));

	mov	eax, DWORD PTR [esi+184]
	cmp	eax, edi
	je	SHORT $LN50@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN51@load@10
$LN50@load@10:
	xor	eax, eax
$LN51@load@10:
	mov	ebx, DWORD PTR _config$[ebp]
	push	OFFSET ??_C@_0M@KBFBNOE@sky_texture?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_string@CInifile@@QBEPBDPBD0@Z
	push	520					; 00000208H
	push	eax
	lea	edx, DWORD PTR _st$[esp+1160]
	push	520					; 00000208H
	push	edx
	call	DWORD PTR __imp__strncpy_s

; 253  : 	strconcat				(sizeof(st_env),st_env,st,"#small"		);

	push	OFFSET ??_C@_06HLMNEJJK@?$CDsmall?$AA@
	lea	eax, DWORD PTR _st$[esp+1172]
	push	eax
	lea	ecx, DWORD PTR _st_env$[esp+1176]
	push	ecx
	push	520					; 00000208H
	call	DWORD PTR __imp_?strconcat@@YAPADHPADPBD1@Z

; 254  : 	sky_texture_name		= st;

	mov	eax, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	ecx, DWORD PTR [eax]
	mov	edi, DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	add	esp, 32					; 00000020H
	lea	edx, DWORD PTR _st$[esp+1152]
	push	edx
	call	edi
	test	eax, eax
	je	SHORT $LN58@load@10
	add	DWORD PTR [eax], 1
$LN58@load@10:
	mov	ecx, DWORD PTR [esi+8]
	test	ecx, ecx
	je	SHORT $LN61@load@10
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [esi+8]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN61@load@10
	mov	DWORD PTR [esi+8], 0
$LN61@load@10:
	mov	DWORD PTR [esi+8], eax

; 255  : 	sky_texture_env_name	= st_env;

	mov	eax, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR _st_env$[esp+1152]
	push	edx
	call	edi
	test	eax, eax
	je	SHORT $LN67@load@10
	add	DWORD PTR [eax], 1
$LN67@load@10:
	mov	ecx, DWORD PTR [esi+12]
	test	ecx, ecx
	je	SHORT $LN70@load@10
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [esi+12]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN70@load@10
	mov	DWORD PTR [esi+12], 0
$LN70@load@10:
	mov	DWORD PTR [esi+12], eax

; 256  : 	clouds_texture_name		= config.r_string	(m_identifier.c_str(),"clouds_texture");

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN76@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN77@load@10
$LN76@load@10:
	xor	eax, eax
$LN77@load@10:
	push	OFFSET ??_C@_0P@BBBMCHHG@clouds_texture?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_string@CInifile@@QBEPBDPBD0@Z
	mov	edx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	ecx, DWORD PTR [edx]
	push	eax
	call	edi
	test	eax, eax
	je	SHORT $LN80@load@10
	add	DWORD PTR [eax], 1
$LN80@load@10:
	mov	ecx, DWORD PTR [esi+16]
	test	ecx, ecx
	je	SHORT $LN83@load@10
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [esi+16]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN83@load@10
	mov	DWORD PTR [esi+16], 0
$LN83@load@10:
	mov	DWORD PTR [esi+16], eax

; 257  : 	LPCSTR	cldclr			= config.r_string	(m_identifier.c_str(),"clouds_color");

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN89@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN90@load@10
$LN89@load@10:
	xor	eax, eax
$LN90@load@10:
	push	OFFSET ??_C@_0N@PBBLJPHJ@clouds_color?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_string@CInifile@@QBEPBDPBD0@Z

; 258  : 	float	multiplier		= 0, save=0;

	xorps	xmm0, xmm0

; 259  : 	sscanf					(cldclr,"%f,%f,%f,%f,%f",&clouds_color.x,&clouds_color.y,&clouds_color.z,&clouds_color.w,&multiplier);

	lea	edx, DWORD PTR _multiplier$[esp+1152]
	push	edx
	lea	edi, DWORD PTR [esi+36]
	push	edi
	lea	ecx, DWORD PTR [esi+32]
	push	ecx
	lea	ecx, DWORD PTR [esi+28]
	push	ecx
	lea	ecx, DWORD PTR [esi+24]
	push	ecx
	push	OFFSET ??_C@_0P@NDAOCKKN@?$CFf?0?$CFf?0?$CFf?0?$CFf?0?$CFf?$AA@
	push	eax
	movss	DWORD PTR _multiplier$[esp+1180], xmm0
	call	DWORD PTR __imp__sscanf

; 260  : 	save=clouds_color.w;	clouds_color.mul		(.5f*multiplier);		

	movss	xmm1, DWORD PTR [edi]
	movss	xmm2, DWORD PTR [esi+24]
	movss	xmm0, DWORD PTR _multiplier$[esp+1180]
	mulss	xmm0, DWORD PTR __real@3f000000
	mulss	xmm2, xmm0
	movss	DWORD PTR [esi+24], xmm2
	movaps	xmm2, xmm0
	mulss	xmm2, DWORD PTR [esi+28]
	movss	DWORD PTR [esi+28], xmm2
	movaps	xmm2, xmm0
	mulss	xmm2, DWORD PTR [esi+32]
	mulss	xmm0, DWORD PTR [esi+36]
	movss	DWORD PTR [esi+32], xmm2
	movss	DWORD PTR [esi+36], xmm0

; 261  : 	clouds_color.w			= save; 

	movss	DWORD PTR [edi], xmm1

; 262  : 	
; 263  : 	sky_color				= config.r_fvector3	(m_identifier.c_str(),"sky_color");		

	mov	eax, DWORD PTR [esi+184]
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	SHORT $LN95@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN96@load@10
$LN95@load@10:
	xor	eax, eax
$LN96@load@10:
	mov	edi, DWORD PTR __imp_?r_fvector3@CInifile@@QBE?AU?$_vector3@M@@PBD0@Z
	push	OFFSET ??_C@_09DMPOHDE@sky_color?$AA@
	push	eax
	lea	eax, DWORD PTR $T546239[esp+1160]
	push	eax
	mov	ecx, ebx
	call	edi
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi+40], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+44], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+48], eax

; 264  : 	
; 265  : 	if (config.line_exist(m_identifier.c_str(),"sky_rotation"))	sky_rotation	= deg2rad(config.r_float(m_identifier.c_str(),"sky_rotation"));

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN99@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN100@load@10
$LN99@load@10:
	xor	eax, eax
$LN100@load@10:
	push	OFFSET ??_C@_0N@JNJNJFLD@sky_rotation?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?line_exist@CInifile@@QBEHPBD0@Z
	test	eax, eax
	je	SHORT $LN25@load@10
	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN103@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN104@load@10
$LN103@load@10:
	xor	eax, eax
$LN104@load@10:
	push	OFFSET ??_C@_0N@JNJNJFLD@sky_rotation?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fmul	DWORD PTR __real@3c8efa35
	fstp	DWORD PTR [esi+52]
	jmp	SHORT $LN24@load@10
$LN25@load@10:

; 266  : 	else											sky_rotation	= 0;

	xorps	xmm0, xmm0
	movss	DWORD PTR [esi+52], xmm0
$LN24@load@10:

; 267  : 	far_plane				= config.r_float	(m_identifier.c_str(),"far_plane");

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN111@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN112@load@10
$LN111@load@10:
	xor	eax, eax
$LN112@load@10:
	push	OFFSET ??_C@_09DOMFAHMJ@far_plane?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fstp	DWORD PTR [esi+56]

; 268  : 	fog_color				= config.r_fvector3	(m_identifier.c_str(),"fog_color");

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN115@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN116@load@10
$LN115@load@10:
	xor	eax, eax
$LN116@load@10:
	push	OFFSET ??_C@_09PGJFNPIN@fog_color?$AA@
	push	eax
	lea	ecx, DWORD PTR $T546240[esp+1160]
	push	ecx
	mov	ecx, ebx
	call	edi
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [esi+60], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+64], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+68], edx

; 269  : 	fog_density				= config.r_float	(m_identifier.c_str(),"fog_density");

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN119@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN120@load@10
$LN119@load@10:
	xor	eax, eax
$LN120@load@10:
	push	OFFSET ??_C@_0M@PEDBIAKE@fog_density?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fstp	DWORD PTR [esi+72]

; 270  : 	fog_distance			= config.r_float	(m_identifier.c_str(),"fog_distance");

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN123@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN124@load@10
$LN123@load@10:
	xor	eax, eax
$LN124@load@10:
	push	OFFSET ??_C@_0N@JLADMLPG@fog_distance?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fstp	DWORD PTR [esi+76]

; 271  : 	rain_density			= config.r_float	(m_identifier.c_str(),"rain_density");		clamp(rain_density,0.f,1.f);

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN127@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN128@load@10
$LN127@load@10:
	xor	eax, eax
$LN128@load@10:
	push	OFFSET ??_C@_0N@DKAAMBIA@rain_density?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fstp	DWORD PTR [esi+80]
	movss	xmm0, DWORD PTR [esi+80]
	xorps	xmm1, xmm1
	comiss	xmm1, xmm0
	ja	SHORT $LN352@load@10
	movss	xmm1, DWORD PTR __real@3f800000
	comiss	xmm0, xmm1
	jbe	SHORT $LN129@load@10
$LN352@load@10:
	movss	DWORD PTR [esi+80], xmm1
$LN129@load@10:

; 272  : 	rain_color				= config.r_fvector3	(m_identifier.c_str(),"rain_color");            

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN136@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN137@load@10
$LN136@load@10:
	xor	eax, eax
$LN137@load@10:
	push	OFFSET ??_C@_0L@FGFPJEPN@rain_color?$AA@
	push	eax
	lea	eax, DWORD PTR $T546243[esp+1160]
	push	eax
	mov	ecx, ebx
	call	edi
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi+84], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+88], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+92], eax

; 273  : 	wind_velocity			= config.r_float	(m_identifier.c_str(),"wind_velocity");

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN140@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN141@load@10
$LN140@load@10:
	xor	eax, eax
$LN141@load@10:
	push	OFFSET ??_C@_0O@NKEOPANL@wind_velocity?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fstp	DWORD PTR [esi+104]

; 274  : 	wind_direction			= deg2rad(config.r_float(m_identifier.c_str(),"wind_direction"));

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN144@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN145@load@10
$LN144@load@10:
	xor	eax, eax
$LN145@load@10:
	push	OFFSET ??_C@_0P@MACDNOKA@wind_direction?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fmul	DWORD PTR __real@3c8efa35
	fstp	DWORD PTR [esi+108]

; 275  : 	ambient					= config.r_fvector3	(m_identifier.c_str(),"ambient_color");

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN152@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN153@load@10
$LN152@load@10:
	xor	eax, eax
$LN153@load@10:
	push	OFFSET ??_C@_0O@HNCBNJOB@ambient_color?$AA@
	push	eax
	lea	ecx, DWORD PTR $T546244[esp+1160]
	push	ecx
	mov	ecx, ebx
	call	edi
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [esi+112], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+116], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+120], edx

; 276  : 	hemi_color				= config.r_fvector4	(m_identifier.c_str(),"hemisphere_color");

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN156@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN157@load@10
$LN156@load@10:
	xor	eax, eax
$LN157@load@10:
	push	OFFSET ??_C@_0BB@KLFILGFK@hemisphere_color?$AA@
	push	eax
	lea	eax, DWORD PTR $T546245[esp+1160]
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_fvector4@CInifile@@QBE?AU?$_vector4@M@@PBD0@Z
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi+124], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+128], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+132], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [esi+136], edx

; 277  : 	sun_color				= config.r_fvector3	(m_identifier.c_str(),"sun_color");

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN160@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN161@load@10
$LN160@load@10:
	xor	eax, eax
$LN161@load@10:
	push	OFFSET ??_C@_09BBLDEGOF@sun_color?$AA@
	push	eax
	lea	eax, DWORD PTR $T546246[esp+1160]
	push	eax
	mov	ecx, ebx
	call	edi
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi+140], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+144], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+148], eax

; 278  : //	if (config.line_exist(m_identifier.c_str(),"sun_altitude"))
; 279  : 		sun_dir.setHP			(
; 280  : 			deg2rad(config.r_float(m_identifier.c_str(),"sun_altitude")),
; 281  : 			deg2rad(config.r_float(m_identifier.c_str(),"sun_longitude"))
; 282  : 		);

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN164@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN165@load@10
$LN164@load@10:
	xor	eax, eax
$LN165@load@10:
	push	OFFSET ??_C@_0O@NONJJHIB@sun_longitude?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fstp	DWORD PTR $T546544[esp+1152]
	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN172@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN173@load@10
$LN172@load@10:
	xor	eax, eax
$LN173@load@10:
	push	OFFSET ??_C@_0N@PNIGFPCO@sun_altitude?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fld	DWORD PTR __real@3c8efa35
	fmul	ST(1), ST(0)
	push	ecx
	fxch	ST(1)
	fstp	DWORD PTR $T546594[esp+1156]
	fmul	DWORD PTR $T546544[esp+1156]
	fst	DWORD PTR $T546593[esp+1156]
	fstp	DWORD PTR [esp]
	call	_cosf
	fstp	DWORD PTR __cp$546590[esp+1156]
	fld	DWORD PTR $T546594[esp+1156]
	fstp	DWORD PTR [esp]
	call	_sinf
	fmul	DWORD PTR __cp$546590[esp+1156]
	fchs
	fstp	DWORD PTR [esi+152]
	fld	DWORD PTR $T546593[esp+1156]
	fstp	DWORD PTR [esp]
	call	_sinf
	fstp	DWORD PTR [esi+156]
	fld	DWORD PTR $T546594[esp+1156]
	fstp	DWORD PTR [esp]
	call	_cosf
	fmul	DWORD PTR __cp$546590[esp+1156]
	add	esp, 4
	fstp	DWORD PTR [esi+160]

; 283  : 	R_ASSERT				( _valid(sun_dir) );

	cmp	BYTE PTR ?ignore_always@?L@??load@CEnvDescriptor@@QAEXAAVCEnvironment@@AAVCInifile@@@Z@4_NA, 0
	jne	SHORT $LN22@load@10
	fld	DWORD PTR [esi+152]
	mov	edi, DWORD PTR __imp___fpclass
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	edi
	add	esp, 8
	test	eax, 663				; 00000297H
	jne	SHORT $LN198@load@10
	fld	DWORD PTR [esi+156]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	edi
	add	esp, 8
	test	eax, 663				; 00000297H
	jne	SHORT $LN198@load@10
	fld	DWORD PTR [esi+160]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	edi
	add	esp, 8
	test	eax, 663				; 00000297H
	je	SHORT $LN22@load@10
$LN198@load@10:
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?L@??load@CEnvDescriptor@@QAEXAAVCEnvironment@@AAVCInifile@@@Z@4_NA
	push	OFFSET ??_C@_0BF@EANFLFCA@CEnvDescriptor?3?3load?$AA@
	push	283					; 0000011bH
	push	OFFSET ??_C@_0DJ@LMFGIIMF@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BA@MPNGEPPI@_valid?$CIsun_dir?$CJ?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN22@load@10:

; 284  : //	else
; 285  : //		sun_dir.setHP			(
; 286  : //			deg2rad(config.r_fvector2(m_identifier.c_str(),"sun_dir").y),
; 287  : //			deg2rad(config.r_fvector2(m_identifier.c_str(),"sun_dir").x)
; 288  : //		);
; 289  : 	VERIFY2					(sun_dir.y < 0, "Invalid sun direction settings while loading");
; 290  : 
; 291  : 	lens_flare_id			= environment.eff_LensFlare->AppendDef(environment, environment.m_suns_config, config.r_string(m_identifier.c_str(),"sun"));

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN211@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN212@load@10
$LN211@load@10:
	xor	eax, eax
$LN212@load@10:
	push	OFFSET ??_C@_03OHFMDAD@sun?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_string@CInifile@@QBEPBDPBD0@Z
	mov	edi, DWORD PTR _environment$[ebp]
	mov	ecx, DWORD PTR [edi+264]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [edi+236]
	push	edi
	lea	edx, DWORD PTR $T546247[esp+1164]
	push	edx
	call	?AppendDef@CLensFlare@@QAE?AVshared_str@@AAVCEnvironment@@PAVCInifile@@PBD@Z ; CLensFlare::AppendDef
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN215@load@10
	add	DWORD PTR [eax], 1
$LN215@load@10:
	mov	ecx, DWORD PTR [esi+172]
	test	ecx, ecx
	je	SHORT $LN218@load@10
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [esi+172]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN218@load@10
	mov	DWORD PTR [esi+172], 0
$LN218@load@10:
	mov	DWORD PTR [esi+172], eax
	mov	eax, DWORD PTR $T546247[esp+1152]
	test	eax, eax
	je	SHORT $LN224@load@10
	add	DWORD PTR [eax], -1
$LN224@load@10:

; 292  : 	tb_id					= environment.eff_Thunderbolt->AppendDef(environment, environment.m_thunderbolt_collections_config, environment.m_thunderbolts_config, config.r_string(m_identifier.c_str(),"thunderbolt_collection"));

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN230@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN231@load@10
$LN230@load@10:
	xor	eax, eax
$LN231@load@10:
	push	OFFSET ??_C@_0BH@JJPAPJPK@thunderbolt_collection?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_string@CInifile@@QBEPBDPBD0@Z
	mov	edx, DWORD PTR [edi+272]
	push	eax
	mov	eax, DWORD PTR [edi+268]
	push	edx
	push	eax
	push	edi
	lea	ecx, DWORD PTR $T546248[esp+1168]
	push	ecx
	mov	ecx, DWORD PTR [edi+240]
	call	?AppendDef@CEffect_Thunderbolt@@QAE?AVshared_str@@AAVCEnvironment@@PAVCInifile@@1PBD@Z ; CEffect_Thunderbolt::AppendDef
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN234@load@10
	add	DWORD PTR [eax], 1
$LN234@load@10:
	mov	ecx, DWORD PTR [esi+176]
	test	ecx, ecx
	je	SHORT $LN237@load@10
	add	DWORD PTR [ecx], -1
	mov	edx, DWORD PTR [esi+176]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN237@load@10
	mov	DWORD PTR [esi+176], 0
$LN237@load@10:
	mov	DWORD PTR [esi+176], eax
	mov	eax, DWORD PTR $T546248[esp+1152]
	test	eax, eax
	je	SHORT $LN243@load@10
	add	DWORD PTR [eax], -1
$LN243@load@10:

; 293  : 	bolt_period				= (tb_id.size())?config.r_float	(m_identifier.c_str(),"thunderbolt_period"):0.f;

	mov	eax, DWORD PTR [esi+176]
	test	eax, eax
	je	SHORT $LN33@load@10
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN33@load@10
	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN253@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN254@load@10
$LN253@load@10:
	xor	eax, eax
$LN254@load@10:
	push	OFFSET ??_C@_0BD@JCGMNLO@thunderbolt_period?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fstp	DWORD PTR tv414[esp+1152]
	movss	xmm0, DWORD PTR tv414[esp+1152]
	jmp	SHORT $LN34@load@10
$LN33@load@10:
	xorps	xmm0, xmm0
$LN34@load@10:
	movss	DWORD PTR [esi+96], xmm0

; 294  : 	bolt_duration			= (tb_id.size())?config.r_float	(m_identifier.c_str(),"thunderbolt_duration"):0.f;

	mov	eax, DWORD PTR [esi+176]
	test	eax, eax
	je	SHORT $LN35@load@10
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN35@load@10
	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN261@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN262@load@10
$LN261@load@10:
	xor	eax, eax
$LN262@load@10:
	push	OFFSET ??_C@_0BF@KDPICAFM@thunderbolt_duration?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fstp	DWORD PTR tv459[esp+1152]
	movss	xmm0, DWORD PTR tv459[esp+1152]
	jmp	SHORT $LN36@load@10
$LN35@load@10:
	xorps	xmm0, xmm0
$LN36@load@10:
	movss	DWORD PTR [esi+100], xmm0

; 295  : 	env_ambient				= config.line_exist(m_identifier.c_str(),"ambient")?environment.AppendEnvAmb	(config.r_string(m_identifier.c_str(),"ambient")):0;

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN265@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN266@load@10
$LN265@load@10:
	xor	eax, eax
$LN266@load@10:
	push	OFFSET ??_C@_07LIABELBC@ambient?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?line_exist@CInifile@@QBEHPBD0@Z
	test	eax, eax
	je	SHORT $LN37@load@10
	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN269@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN270@load@10
$LN269@load@10:
	xor	eax, eax
$LN270@load@10:
	push	OFFSET ??_C@_07LIABELBC@ambient?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_string@CInifile@@QBEPBDPBD0@Z
	push	eax
	mov	eax, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	DWORD PTR $T546253[esp+1156], 0
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	test	eax, eax
	je	SHORT $LN273@load@10
	add	DWORD PTR [eax], 1
$LN273@load@10:
	mov	ecx, DWORD PTR $T546253[esp+1152]
	test	ecx, ecx
	je	SHORT $LN276@load@10
	add	DWORD PTR [ecx], -1
$LN276@load@10:
	lea	ecx, DWORD PTR $T546253[esp+1152]
	push	ecx
	mov	ecx, edi
	mov	DWORD PTR $T546253[esp+1156], eax
	mov	DWORD PTR $T546256[esp+1156], 1
	call	?AppendEnvAmb@CEnvironment@@QAEPAVCEnvAmbient@@ABVshared_str@@@Z ; CEnvironment::AppendEnvAmb
	jmp	SHORT $LN38@load@10
$LN37@load@10:
	xor	eax, eax
$LN38@load@10:
	test	BYTE PTR $T546256[esp+1152], 1
	mov	DWORD PTR [esi+180], eax
	je	SHORT $LN282@load@10
	mov	eax, DWORD PTR $T546253[esp+1152]
	test	eax, eax
	je	SHORT $LN282@load@10
	add	DWORD PTR [eax], -1
$LN282@load@10:

; 296  : 
; 297  : 	if (config.line_exist(m_identifier.c_str(),"sun_shafts_intensity"))

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN288@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN289@load@10
$LN288@load@10:
	xor	eax, eax
$LN289@load@10:
	mov	edi, DWORD PTR __imp_?line_exist@CInifile@@QBEHPBD0@Z
	push	OFFSET ??_C@_0BF@ILNJDLLL@sun_shafts_intensity?$AA@
	push	eax
	mov	ecx, ebx
	call	edi
	test	eax, eax
	je	SHORT $LN16@load@10

; 298  : 		m_fSunShaftsIntensity = config.r_float(m_identifier.c_str(),"sun_shafts_intensity");

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN292@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN293@load@10
$LN292@load@10:
	xor	eax, eax
$LN293@load@10:
	push	OFFSET ??_C@_0BF@ILNJDLLL@sun_shafts_intensity?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fstp	DWORD PTR [esi+164]
$LN16@load@10:

; 299  : 
; 300  : 	if (config.line_exist(m_identifier.c_str(),"water_intensity"))

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN296@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN297@load@10
$LN296@load@10:
	xor	eax, eax
$LN297@load@10:
	push	OFFSET ??_C@_0BA@CGFGMFHM@water_intensity?$AA@
	push	eax
	mov	ecx, ebx
	call	edi
	test	eax, eax
	je	SHORT $LN15@load@10

; 301  : 		m_fWaterIntensity = config.r_float(m_identifier.c_str(),"water_intensity");

	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN300@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN301@load@10
$LN300@load@10:
	xor	eax, eax
$LN301@load@10:
	push	OFFSET ??_C@_0BA@CGFGMFHM@water_intensity?$AA@
	push	eax
	mov	ecx, ebx
	call	DWORD PTR __imp_?r_float@CInifile@@QBEMPBD0@Z
	fstp	DWORD PTR [esi+168]
$LN15@load@10:

; 302  : 
; 303  : 	C_CHECK					(clouds_color);

	movss	xmm2, DWORD PTR [esi+24]
	xorps	xmm0, xmm0
	comiss	xmm0, xmm2
	mov	edi, DWORD PTR __imp_?Msg@@YAXPBDZZ
	movss	xmm1, DWORD PTR __real@40000000
	ja	SHORT $LN13@load@10
	comiss	xmm2, xmm1
	ja	SHORT $LN13@load@10
	movss	xmm2, DWORD PTR [esi+28]
	comiss	xmm0, xmm2
	ja	SHORT $LN13@load@10
	comiss	xmm2, xmm1
	ja	SHORT $LN13@load@10
	movss	xmm2, DWORD PTR [esi+32]
	comiss	xmm0, xmm2
	ja	SHORT $LN13@load@10
	comiss	xmm2, xmm1
	jbe	SHORT $LN14@load@10
$LN13@load@10:
	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN304@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN305@load@10
$LN304@load@10:
	xor	eax, eax
$LN305@load@10:
	push	eax
	push	OFFSET ??_C@_0N@PBBLJPHJ@clouds_color?$AA@
	push	OFFSET ??_C@_0CD@GDHIGMGD@?$CB?5Invalid?5?8?$CFs?8?5in?5env?9section?5?8?$CF@
	call	edi
	movss	xmm1, DWORD PTR __real@40000000
	xorps	xmm0, xmm0
	add	esp, 12					; 0000000cH
$LN14@load@10:

; 304  : 	C_CHECK					(sky_color	);

	movss	xmm2, DWORD PTR [esi+40]
	comiss	xmm0, xmm2
	ja	SHORT $LN11@load@10
	comiss	xmm2, xmm1
	ja	SHORT $LN11@load@10
	movss	xmm2, DWORD PTR [esi+44]
	comiss	xmm0, xmm2
	ja	SHORT $LN11@load@10
	comiss	xmm2, xmm1
	ja	SHORT $LN11@load@10
	movss	xmm2, DWORD PTR [esi+48]
	comiss	xmm0, xmm2
	ja	SHORT $LN11@load@10
	comiss	xmm2, xmm1
	jbe	SHORT $LN12@load@10
$LN11@load@10:
	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN308@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN309@load@10
$LN308@load@10:
	xor	eax, eax
$LN309@load@10:
	push	eax
	push	OFFSET ??_C@_09DMPOHDE@sky_color?$AA@
	push	OFFSET ??_C@_0CD@GDHIGMGD@?$CB?5Invalid?5?8?$CFs?8?5in?5env?9section?5?8?$CF@
	call	edi
	movss	xmm1, DWORD PTR __real@40000000
	xorps	xmm0, xmm0
	add	esp, 12					; 0000000cH
$LN12@load@10:

; 305  : 	C_CHECK					(fog_color	);

	movss	xmm2, DWORD PTR [esi+60]
	comiss	xmm0, xmm2
	ja	SHORT $LN9@load@10
	comiss	xmm2, xmm1
	ja	SHORT $LN9@load@10
	movss	xmm2, DWORD PTR [esi+64]
	comiss	xmm0, xmm2
	ja	SHORT $LN9@load@10
	comiss	xmm2, xmm1
	ja	SHORT $LN9@load@10
	movss	xmm2, DWORD PTR [esi+68]
	comiss	xmm0, xmm2
	ja	SHORT $LN9@load@10
	comiss	xmm2, xmm1
	jbe	SHORT $LN10@load@10
$LN9@load@10:
	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN312@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN313@load@10
$LN312@load@10:
	xor	eax, eax
$LN313@load@10:
	push	eax
	push	OFFSET ??_C@_09PGJFNPIN@fog_color?$AA@
	push	OFFSET ??_C@_0CD@GDHIGMGD@?$CB?5Invalid?5?8?$CFs?8?5in?5env?9section?5?8?$CF@
	call	edi
	movss	xmm1, DWORD PTR __real@40000000
	xorps	xmm0, xmm0
	add	esp, 12					; 0000000cH
$LN10@load@10:

; 306  : 	C_CHECK					(rain_color	);

	movss	xmm2, DWORD PTR [esi+84]
	comiss	xmm0, xmm2
	ja	SHORT $LN7@load@10
	comiss	xmm2, xmm1
	ja	SHORT $LN7@load@10
	movss	xmm2, DWORD PTR [esi+88]
	comiss	xmm0, xmm2
	ja	SHORT $LN7@load@10
	comiss	xmm2, xmm1
	ja	SHORT $LN7@load@10
	movss	xmm2, DWORD PTR [esi+92]
	comiss	xmm0, xmm2
	ja	SHORT $LN7@load@10
	comiss	xmm2, xmm1
	jbe	SHORT $LN8@load@10
$LN7@load@10:
	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN316@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN317@load@10
$LN316@load@10:
	xor	eax, eax
$LN317@load@10:
	push	eax
	push	OFFSET ??_C@_0L@FGFPJEPN@rain_color?$AA@
	push	OFFSET ??_C@_0CD@GDHIGMGD@?$CB?5Invalid?5?8?$CFs?8?5in?5env?9section?5?8?$CF@
	call	edi
	movss	xmm1, DWORD PTR __real@40000000
	xorps	xmm0, xmm0
	add	esp, 12					; 0000000cH
$LN8@load@10:

; 307  : 	C_CHECK					(ambient	);

	movss	xmm2, DWORD PTR [esi+112]
	comiss	xmm0, xmm2
	ja	SHORT $LN5@load@10
	comiss	xmm2, xmm1
	ja	SHORT $LN5@load@10
	movss	xmm2, DWORD PTR [esi+116]
	comiss	xmm0, xmm2
	ja	SHORT $LN5@load@10
	comiss	xmm2, xmm1
	ja	SHORT $LN5@load@10
	movss	xmm2, DWORD PTR [esi+120]
	comiss	xmm0, xmm2
	ja	SHORT $LN5@load@10
	comiss	xmm2, xmm1
	jbe	SHORT $LN6@load@10
$LN5@load@10:
	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN320@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN321@load@10
$LN320@load@10:
	xor	eax, eax
$LN321@load@10:
	push	eax
	push	OFFSET ??_C@_07LIABELBC@ambient?$AA@
	push	OFFSET ??_C@_0CD@GDHIGMGD@?$CB?5Invalid?5?8?$CFs?8?5in?5env?9section?5?8?$CF@
	call	edi
	movss	xmm1, DWORD PTR __real@40000000
	xorps	xmm0, xmm0
	add	esp, 12					; 0000000cH
$LN6@load@10:

; 308  : 	C_CHECK					(hemi_color	);

	movss	xmm2, DWORD PTR [esi+124]
	comiss	xmm0, xmm2
	ja	SHORT $LN3@load@10
	comiss	xmm2, xmm1
	ja	SHORT $LN3@load@10
	movss	xmm2, DWORD PTR [esi+128]
	comiss	xmm0, xmm2
	ja	SHORT $LN3@load@10
	comiss	xmm2, xmm1
	ja	SHORT $LN3@load@10
	movss	xmm2, DWORD PTR [esi+132]
	comiss	xmm0, xmm2
	ja	SHORT $LN3@load@10
	comiss	xmm2, xmm1
	jbe	SHORT $LN4@load@10
$LN3@load@10:
	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN324@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN325@load@10
$LN324@load@10:
	xor	eax, eax
$LN325@load@10:
	push	eax
	push	OFFSET ??_C@_0L@EEMEPANN@hemi_color?$AA@
	push	OFFSET ??_C@_0CD@GDHIGMGD@?$CB?5Invalid?5?8?$CFs?8?5in?5env?9section?5?8?$CF@
	call	edi
	movss	xmm1, DWORD PTR __real@40000000
	xorps	xmm0, xmm0
	add	esp, 12					; 0000000cH
$LN4@load@10:

; 309  : 	C_CHECK					(sun_color	);

	movss	xmm2, DWORD PTR [esi+140]
	comiss	xmm0, xmm2
	ja	SHORT $LN1@load@10
	comiss	xmm2, xmm1
	ja	SHORT $LN1@load@10
	movss	xmm2, DWORD PTR [esi+144]
	comiss	xmm0, xmm2
	ja	SHORT $LN1@load@10
	comiss	xmm2, xmm1
	ja	SHORT $LN1@load@10
	movss	xmm2, DWORD PTR [esi+148]
	comiss	xmm0, xmm2
	ja	SHORT $LN1@load@10
	comiss	xmm2, xmm1
	jbe	SHORT $LN2@load@10
$LN1@load@10:
	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN328@load@10
	add	eax, 16					; 00000010H
	jmp	SHORT $LN329@load@10
$LN328@load@10:
	xor	eax, eax
$LN329@load@10:
	push	eax
	push	OFFSET ??_C@_09BBLDEGOF@sun_color?$AA@
	push	OFFSET ??_C@_0CD@GDHIGMGD@?$CB?5Invalid?5?8?$CFs?8?5in?5env?9section?5?8?$CF@
	call	edi
	add	esp, 12					; 0000000cH
$LN2@load@10:

; 310  : 	on_device_create		();

	mov	ecx, DWORD PTR [esi+20]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	push	esi
	call	eax

; 311  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?load@CEnvDescriptor@@QAEXAAVCEnvironment@@AAVCInifile@@@Z ENDP ; CEnvDescriptor::load
PUBLIC	?create_descriptor@CEnvironment@@IAEPAVCEnvDescriptor@@ABVshared_str@@PAVCInifile@@@Z ; CEnvironment::create_descriptor
; Function compile flags: /Ogtpy
;	COMDAT ?create_descriptor@CEnvironment@@IAEPAVCEnvDescriptor@@ABVshared_str@@PAVCInifile@@@Z
_TEXT	SEGMENT
_identifier$ = 8					; size = 4
_config$ = 12						; size = 4
?create_descriptor@CEnvironment@@IAEPAVCEnvDescriptor@@ABVshared_str@@PAVCInifile@@@Z PROC ; CEnvironment::create_descriptor, COMDAT
; _this$ = ecx

; 576  : {

	push	esi
	push	edi
	mov	edi, ecx

; 577  : 	CEnvDescriptor*	result = xr_new<CEnvDescriptor>(identifier);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	188					; 000000bcH
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	test	eax, eax
	je	SHORT $LN6@create_des
	mov	ecx, DWORD PTR _identifier$[esp+4]
	push	ecx
	mov	ecx, eax
	call	??0CEnvDescriptor@@QAE@ABVshared_str@@@Z ; CEnvDescriptor::CEnvDescriptor
	mov	esi, eax
	jmp	SHORT $LN7@create_des
$LN6@create_des:
	xor	esi, esi
$LN7@create_des:

; 578  : 	if (config)

	mov	eax, DWORD PTR _config$[esp+4]
	test	eax, eax
	je	SHORT $LN10@create_des

; 579  : 		result->load(*this, *config);

	push	eax
	push	edi
	mov	ecx, esi
	call	?load@CEnvDescriptor@@QAEXAAVCEnvironment@@AAVCInifile@@@Z ; CEnvDescriptor::load
$LN10@create_des:
	pop	edi

; 580  : 	return			(result);

	mov	eax, esi
	pop	esi

; 581  : }

	ret	8
?create_descriptor@CEnvironment@@IAEPAVCEnvDescriptor@@ABVshared_str@@PAVCInifile@@@Z ENDP ; CEnvironment::create_descriptor
PUBLIC	?load_weather_effects@CEnvironment@@IAEXXZ	; CEnvironment::load_weather_effects
; Function compile flags: /Ogtpy
;	COMDAT ?load_weather_effects@CEnvironment@@IAEXXZ
_TEXT	SEGMENT
_file_name$129167 = -580				; size = 520
$T553390 = -60						; size = 4
$T553956 = -56						; size = 4
___old_size$554591 = -52				; size = 4
$T553388 = -48						; size = 4
___old_size$554106 = -44				; size = 4
_object$129179 = -40					; size = 4
_file_list$ = -36					; size = 4
$T554499 = -32						; size = 4
tv1003 = -28						; size = 4
_v$554149 = -28						; size = 4
tv947 = -24						; size = 4
_e$ = -24						; size = 4
_i$ = -20						; size = 4
_i$129174 = -16						; size = 4
$T553389 = -16						; size = 4
tv1029 = -12						; size = 4
$T553391 = -12						; size = 4
_e$129175 = -12						; size = 4
_config$129168 = -8					; size = 4
_identifier$129162 = -8					; size = 4
__I$ = -4						; size = 4
_this$ = -4						; size = 4
?load_weather_effects@CEnvironment@@IAEXXZ PROC		; CEnvironment::load_weather_effects, COMDAT
; _this$ = ecx

; 641  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 580				; 00000244H

; 642  : 	if (!WeatherFXs.empty())

	cmp	DWORD PTR [ecx+200], 0
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	jne	$LN5@load_weath

; 643  : 		return;
; 644  : 
; 645  : 	typedef xr_vector<LPSTR>		file_list_type;
; 646  : 	file_list_type*					file_list = FS.file_list_open("$game_weather_effects$","");

	mov	eax, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [eax]
	push	1
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BH@NCMIJIFN@$game_weather_effects$?$AA@
	call	DWORD PTR __imp_?file_list_open@CLocatorAPI@@QAEPAV?$xr_vector@PADV?$xalloc@PAD@@@@PBD0I@Z

; 647  : 	VERIFY							(file_list);
; 648  : 
; 649  : 	file_list_type::const_iterator	i = file_list->begin();

	mov	ecx, eax
	mov	DWORD PTR _file_list$[ebp], eax
	call	?begin@?$vector@PADV?$xalloc@PAD@@@stlp_std@@QAEPAPADXZ ; stlp_std::vector<char *,xalloc<char *> >::begin

; 650  : 	file_list_type::const_iterator	e = file_list->end();

	mov	ecx, DWORD PTR _file_list$[ebp]
	mov	esi, eax
	mov	eax, DWORD PTR [ecx+4]
	push	eax
	mov	DWORD PTR _i$[ebp], esi
	call	?to_value_type_ptr@?$_CastTraits@PAXPAD@priv@stlp_std@@SAPAPADPAPAX@Z ; stlp_std::priv::_CastTraits<void *,char *>::to_value_type_ptr
	add	esp, 4

; 651  : 	for ( ; i != e; ++i) {

	cmp	esi, eax
	mov	DWORD PTR _e$[ebp], eax
	je	$LN26@load_weath
$LN28@load_weath:

; 652  : 		u32							length = xr_strlen(*i);

	mov	edx, DWORD PTR _i$[ebp]
	mov	esi, DWORD PTR [edx]
	mov	eax, esi
	lea	ecx, DWORD PTR [eax+1]
$LL496@load_weath:
	mov	dl, BYTE PTR [eax]
	add	eax, 1
	test	dl, dl
	jne	SHORT $LL496@load_weath
	sub	eax, ecx

; 653  : 		VERIFY						(length >= 4);
; 654  : 		VERIFY						((*i)[length - 4] == '.');
; 655  : 		VERIFY						((*i)[length - 3] == 'l');
; 656  : 		VERIFY						((*i)[length - 2] == 't');
; 657  : 		VERIFY						((*i)[length - 1] == 'x');
; 658  : 		u32							new_length = length - 4;

	lea	edi, DWORD PTR [eax-4]

; 659  : 		LPSTR						identifier = (LPSTR)_alloca((new_length + 1)*sizeof(char));

	lea	eax, DWORD PTR [edi+1]
	call	__alloca_probe_16

; 660  : 		Memory.mem_copy				(identifier, *i, new_length*sizeof(char));

	mov	eax, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	ecx, DWORD PTR [eax+8]
	mov	ebx, esp
	push	edi
	push	esi
	push	ebx
	mov	DWORD PTR _identifier$129162[ebp], ebx
	call	ecx

; 661  : 		identifier[new_length]		= 0;
; 662  : 		EnvVec& env					= WeatherFXs[identifier];

	mov	eax, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR _identifier$129162[ebp]
	push	edx
	add	eax, 184				; 000000b8H
	push	eax
	mov	BYTE PTR [ebx+edi], 0
	call	??$?APAD@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAEAAV?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@ABQAD@Z ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::operator[]<char *>

; 663  : 
; 664  : 		string_path					file_name;
; 665  : 		FS.update_path				(file_name, "$game_weather_effects$", identifier);

	mov	edx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ebx, eax
	mov	eax, DWORD PTR _identifier$129162[ebp]
	push	eax
	push	OFFSET ??_C@_0BH@NCMIJIFN@$game_weather_effects$?$AA@
	lea	ecx, DWORD PTR _file_name$129167[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?update_path@CLocatorAPI@@QAEPBDAAY0CAI@DPBD1@Z

; 666  : 		xr_strcat					(file_name, ".ltx");

	lea	eax, DWORD PTR _file_name$129167[ebp]
	lea	esi, DWORD PTR [eax+1]
	npad	1
$LL497@load_weath:
	mov	cl, BYTE PTR [eax]
	add	eax, 1
	test	cl, cl
	jne	SHORT $LL497@load_weath
	sub	eax, esi
	lea	eax, DWORD PTR _file_name$129167[ebp+eax]
	lea	ecx, DWORD PTR _file_name$129167[ebp+519]
	cmp	eax, ecx
	ja	SHORT $LN63@load_weath
	mov	esi, OFFSET ??_C@_04ICMCOCEO@?4ltx?$AA@
	sub	esi, eax
$LL61@load_weath:
	lea	edx, DWORD PTR _file_name$129167[ebp+519]
	cmp	eax, edx
	je	SHORT $LN59@load_weath
	mov	cl, BYTE PTR [esi+eax]
	mov	BYTE PTR [eax], cl
	add	eax, 1
	cmp	BYTE PTR [esi+eax], 0
	jne	SHORT $LL61@load_weath
$LN59@load_weath:
	mov	BYTE PTR [eax], 0
$LN63@load_weath:

; 667  : 		CInifile*					config = CInifile::Create(file_name);

	lea	edx, DWORD PTR _file_name$129167[ebp]
	push	1
	push	edx
	call	DWORD PTR __imp_?Create@CInifile@@SAPAV1@PBDH@Z
	mov	edi, eax

; 668  : 
; 669  : 		typedef CInifile::Root		sections_type;
; 670  : 		sections_type&				sections = config->sections();
; 671  : 
; 672  : 		env.reserve					(sections.size() + 2);

	mov	ecx, DWORD PTR [edi+532]
	sub	ecx, DWORD PTR [edi+528]
	add	esp, 8
	sar	ecx, 2
	add	ecx, 2
	mov	DWORD PTR _config$129168[ebp], edi
	call	?reserve@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXI@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::reserve

; 673  : 		env.push_back				(create_descriptor("00:00:00", false));

	mov	eax, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	ecx, DWORD PTR [eax]
	push	OFFSET ??_C@_08HPPJPGGP@00?300?300?$AA@
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN82@load_weath
	add	DWORD PTR [esi], 1
$LN82@load_weath:
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	188					; 000000bcH
	mov	DWORD PTR $T553389[ebp], esi
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	test	eax, eax
	je	SHORT $LN91@load_weath
	lea	ecx, DWORD PTR $T553389[ebp]
	push	ecx
	mov	ecx, eax
	call	??0CEnvDescriptor@@QAE@ABVshared_str@@@Z ; CEnvDescriptor::CEnvDescriptor
	jmp	SHORT $LN92@load_weath
$LN91@load_weath:
	xor	eax, eax
$LN92@load_weath:
	mov	DWORD PTR $T553388[ebp], eax
	mov	eax, DWORD PTR [ebx+4]
	cmp	eax, DWORD PTR [ebx+8]
	je	SHORT $LN102@load_weath
	lea	edx, DWORD PTR $T553388[ebp]
	push	edx
	push	eax
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [ebx+4], 4
	jmp	SHORT $LN101@load_weath
$LN102@load_weath:
	push	1
	push	1
	push	eax
	lea	eax, DWORD PTR $T553388[ebp]
	mov	edi, ebx
	call	?_M_insert_overflow@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@AAEXPAPAXABQAXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::_M_insert_overflow
	mov	edi, DWORD PTR _config$129168[ebp]
$LN101@load_weath:
	test	esi, esi
	je	SHORT $LN113@load_weath
	add	DWORD PTR [esi], -1
$LN113@load_weath:

; 674  : 
; 675  : 		sections_type::const_iterator	i = sections.begin();

	mov	eax, DWORD PTR [edi+528]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr

; 676  : 		sections_type::const_iterator	e = sections.end();

	mov	edi, DWORD PTR [edi+532]
	mov	esi, eax
	push	edi
	mov	DWORD PTR _i$129174[ebp], esi
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 8

; 677  : 		for ( ; i != e; ++i) {

	cmp	esi, eax
	mov	DWORD PTR _e$129175[ebp], eax
	je	$LN8@load_weath
	npad	6
$LL10@load_weath:

; 678  : 			CEnvDescriptor*			object = create_descriptor((*i)->Name, config);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	edi, DWORD PTR [esi]
	push	188					; 000000bcH
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	test	eax, eax
	je	SHORT $LN138@load_weath
	push	edi
	mov	ecx, eax
	call	??0CEnvDescriptor@@QAE@ABVshared_str@@@Z ; CEnvDescriptor::CEnvDescriptor
	mov	edi, eax
	jmp	SHORT $LN139@load_weath
$LN138@load_weath:
	xor	edi, edi
$LN139@load_weath:
	mov	eax, DWORD PTR _config$129168[ebp]
	test	eax, eax
	je	SHORT $LN133@load_weath
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, edi
	call	?load@CEnvDescriptor@@QAEXAAVCEnvironment@@AAVCInifile@@@Z ; CEnvDescriptor::load
$LN133@load_weath:
	mov	DWORD PTR _object$129179[ebp], edi

; 679  : 			env.push_back			(object);

	mov	edi, DWORD PTR [ebx+4]
	cmp	edi, DWORD PTR [ebx+8]
	je	SHORT $LN149@load_weath
	lea	ecx, DWORD PTR _object$129179[ebp]
	push	ecx
	push	edi
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [ebx+4], 4
	jmp	$LN9@load_weath
$LN149@load_weath:
	mov	edx, edi
	sub	edx, DWORD PTR [ebx]
	lea	eax, DWORD PTR $T553956[ebp]
	push	eax
	lea	ecx, DWORD PTR ___old_size$554106[ebp]
	sar	edx, 2
	push	ecx
	mov	DWORD PTR $T553956[ebp], 1
	mov	DWORD PTR ___old_size$554106[ebp], edx
	call	??$max@I@stlp_std@@YAABIABI0@Z		; stlp_std::max<unsigned int>
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR ___old_size$554106[ebp]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	add	eax, eax
	add	eax, eax
	add	esp, 8
	push	eax
	mov	DWORD PTR tv1003[ebp], eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	mov	esi, eax
	mov	eax, DWORD PTR [ebx]
	sub	edi, eax
	je	SHORT $LN179@load_weath
	push	edi
	push	eax
	push	esi
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, edi
	jmp	SHORT $LN180@load_weath
$LN179@load_weath:
	mov	eax, esi
$LN180@load_weath:
	mov	ecx, DWORD PTR $T553956[ebp]
	test	ecx, ecx
	mov	edi, eax
	jbe	SHORT $LN181@load_weath
$LL183@load_weath:
	mov	edx, DWORD PTR _object$129179[ebp]
	mov	DWORD PTR [edi], edx
	sub	ecx, 1
	add	edi, 4
	test	ecx, ecx
	ja	SHORT $LL183@load_weath
$LN181@load_weath:
	mov	eax, DWORD PTR [ebx]
	test	eax, eax
	je	SHORT $LN220@load_weath
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN220@load_weath:
	mov	eax, DWORD PTR tv1003[ebp]
	add	eax, esi
	mov	DWORD PTR [ebx], esi
	mov	esi, DWORD PTR _i$129174[ebp]
	mov	DWORD PTR [ebx+4], edi
	mov	DWORD PTR [ebx+8], eax
$LN9@load_weath:
	add	esi, 4
	cmp	esi, DWORD PTR _e$129175[ebp]
	mov	DWORD PTR _i$129174[ebp], esi
	jne	$LL10@load_weath
$LN8@load_weath:

; 680  : 		}
; 681  : 
; 682  : 		CInifile::Destroy			(config);

	mov	ecx, DWORD PTR _config$129168[ebp]
	push	ecx
	call	DWORD PTR __imp_?Destroy@CInifile@@SAXPAV1@@Z

; 683  : 
; 684  : 		env.push_back				(create_descriptor("24:00:00", false));

	mov	edx, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	ecx, DWORD PTR [edx]
	add	esp, 4
	push	OFFSET ??_C@_08NFEFNABD@24?300?300?$AA@
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	mov	esi, eax
	test	esi, esi
	mov	DWORD PTR _v$554149[ebp], esi
	je	SHORT $LN230@load_weath
	add	DWORD PTR [esi], 1
$LN230@load_weath:
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	188					; 000000bcH
	mov	DWORD PTR $T553391[ebp], esi
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	test	eax, eax
	je	SHORT $LN239@load_weath
	lea	ecx, DWORD PTR $T553391[ebp]
	push	ecx
	mov	ecx, eax
	call	??0CEnvDescriptor@@QAE@ABVshared_str@@@Z ; CEnvDescriptor::CEnvDescriptor
	jmp	SHORT $LN240@load_weath
$LN239@load_weath:
	xor	eax, eax
$LN240@load_weath:
	mov	edi, DWORD PTR [ebx+4]
	cmp	edi, DWORD PTR [ebx+8]
	mov	DWORD PTR $T553390[ebp], eax
	je	SHORT $LN250@load_weath
	lea	edx, DWORD PTR $T553390[ebp]
	push	edx
	push	edi
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [ebx+4], 4
	jmp	$LN324@load_weath
$LN250@load_weath:
	mov	eax, edi
	sub	eax, DWORD PTR [ebx]
	lea	ecx, DWORD PTR $T554499[ebp]
	push	ecx
	lea	edx, DWORD PTR ___old_size$554591[ebp]
	sar	eax, 2
	push	edx
	mov	DWORD PTR $T554499[ebp], 1
	mov	DWORD PTR ___old_size$554591[ebp], eax
	call	??$max@I@stlp_std@@YAABIABI0@Z		; stlp_std::max<unsigned int>
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR ___old_size$554591[ebp]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	add	eax, eax
	add	eax, eax
	add	esp, 8
	push	eax
	mov	DWORD PTR tv1029[ebp], eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	mov	esi, eax
	mov	eax, DWORD PTR [ebx]
	sub	edi, eax
	je	SHORT $LN280@load_weath
	push	edi
	push	eax
	push	esi
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, edi
	jmp	SHORT $LN281@load_weath
$LN280@load_weath:
	mov	eax, esi
$LN281@load_weath:
	mov	ecx, DWORD PTR $T554499[ebp]
	test	ecx, ecx
	mov	edi, eax
	jbe	SHORT $LN282@load_weath
$LL284@load_weath:
	mov	eax, DWORD PTR $T553390[ebp]
	mov	DWORD PTR [edi], eax
	sub	ecx, 1
	add	edi, 4
	test	ecx, ecx
	ja	SHORT $LL284@load_weath
$LN282@load_weath:
	mov	eax, DWORD PTR [ebx]
	test	eax, eax
	je	SHORT $LN321@load_weath
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN321@load_weath:
	mov	ecx, DWORD PTR tv1029[ebp]
	mov	DWORD PTR [ebx], esi
	add	esi, ecx
	mov	DWORD PTR [ebx+8], esi
	mov	esi, DWORD PTR _v$554149[ebp]
	mov	DWORD PTR [ebx+4], edi
$LN324@load_weath:
	test	esi, esi
	je	SHORT $LN328@load_weath
	add	DWORD PTR [esi], -1
$LN328@load_weath:

; 685  : 		env.back()->exec_time_loaded = DAY_LENGTH;

	mov	edx, DWORD PTR [ebx+4]
	mov	eax, DWORD PTR [edx-4]
	movss	xmm0, DWORD PTR __real@47a8c000
	movss	DWORD PTR [eax+4], xmm0
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 4
	cmp	eax, DWORD PTR _e$[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jne	$LN28@load_weath
$LN26@load_weath:

; 686  : 
; 687  : 	}
; 688  : 
; 689  : 	FS.file_list_close				(file_list);

	mov	edx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	lea	ecx, DWORD PTR _file_list$[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx]
	call	DWORD PTR __imp_?file_list_close@CLocatorAPI@@QAEXAAPAV?$xr_vector@PADV?$xalloc@PAD@@@@@Z

; 690  : 
; 691  : #if 0
; 692  : 	int line_count	= pSettings->line_count("weather_effects");
; 693  : 	for (int w_idx=0; w_idx<line_count; w_idx++){
; 694  : 		LPCSTR weather, sect_w;
; 695  : 		if (pSettings->r_line("weather_effects",w_idx,&weather,&sect_w)){
; 696  : 			EnvVec& env		= WeatherFXs[weather];
; 697  : 			env.push_back	(xr_new<CEnvDescriptor>("00:00:00")); env.back()->exec_time_loaded = 0;
; 698  : //. why?	env.push_back	(xr_new<CEnvDescriptor>("00:00:00")); env.back()->exec_time_loaded = 0;
; 699  : 			int env_count	= pSettings->line_count(sect_w);
; 700  : 			LPCSTR exec_tm, sect_e;
; 701  : 			for (int env_idx=0; env_idx<env_count; env_idx++){
; 702  : 				if (pSettings->r_line(sect_w,env_idx,&exec_tm,&sect_e))
; 703  : 					env.push_back	(create_descriptor(sect_e));
; 704  : 			}
; 705  : 			env.push_back	(create_descriptor("23:59:59"));
; 706  : 			env.back()->exec_time_loaded = DAY_LENGTH;
; 707  : 		}
; 708  : 	}
; 709  : #endif // #if 0
; 710  : 
; 711  : 	// sorting weather envs
; 712  : 	EnvsMapIt _I=WeatherFXs.begin();

	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 184				; 000000b8H
	mov	ecx, esi
	mov	DWORD PTR tv947[ebp], esi
	call	?_M_leftmost@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_leftmost
	mov	edi, DWORD PTR [eax]

; 713  : 	EnvsMapIt _E=WeatherFXs.end();
; 714  : 	for (; _I!=_E; _I++){

	cmp	edi, esi
	setne	al
	test	al, al
	mov	DWORD PTR __I$[ebp], edi
	je	$LN5@load_weath
	jmp	SHORT $LN366@load_weath
	npad	1
$LL502@load_weath:
	mov	edi, DWORD PTR __I$[ebp]
$LN366@load_weath:

; 715  : 		R_ASSERT3	(_I->second.size()>1,"Environment in weather must >=2",*_I->first);

	cmp	BYTE PTR ?ignore_always@?BI@??load_weather_effects@CEnvironment@@IAEXXZ@4_NA, 0
	jne	SHORT $LN3@load_weath
	mov	eax, DWORD PTR [edi+24]
	sub	eax, DWORD PTR [edi+20]
	sar	eax, 2
	cmp	eax, 1
	ja	SHORT $LN3@load_weath
	mov	eax, DWORD PTR [edi+16]
	test	eax, eax
	je	SHORT $LN401@load_weath
	add	eax, 16					; 00000010H
	jmp	SHORT $LN402@load_weath
$LN401@load_weath:
	xor	eax, eax
$LN402@load_weath:
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BI@??load_weather_effects@CEnvironment@@IAEXXZ@4_NA
	push	OFFSET ??_C@_0CD@FDPACMLH@CEnvironment?3?3load_weather_effec@
	push	715					; 000002cbH
	push	OFFSET ??_C@_0DJ@LMFGIIMF@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	eax
	push	OFFSET ??_C@_0CA@KLGPDKEF@Environment?5in?5weather?5must?5?$DO?$DN2?$AA@
	push	OFFSET ??_C@_0BE@OAKBGENP@_I?9?$DOsecond?4size?$CI?$CJ?$DO1?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD000H0AA_N@Z
$LN3@load_weath:

; 716  : 		std::sort	(_I->second.begin(),_I->second.end(),sort_env_etl_pred);

	mov	eax, DWORD PTR [edi+24]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	edi, DWORD PTR [edi+20]
	push	edi
	mov	esi, eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	ebx, eax
	add	esp, 8
	cmp	ebx, esi
	je	$LN6@load_weath
	mov	edi, esi
	sub	edi, ebx
	sar	edi, 2
	mov	eax, edi
	xor	ecx, ecx
	cmp	eax, 1
	je	SHORT $LN430@load_weath
$LL432@load_weath:
	sar	eax, 1
	add	ecx, 1
	cmp	eax, 1
	jne	SHORT $LL432@load_weath
$LN430@load_weath:
	push	OFFSET ?sort_env_etl_pred@CEnvironment@@SA_NPBVCEnvDescriptor@@0@Z ; CEnvironment::sort_env_etl_pred
	add	ecx, ecx
	push	ecx
	push	0
	push	esi
	push	ebx
	call	??$__introsort_loop@PAPAVCEnvDescriptor@@PAV1@HP6A_NPBV1@0@Z@priv@stlp_std@@YAXPAPAVCEnvDescriptor@@00HP6A_NPBV2@1@Z@Z ; stlp_std::priv::__introsort_loop<CEnvDescriptor * *,CEnvDescriptor *,int,bool (__cdecl*)(CEnvDescriptor const *,CEnvDescriptor const *)>
	add	esp, 20					; 00000014H
	cmp	edi, 16					; 00000010H
	jle	SHORT $LN436@load_weath
	lea	edi, DWORD PTR [ebx+64]
	cmp	ebx, edi
	je	SHORT $LN443@load_weath
	push	OFFSET ?sort_env_etl_pred@CEnvironment@@SA_NPBVCEnvDescriptor@@0@Z ; CEnvironment::sort_env_etl_pred
	push	edi
	push	ebx
	call	??$__insertion_sort@PAPAVCEnvDescriptor@@PAV1@P6A_NPBV1@0@Z@priv@stlp_std@@YAXPAPAVCEnvDescriptor@@00P6A_NPBV2@1@Z@Z ; stlp_std::priv::__insertion_sort<CEnvDescriptor * *,CEnvDescriptor *,bool (__cdecl*)(CEnvDescriptor const *,CEnvDescriptor const *)>
	add	esp, 12					; 0000000cH
$LN443@load_weath:
	mov	edx, edi
	cmp	edx, esi
	je	SHORT $LN6@load_weath
$LL453@load_weath:
	mov	ebx, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [ebx+4]
	mov	ecx, edx
	lea	eax, DWORD PTR [edx-4]
	npad	1
$LL457@load_weath:
	mov	edi, DWORD PTR [eax]
	movss	xmm1, DWORD PTR [edi+4]
	comiss	xmm1, xmm0
	jbe	SHORT $LN462@load_weath
	mov	DWORD PTR [ecx], edi
	mov	ecx, eax
	sub	eax, 4
	jmp	SHORT $LL457@load_weath
$LN462@load_weath:
	add	edx, 4
	cmp	edx, esi
	mov	DWORD PTR [ecx], ebx
	jne	SHORT $LL453@load_weath
	jmp	SHORT $LN6@load_weath
$LN436@load_weath:
	push	OFFSET ?sort_env_etl_pred@CEnvironment@@SA_NPBVCEnvDescriptor@@0@Z ; CEnvironment::sort_env_etl_pred
	push	esi
	push	ebx
	call	??$__insertion_sort@PAPAVCEnvDescriptor@@PAV1@P6A_NPBV1@0@Z@priv@stlp_std@@YAXPAPAVCEnvDescriptor@@00P6A_NPBV2@1@Z@Z ; stlp_std::priv::__insertion_sort<CEnvDescriptor * *,CEnvDescriptor *,bool (__cdecl*)(CEnvDescriptor const *,CEnvDescriptor const *)>
	add	esp, 12					; 0000000cH
$LN6@load_weath:
	mov	eax, DWORD PTR __I$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	test	ecx, ecx
	je	SHORT $LN372@load_weath
	mov	eax, ecx
	mov	ecx, DWORD PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN368@load_weath

; 713  : 	EnvsMapIt _E=WeatherFXs.end();
; 714  : 	for (; _I!=_E; _I++){

$LL376@load_weath:
	mov	eax, ecx
	mov	ecx, DWORD PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LL376@load_weath
	jmp	SHORT $LN368@load_weath
$LN372@load_weath:
	mov	ecx, DWORD PTR [eax+4]
	cmp	eax, DWORD PTR [ecx+12]
	jne	SHORT $LN369@load_weath
$LL370@load_weath:
	mov	eax, ecx
	mov	ecx, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [ecx+12]
	je	SHORT $LL370@load_weath
$LN369@load_weath:
	cmp	DWORD PTR [eax+12], ecx
	je	SHORT $LN368@load_weath
	mov	eax, ecx
$LN368@load_weath:
	cmp	eax, DWORD PTR tv947[ebp]
	mov	DWORD PTR __I$[ebp], eax
	setne	al
	test	al, al
	jne	$LL502@load_weath
$LN5@load_weath:

; 717  : 	}
; 718  : }

	lea	esp, DWORD PTR [ebp-592]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?load_weather_effects@CEnvironment@@IAEXXZ ENDP		; CEnvironment::load_weather_effects
_TEXT	ENDS
PUBLIC	?load_weathers@CEnvironment@@IAEXXZ		; CEnvironment::load_weathers
; Function compile flags: /Ogtpy
;	COMDAT ?load_weathers@CEnvironment@@IAEXXZ
_TEXT	SEGMENT
_file_name$128934 = -564				; size = 520
_config$128940 = -44					; size = 4
_e$ = -40						; size = 4
_e$128944 = -36						; size = 4
tv764 = -32						; size = 4
_file_list$ = -28					; size = 4
$T555596 = -24						; size = 4
___old_size$555688 = -20				; size = 4
_object$128948 = -16					; size = 4
_i$ = -12						; size = 4
_this$ = -8						; size = 4
__I$ = -4						; size = 4
_i$128943 = -4						; size = 4
_identifier$128926 = -4					; size = 4
?load_weathers@CEnvironment@@IAEXXZ PROC		; CEnvironment::load_weathers, COMDAT
; _this$ = ecx

; 584  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 564				; 00000234H
	push	ebx
	mov	ebx, ecx

; 585  : 	if (!WeatherCycles.empty())

	cmp	DWORD PTR [ebx+176], 0
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ebx
	jne	$LN37@load_weath@2

; 586  : 		return;
; 587  : 
; 588  : 	typedef xr_vector<LPSTR>		file_list_type;
; 589  : 	file_list_type*					file_list = FS.file_list_open("$game_weathers$","");

	mov	eax, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [eax]
	push	1
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BA@NPNEALIJ@$game_weathers$?$AA@
	call	DWORD PTR __imp_?file_list_open@CLocatorAPI@@QAEPAV?$xr_vector@PADV?$xalloc@PAD@@@@PBD0I@Z

; 590  : 	VERIFY							(file_list);
; 591  : 
; 592  : 	file_list_type::const_iterator	i = file_list->begin();

	mov	ecx, eax
	mov	DWORD PTR _file_list$[ebp], eax
	call	?begin@?$vector@PADV?$xalloc@PAD@@@stlp_std@@QAEPAPADXZ ; stlp_std::vector<char *,xalloc<char *> >::begin

; 593  : 	file_list_type::const_iterator	e = file_list->end();

	mov	ecx, DWORD PTR _file_list$[ebp]
	mov	esi, eax
	mov	eax, DWORD PTR [ecx+4]
	push	eax
	mov	DWORD PTR _i$[ebp], esi
	call	?to_value_type_ptr@?$_CastTraits@PAXPAD@priv@stlp_std@@SAPAPADPAPAX@Z ; stlp_std::priv::_CastTraits<void *,char *>::to_value_type_ptr
	add	esp, 4

; 594  : 	for ( ; i != e; ++i) {

	cmp	esi, eax
	mov	DWORD PTR _e$[ebp], eax
	je	$LN30@load_weath@2
	jmp	SHORT $LN32@load_weath@2
$LL372@load_weath@2:
	mov	esi, DWORD PTR _i$[ebp]
$LN32@load_weath@2:

; 595  : 		u32							length = xr_strlen(*i);

	mov	edi, DWORD PTR [esi]
	mov	eax, edi
	lea	ecx, DWORD PTR [eax+1]
	npad	4
$LL370@load_weath@2:
	mov	dl, BYTE PTR [eax]
	add	eax, 1
	test	dl, dl
	jne	SHORT $LL370@load_weath@2
	sub	eax, ecx

; 596  : 		VERIFY						(length >= 4);
; 597  : 		VERIFY						((*i)[length - 4] == '.');
; 598  : 		VERIFY						((*i)[length - 3] == 'l');
; 599  : 		VERIFY						((*i)[length - 2] == 't');
; 600  : 		VERIFY						((*i)[length - 1] == 'x');
; 601  : 		u32							new_length = length - 4;

	lea	esi, DWORD PTR [eax-4]

; 602  : 		LPSTR						identifier = (LPSTR)_alloca((new_length + 1)*sizeof(char));

	lea	eax, DWORD PTR [esi+1]
	call	__alloca_probe_16

; 603  : 		Memory.mem_copy				(identifier, *i, new_length*sizeof(char));

	mov	edx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	eax, DWORD PTR [edx+8]
	mov	ebx, esp
	push	esi
	push	edi
	push	ebx
	mov	DWORD PTR _identifier$128926[ebp], ebx
	call	eax

; 604  : 		identifier[new_length]		= 0;
; 605  : 		EnvVec& env					= WeatherCycles[identifier];

	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR _identifier$128926[ebp]
	push	ecx
	add	eax, 160				; 000000a0H
	push	eax
	mov	BYTE PTR [ebx+esi], 0
	call	??$?APAD@?$map@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@Ustr_pred@CEnvironment@@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@stlp_std@@QAEAAV?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@ABQAD@Z ; stlp_std::map<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> >,CEnvironment::str_pred,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::operator[]<char *>

; 606  : 
; 607  : 		string_path					file_name;
; 608  : 		FS.update_path				(file_name, "$game_weathers$", identifier);

	mov	edx, DWORD PTR _identifier$128926[ebp]
	mov	ecx, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [ecx]
	push	edx
	mov	ebx, eax
	push	OFFSET ??_C@_0BA@NPNEALIJ@$game_weathers$?$AA@
	lea	eax, DWORD PTR _file_name$128934[ebp]
	push	eax
	call	DWORD PTR __imp_?update_path@CLocatorAPI@@QAEPBDAAY0CAI@DPBD1@Z

; 609  : 		xr_strcat					(file_name, ".ltx");

	lea	eax, DWORD PTR _file_name$128934[ebp]
	lea	esi, DWORD PTR [eax+1]
$LL371@load_weath@2:
	mov	cl, BYTE PTR [eax]
	add	eax, 1
	test	cl, cl
	jne	SHORT $LL371@load_weath@2
	sub	eax, esi
	lea	eax, DWORD PTR _file_name$128934[ebp+eax]
	lea	edx, DWORD PTR _file_name$128934[ebp+519]
	cmp	eax, edx
	ja	SHORT $LN67@load_weath@2
	mov	esi, OFFSET ??_C@_04ICMCOCEO@?4ltx?$AA@
	sub	esi, eax
$LL65@load_weath@2:
	lea	ecx, DWORD PTR _file_name$128934[ebp+519]
	cmp	eax, ecx
	je	SHORT $LN63@load_weath@2
	mov	dl, BYTE PTR [esi+eax]
	mov	BYTE PTR [eax], dl
	add	eax, 1
	cmp	BYTE PTR [esi+eax], 0
	jne	SHORT $LL65@load_weath@2
$LN63@load_weath@2:
	mov	BYTE PTR [eax], 0
$LN67@load_weath@2:

; 610  : 		CInifile*					config = CInifile::Create(file_name);

	lea	eax, DWORD PTR _file_name$128934[ebp]
	push	1
	push	eax
	call	DWORD PTR __imp_?Create@CInifile@@SAPAV1@PBDH@Z
	mov	edi, eax

; 611  : 
; 612  : 		typedef CInifile::Root		sections_type;
; 613  : 		sections_type&				sections = config->sections();
; 614  : 
; 615  : 		env.reserve					(sections.size());

	mov	ecx, DWORD PTR [edi+532]
	sub	ecx, DWORD PTR [edi+528]
	add	esp, 8
	sar	ecx, 2
	mov	DWORD PTR _config$128940[ebp], edi
	call	?reserve@?$_Impl_vector@PAXV?$xalloc@PAX@@@priv@stlp_std@@QAEXI@Z ; stlp_std::priv::_Impl_vector<void *,xalloc<void *> >::reserve

; 616  : 
; 617  : 		sections_type::const_iterator	i = sections.begin();

	mov	eax, DWORD PTR [edi+528]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	esi, eax

; 618  : 		sections_type::const_iterator	e = sections.end();

	mov	eax, DWORD PTR [edi+532]
	push	eax
	mov	DWORD PTR _i$128943[ebp], esi
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	add	esp, 8

; 619  : 		for ( ; i != e; ++i) {

	cmp	esi, eax
	mov	DWORD PTR _e$128944[ebp], eax
	je	$LN12@load_weath@2
	jmp	SHORT $LN14@load_weath@2
	npad	8
$LL373@load_weath@2:
	mov	esi, DWORD PTR _i$128943[ebp]
$LN14@load_weath@2:

; 620  : 			CEnvDescriptor*			object = create_descriptor((*i)->Name, config);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	esi, DWORD PTR [esi]
	push	188					; 000000bcH
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	test	eax, eax
	je	SHORT $LN102@load_weath@2
	push	esi
	mov	ecx, eax
	call	??0CEnvDescriptor@@QAE@ABVshared_str@@@Z ; CEnvDescriptor::CEnvDescriptor
	mov	esi, eax
	jmp	SHORT $LN103@load_weath@2
$LN102@load_weath@2:
	xor	esi, esi
$LN103@load_weath@2:
	test	edi, edi
	je	SHORT $LN97@load_weath@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	edi
	push	ecx
	mov	ecx, esi
	call	?load@CEnvDescriptor@@QAEXAAVCEnvironment@@AAVCInifile@@@Z ; CEnvDescriptor::load
$LN97@load_weath@2:
	mov	DWORD PTR _object$128948[ebp], esi

; 621  : 			env.push_back			(object);

	mov	esi, DWORD PTR [ebx+4]
	cmp	esi, DWORD PTR [ebx+8]
	je	SHORT $LN113@load_weath@2
	lea	edx, DWORD PTR _object$128948[ebp]
	push	edx
	push	esi
	call	??$_Copy_Construct@PAX@stlp_std@@YAXPAPAXABQAX@Z ; stlp_std::_Copy_Construct<void *>
	add	esp, 8
	add	DWORD PTR [ebx+4], 4
	jmp	$LN13@load_weath@2
$LN113@load_weath@2:
	mov	eax, esi
	sub	eax, DWORD PTR [ebx]
	lea	ecx, DWORD PTR $T555596[ebp]
	push	ecx
	lea	edx, DWORD PTR ___old_size$555688[ebp]
	sar	eax, 2
	push	edx
	mov	DWORD PTR $T555596[ebp], 1
	mov	DWORD PTR ___old_size$555688[ebp], eax
	call	??$max@I@stlp_std@@YAABIABI0@Z		; stlp_std::max<unsigned int>
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR ___old_size$555688[ebp]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	add	eax, eax
	add	eax, eax
	add	esp, 8
	push	eax
	mov	DWORD PTR tv764[ebp], eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	mov	edi, eax
	mov	eax, DWORD PTR [ebx]
	sub	esi, eax
	je	SHORT $LN143@load_weath@2
	push	esi
	push	eax
	push	edi
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
	jmp	SHORT $LN144@load_weath@2
$LN143@load_weath@2:
	mov	eax, edi
$LN144@load_weath@2:
	mov	ecx, DWORD PTR $T555596[ebp]
	test	ecx, ecx
	mov	esi, eax
	jbe	SHORT $LN145@load_weath@2
$LL147@load_weath@2:
	mov	eax, DWORD PTR _object$128948[ebp]
	mov	DWORD PTR [esi], eax
	sub	ecx, 1
	add	esi, 4
	test	ecx, ecx
	ja	SHORT $LL147@load_weath@2
$LN145@load_weath@2:
	mov	eax, DWORD PTR [ebx]
	test	eax, eax
	je	SHORT $LN184@load_weath@2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN184@load_weath@2:
	mov	ecx, DWORD PTR tv764[ebp]
	lea	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [ebx], edi
	mov	edi, DWORD PTR _config$128940[ebp]
	mov	DWORD PTR [ebx+4], esi
	mov	DWORD PTR [ebx+8], eax
$LN13@load_weath@2:
	mov	eax, DWORD PTR _i$128943[ebp]
	add	eax, 4
	cmp	eax, DWORD PTR _e$128944[ebp]
	mov	DWORD PTR _i$128943[ebp], eax
	jne	$LL373@load_weath@2
$LN12@load_weath@2:

; 622  : 		}
; 623  : 
; 624  : 		CInifile::Destroy			(config);

	push	edi
	call	DWORD PTR __imp_?Destroy@CInifile@@SAXPAV1@@Z
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 4
	add	esp, 4
	cmp	eax, DWORD PTR _e$[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jne	$LL372@load_weath@2

; 594  : 	for ( ; i != e; ++i) {

	mov	ebx, DWORD PTR _this$[ebp]
$LN30@load_weath@2:

; 625  : 	}
; 626  : 
; 627  : 	FS.file_list_close				(file_list);

	mov	eax, DWORD PTR __imp_?xr_FS@@3PAVCLocatorAPI@@A
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR _file_list$[ebp]
	push	edx
	call	DWORD PTR __imp_?file_list_close@CLocatorAPI@@QAEXAAPAV?$xr_vector@PADV?$xalloc@PAD@@@@@Z

; 628  : 
; 629  : 	// sorting weather envs
; 630  : 	EnvsMapIt _I=WeatherCycles.begin();

	lea	edi, DWORD PTR [ebx+160]
	mov	ecx, edi
	call	?_M_leftmost@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_leftmost
	mov	esi, DWORD PTR [eax]

; 631  : 	EnvsMapIt _E=WeatherCycles.end();
; 632  : 	for (; _I!=_E; _I++){

	cmp	esi, edi
	setne	al
	test	al, al
	mov	DWORD PTR __I$[ebp], esi
	je	$LN4@load_weath@2
	jmp	SHORT $LN213@load_weath@2
	npad	4
$LL374@load_weath@2:
	mov	esi, DWORD PTR __I$[ebp]
$LN213@load_weath@2:

; 633  : 		R_ASSERT3	(_I->second.size()>1,"Environment in weather must >=2",*_I->first);

	cmp	BYTE PTR ?ignore_always@?BI@??load_weathers@CEnvironment@@IAEXXZ@4_NA, 0
	jne	SHORT $LN7@load_weath@2
	mov	ecx, DWORD PTR [esi+24]
	sub	ecx, DWORD PTR [esi+20]
	sar	ecx, 2
	cmp	ecx, 1
	ja	SHORT $LN7@load_weath@2
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN248@load_weath@2
	add	eax, 16					; 00000010H
	jmp	SHORT $LN249@load_weath@2
$LN248@load_weath@2:
	xor	eax, eax
$LN249@load_weath@2:
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BI@??load_weathers@CEnvironment@@IAEXXZ@4_NA
	push	OFFSET ??_C@_0BM@LCBBCHEL@CEnvironment?3?3load_weathers?$AA@
	push	633					; 00000279H
	push	OFFSET ??_C@_0DJ@LMFGIIMF@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	eax
	push	OFFSET ??_C@_0CA@KLGPDKEF@Environment?5in?5weather?5must?5?$DO?$DN2?$AA@
	push	OFFSET ??_C@_0BE@OAKBGENP@_I?9?$DOsecond?4size?$CI?$CJ?$DO1?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD000H0AA_N@Z
$LN7@load_weath@2:

; 634  : 		std::sort(_I->second.begin(),_I->second.end(),sort_env_etl_pred);

	mov	eax, DWORD PTR [esi+24]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	edi, eax
	mov	eax, DWORD PTR [esi+20]
	push	eax
	call	?cv_ptr@?$_VoidCastTraitsAux@PAXPAX@priv@stlp_std@@SAPAPAXPAPAX@Z ; stlp_std::priv::_VoidCastTraitsAux<void *,void *>::cv_ptr
	mov	ebx, eax
	add	esp, 8
	cmp	ebx, edi
	je	$LN10@load_weath@2
	mov	esi, edi
	sub	esi, ebx
	sar	esi, 2
	mov	eax, esi
	xor	ecx, ecx
	cmp	eax, 1
	je	SHORT $LN277@load_weath@2
$LL279@load_weath@2:
	sar	eax, 1
	add	ecx, 1
	cmp	eax, 1
	jne	SHORT $LL279@load_weath@2
$LN277@load_weath@2:
	push	OFFSET ?sort_env_etl_pred@CEnvironment@@SA_NPBVCEnvDescriptor@@0@Z ; CEnvironment::sort_env_etl_pred
	lea	edx, DWORD PTR [ecx+ecx]
	push	edx
	push	0
	push	edi
	push	ebx
	call	??$__introsort_loop@PAPAVCEnvDescriptor@@PAV1@HP6A_NPBV1@0@Z@priv@stlp_std@@YAXPAPAVCEnvDescriptor@@00HP6A_NPBV2@1@Z@Z ; stlp_std::priv::__introsort_loop<CEnvDescriptor * *,CEnvDescriptor *,int,bool (__cdecl*)(CEnvDescriptor const *,CEnvDescriptor const *)>
	add	esp, 20					; 00000014H
	cmp	esi, 16					; 00000010H
	jle	SHORT $LN283@load_weath@2
	lea	esi, DWORD PTR [ebx+64]
	cmp	ebx, esi
	je	SHORT $LN290@load_weath@2
	push	OFFSET ?sort_env_etl_pred@CEnvironment@@SA_NPBVCEnvDescriptor@@0@Z ; CEnvironment::sort_env_etl_pred
	push	esi
	push	ebx
	call	??$__insertion_sort@PAPAVCEnvDescriptor@@PAV1@P6A_NPBV1@0@Z@priv@stlp_std@@YAXPAPAVCEnvDescriptor@@00P6A_NPBV2@1@Z@Z ; stlp_std::priv::__insertion_sort<CEnvDescriptor * *,CEnvDescriptor *,bool (__cdecl*)(CEnvDescriptor const *,CEnvDescriptor const *)>
	add	esp, 12					; 0000000cH
$LN290@load_weath@2:
	mov	edx, esi
	cmp	edx, edi
	je	SHORT $LN375@load_weath@2
$LL300@load_weath@2:
	mov	ebx, DWORD PTR [edx]
	movss	xmm0, DWORD PTR [ebx+4]
	mov	ecx, edx
	lea	eax, DWORD PTR [edx-4]
$LL304@load_weath@2:
	mov	esi, DWORD PTR [eax]
	movss	xmm1, DWORD PTR [esi+4]
	comiss	xmm1, xmm0
	jbe	SHORT $LN309@load_weath@2
	mov	DWORD PTR [ecx], esi
	mov	ecx, eax
	sub	eax, 4
	jmp	SHORT $LL304@load_weath@2
$LN309@load_weath@2:
	add	edx, 4
	cmp	edx, edi
	mov	DWORD PTR [ecx], ebx
	jne	SHORT $LL300@load_weath@2
	jmp	SHORT $LN375@load_weath@2
$LN283@load_weath@2:
	push	OFFSET ?sort_env_etl_pred@CEnvironment@@SA_NPBVCEnvDescriptor@@0@Z ; CEnvironment::sort_env_etl_pred
	push	edi
	push	ebx
	call	??$__insertion_sort@PAPAVCEnvDescriptor@@PAV1@P6A_NPBV1@0@Z@priv@stlp_std@@YAXPAPAVCEnvDescriptor@@00P6A_NPBV2@1@Z@Z ; stlp_std::priv::__insertion_sort<CEnvDescriptor * *,CEnvDescriptor *,bool (__cdecl*)(CEnvDescriptor const *,CEnvDescriptor const *)>
	add	esp, 12					; 0000000cH
$LN375@load_weath@2:
	mov	esi, DWORD PTR __I$[ebp]
$LN10@load_weath@2:

; 631  : 	EnvsMapIt _E=WeatherCycles.end();
; 632  : 	for (; _I!=_E; _I++){

	mov	ecx, DWORD PTR [esi+12]
	test	ecx, ecx
	mov	eax, esi
	je	SHORT $LN219@load_weath@2
	mov	eax, ecx
	mov	ecx, DWORD PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN215@load_weath@2
$LL223@load_weath@2:
	mov	eax, ecx
	mov	ecx, DWORD PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LL223@load_weath@2
	jmp	SHORT $LN215@load_weath@2
$LN219@load_weath@2:
	mov	ecx, DWORD PTR [esi+4]
	cmp	esi, DWORD PTR [ecx+12]
	jne	SHORT $LN216@load_weath@2
$LL217@load_weath@2:
	mov	eax, ecx
	mov	ecx, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [ecx+12]
	je	SHORT $LL217@load_weath@2
$LN216@load_weath@2:
	cmp	DWORD PTR [eax+12], ecx
	je	SHORT $LN215@load_weath@2
	mov	eax, ecx
$LN215@load_weath@2:
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 160				; 000000a0H
	cmp	eax, edi
	mov	DWORD PTR __I$[ebp], eax
	setne	al
	test	al, al
	jne	$LL374@load_weath@2
	mov	ebx, DWORD PTR _this$[ebp]
$LN4@load_weath@2:

; 635  : 	}
; 636  : 	R_ASSERT2	(!WeatherCycles.empty(),"Empty weathers.");

	cmp	BYTE PTR ?ignore_always@?BM@??load_weathers@CEnvironment@@IAEXXZ@4_NA, 0
	jne	SHORT $LN3@load_weath@2
	cmp	DWORD PTR [ebx+176], 0
	jne	SHORT $LN3@load_weath@2
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BM@??load_weathers@CEnvironment@@IAEXXZ@4_NA
	push	OFFSET ??_C@_0BM@LCBBCHEL@CEnvironment?3?3load_weathers?$AA@
	push	636					; 0000027cH
	push	OFFSET ??_C@_0DJ@LMFGIIMF@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BA@HJPKPFGD@Empty?5weathers?4?$AA@
	push	OFFSET ??_C@_0BH@GOFEJBEP@?$CBWeatherCycles?4empty?$CI?$CJ?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD00H0AA_N@Z
$LN3@load_weath@2:

; 637  : 	SetWeather	((*WeatherCycles.begin()).first.c_str());

	mov	ecx, edi
	call	?_M_leftmost@?$_Rb_tree@Vshared_str@@Ustr_pred@CEnvironment@@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@U?$_Select1st@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@priv@5@U?$_MapTraitsT@U?$pair@$$CBVshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@75@V?$xalloc@U?$pair@Vshared_str@@V?$xr_vector@PAVCEnvDescriptor@@V?$xalloc@PAVCEnvDescriptor@@@@@@@stlp_std@@@@@priv@stlp_std@@IAEAAPAU_Rb_tree_node_base@23@XZ ; stlp_std::priv::_Rb_tree<shared_str,CEnvironment::str_pred,stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > >,stlp_std::priv::_Select1st<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,stlp_std::priv::_MapTraitsT<stlp_std::pair<shared_str const ,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > >,xalloc<stlp_std::pair<shared_str,xr_vector<CEnvDescriptor *,xalloc<CEnvDescriptor *> > > > >::_M_leftmost
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+16]
	test	eax, eax
	je	SHORT $LN339@load_weath@2
	add	eax, 16					; 00000010H
	jmp	SHORT $LN340@load_weath@2
$LN339@load_weath@2:
	xor	eax, eax
$LN340@load_weath@2:
	push	0
	push	ecx
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR __imp_?g_pStringContainer@@3PAVstr_container@@A
	mov	DWORD PTR [esi], 0
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?dock@str_container@@QAEPAUstr_value@@PBD@Z
	test	eax, eax
	je	SHORT $LN343@load_weath@2
	add	DWORD PTR [eax], 1
$LN343@load_weath@2:
	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN346@load_weath@2
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [esi]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN346@load_weath@2
	mov	DWORD PTR [esi], 0
$LN346@load_weath@2:
	mov	ecx, ebx
	mov	DWORD PTR [esi], eax
	call	?SetWeather@CEnvironment@@QAEXVshared_str@@_N@Z ; CEnvironment::SetWeather
$LN37@load_weath@2:

; 638  : }

	lea	esp, DWORD PTR [ebp-576]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?load_weathers@CEnvironment@@IAEXXZ ENDP		; CEnvironment::load_weathers
PUBLIC	?load@CEnvironment@@QAEXXZ			; CEnvironment::load
; Function compile flags: /Ogtpy
;	COMDAT ?load@CEnvironment@@QAEXXZ
_TEXT	SEGMENT
?load@CEnvironment@@QAEXXZ PROC				; CEnvironment::load, COMDAT
; _this$ = ecx

; 721  : {

	push	esi
	mov	esi, ecx

; 722  : 	if (!CurrentEnv)

	cmp	DWORD PTR [esi+120], 0
	jne	SHORT $LN10@load@11

; 723  : 		create_mixer		();

	call	??$xr_new@VCEnvDescriptorMixer@@$$BY08$$CBD@@YAPAVCEnvDescriptorMixer@@AAY08$$CBD@Z ; xr_new<CEnvDescriptorMixer,char const [9]>
	mov	DWORD PTR [esi+120], eax
$LN10@load@11:

; 724  : 
; 725  : 	m_pRender->OnLoad();

	mov	ecx, DWORD PTR [esi+32]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	push	edi
	call	edx

; 726  : 	//tonemap					= Device.Resources->_CreateTexture("$user$tonemap");	//. hack
; 727  : 	if (!eff_Rain)    		eff_Rain 		= xr_new<CEffect_Rain>();

	cmp	DWORD PTR [esi+232], 0
	mov	edi, DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	jne	SHORT $LN3@load@11
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	44					; 0000002cH
	call	edi
	test	eax, eax
	je	SHORT $LN16@load@11
	mov	ecx, eax
	call	??0CEffect_Rain@@QAE@XZ			; CEffect_Rain::CEffect_Rain
	jmp	SHORT $LN17@load@11
$LN16@load@11:
	xor	eax, eax
$LN17@load@11:
	mov	DWORD PTR [esi+232], eax
$LN3@load@11:

; 728  : 	if (!eff_LensFlare)		eff_LensFlare 	= xr_new<CLensFlare>();

	cmp	DWORD PTR [esi+236], 0
	jne	SHORT $LN2@load@11
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	500					; 000001f4H
	call	edi
	test	eax, eax
	je	SHORT $LN22@load@11
	mov	ecx, eax
	call	??0CLensFlare@@QAE@XZ			; CLensFlare::CLensFlare
	jmp	SHORT $LN23@load@11
$LN22@load@11:
	xor	eax, eax
$LN23@load@11:
	mov	DWORD PTR [esi+236], eax
$LN2@load@11:

; 729  : 	if (!eff_Thunderbolt)	eff_Thunderbolt	= xr_new<CEffect_Thunderbolt>();

	cmp	DWORD PTR [esi+240], 0
	pop	edi
	jne	SHORT $LN1@load@11
	call	??$xr_new@VCEffect_Thunderbolt@@@@YAPAVCEffect_Thunderbolt@@XZ ; xr_new<CEffect_Thunderbolt>
	mov	DWORD PTR [esi+240], eax
$LN1@load@11:

; 730  : 	
; 731  : 	load_weathers			();

	mov	ecx, esi
	call	?load_weathers@CEnvironment@@IAEXXZ	; CEnvironment::load_weathers

; 732  : 	load_weather_effects	();

	mov	ecx, esi
	pop	esi
	jmp	?load_weather_effects@CEnvironment@@IAEXXZ ; CEnvironment::load_weather_effects
?load@CEnvironment@@QAEXXZ ENDP				; CEnvironment::load
END
