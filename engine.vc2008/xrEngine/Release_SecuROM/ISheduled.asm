; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\CLEARSKY\sources\engine\xrEngine\ISheduled.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_EICollidable@@UAEPAXI@Z			; ICollidable::`vector deleting destructor'
PUBLIC	??_R4ICollidable@@6B@				; ICollidable::`RTTI Complete Object Locator'
PUBLIC	??_EIRender_Target@@UAEPAXI@Z			; IRender_Target::`vector deleting destructor'
PUBLIC	??_R4IRender_Target@@6B@			; IRender_Target::`RTTI Complete Object Locator'
PUBLIC	??_R3IRender_Target@@8				; IRender_Target::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IRender_Target@@8				; IRender_Target::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IRender_Target@@8			; IRender_Target::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVIRender_Target@@@8			; IRender_Target `RTTI Type Descriptor'
PUBLIC	??_EIRender_Portal@@UAEPAXI@Z			; IRender_Portal::`vector deleting destructor'
PUBLIC	??_R4IRender_Portal@@6B@			; IRender_Portal::`RTTI Complete Object Locator'
PUBLIC	??_R3IRender_Portal@@8				; IRender_Portal::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IRender_Portal@@8				; IRender_Portal::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IRender_Portal@@8			; IRender_Portal::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVIRender_Portal@@@8			; IRender_Portal `RTTI Type Descriptor'
PUBLIC	??_EIRender_ObjectSpecific@@UAEPAXI@Z		; IRender_ObjectSpecific::`vector deleting destructor'
PUBLIC	??_R4IRender_ObjectSpecific@@6B@		; IRender_ObjectSpecific::`RTTI Complete Object Locator'
PUBLIC	??_R3IRender_ObjectSpecific@@8			; IRender_ObjectSpecific::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IRender_ObjectSpecific@@8			; IRender_ObjectSpecific::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IRender_ObjectSpecific@@8		; IRender_ObjectSpecific::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVIRender_ObjectSpecific@@@8		; IRender_ObjectSpecific `RTTI Type Descriptor'
PUBLIC	??_EIRender_Glow@@UAEPAXI@Z			; IRender_Glow::`vector deleting destructor'
PUBLIC	??_R4IRender_Glow@@6B@				; IRender_Glow::`RTTI Complete Object Locator'
PUBLIC	??_R3IRender_Glow@@8				; IRender_Glow::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IRender_Glow@@8				; IRender_Glow::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IRender_Glow@@8			; IRender_Glow::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVIRender_Glow@@@8			; IRender_Glow `RTTI Type Descriptor'
PUBLIC	??_EIRender_Light@@UAEPAXI@Z			; IRender_Light::`vector deleting destructor'
PUBLIC	?set_indirect@IRender_Light@@UAEX_N@Z		; IRender_Light::set_indirect
PUBLIC	??_R4IRender_Light@@6B@				; IRender_Light::`RTTI Complete Object Locator'
PUBLIC	??_R3IRender_Light@@8				; IRender_Light::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IRender_Light@@8				; IRender_Light::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@xr_resource@@8			; xr_resource::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R3xr_resource@@8				; xr_resource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2xr_resource@@8				; xr_resource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@xr_resource@@8			; xr_resource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVxr_resource@@@8				; xr_resource `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@IRender_Light@@8			; IRender_Light::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVIRender_Light@@@8			; IRender_Light `RTTI Type Descriptor'
PUBLIC	?renderable_ShadowReceive@IRenderable@@UAEHXZ	; IRenderable::renderable_ShadowReceive
PUBLIC	?renderable_ShadowGenerate@IRenderable@@UAEHXZ	; IRenderable::renderable_ShadowGenerate
PUBLIC	??_EIRenderable@@UAEPAXI@Z			; IRenderable::`vector deleting destructor'
PUBLIC	??_R4IRenderable@@6B@				; IRenderable::`RTTI Complete Object Locator'
PUBLIC	??_EIRender_Sector@@UAEPAXI@Z			; IRender_Sector::`vector deleting destructor'
PUBLIC	??_R4IRender_Sector@@6B@			; IRender_Sector::`RTTI Complete Object Locator'
PUBLIC	??_R3IRender_Sector@@8				; IRender_Sector::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IRender_Sector@@8				; IRender_Sector::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IRender_Sector@@8			; IRender_Sector::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVIRender_Sector@@@8			; IRender_Sector `RTTI Type Descriptor'
PUBLIC	??_R4CObject@@6BICollidable@@@			; CObject::`RTTI Complete Object Locator'
PUBLIC	?renderable_ShadowReceive@CObject@@UAEHXZ	; CObject::renderable_ShadowReceive
PUBLIC	?renderable_ShadowGenerate@CObject@@UAEHXZ	; CObject::renderable_ShadowGenerate
PUBLIC	??_R4CObject@@6BIRenderable@@@			; CObject::`RTTI Complete Object Locator'
PUBLIC	?shedule_Needed@CObject@@UAE_NXZ		; CObject::shedule_Needed
PUBLIC	?shedule_Name@CObject@@UBE?AVshared_str@@XZ	; CObject::shedule_Name
PUBLIC	?shedule_Scale@CObject@@UAEMXZ			; CObject::shedule_Scale
PUBLIC	??_R4CObject@@6BISheduled@@@			; CObject::`RTTI Complete Object Locator'
PUBLIC	?dcast_Renderable@CObject@@UAEPAVIRenderable@@XZ ; CObject::dcast_Renderable
PUBLIC	?dcast_CObject@CObject@@UAEPAV1@XZ		; CObject::dcast_CObject
PUBLIC	??_R4CObject@@6BISpatial@@@			; CObject::`RTTI Complete Object Locator'
PUBLIC	?register_schedule@CObject@@UBE_NXZ		; CObject::register_schedule
PUBLIC	?On_LostEntity@CObject@@UAEXXZ			; CObject::On_LostEntity
PUBLIC	?On_SetEntity@CObject@@UAEXXZ			; CObject::On_SetEntity
PUBLIC	?OnHUDDraw@CObject@@UAEXPAVCCustomHUD@@@Z	; CObject::OnHUDDraw
PUBLIC	?ForceTransform@CObject@@UAEXABU?$_matrix@M@@@Z	; CObject::ForceTransform
PUBLIC	?net_Relcase@CObject@@UAEXPAV1@@Z		; CObject::net_Relcase
PUBLIC	?net_MigrateActive@CObject@@UAEXAAVNET_Packet@@@Z ; CObject::net_MigrateActive
PUBLIC	?net_MigrateInactive@CObject@@UAEXAAVNET_Packet@@@Z ; CObject::net_MigrateInactive
PUBLIC	?net_Relevant@CObject@@UAEHXZ			; CObject::net_Relevant
PUBLIC	?net_ImportInput@CObject@@UAEXAAVNET_Packet@@@Z	; CObject::net_ImportInput
PUBLIC	?net_Import@CObject@@UAEXAAVNET_Packet@@@Z	; CObject::net_Import
PUBLIC	?net_Export@CObject@@UAEXAAVNET_Packet@@@Z	; CObject::net_Export
PUBLIC	?physics_collision@CObject@@UAEPBUIObjectPhysicsCollision@@XZ ; CObject::physics_collision
PUBLIC	?physics_shell@CObject@@UAEPAVIPhysicsShell@@XZ	; CObject::physics_shell
PUBLIC	?OnChangeVisual@CObject@@UAEXXZ			; CObject::OnChangeVisual
PUBLIC	?Ready@CObject@@UAEHXZ				; CObject::Ready
PUBLIC	?AlwaysTheCrow@CObject@@UAEHXZ			; CObject::AlwaysTheCrow
PUBLIC	??_ECObject@@UAEPAXI@Z				; CObject::`vector deleting destructor'
PUBLIC	??_R4CObject@@6BDLL_Pure@@@			; CObject::`RTTI Complete Object Locator'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1JM@?0A@EA@ICollidable@@8			; ICollidable::`RTTI Base Class Descriptor at (156,-1,0,64)'
PUBLIC	??_R3ICollidable@@8				; ICollidable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICollidable@@8				; ICollidable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICollidable@@8			; ICollidable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVICollidable@@@8				; ICollidable `RTTI Type Descriptor'
PUBLIC	??_R1EM@?0A@EA@IRenderable@@8			; IRenderable::`RTTI Base Class Descriptor at (76,-1,0,64)'
PUBLIC	??_R3IRenderable@@8				; IRenderable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IRenderable@@8				; IRenderable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IRenderable@@8			; IRenderable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVIRenderable@@@8				; IRenderable `RTTI Type Descriptor'
PUBLIC	??_R1EE@?0A@EA@ISheduled@@8			; ISheduled::`RTTI Base Class Descriptor at (68,-1,0,64)'
PUBLIC	??_R1BA@?0A@EA@ISpatial@@8			; ISpatial::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R3ISpatial@@8				; ISpatial::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISpatial@@8				; ISpatial::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISpatial@@8			; ISpatial::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVISpatial@@@8				; ISpatial `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_EIRender_interface@@UAEPAXI@Z		; IRender_interface::`vector deleting destructor'
PUBLIC	?glow_destroy@IRender_interface@@UAEXPAVIRender_Glow@@@Z ; IRender_interface::glow_destroy
PUBLIC	?light_destroy@IRender_interface@@UAEXPAVIRender_Light@@@Z ; IRender_interface::light_destroy
PUBLIC	?Statistics@IRender_interface@@UAEXPAVCGameFont@@@Z ; IRender_interface::Statistics
PUBLIC	??_R4IRender_interface@@6B@			; IRender_interface::`RTTI Complete Object Locator'
PUBLIC	??_R3IRender_interface@@8			; IRender_interface::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IRender_interface@@8			; IRender_interface::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IRender_interface@@8		; IRender_interface::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVIRender_interface@@@8			; IRender_interface `RTTI Type Descriptor'
PUBLIC	?shedule_Update@ISheduled@@UAEXI@Z		; ISheduled::shedule_Update
PUBLIC	?size@?$svector@USavedPosition@CObject@@$03@@QBEIXZ ; svector<CObject::SavedPosition,4>::size
PUBLIC	??_ECObject@@WBA@AEPAXI@Z			; [thunk]:CObject::`vector deleting destructor'
PUBLIC	??_ECObject@@WEE@AEPAXI@Z			; [thunk]:CObject::`vector deleting destructor'
PUBLIC	??_ECObject@@WEM@AEPAXI@Z			; [thunk]:CObject::`vector deleting destructor'
PUBLIC	??_ECObject@@WJM@AEPAXI@Z			; [thunk]:CObject::`vector deleting destructor'
PUBLIC	??R?$xr_special_free@$00VIRender_Light@@@@QAEXAAPAVIRender_Light@@@Z ; xr_special_free<1,IRender_Light>::operator()
PUBLIC	??$xr_delete@VIRender_Light@@@@YAXAAPAVIRender_Light@@@Z ; xr_delete<IRender_Light>
PUBLIC	??R?$xr_special_free@$00VIRender_Glow@@@@QAEXAAPAVIRender_Glow@@@Z ; xr_special_free<1,IRender_Glow>::operator()
PUBLIC	??$xr_delete@VIRender_Glow@@@@YAXAAPAVIRender_Glow@@@Z ; xr_delete<IRender_Glow>
PUBLIC	_sqrtf
PUBLIC	?_sqrt@@YAMM@Z					; _sqrt
PUBLIC	?distance_to_sqr@?$_vector3@M@@QBEMABU1@@Z	; _vector3<float>::distance_to_sqr
PUBLIC	?distance_to@?$_vector3@M@@QBEMABU1@@Z		; _vector3<float>::distance_to
PUBLIC	??_7IRender_interface@@6B@			; IRender_interface::`vftable'
PUBLIC	??_7CObject@@6BDLL_Pure@@@			; CObject::`vftable'
PUBLIC	??_7CObject@@6BISpatial@@@			; CObject::`vftable'
PUBLIC	??_7CObject@@6BISheduled@@@			; CObject::`vftable'
PUBLIC	??_7CObject@@6BIRenderable@@@			; CObject::`vftable'
PUBLIC	??_7CObject@@6BICollidable@@@			; CObject::`vftable'
PUBLIC	??_7IRender_Sector@@6B@				; IRender_Sector::`vftable'
PUBLIC	??_7IRenderable@@6B@				; IRenderable::`vftable'
PUBLIC	??_7IRender_Light@@6B@				; IRender_Light::`vftable'
PUBLIC	??_7IRender_Glow@@6B@				; IRender_Glow::`vftable'
PUBLIC	??_7IRender_ObjectSpecific@@6B@			; IRender_ObjectSpecific::`vftable'
PUBLIC	??_7IRender_Portal@@6B@				; IRender_Portal::`vftable'
PUBLIC	??_7IRender_Target@@6B@				; IRender_Target::`vftable'
PUBLIC	??_7ICollidable@@6B@				; ICollidable::`vftable'
EXTRN	?dcast_Light@ISpatial@@UAEPAVIRender_Light@@XZ:PROC ; ISpatial::dcast_Light
EXTRN	?dcast_FeelSound@ISpatial@@UAEPAVSound@Feel@@XZ:PROC ; ISpatial::dcast_FeelSound
EXTRN	?spatial_sector_point@ISpatial@@UAE?AU?$_vector3@M@@XZ:PROC ; ISpatial::spatial_sector_point
EXTRN	__imp_??1ISpatial@@UAE@XZ:PROC
EXTRN	__imp_??_7ISpatial@@6B@:BYTE
EXTRN	__imp_??0ISpatial@@QAE@ABV0@@Z:PROC
EXTRN	__imp_?spatial_sector_point@ISpatial@@UAE?AU?$_vector3@M@@XZ:PROC
EXTRN	__imp_?dcast_FeelSound@ISpatial@@UAEPAVSound@Feel@@XZ:PROC
EXTRN	__imp_?dcast_Light@ISpatial@@UAEPAVIRender_Light@@XZ:PROC
EXTRN	__imp_??4ISpatial@@QAEAAV0@ABV0@@Z:PROC
EXTRN	__imp_??0xr_resource@@QAE@XZ:PROC
;	COMDAT ??_7ICollidable@@6B@
CONST	SEGMENT
??_7ICollidable@@6B@ DD FLAT:??_R4ICollidable@@6B@	; ICollidable::`vftable'
	DD	FLAT:??_EICollidable@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4ICollidable@@6B@
rdata$r	SEGMENT
??_R4ICollidable@@6B@ DD 00H				; ICollidable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVICollidable@@@8
	DD	FLAT:??_R3ICollidable@@8
rdata$r	ENDS
;	COMDAT ??_7IRender_Target@@6B@
CONST	SEGMENT
??_7IRender_Target@@6B@ DD FLAT:??_R4IRender_Target@@6B@ ; IRender_Target::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_EIRender_Target@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4IRender_Target@@6B@
rdata$r	SEGMENT
??_R4IRender_Target@@6B@ DD 00H				; IRender_Target::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIRender_Target@@@8
	DD	FLAT:??_R3IRender_Target@@8
rdata$r	ENDS
;	COMDAT ??_R3IRender_Target@@8
rdata$r	SEGMENT
??_R3IRender_Target@@8 DD 00H				; IRender_Target::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IRender_Target@@8
rdata$r	ENDS
;	COMDAT ??_R2IRender_Target@@8
rdata$r	SEGMENT
??_R2IRender_Target@@8 DD FLAT:??_R1A@?0A@EA@IRender_Target@@8 ; IRender_Target::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IRender_Target@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IRender_Target@@8 DD FLAT:??_R0?AVIRender_Target@@@8 ; IRender_Target::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IRender_Target@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIRender_Target@@@8
_DATA	SEGMENT
??_R0?AVIRender_Target@@@8 DD FLAT:??_7type_info@@6B@	; IRender_Target `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIRender_Target@@', 00H
_DATA	ENDS
;	COMDAT ??_7IRender_Portal@@6B@
CONST	SEGMENT
??_7IRender_Portal@@6B@ DD FLAT:??_R4IRender_Portal@@6B@ ; IRender_Portal::`vftable'
	DD	FLAT:??_EIRender_Portal@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4IRender_Portal@@6B@
rdata$r	SEGMENT
??_R4IRender_Portal@@6B@ DD 00H				; IRender_Portal::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIRender_Portal@@@8
	DD	FLAT:??_R3IRender_Portal@@8
rdata$r	ENDS
;	COMDAT ??_R3IRender_Portal@@8
rdata$r	SEGMENT
??_R3IRender_Portal@@8 DD 00H				; IRender_Portal::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IRender_Portal@@8
rdata$r	ENDS
;	COMDAT ??_R2IRender_Portal@@8
rdata$r	SEGMENT
??_R2IRender_Portal@@8 DD FLAT:??_R1A@?0A@EA@IRender_Portal@@8 ; IRender_Portal::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IRender_Portal@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IRender_Portal@@8 DD FLAT:??_R0?AVIRender_Portal@@@8 ; IRender_Portal::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IRender_Portal@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIRender_Portal@@@8
_DATA	SEGMENT
??_R0?AVIRender_Portal@@@8 DD FLAT:??_7type_info@@6B@	; IRender_Portal `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIRender_Portal@@', 00H
_DATA	ENDS
;	COMDAT ??_7IRender_ObjectSpecific@@6B@
CONST	SEGMENT
??_7IRender_ObjectSpecific@@6B@ DD FLAT:??_R4IRender_ObjectSpecific@@6B@ ; IRender_ObjectSpecific::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_EIRender_ObjectSpecific@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4IRender_ObjectSpecific@@6B@
rdata$r	SEGMENT
??_R4IRender_ObjectSpecific@@6B@ DD 00H			; IRender_ObjectSpecific::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIRender_ObjectSpecific@@@8
	DD	FLAT:??_R3IRender_ObjectSpecific@@8
rdata$r	ENDS
;	COMDAT ??_R3IRender_ObjectSpecific@@8
rdata$r	SEGMENT
??_R3IRender_ObjectSpecific@@8 DD 00H			; IRender_ObjectSpecific::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IRender_ObjectSpecific@@8
rdata$r	ENDS
;	COMDAT ??_R2IRender_ObjectSpecific@@8
rdata$r	SEGMENT
??_R2IRender_ObjectSpecific@@8 DD FLAT:??_R1A@?0A@EA@IRender_ObjectSpecific@@8 ; IRender_ObjectSpecific::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IRender_ObjectSpecific@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IRender_ObjectSpecific@@8 DD FLAT:??_R0?AVIRender_ObjectSpecific@@@8 ; IRender_ObjectSpecific::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IRender_ObjectSpecific@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIRender_ObjectSpecific@@@8
_DATA	SEGMENT
??_R0?AVIRender_ObjectSpecific@@@8 DD FLAT:??_7type_info@@6B@ ; IRender_ObjectSpecific `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIRender_ObjectSpecific@@', 00H
_DATA	ENDS
;	COMDAT ??_7IRender_Glow@@6B@
CONST	SEGMENT
??_7IRender_Glow@@6B@ DD FLAT:??_R4IRender_Glow@@6B@	; IRender_Glow::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_EIRender_Glow@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4IRender_Glow@@6B@
rdata$r	SEGMENT
??_R4IRender_Glow@@6B@ DD 00H				; IRender_Glow::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIRender_Glow@@@8
	DD	FLAT:??_R3IRender_Glow@@8
rdata$r	ENDS
;	COMDAT ??_R3IRender_Glow@@8
rdata$r	SEGMENT
??_R3IRender_Glow@@8 DD 00H				; IRender_Glow::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IRender_Glow@@8
rdata$r	ENDS
;	COMDAT ??_R2IRender_Glow@@8
rdata$r	SEGMENT
??_R2IRender_Glow@@8 DD FLAT:??_R1A@?0A@EA@IRender_Glow@@8 ; IRender_Glow::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@xr_resource@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IRender_Glow@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IRender_Glow@@8 DD FLAT:??_R0?AVIRender_Glow@@@8 ; IRender_Glow::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IRender_Glow@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIRender_Glow@@@8
_DATA	SEGMENT
??_R0?AVIRender_Glow@@@8 DD FLAT:??_7type_info@@6B@	; IRender_Glow `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIRender_Glow@@', 00H
_DATA	ENDS
;	COMDAT ??_7IRender_Light@@6B@
CONST	SEGMENT
??_7IRender_Light@@6B@ DD FLAT:??_R4IRender_Light@@6B@	; IRender_Light::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?set_indirect@IRender_Light@@UAEX_N@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_EIRender_Light@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4IRender_Light@@6B@
rdata$r	SEGMENT
??_R4IRender_Light@@6B@ DD 00H				; IRender_Light::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIRender_Light@@@8
	DD	FLAT:??_R3IRender_Light@@8
rdata$r	ENDS
;	COMDAT ??_R3IRender_Light@@8
rdata$r	SEGMENT
??_R3IRender_Light@@8 DD 00H				; IRender_Light::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IRender_Light@@8
rdata$r	ENDS
;	COMDAT ??_R2IRender_Light@@8
rdata$r	SEGMENT
??_R2IRender_Light@@8 DD FLAT:??_R1A@?0A@EA@IRender_Light@@8 ; IRender_Light::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@xr_resource@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@xr_resource@@8
rdata$r	SEGMENT
??_R13?0A@EA@xr_resource@@8 DD FLAT:??_R0?AVxr_resource@@@8 ; xr_resource::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3xr_resource@@8
rdata$r	ENDS
;	COMDAT ??_R3xr_resource@@8
rdata$r	SEGMENT
??_R3xr_resource@@8 DD 00H				; xr_resource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2xr_resource@@8
rdata$r	ENDS
;	COMDAT ??_R2xr_resource@@8
rdata$r	SEGMENT
??_R2xr_resource@@8 DD FLAT:??_R1A@?0A@EA@xr_resource@@8 ; xr_resource::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@xr_resource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@xr_resource@@8 DD FLAT:??_R0?AVxr_resource@@@8 ; xr_resource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3xr_resource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVxr_resource@@@8
_DATA	SEGMENT
??_R0?AVxr_resource@@@8 DD FLAT:??_7type_info@@6B@	; xr_resource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVxr_resource@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IRender_Light@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IRender_Light@@8 DD FLAT:??_R0?AVIRender_Light@@@8 ; IRender_Light::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IRender_Light@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIRender_Light@@@8
_DATA	SEGMENT
??_R0?AVIRender_Light@@@8 DD FLAT:??_7type_info@@6B@	; IRender_Light `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIRender_Light@@', 00H
_DATA	ENDS
;	COMDAT ??_7IRenderable@@6B@
CONST	SEGMENT
??_7IRenderable@@6B@ DD FLAT:??_R4IRenderable@@6B@	; IRenderable::`vftable'
	DD	FLAT:??_EIRenderable@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?renderable_ShadowGenerate@IRenderable@@UAEHXZ
	DD	FLAT:?renderable_ShadowReceive@IRenderable@@UAEHXZ
CONST	ENDS
;	COMDAT ??_R4IRenderable@@6B@
rdata$r	SEGMENT
??_R4IRenderable@@6B@ DD 00H				; IRenderable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIRenderable@@@8
	DD	FLAT:??_R3IRenderable@@8
rdata$r	ENDS
;	COMDAT ??_7IRender_Sector@@6B@
CONST	SEGMENT
??_7IRender_Sector@@6B@ DD FLAT:??_R4IRender_Sector@@6B@ ; IRender_Sector::`vftable'
	DD	FLAT:??_EIRender_Sector@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4IRender_Sector@@6B@
rdata$r	SEGMENT
??_R4IRender_Sector@@6B@ DD 00H				; IRender_Sector::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIRender_Sector@@@8
	DD	FLAT:??_R3IRender_Sector@@8
rdata$r	ENDS
;	COMDAT ??_R3IRender_Sector@@8
rdata$r	SEGMENT
??_R3IRender_Sector@@8 DD 00H				; IRender_Sector::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IRender_Sector@@8
rdata$r	ENDS
;	COMDAT ??_R2IRender_Sector@@8
rdata$r	SEGMENT
??_R2IRender_Sector@@8 DD FLAT:??_R1A@?0A@EA@IRender_Sector@@8 ; IRender_Sector::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IRender_Sector@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IRender_Sector@@8 DD FLAT:??_R0?AVIRender_Sector@@@8 ; IRender_Sector::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IRender_Sector@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIRender_Sector@@@8
_DATA	SEGMENT
??_R0?AVIRender_Sector@@@8 DD FLAT:??_7type_info@@6B@	; IRender_Sector `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIRender_Sector@@', 00H
_DATA	ENDS
;	COMDAT ??_7CObject@@6BICollidable@@@
CONST	SEGMENT
??_7CObject@@6BICollidable@@@ DD FLAT:??_R4CObject@@6BICollidable@@@ ; CObject::`vftable'
	DD	FLAT:??_ECObject@@WJM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4CObject@@6BICollidable@@@
rdata$r	SEGMENT
??_R4CObject@@6BICollidable@@@ DD 00H			; CObject::`RTTI Complete Object Locator'
	DD	09cH
	DD	00H
	DD	FLAT:??_R0?AVCObject@@@8
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_7CObject@@6BIRenderable@@@
CONST	SEGMENT
??_7CObject@@6BIRenderable@@@ DD FLAT:??_R4CObject@@6BIRenderable@@@ ; CObject::`vftable'
	DD	FLAT:??_ECObject@@WEM@AEPAXI@Z
	DD	FLAT:?renderable_Render@CObject@@UAEXXZ
	DD	FLAT:?renderable_ShadowGenerate@CObject@@UAEHXZ
	DD	FLAT:?renderable_ShadowReceive@CObject@@UAEHXZ
CONST	ENDS
;	COMDAT ??_R4CObject@@6BIRenderable@@@
rdata$r	SEGMENT
??_R4CObject@@6BIRenderable@@@ DD 00H			; CObject::`RTTI Complete Object Locator'
	DD	04cH
	DD	00H
	DD	FLAT:??_R0?AVCObject@@@8
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_7CObject@@6BISheduled@@@
CONST	SEGMENT
??_7CObject@@6BISheduled@@@ DD FLAT:??_R4CObject@@6BISheduled@@@ ; CObject::`vftable'
	DD	FLAT:??_ECObject@@WEE@AEPAXI@Z
	DD	FLAT:?shedule_Scale@CObject@@UAEMXZ
	DD	FLAT:?shedule_Update@CObject@@UAEXI@Z
	DD	FLAT:?shedule_Name@CObject@@UBE?AVshared_str@@XZ
	DD	FLAT:?shedule_Needed@CObject@@UAE_NXZ
CONST	ENDS
;	COMDAT ??_R4CObject@@6BISheduled@@@
rdata$r	SEGMENT
??_R4CObject@@6BISheduled@@@ DD 00H			; CObject::`RTTI Complete Object Locator'
	DD	044H
	DD	00H
	DD	FLAT:??_R0?AVCObject@@@8
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_7CObject@@6BISpatial@@@
CONST	SEGMENT
??_7CObject@@6BISpatial@@@ DD FLAT:??_R4CObject@@6BISpatial@@@ ; CObject::`vftable'
	DD	FLAT:?spatial_register@CObject@@UAEXXZ
	DD	FLAT:?spatial_unregister@CObject@@UAEXXZ
	DD	FLAT:?spatial_move@CObject@@UAEXXZ
	DD	FLAT:?spatial_sector_point@ISpatial@@UAE?AU?$_vector3@M@@XZ
	DD	FLAT:?dcast_CObject@CObject@@UAEPAV1@XZ
	DD	FLAT:?dcast_FeelSound@ISpatial@@UAEPAVSound@Feel@@XZ
	DD	FLAT:?dcast_Renderable@CObject@@UAEPAVIRenderable@@XZ
	DD	FLAT:?dcast_Light@ISpatial@@UAEPAVIRender_Light@@XZ
	DD	FLAT:??_ECObject@@WBA@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4CObject@@6BISpatial@@@
rdata$r	SEGMENT
??_R4CObject@@6BISpatial@@@ DD 00H			; CObject::`RTTI Complete Object Locator'
	DD	010H
	DD	00H
	DD	FLAT:??_R0?AVCObject@@@8
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_7CObject@@6BDLL_Pure@@@
CONST	SEGMENT
??_7CObject@@6BDLL_Pure@@@ DD FLAT:??_R4CObject@@6BDLL_Pure@@@ ; CObject::`vftable'
	DD	FLAT:?_construct@DLL_Pure@@UAEPAV1@XZ
	DD	FLAT:??_ECObject@@UAEPAXI@Z
	DD	FLAT:?AlwaysTheCrow@CObject@@UAEHXZ
	DD	FLAT:?Ready@CObject@@UAEHXZ
	DD	FLAT:?Center@CObject@@UBEXAAU?$_vector3@M@@@Z
	DD	FLAT:?Radius@CObject@@UBEMXZ
	DD	FLAT:?BoundingBox@CObject@@UBEABV?$_box3@M@@XZ
	DD	FLAT:?OnChangeVisual@CObject@@UAEXXZ
	DD	FLAT:?physics_shell@CObject@@UAEPAVIPhysicsShell@@XZ
	DD	FLAT:?physics_collision@CObject@@UAEPBUIObjectPhysicsCollision@@XZ
	DD	FLAT:?Load@CObject@@UAEXPBD@Z
	DD	FLAT:?UpdateCL@CObject@@UAEXXZ
	DD	FLAT:?net_Spawn@CObject@@UAEHPAVCSE_Abstract@@@Z
	DD	FLAT:?net_Destroy@CObject@@UAEXXZ
	DD	FLAT:?net_Export@CObject@@UAEXAAVNET_Packet@@@Z
	DD	FLAT:?net_Import@CObject@@UAEXAAVNET_Packet@@@Z
	DD	FLAT:?net_ImportInput@CObject@@UAEXAAVNET_Packet@@@Z
	DD	FLAT:?net_Relevant@CObject@@UAEHXZ
	DD	FLAT:?net_MigrateInactive@CObject@@UAEXAAVNET_Packet@@@Z
	DD	FLAT:?net_MigrateActive@CObject@@UAEXAAVNET_Packet@@@Z
	DD	FLAT:?net_Relcase@CObject@@UAEXPAV1@@Z
	DD	FLAT:?ps_Element@CObject@@UBE?AUSavedPosition@1@I@Z
	DD	FLAT:?ForceTransform@CObject@@UAEXABU?$_matrix@M@@@Z
	DD	FLAT:?OnHUDDraw@CObject@@UAEXPAVCCustomHUD@@@Z
	DD	FLAT:?OnH_B_Chield@CObject@@UAEXXZ
	DD	FLAT:?OnH_B_Independent@CObject@@UAEX_N@Z
	DD	FLAT:?OnH_A_Chield@CObject@@UAEXXZ
	DD	FLAT:?OnH_A_Independent@CObject@@UAEXXZ
	DD	FLAT:?On_SetEntity@CObject@@UAEXXZ
	DD	FLAT:?On_LostEntity@CObject@@UAEXXZ
	DD	FLAT:?register_schedule@CObject@@UBE_NXZ
	DD	FLAT:?get_new_local_point_on_mesh@CObject@@UBE?AU?$_vector3@M@@AAG@Z
	DD	FLAT:?get_last_local_point_on_mesh@CObject@@UBE?AU?$_vector3@M@@ABU2@G@Z
CONST	ENDS
;	COMDAT ??_R4CObject@@6BDLL_Pure@@@
rdata$r	SEGMENT
??_R4CObject@@6BDLL_Pure@@@ DD 00H			; CObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCObject@@@8
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DLL_Pure@@8
	DD	FLAT:??_R1BA@?0A@EA@ISpatial@@8
	DD	FLAT:??_R1EE@?0A@EA@ISheduled@@8
	DD	FLAT:??_R1EM@?0A@EA@IRenderable@@8
	DD	FLAT:??_R1JM@?0A@EA@ICollidable@@8
rdata$r	ENDS
;	COMDAT ??_R1JM@?0A@EA@ICollidable@@8
rdata$r	SEGMENT
??_R1JM@?0A@EA@ICollidable@@8 DD FLAT:??_R0?AVICollidable@@@8 ; ICollidable::`RTTI Base Class Descriptor at (156,-1,0,64)'
	DD	00H
	DD	09cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICollidable@@8
rdata$r	ENDS
;	COMDAT ??_R3ICollidable@@8
rdata$r	SEGMENT
??_R3ICollidable@@8 DD 00H				; ICollidable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ICollidable@@8
rdata$r	ENDS
;	COMDAT ??_R2ICollidable@@8
rdata$r	SEGMENT
??_R2ICollidable@@8 DD FLAT:??_R1A@?0A@EA@ICollidable@@8 ; ICollidable::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICollidable@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICollidable@@8 DD FLAT:??_R0?AVICollidable@@@8 ; ICollidable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICollidable@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVICollidable@@@8
_DATA	SEGMENT
??_R0?AVICollidable@@@8 DD FLAT:??_7type_info@@6B@	; ICollidable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVICollidable@@', 00H
_DATA	ENDS
;	COMDAT ??_R1EM@?0A@EA@IRenderable@@8
rdata$r	SEGMENT
??_R1EM@?0A@EA@IRenderable@@8 DD FLAT:??_R0?AVIRenderable@@@8 ; IRenderable::`RTTI Base Class Descriptor at (76,-1,0,64)'
	DD	00H
	DD	04cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IRenderable@@8
rdata$r	ENDS
;	COMDAT ??_R3IRenderable@@8
rdata$r	SEGMENT
??_R3IRenderable@@8 DD 00H				; IRenderable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IRenderable@@8
rdata$r	ENDS
;	COMDAT ??_R2IRenderable@@8
rdata$r	SEGMENT
??_R2IRenderable@@8 DD FLAT:??_R1A@?0A@EA@IRenderable@@8 ; IRenderable::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IRenderable@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IRenderable@@8 DD FLAT:??_R0?AVIRenderable@@@8 ; IRenderable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IRenderable@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIRenderable@@@8
_DATA	SEGMENT
??_R0?AVIRenderable@@@8 DD FLAT:??_7type_info@@6B@	; IRenderable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIRenderable@@', 00H
_DATA	ENDS
;	COMDAT ??_R1EE@?0A@EA@ISheduled@@8
rdata$r	SEGMENT
??_R1EE@?0A@EA@ISheduled@@8 DD FLAT:??_R0?AVISheduled@@@8 ; ISheduled::`RTTI Base Class Descriptor at (68,-1,0,64)'
	DD	00H
	DD	044H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISheduled@@8
rdata$r	ENDS
;	COMDAT ??_R1BA@?0A@EA@ISpatial@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@ISpatial@@8 DD FLAT:??_R0?AVISpatial@@@8	; ISpatial::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	00H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISpatial@@8
rdata$r	ENDS
;	COMDAT ??_R3ISpatial@@8
rdata$r	SEGMENT
??_R3ISpatial@@8 DD 00H					; ISpatial::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ISpatial@@8
rdata$r	ENDS
;	COMDAT ??_R2ISpatial@@8
rdata$r	SEGMENT
??_R2ISpatial@@8 DD FLAT:??_R1A@?0A@EA@ISpatial@@8	; ISpatial::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ISpatial@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISpatial@@8 DD FLAT:??_R0?AVISpatial@@@8	; ISpatial::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISpatial@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVISpatial@@@8
_DATA	SEGMENT
??_R0?AVISpatial@@@8 DD FLAT:??_7type_info@@6B@		; ISpatial `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVISpatial@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
_DATA	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
_DATA	ENDS
;	COMDAT ??_7IRender_interface@@6B@
CONST	SEGMENT
??_7IRender_interface@@6B@ DD FLAT:??_R4IRender_interface@@6B@ ; IRender_interface::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?Statistics@IRender_interface@@UAEXPAVCGameFont@@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?light_destroy@IRender_interface@@UAEXPAVIRender_Light@@@Z
	DD	FLAT:__purecall
	DD	FLAT:?glow_destroy@IRender_interface@@UAEXPAVIRender_Glow@@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_EIRender_interface@@UAEPAXI@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_R4IRender_interface@@6B@
rdata$r	SEGMENT
??_R4IRender_interface@@6B@ DD 00H			; IRender_interface::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIRender_interface@@@8
	DD	FLAT:??_R3IRender_interface@@8
rdata$r	ENDS
;	COMDAT ??_R3IRender_interface@@8
rdata$r	SEGMENT
??_R3IRender_interface@@8 DD 00H			; IRender_interface::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IRender_interface@@8
rdata$r	ENDS
;	COMDAT ??_R2IRender_interface@@8
rdata$r	SEGMENT
??_R2IRender_interface@@8 DD FLAT:??_R1A@?0A@EA@IRender_interface@@8 ; IRender_interface::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IRender_interface@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IRender_interface@@8 DD FLAT:??_R0?AVIRender_interface@@@8 ; IRender_interface::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IRender_interface@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIRender_interface@@@8
_DATA	SEGMENT
??_R0?AVIRender_interface@@@8 DD FLAT:??_7type_info@@6B@ ; IRender_interface `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIRender_interface@@', 00H
; Function compile flags: /Ogtpy
; File j:\msvs8\vc\include\math.h
;	COMDAT _sqrtf
_TEXT	SEGMENT
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT

; 423  :         {return ((float)sqrt((double)_X)); }

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	fld	DWORD PTR __X$[ebp]
	fsqrt
	mov	esp, ebp
	pop	ebp
	ret	0
_sqrtf	ENDP
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_std_extensions.h
_TEXT	ENDS
;	COMDAT ?_sqrt@@YAMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
?_sqrt@@YAMM@Z PROC					; _sqrt, COMDAT

; 100  : IC float	_sqrt	(float x)		{ return sqrtf(x); }

	fld	DWORD PTR _x$[esp-4]
	push	ecx
	fstp	DWORD PTR [esp]
	call	_sqrtf
	add	esp, 4
	ret	0
?_sqrt@@YAMM@Z ENDP					; _sqrt
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory_subst_msvc.h
_TEXT	ENDS
;	COMDAT ??R?$xr_special_free@$00VIRender_Glow@@@@QAEXAAPAVIRender_Glow@@@Z
_TEXT	SEGMENT
??R?$xr_special_free@$00VIRender_Glow@@@@QAEXAAPAVIRender_Glow@@@Z PROC ; xr_special_free<1,IRender_Glow>::operator(), COMDAT
; _ptr$ = esi

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	mov	eax, DWORD PTR [esi]
	push	edi
	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx]
	add	esp, 4
	mov	edi, eax
	mov	eax, DWORD PTR [edx+32]
	push	0
	call	eax

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	pop	edi

; 135  : 	}

	ret	0
??R?$xr_special_free@$00VIRender_Glow@@@@QAEXAAPAVIRender_Glow@@@Z ENDP ; xr_special_free<1,IRender_Glow>::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??R?$xr_special_free@$00VIRender_Light@@@@QAEXAAPAVIRender_Light@@@Z
_TEXT	SEGMENT
??R?$xr_special_free@$00VIRender_Light@@@@QAEXAAPAVIRender_Light@@@Z PROC ; xr_special_free<1,IRender_Light>::operator(), COMDAT
; _ptr$ = esi

; 132  : 		void*	_real_ptr	= dynamic_cast<void*>(ptr);

	mov	eax, DWORD PTR [esi]
	push	edi
	push	eax
	call	___RTCastToVoid

; 133  : 		ptr->~T			();

	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx]
	add	esp, 4
	mov	edi, eax
	mov	eax, DWORD PTR [edx+76]
	push	0
	call	eax

; 134  : 		Memory.mem_free	(_real_ptr);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	pop	edi

; 135  : 	}

	ret	0
??R?$xr_special_free@$00VIRender_Light@@@@QAEXAAPAVIRender_Light@@@Z ENDP ; xr_special_free<1,IRender_Light>::operator()
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_delete@VIRender_Glow@@@@YAXAAPAVIRender_Glow@@@Z
_TEXT	SEGMENT
??$xr_delete@VIRender_Glow@@@@YAXAAPAVIRender_Glow@@@Z PROC ; xr_delete<IRender_Glow>, COMDAT
; _ptr$ = esi

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN1@xr_delete@18
	push	edi

; 152  : 	{
; 153  : 		xr_special_free<is_polymorphic<T>::result,T>()(ptr);

	push	eax
	call	___RTCastToVoid
	mov	ecx, DWORD PTR [esi]
	mov	edi, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+32]
	add	esp, 4
	push	0
	call	edx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 154  : 		ptr = NULL;

	mov	DWORD PTR [esi], 0
	pop	edi
$LN1@xr_delete@18:

; 155  : 	}
; 156  : }

	ret	0
??$xr_delete@VIRender_Glow@@@@YAXAAPAVIRender_Glow@@@Z ENDP ; xr_delete<IRender_Glow>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_delete@VIRender_Light@@@@YAXAAPAVIRender_Light@@@Z
_TEXT	SEGMENT
??$xr_delete@VIRender_Light@@@@YAXAAPAVIRender_Light@@@Z PROC ; xr_delete<IRender_Light>, COMDAT
; _ptr$ = esi

; 151  : 	if (ptr) 

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN1@xr_delete@19
	push	edi

; 152  : 	{
; 153  : 		xr_special_free<is_polymorphic<T>::result,T>()(ptr);

	push	eax
	call	___RTCastToVoid
	mov	ecx, DWORD PTR [esi]
	mov	edi, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+76]
	add	esp, 4
	push	0
	call	edx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z

; 154  : 		ptr = NULL;

	mov	DWORD PTR [esi], 0
	pop	edi
$LN1@xr_delete@19:

; 155  : 	}
; 156  : }

	ret	0
??$xr_delete@VIRender_Light@@@@YAXAAPAVIRender_Light@@@Z ENDP ; xr_delete<IRender_Light>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_vector3d.h
_TEXT	ENDS
;	COMDAT ?distance_to_sqr@?$_vector3@M@@QBEMABU1@@Z
_TEXT	SEGMENT
?distance_to_sqr@?$_vector3@M@@QBEMABU1@@Z PROC		; _vector3<float>::distance_to_sqr, COMDAT
; _this$ = ecx
; _v$ = eax

; 287  : 	{	return (x-v.x)*(x-v.x) + (y-v.y)*(y-v.y) + (z-v.z)*(z-v.z);	}

	movss	xmm3, DWORD PTR [ecx]
	subss	xmm3, DWORD PTR [eax]
	movss	xmm2, DWORD PTR [ecx+4]
	subss	xmm2, DWORD PTR [eax+4]
	movss	xmm1, DWORD PTR [ecx+8]
	subss	xmm1, DWORD PTR [eax+8]
	movaps	xmm0, xmm3
	mulss	xmm0, xmm3
	movaps	xmm3, xmm2
	mulss	xmm3, xmm2
	movaps	xmm2, xmm1
	addss	xmm0, xmm3
	mulss	xmm2, xmm1
	addss	xmm0, xmm2
	ret	0
?distance_to_sqr@?$_vector3@M@@QBEMABU1@@Z ENDP		; _vector3<float>::distance_to_sqr
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\fixedvector.h
_TEXT	ENDS
;	COMDAT ?size@?$svector@USavedPosition@CObject@@$03@@QBEIXZ
_TEXT	SEGMENT
?size@?$svector@USavedPosition@CObject@@$03@@QBEIXZ PROC ; svector<CObject::SavedPosition,4>::size, COMDAT
; _this$ = eax

; 30   : 	IC u32		size()		const			{ return count;							}

	mov	eax, DWORD PTR [eax+64]
	ret	0
?size@?$svector@USavedPosition@CObject@@$03@@QBEIXZ ENDP ; svector<CObject::SavedPosition,4>::size
_TEXT	ENDS
PUBLIC	?_clear@?$resptr_base@VIRender_Glow@@@@QAEXXZ	; resptr_base<IRender_Glow>::_clear
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xr_resource.h
;	COMDAT ?_clear@?$resptr_base@VIRender_Glow@@@@QAEXXZ
_TEXT	SEGMENT
?_clear@?$resptr_base@VIRender_Glow@@@@QAEXXZ PROC	; resptr_base<IRender_Glow>::_clear, COMDAT
; _this$ = ecx

; 49   : 	void				_clear	()									{	p_ = 0;																						}

	mov	DWORD PTR [ecx], 0
	ret	0
?_clear@?$resptr_base@VIRender_Glow@@@@QAEXXZ ENDP	; resptr_base<IRender_Glow>::_clear
_TEXT	ENDS
PUBLIC	?_get@?$resptr_base@VIRender_Glow@@@@QBEPAVIRender_Glow@@XZ ; resptr_base<IRender_Glow>::_get
; Function compile flags: /Ogtpy
;	COMDAT ?_get@?$resptr_base@VIRender_Glow@@@@QBEPAVIRender_Glow@@XZ
_TEXT	SEGMENT
?_get@?$resptr_base@VIRender_Glow@@@@QBEPAVIRender_Glow@@XZ PROC ; resptr_base<IRender_Glow>::_get, COMDAT
; _this$ = ecx

; 48   : 	ICF		T *			_get	() const							{	return p_;																					}

	mov	eax, DWORD PTR [ecx]
	ret	0
?_get@?$resptr_base@VIRender_Glow@@@@QBEPAVIRender_Glow@@XZ ENDP ; resptr_base<IRender_Glow>::_get
_TEXT	ENDS
PUBLIC	?_dec@?$resptr_base@VIRender_Glow@@@@IAEXXZ	; resptr_base<IRender_Glow>::_dec
; Function compile flags: /Ogtpy
;	COMDAT ?_dec@?$resptr_base@VIRender_Glow@@@@IAEXXZ
_TEXT	SEGMENT
?_dec@?$resptr_base@VIRender_Glow@@@@IAEXXZ PROC	; resptr_base<IRender_Glow>::_dec, COMDAT
; _this$ = ecx

; 44   : 	void				_dec	()									{	if (0==p_) return;	p_->dwReference--; if (0==p_->dwReference) xr_delete(p_);				}

	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN5@dec@4
	add	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN5@dec@4
	test	eax, eax
	je	SHORT $LN5@dec@4
	push	edi
	push	eax
	call	___RTCastToVoid
	mov	ecx, DWORD PTR [esi]
	mov	edi, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+32]
	add	esp, 4
	push	0
	call	edx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
	pop	edi
$LN5@dec@4:
	pop	esi
	ret	0
?_dec@?$resptr_base@VIRender_Glow@@@@IAEXXZ ENDP	; resptr_base<IRender_Glow>::_dec
_TEXT	ENDS
PUBLIC	?_inc@?$resptr_base@VIRender_Glow@@@@IAEXXZ	; resptr_base<IRender_Glow>::_inc
; Function compile flags: /Ogtpy
;	COMDAT ?_inc@?$resptr_base@VIRender_Glow@@@@IAEXXZ
_TEXT	SEGMENT
?_inc@?$resptr_base@VIRender_Glow@@@@IAEXXZ PROC	; resptr_base<IRender_Glow>::_inc, COMDAT
; _this$ = ecx

; 43   : 	void				_inc	()									{	if (0==p_) return;	p_->dwReference++;														}

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN2@inc@2
	add	DWORD PTR [eax+4], 1
$LN2@inc@2:
	ret	0
?_inc@?$resptr_base@VIRender_Glow@@@@IAEXXZ ENDP	; resptr_base<IRender_Glow>::_inc
_TEXT	ENDS
PUBLIC	?_clear@?$resptr_base@VIRender_Light@@@@QAEXXZ	; resptr_base<IRender_Light>::_clear
; Function compile flags: /Ogtpy
;	COMDAT ?_clear@?$resptr_base@VIRender_Light@@@@QAEXXZ
_TEXT	SEGMENT
?_clear@?$resptr_base@VIRender_Light@@@@QAEXXZ PROC	; resptr_base<IRender_Light>::_clear, COMDAT
; _this$ = ecx

; 49   : 	void				_clear	()									{	p_ = 0;																						}

	mov	DWORD PTR [ecx], 0
	ret	0
?_clear@?$resptr_base@VIRender_Light@@@@QAEXXZ ENDP	; resptr_base<IRender_Light>::_clear
_TEXT	ENDS
PUBLIC	?_get@?$resptr_base@VIRender_Light@@@@QBEPAVIRender_Light@@XZ ; resptr_base<IRender_Light>::_get
; Function compile flags: /Ogtpy
;	COMDAT ?_get@?$resptr_base@VIRender_Light@@@@QBEPAVIRender_Light@@XZ
_TEXT	SEGMENT
?_get@?$resptr_base@VIRender_Light@@@@QBEPAVIRender_Light@@XZ PROC ; resptr_base<IRender_Light>::_get, COMDAT
; _this$ = ecx

; 48   : 	ICF		T *			_get	() const							{	return p_;																					}

	mov	eax, DWORD PTR [ecx]
	ret	0
?_get@?$resptr_base@VIRender_Light@@@@QBEPAVIRender_Light@@XZ ENDP ; resptr_base<IRender_Light>::_get
_TEXT	ENDS
PUBLIC	?_dec@?$resptr_base@VIRender_Light@@@@IAEXXZ	; resptr_base<IRender_Light>::_dec
; Function compile flags: /Ogtpy
;	COMDAT ?_dec@?$resptr_base@VIRender_Light@@@@IAEXXZ
_TEXT	SEGMENT
?_dec@?$resptr_base@VIRender_Light@@@@IAEXXZ PROC	; resptr_base<IRender_Light>::_dec, COMDAT
; _this$ = ecx

; 44   : 	void				_dec	()									{	if (0==p_) return;	p_->dwReference--; if (0==p_->dwReference) xr_delete(p_);				}

	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN5@dec@5
	add	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN5@dec@5
	test	eax, eax
	je	SHORT $LN5@dec@5
	push	edi
	push	eax
	call	___RTCastToVoid
	mov	ecx, DWORD PTR [esi]
	mov	edi, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+76]
	add	esp, 4
	push	0
	call	edx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
	pop	edi
$LN5@dec@5:
	pop	esi
	ret	0
?_dec@?$resptr_base@VIRender_Light@@@@IAEXXZ ENDP	; resptr_base<IRender_Light>::_dec
_TEXT	ENDS
PUBLIC	?_inc@?$resptr_base@VIRender_Light@@@@IAEXXZ	; resptr_base<IRender_Light>::_inc
; Function compile flags: /Ogtpy
;	COMDAT ?_inc@?$resptr_base@VIRender_Light@@@@IAEXXZ
_TEXT	SEGMENT
?_inc@?$resptr_base@VIRender_Light@@@@IAEXXZ PROC	; resptr_base<IRender_Light>::_inc, COMDAT
; _this$ = ecx

; 43   : 	void				_inc	()									{	if (0==p_) return;	p_->dwReference++;														}

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN2@inc@3
	add	DWORD PTR [eax+4], 1
$LN2@inc@3:
	ret	0
?_inc@?$resptr_base@VIRender_Light@@@@IAEXXZ ENDP	; resptr_base<IRender_Light>::_inc
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_vector3d.h
_TEXT	ENDS
;	COMDAT ?distance_to@?$_vector3@M@@QBEMABU1@@Z
_TEXT	SEGMENT
?distance_to@?$_vector3@M@@QBEMABU1@@Z PROC		; _vector3<float>::distance_to, COMDAT
; _this$ = ecx
; _v$ = eax

; 291  : 	{	return _sqrt(distance_to_sqr(v));	}

	push	ecx
	movss	xmm2, DWORD PTR [ecx]
	subss	xmm2, DWORD PTR [eax]
	movss	xmm1, DWORD PTR [ecx+4]
	subss	xmm1, DWORD PTR [eax+4]
	movss	xmm0, DWORD PTR [ecx+8]
	subss	xmm0, DWORD PTR [eax+8]
	movaps	xmm3, xmm2
	mulss	xmm3, xmm2
	movaps	xmm2, xmm1
	mulss	xmm2, xmm1
	movaps	xmm1, xmm0
	addss	xmm3, xmm2
	mulss	xmm1, xmm0
	push	ecx
	addss	xmm3, xmm1
	movss	DWORD PTR [esp], xmm3
	call	_sqrtf
	add	esp, 4
	pop	ecx
	ret	0
?distance_to@?$_vector3@M@@QBEMABU1@@Z ENDP		; _vector3<float>::distance_to
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\isheduled.cpp
_TEXT	ENDS
;	COMDAT ?shedule_Update@ISheduled@@UAEXI@Z
_TEXT	SEGMENT
_dt$ = 8						; size = 4
?shedule_Update@ISheduled@@UAEXI@Z PROC			; ISheduled::shedule_Update, COMDAT
; _this$ = ecx

; 43   : #ifdef DEBUG
; 44   : 	if (dbg_startframe==dbg_update_shedule)	
; 45   : 	{
; 46   : 		LPCSTR		name	= "unknown";
; 47   : 		CObject*	O		= dynamic_cast<CObject*>	(this);
; 48   : 		if			(O)		name	= *O->cName();
; 49   : 		Debug.fatal	(DEBUG_INFO,"'shedule_Update' called twice per frame for %s",name);
; 50   : 	}
; 51   : 	dbg_update_shedule	= dbg_startframe;
; 52   : #endif
; 53   : }

	ret	4
?shedule_Update@ISheduled@@UAEXI@Z ENDP			; ISheduled::shedule_Update
_TEXT	ENDS
PUBLIC	??0ISheduled@@QAE@XZ				; ISheduled::ISheduled
; Function compile flags: /Ogtpy
;	COMDAT ??0ISheduled@@QAE@XZ
_TEXT	SEGMENT
??0ISheduled@@QAE@XZ PROC				; ISheduled::ISheduled, COMDAT
; _this$ = ecx

; 6    : {

	mov	eax, ecx

; 7    : 	shedule.t_min		= 20;
; 8    : 	shedule.t_max		= 1000;
; 9    : 	shedule.b_locked	= FALSE;

	mov	ecx, DWORD PTR [eax+4]
	and	ecx, -788922348				; d0fa0014H
	or	ecx, 16384020				; 00fa0014H
	mov	DWORD PTR [eax], OFFSET ??_7ISheduled@@6B@
	mov	DWORD PTR [eax+4], ecx

; 10   : #ifdef DEBUG
; 11   : 	dbg_startframe		= 1;
; 12   : 	dbg_update_shedule	= 0;
; 13   : #endif
; 14   : }

	ret	0
??0ISheduled@@QAE@XZ ENDP				; ISheduled::ISheduled
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_object.h
_TEXT	ENDS
;	COMDAT ?register_schedule@CObject@@UBE_NXZ
_TEXT	SEGMENT
?register_schedule@CObject@@UBE_NXZ PROC		; CObject::register_schedule, COMDAT
; _this$ = ecx

; 207  : 	virtual bool						register_schedule	() const {return true;}

	mov	al, 1
	ret	0
?register_schedule@CObject@@UBE_NXZ ENDP		; CObject::register_schedule
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?On_LostEntity@CObject@@UAEXXZ
_TEXT	SEGMENT
?On_LostEntity@CObject@@UAEXXZ PROC			; CObject::On_LostEntity, COMDAT
; _this$ = ecx

; 204  : 	virtual void						On_LostEntity		()	{};

	ret	0
?On_LostEntity@CObject@@UAEXXZ ENDP			; CObject::On_LostEntity
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?On_SetEntity@CObject@@UAEXXZ
_TEXT	SEGMENT
?On_SetEntity@CObject@@UAEXXZ PROC			; CObject::On_SetEntity, COMDAT
; _this$ = ecx

; 203  : 	virtual void						On_SetEntity		()	{};

	ret	0
?On_SetEntity@CObject@@UAEXXZ ENDP			; CObject::On_SetEntity
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?OnHUDDraw@CObject@@UAEXPAVCCustomHUD@@@Z
_TEXT	SEGMENT
_hud$ = 8						; size = 4
?OnHUDDraw@CObject@@UAEXPAVCCustomHUD@@@Z PROC		; CObject::OnHUDDraw, COMDAT
; _this$ = ecx

; 195  : 	virtual void						OnHUDDraw			(CCustomHUD* hud)	{};

	ret	4
?OnHUDDraw@CObject@@UAEXPAVCCustomHUD@@@Z ENDP		; CObject::OnHUDDraw
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ForceTransform@CObject@@UAEXABU?$_matrix@M@@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
?ForceTransform@CObject@@UAEXABU?$_matrix@M@@@Z PROC	; CObject::ForceTransform, COMDAT
; _this$ = ecx

; 192  : 	virtual void						ForceTransform		(const Fmatrix& m)	{};

	ret	4
?ForceTransform@CObject@@UAEXABU?$_matrix@M@@@Z ENDP	; CObject::ForceTransform
_TEXT	ENDS
PUBLIC	?ps_Size@CObject@@QBEIXZ			; CObject::ps_Size
; Function compile flags: /Ogtpy
;	COMDAT ?ps_Size@CObject@@QBEIXZ
_TEXT	SEGMENT
?ps_Size@CObject@@QBEIXZ PROC				; CObject::ps_Size, COMDAT
; _this$ = ecx

; 190  : 	IC u32								ps_Size				()			const	{ return PositionStack.size(); }

	mov	eax, DWORD PTR [ecx+248]
	ret	0
?ps_Size@CObject@@QBEIXZ ENDP				; CObject::ps_Size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?net_Relcase@CObject@@UAEXPAV1@@Z
_TEXT	SEGMENT
_O$ = 8							; size = 4
?net_Relcase@CObject@@UAEXPAV1@@Z PROC			; CObject::net_Relcase, COMDAT
; _this$ = ecx

; 187  : 	virtual void						net_Relcase			(CObject*	 O) { };				// destroy all links to another objects

	ret	4
?net_Relcase@CObject@@UAEXPAV1@@Z ENDP			; CObject::net_Relcase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?net_MigrateActive@CObject@@UAEXAAVNET_Packet@@@Z
_TEXT	SEGMENT
_P$ = 8							; size = 4
?net_MigrateActive@CObject@@UAEXAAVNET_Packet@@@Z PROC	; CObject::net_MigrateActive, COMDAT
; _this$ = ecx

; 186  : 	virtual void						net_MigrateActive	(NET_Packet& P)	{ Props.net_Local = TRUE;		};

	or	DWORD PTR [ecx+164], 134217728		; 08000000H
	ret	4
?net_MigrateActive@CObject@@UAEXAAVNET_Packet@@@Z ENDP	; CObject::net_MigrateActive
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?net_MigrateInactive@CObject@@UAEXAAVNET_Packet@@@Z
_TEXT	SEGMENT
_P$ = 8							; size = 4
?net_MigrateInactive@CObject@@UAEXAAVNET_Packet@@@Z PROC ; CObject::net_MigrateInactive, COMDAT
; _this$ = ecx

; 185  : 	virtual void						net_MigrateInactive	(NET_Packet& P)	{ Props.net_Local = FALSE;		};

	and	DWORD PTR [ecx+164], -134217729		; f7ffffffH
	ret	4
?net_MigrateInactive@CObject@@UAEXAAVNET_Packet@@@Z ENDP ; CObject::net_MigrateInactive
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?net_Relevant@CObject@@UAEHXZ
_TEXT	SEGMENT
?net_Relevant@CObject@@UAEHXZ PROC			; CObject::net_Relevant, COMDAT
; _this$ = ecx

; 184  : 	virtual BOOL						net_Relevant		()				{ return FALSE; };	// relevant for export to server

	xor	eax, eax
	ret	0
?net_Relevant@CObject@@UAEHXZ ENDP			; CObject::net_Relevant
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?net_ImportInput@CObject@@UAEXAAVNET_Packet@@@Z
_TEXT	SEGMENT
_P$ = 8							; size = 4
?net_ImportInput@CObject@@UAEXAAVNET_Packet@@@Z PROC	; CObject::net_ImportInput, COMDAT
; _this$ = ecx

; 183  : 	virtual	void						net_ImportInput		(NET_Packet& P)	{};

	ret	4
?net_ImportInput@CObject@@UAEXAAVNET_Packet@@@Z ENDP	; CObject::net_ImportInput
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?net_Import@CObject@@UAEXAAVNET_Packet@@@Z
_TEXT	SEGMENT
_P$ = 8							; size = 4
?net_Import@CObject@@UAEXAAVNET_Packet@@@Z PROC		; CObject::net_Import, COMDAT
; _this$ = ecx

; 182  : 	virtual void						net_Import			(NET_Packet& P) {};					// import from server

	ret	4
?net_Import@CObject@@UAEXAAVNET_Packet@@@Z ENDP		; CObject::net_Import
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?net_Export@CObject@@UAEXAAVNET_Packet@@@Z
_TEXT	SEGMENT
_P$ = 8							; size = 4
?net_Export@CObject@@UAEXAAVNET_Packet@@@Z PROC		; CObject::net_Export, COMDAT
; _this$ = ecx

; 181  : 	virtual void						net_Export			(NET_Packet& P) {};					// export to server

	ret	4
?net_Export@CObject@@UAEXAAVNET_Packet@@@Z ENDP		; CObject::net_Export
_TEXT	ENDS
PUBLIC	?getReady@CObject@@QBEHXZ			; CObject::getReady
; Function compile flags: /Ogtpy
;	COMDAT ?getReady@CObject@@QBEHXZ
_TEXT	SEGMENT
?getReady@CObject@@QBEHXZ PROC				; CObject::getReady, COMDAT
; _this$ = ecx

; 166  : 	ICF BOOL							getReady			()			const	{ return Props.net_Ready;			}

	mov	eax, DWORD PTR [ecx+164]
	shr	eax, 28					; 0000001cH
	and	eax, 1
	ret	0
?getReady@CObject@@QBEHXZ ENDP				; CObject::getReady
_TEXT	ENDS
PUBLIC	?setReady@CObject@@QAEXH@Z			; CObject::setReady
; Function compile flags: /Ogtpy
;	COMDAT ?setReady@CObject@@QAEXH@Z
_TEXT	SEGMENT
__ready$ = 8						; size = 4
?setReady@CObject@@QAEXH@Z PROC				; CObject::setReady, COMDAT
; _this$ = ecx

; 165  : 	ICF void							setReady			(BOOL _ready)		{ Props.net_Ready = _ready?1:0;		}

	xor	eax, eax
	cmp	DWORD PTR __ready$[esp-4], eax
	setne	al
	shl	eax, 28					; 0000001cH
	xor	eax, DWORD PTR [ecx+164]
	and	eax, 268435456				; 10000000H
	xor	DWORD PTR [ecx+164], eax
	ret	4
?setReady@CObject@@QAEXH@Z ENDP				; CObject::setReady
_TEXT	ENDS
PUBLIC	?getSVU@CObject@@QBEHXZ				; CObject::getSVU
; Function compile flags: /Ogtpy
;	COMDAT ?getSVU@CObject@@QBEHXZ
_TEXT	SEGMENT
?getSVU@CObject@@QBEHXZ PROC				; CObject::getSVU, COMDAT
; _this$ = ecx

; 164  : 	ICF BOOL							getSVU				()			const	{ return Props.net_SV_Update;		}

	mov	eax, DWORD PTR [ecx+164]
	shr	eax, 29					; 0000001dH
	and	eax, 1
	ret	0
?getSVU@CObject@@QBEHXZ ENDP				; CObject::getSVU
_TEXT	ENDS
PUBLIC	?setSVU@CObject@@QAEXH@Z			; CObject::setSVU
; Function compile flags: /Ogtpy
;	COMDAT ?setSVU@CObject@@QAEXH@Z
_TEXT	SEGMENT
__svu$ = 8						; size = 4
?setSVU@CObject@@QAEXH@Z PROC				; CObject::setSVU, COMDAT
; _this$ = ecx

; 163  : 	ICF void							setSVU				(BOOL _svu)			{ Props.net_SV_Update	= _svu?1:0;	}

	xor	eax, eax
	cmp	DWORD PTR __svu$[esp-4], eax
	setne	al
	shl	eax, 29					; 0000001dH
	xor	eax, DWORD PTR [ecx+164]
	and	eax, 536870912				; 20000000H
	xor	DWORD PTR [ecx+164], eax
	ret	4
?setSVU@CObject@@QAEXH@Z ENDP				; CObject::setSVU
_TEXT	ENDS
PUBLIC	?getLocal@CObject@@QBEHXZ			; CObject::getLocal
; Function compile flags: /Ogtpy
;	COMDAT ?getLocal@CObject@@QBEHXZ
_TEXT	SEGMENT
?getLocal@CObject@@QBEHXZ PROC				; CObject::getLocal, COMDAT
; _this$ = ecx

; 162  : 	ICF BOOL							getLocal			()			const	{ return Props.net_Local;			}

	mov	eax, DWORD PTR [ecx+164]
	shr	eax, 27					; 0000001bH
	and	eax, 1
	ret	0
?getLocal@CObject@@QBEHXZ ENDP				; CObject::getLocal
_TEXT	ENDS
PUBLIC	?setLocal@CObject@@QAEXH@Z			; CObject::setLocal
; Function compile flags: /Ogtpy
;	COMDAT ?setLocal@CObject@@QAEXH@Z
_TEXT	SEGMENT
__local$ = 8						; size = 4
?setLocal@CObject@@QAEXH@Z PROC				; CObject::setLocal, COMDAT
; _this$ = ecx

; 161  : 	ICF void							setLocal			(BOOL _local)		{ Props.net_Local = _local?1:0;		}

	xor	eax, eax
	cmp	DWORD PTR __local$[esp-4], eax
	setne	al
	shl	eax, 27					; 0000001bH
	xor	eax, DWORD PTR [ecx+164]
	and	eax, 134217728				; 08000000H
	xor	DWORD PTR [ecx+164], eax
	ret	4
?setLocal@CObject@@QAEXH@Z ENDP				; CObject::setLocal
_TEXT	ENDS
PUBLIC	?getDestroy@CObject@@QBEHXZ			; CObject::getDestroy
; Function compile flags: /Ogtpy
;	COMDAT ?getDestroy@CObject@@QBEHXZ
_TEXT	SEGMENT
?getDestroy@CObject@@QBEHXZ PROC			; CObject::getDestroy, COMDAT
; _this$ = ecx

; 160  : 	ICF BOOL							getDestroy			()			const	{ return Props.bDestroy;			}

	mov	eax, DWORD PTR [ecx+164]
	shr	eax, 26					; 0000001aH
	and	eax, 1
	ret	0
?getDestroy@CObject@@QBEHXZ ENDP			; CObject::getDestroy
_TEXT	ENDS
PUBLIC	?getEnabled@CObject@@QBEHXZ			; CObject::getEnabled
; Function compile flags: /Ogtpy
;	COMDAT ?getEnabled@CObject@@QBEHXZ
_TEXT	SEGMENT
?getEnabled@CObject@@QBEHXZ PROC			; CObject::getEnabled, COMDAT
; _this$ = ecx

; 158  : 	ICF BOOL							getEnabled			()			const	{ return Props.bEnabled;			}

	movzx	eax, BYTE PTR [ecx+167]
	and	eax, 1
	ret	0
?getEnabled@CObject@@QBEHXZ ENDP			; CObject::getEnabled
_TEXT	ENDS
PUBLIC	?getVisible@CObject@@QBEHXZ			; CObject::getVisible
; Function compile flags: /Ogtpy
;	COMDAT ?getVisible@CObject@@QBEHXZ
_TEXT	SEGMENT
?getVisible@CObject@@QBEHXZ PROC			; CObject::getVisible, COMDAT
; _this$ = ecx

; 156  : 	ICF BOOL							getVisible			()			const	{ return Props.bVisible;			}

	mov	eax, DWORD PTR [ecx+164]
	shr	eax, 25					; 00000019H
	and	eax, 1
	ret	0
?getVisible@CObject@@QBEHXZ ENDP			; CObject::getVisible
_TEXT	ENDS
PUBLIC	?processing_enabled@CObject@@QAE_NXZ		; CObject::processing_enabled
; Function compile flags: /Ogtpy
;	COMDAT ?processing_enabled@CObject@@QAE_NXZ
_TEXT	SEGMENT
?processing_enabled@CObject@@QAE_NXZ PROC		; CObject::processing_enabled, COMDAT
; _this$ = ecx

; 153  : 	bool								processing_enabled		()				{ return 0!=Props.bActiveCounter;	}

	xor	eax, eax
	cmp	BYTE PTR [ecx+166], al
	setne	al
	ret	0
?processing_enabled@CObject@@QAE_NXZ ENDP		; CObject::processing_enabled
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?physics_collision@CObject@@UAEPBUIObjectPhysicsCollision@@XZ
_TEXT	SEGMENT
?physics_collision@CObject@@UAEPBUIObjectPhysicsCollision@@XZ PROC ; CObject::physics_collision, COMDAT
; _this$ = ecx

; 139  : virtual	const IObjectPhysicsCollision	*physics_collision	()					{ return  0; }

	xor	eax, eax
	ret	0
?physics_collision@CObject@@UAEPBUIObjectPhysicsCollision@@XZ ENDP ; CObject::physics_collision
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?physics_shell@CObject@@UAEPAVIPhysicsShell@@XZ
_TEXT	SEGMENT
?physics_shell@CObject@@UAEPAVIPhysicsShell@@XZ PROC	; CObject::physics_shell, COMDAT
; _this$ = ecx

; 137  : 	virtual		IPhysicsShell			*physics_shell		()					{ return  0; }

	xor	eax, eax
	ret	0
?physics_shell@CObject@@UAEPAVIPhysicsShell@@XZ ENDP	; CObject::physics_shell
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?OnChangeVisual@CObject@@UAEXXZ
_TEXT	SEGMENT
?OnChangeVisual@CObject@@UAEXXZ PROC			; CObject::OnChangeVisual, COMDAT
; _this$ = ecx

; 136  : 	virtual void						OnChangeVisual		()					{ }

	ret	0
?OnChangeVisual@CObject@@UAEXXZ ENDP			; CObject::OnChangeVisual
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?dcast_Renderable@CObject@@UAEPAVIRenderable@@XZ
_TEXT	SEGMENT
?dcast_Renderable@CObject@@UAEPAVIRenderable@@XZ PROC	; CObject::dcast_Renderable, COMDAT
; _this$ = ecx

; 135  : 	virtual		IRenderable*			dcast_Renderable	()					{ return this;						}

	lea	eax, DWORD PTR [ecx-16]
	test	eax, eax
	je	SHORT $LN3@dcast_Rend@2
	lea	eax, DWORD PTR [ecx+60]
	ret	0
$LN3@dcast_Rend@2:
	xor	eax, eax
	ret	0
?dcast_Renderable@CObject@@UAEPAVIRenderable@@XZ ENDP	; CObject::dcast_Renderable
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?dcast_CObject@CObject@@UAEPAV1@XZ
_TEXT	SEGMENT
?dcast_CObject@CObject@@UAEPAV1@XZ PROC			; CObject::dcast_CObject, COMDAT
; _this$ = ecx

; 134  : 	virtual		CObject*				dcast_CObject		()					{ return this;						}

	lea	eax, DWORD PTR [ecx-16]
	ret	0
?dcast_CObject@CObject@@UAEPAV1@XZ ENDP			; CObject::dcast_CObject
_TEXT	ENDS
PUBLIC	?CFORM@CObject@@QBEPAVICollisionForm@@XZ	; CObject::CFORM
; Function compile flags: /Ogtpy
;	COMDAT ?CFORM@CObject@@QBEPAVICollisionForm@@XZ
_TEXT	SEGMENT
?CFORM@CObject@@QBEPAVICollisionForm@@XZ PROC		; CObject::CFORM, COMDAT
; _this$ = ecx

; 133  : 	ICF ICollisionForm*					CFORM				() const			{ return collidable.model;			}

	mov	eax, DWORD PTR [ecx+160]
	ret	0
?CFORM@CObject@@QBEPAVICollisionForm@@XZ ENDP		; CObject::CFORM
_TEXT	ENDS
PUBLIC	?Visual@CObject@@QBEPAVIRenderVisual@@XZ	; CObject::Visual
; Function compile flags: /Ogtpy
;	COMDAT ?Visual@CObject@@QBEPAVIRenderVisual@@XZ
_TEXT	SEGMENT
?Visual@CObject@@QBEPAVIRenderVisual@@XZ PROC		; CObject::Visual, COMDAT
; _this$ = ecx

; 132  : 	ICF IRenderVisual*					Visual				() const			{ return renderable.visual;			}

	mov	eax, DWORD PTR [ecx+144]
	ret	0
?Visual@CObject@@QBEPAVIRenderVisual@@XZ ENDP		; CObject::Visual
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?renderable_ShadowReceive@CObject@@UAEHXZ
_TEXT	SEGMENT
?renderable_ShadowReceive@CObject@@UAEHXZ PROC		; CObject::renderable_ShadowReceive, COMDAT
; _this$ = ecx

; 129  : 	virtual BOOL						renderable_ShadowReceive	()			{ return TRUE;						}

	mov	eax, 1
	ret	0
?renderable_ShadowReceive@CObject@@UAEHXZ ENDP		; CObject::renderable_ShadowReceive
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?renderable_ShadowGenerate@CObject@@UAEHXZ
_TEXT	SEGMENT
?renderable_ShadowGenerate@CObject@@UAEHXZ PROC		; CObject::renderable_ShadowGenerate, COMDAT
; _this$ = ecx

; 128  : 	virtual BOOL						renderable_ShadowGenerate	()			{ return TRUE;						}

	mov	eax, 1
	ret	0
?renderable_ShadowGenerate@CObject@@UAEHXZ ENDP		; CObject::renderable_ShadowGenerate
_TEXT	ENDS
PUBLIC	?ROS@CObject@@QAEPAVIRender_ObjectSpecific@@XZ	; CObject::ROS
; Function compile flags: /Ogtpy
;	COMDAT ?ROS@CObject@@QAEPAVIRender_ObjectSpecific@@XZ
_TEXT	SEGMENT
?ROS@CObject@@QAEPAVIRender_ObjectSpecific@@XZ PROC	; CObject::ROS, COMDAT
; _this$ = ecx

; 127  : 	IC IRender_ObjectSpecific*			ROS					()					{ return renderable_ROS();			}

	cmp	DWORD PTR [ecx+148], 0
	push	esi
	lea	esi, DWORD PTR [ecx+76]
	jne	SHORT $LN7@ROS
	cmp	DWORD PTR [esi+76], 0
	je	SHORT $LN7@ROS
	mov	eax, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+116]
	push	esi
	call	eax
	mov	DWORD PTR [esi+72], eax
$LN7@ROS:
	mov	eax, DWORD PTR [esi+72]
	pop	esi
	ret	0
?ROS@CObject@@QAEPAVIRender_ObjectSpecific@@XZ ENDP	; CObject::ROS
_TEXT	ENDS
PUBLIC	?Position@CObject@@QBEABU?$_vector3@M@@XZ	; CObject::Position
; Function compile flags: /Ogtpy
;	COMDAT ?Position@CObject@@QBEABU?$_vector3@M@@XZ
_TEXT	SEGMENT
?Position@CObject@@QBEABU?$_vector3@M@@XZ PROC		; CObject::Position, COMDAT
; _this$ = ecx

; 122  : 	ICF const Fvector&					Position			() 			const	{ return renderable.xform.c;		}

	lea	eax, DWORD PTR [ecx+128]
	ret	0
?Position@CObject@@QBEABU?$_vector3@M@@XZ ENDP		; CObject::Position
_TEXT	ENDS
PUBLIC	?Position@CObject@@QAEAAU?$_vector3@M@@XZ	; CObject::Position
; Function compile flags: /Ogtpy
;	COMDAT ?Position@CObject@@QAEAAU?$_vector3@M@@XZ
_TEXT	SEGMENT
?Position@CObject@@QAEAAU?$_vector3@M@@XZ PROC		; CObject::Position, COMDAT
; _this$ = ecx

; 121  : 	ICF Fvector&						Position			() 					{ return renderable.xform.c;		}

	lea	eax, DWORD PTR [ecx+128]
	ret	0
?Position@CObject@@QAEAAU?$_vector3@M@@XZ ENDP		; CObject::Position
_TEXT	ENDS
PUBLIC	?Direction@CObject@@QBEABU?$_vector3@M@@XZ	; CObject::Direction
; Function compile flags: /Ogtpy
;	COMDAT ?Direction@CObject@@QBEABU?$_vector3@M@@XZ
_TEXT	SEGMENT
?Direction@CObject@@QBEABU?$_vector3@M@@XZ PROC		; CObject::Direction, COMDAT
; _this$ = ecx

; 120  : 	ICF const Fvector&					Direction			() 			const	{ return renderable.xform.k;		}

	lea	eax, DWORD PTR [ecx+112]
	ret	0
?Direction@CObject@@QBEABU?$_vector3@M@@XZ ENDP		; CObject::Direction
_TEXT	ENDS
PUBLIC	?Direction@CObject@@QAEAAU?$_vector3@M@@XZ	; CObject::Direction
; Function compile flags: /Ogtpy
;	COMDAT ?Direction@CObject@@QAEAAU?$_vector3@M@@XZ
_TEXT	SEGMENT
?Direction@CObject@@QAEAAU?$_vector3@M@@XZ PROC		; CObject::Direction, COMDAT
; _this$ = ecx

; 119  : 	ICF Fvector&						Direction			() 					{ return renderable.xform.k;		}

	lea	eax, DWORD PTR [ecx+112]
	ret	0
?Direction@CObject@@QAEAAU?$_vector3@M@@XZ ENDP		; CObject::Direction
_TEXT	ENDS
PUBLIC	?XFORM@CObject@@QAEAAU?$_matrix@M@@XZ		; CObject::XFORM
; Function compile flags: /Ogtpy
;	COMDAT ?XFORM@CObject@@QAEAAU?$_matrix@M@@XZ
_TEXT	SEGMENT
?XFORM@CObject@@QAEAAU?$_matrix@M@@XZ PROC		; CObject::XFORM, COMDAT
; _this$ = ecx

; 113  : 	ICF Fmatrix&						XFORM				()					{ return renderable.xform;			}

	lea	eax, DWORD PTR [ecx+80]
	ret	0
?XFORM@CObject@@QAEAAU?$_matrix@M@@XZ ENDP		; CObject::XFORM
_TEXT	ENDS
PUBLIC	?XFORM@CObject@@QBEABU?$_matrix@M@@XZ		; CObject::XFORM
; Function compile flags: /Ogtpy
;	COMDAT ?XFORM@CObject@@QBEABU?$_matrix@M@@XZ
_TEXT	SEGMENT
?XFORM@CObject@@QBEABU?$_matrix@M@@XZ PROC		; CObject::XFORM, COMDAT
; _this$ = ecx

; 112  : 	IC const Fmatrix&					XFORM				()			 const	{ VERIFY(_valid(renderable.xform));	return renderable.xform;	}

	lea	eax, DWORD PTR [ecx+80]
	ret	0
?XFORM@CObject@@QBEABU?$_matrix@M@@XZ ENDP		; CObject::XFORM
_TEXT	ENDS
PUBLIC	?H_Root@CObject@@QAEPAV1@XZ			; CObject::H_Root
; Function compile flags: /Ogtpy
;	COMDAT ?H_Root@CObject@@QAEPAV1@XZ
_TEXT	SEGMENT
?H_Root@CObject@@QAEPAV1@XZ PROC			; CObject::H_Root, COMDAT
; _this$ = ecx

; 106  : 	CObject*							H_Root				()					{ return Parent?Parent->H_Root():this;	}

	mov	eax, ecx
	mov	ecx, DWORD PTR [eax+180]
	test	ecx, ecx
	je	SHORT $LN3@H_Root
	jmp	?H_Root@CObject@@QAEPAV1@XZ		; CObject::H_Root
$LN3@H_Root:
	ret	0
?H_Root@CObject@@QAEPAV1@XZ ENDP			; CObject::H_Root
_TEXT	ENDS
PUBLIC	?H_Parent@CObject@@QBEPBV1@XZ			; CObject::H_Parent
; Function compile flags: /Ogtpy
;	COMDAT ?H_Parent@CObject@@QBEPBV1@XZ
_TEXT	SEGMENT
?H_Parent@CObject@@QBEPBV1@XZ PROC			; CObject::H_Parent, COMDAT
; _this$ = ecx

; 105  : 	IC const CObject*					H_Parent			()			const	{ return Parent;						}

	mov	eax, DWORD PTR [ecx+180]
	ret	0
?H_Parent@CObject@@QBEPBV1@XZ ENDP			; CObject::H_Parent
_TEXT	ENDS
PUBLIC	?H_Parent@CObject@@QAEPAV1@XZ			; CObject::H_Parent
; Function compile flags: /Ogtpy
;	COMDAT ?H_Parent@CObject@@QAEPAV1@XZ
_TEXT	SEGMENT
?H_Parent@CObject@@QAEPAV1@XZ PROC			; CObject::H_Parent, COMDAT
; _this$ = ecx

; 104  : 	IC CObject*							H_Parent			()					{ return Parent;						}

	mov	eax, DWORD PTR [ecx+180]
	ret	0
?H_Parent@CObject@@QAEPAV1@XZ ENDP			; CObject::H_Parent
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?shedule_Needed@CObject@@UAE_NXZ
_TEXT	SEGMENT
?shedule_Needed@CObject@@UAE_NXZ PROC			; CObject::shedule_Needed, COMDAT
; _this$ = ecx

; 101  : 	virtual bool						shedule_Needed		()					{return processing_enabled();};

	xor	eax, eax
	cmp	BYTE PTR [ecx+98], al
	setne	al
	ret	0
?shedule_Needed@CObject@@UAE_NXZ ENDP			; CObject::shedule_Needed
_TEXT	ENDS
PUBLIC	__real@3ba3d70a
;	COMDAT __real@3ba3d70a
; File j:\msvs8\vc\include\math.h
CONST	SEGMENT
__real@3ba3d70a DD 03ba3d70ar			; 0.005
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_object.h
CONST	ENDS
;	COMDAT ?shedule_Scale@CObject@@UAEMXZ
_TEXT	SEGMENT
?shedule_Scale@CObject@@UAEMXZ PROC			; CObject::shedule_Scale, COMDAT
; _this$ = ecx

; 100  : 	virtual float						shedule_Scale		()					{ return Device.vCameraPosition.distance_to(Position())/200.f; }

	movss	xmm2, DWORD PTR ?Device@@3VCRenderDevice@@A+48
	subss	xmm2, DWORD PTR [ecx+60]
	movss	xmm1, DWORD PTR ?Device@@3VCRenderDevice@@A+56
	subss	xmm1, DWORD PTR [ecx+68]
	movss	xmm0, DWORD PTR ?Device@@3VCRenderDevice@@A+52
	subss	xmm0, DWORD PTR [ecx+64]
	movaps	xmm3, xmm2
	mulss	xmm3, xmm2
	movaps	xmm2, xmm1
	mulss	xmm2, xmm1
	movaps	xmm1, xmm0
	addss	xmm3, xmm2
	mulss	xmm1, xmm0
	push	ecx
	addss	xmm3, xmm1
	movss	DWORD PTR [esp], xmm3
	call	_sqrtf
	fmul	DWORD PTR __real@3ba3d70a
	add	esp, 4
	ret	0
?shedule_Scale@CObject@@UAEMXZ ENDP			; CObject::shedule_Scale
_TEXT	ENDS
PUBLIC	?SetTmpPreDestroy@CObject@@QAEXH@Z		; CObject::SetTmpPreDestroy
; Function compile flags: /Ogtpy
;	COMDAT ?SetTmpPreDestroy@CObject@@QAEXH@Z
_TEXT	SEGMENT
_b$ = 8							; size = 4
?SetTmpPreDestroy@CObject@@QAEXH@Z PROC			; CObject::SetTmpPreDestroy, COMDAT
; _this$ = ecx

; 99   : 	void								SetTmpPreDestroy	(BOOL b)			{ Props.bPreDestroy = b;}

	mov	edx, DWORD PTR [ecx+164]
	mov	eax, DWORD PTR _b$[esp-4]
	shl	eax, 31					; 0000001fH
	and	edx, 2147483647				; 7fffffffH
	or	eax, edx
	mov	DWORD PTR [ecx+164], eax
	ret	4
?SetTmpPreDestroy@CObject@@QAEXH@Z ENDP			; CObject::SetTmpPreDestroy
_TEXT	ENDS
PUBLIC	?GetTmpPreDestroy@CObject@@QBEHXZ		; CObject::GetTmpPreDestroy
; Function compile flags: /Ogtpy
;	COMDAT ?GetTmpPreDestroy@CObject@@QBEHXZ
_TEXT	SEGMENT
?GetTmpPreDestroy@CObject@@QBEHXZ PROC			; CObject::GetTmpPreDestroy, COMDAT
; _this$ = ecx

; 98   : 	BOOL								GetTmpPreDestroy		()		const	{ return Props.bPreDestroy;	}

	mov	eax, DWORD PTR [ecx+164]
	shr	eax, 31					; 0000001fH
	ret	0
?GetTmpPreDestroy@CObject@@QBEHXZ ENDP			; CObject::GetTmpPreDestroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Ready@CObject@@UAEHXZ
_TEXT	SEGMENT
?Ready@CObject@@UAEHXZ PROC				; CObject::Ready, COMDAT
; _this$ = ecx

; 97   : 	virtual BOOL						Ready				()					{ return Props.net_Ready;	}

	mov	eax, DWORD PTR [ecx+164]
	shr	eax, 28					; 0000001cH
	and	eax, 1
	ret	0
?Ready@CObject@@UAEHXZ ENDP				; CObject::Ready
_TEXT	ENDS
PUBLIC	?setID@CObject@@QAEXG@Z				; CObject::setID
; Function compile flags: /Ogtpy
;	COMDAT ?setID@CObject@@QAEXG@Z
_TEXT	SEGMENT
__ID$ = 8						; size = 2
?setID@CObject@@QAEXG@Z PROC				; CObject::setID, COMDAT
; _this$ = ecx

; 96   : 	ICF void							setID				(u16 _ID)			{ Props.net_ID = _ID;		}

	mov	ax, WORD PTR __ID$[esp-4]
	mov	WORD PTR [ecx+164], ax
	ret	4
?setID@CObject@@QAEXG@Z ENDP				; CObject::setID
_TEXT	ENDS
PUBLIC	?ID@CObject@@QBEGXZ				; CObject::ID
; Function compile flags: /Ogtpy
;	COMDAT ?ID@CObject@@QBEGXZ
_TEXT	SEGMENT
?ID@CObject@@QBEGXZ PROC				; CObject::ID, COMDAT
; _this$ = ecx

; 95   : 	ICF u16								ID					()			const	{ return Props.net_ID;		}

	mov	ax, WORD PTR [ecx+164]
	ret	0
?ID@CObject@@QBEGXZ ENDP				; CObject::ID
_TEXT	ENDS
PUBLIC	?Remote@CObject@@QBEHXZ				; CObject::Remote
; Function compile flags: /Ogtpy
;	COMDAT ?Remote@CObject@@QBEHXZ
_TEXT	SEGMENT
?Remote@CObject@@QBEHXZ PROC				; CObject::Remote, COMDAT
; _this$ = ecx

; 94   : 	ICF BOOL							Remote				()			const	{ return !Props.net_Local;	}

	mov	eax, DWORD PTR [ecx+164]
	shr	eax, 27					; 0000001bH
	not	eax
	and	eax, 1
	ret	0
?Remote@CObject@@QBEHXZ ENDP				; CObject::Remote
_TEXT	ENDS
PUBLIC	?Local@CObject@@QBEHXZ				; CObject::Local
; Function compile flags: /Ogtpy
;	COMDAT ?Local@CObject@@QBEHXZ
_TEXT	SEGMENT
?Local@CObject@@QBEHXZ PROC				; CObject::Local, COMDAT
; _this$ = ecx

; 93   : 	ICF BOOL							Local				()			const	{ return Props.net_Local;	}

	mov	eax, DWORD PTR [ecx+164]
	shr	eax, 27					; 0000001bH
	and	eax, 1
	ret	0
?Local@CObject@@QBEHXZ ENDP				; CObject::Local
_TEXT	ENDS
PUBLIC	?AmICrow@CObject@@QBE_NXZ			; CObject::AmICrow
; Function compile flags: /Ogtpy
;	COMDAT ?AmICrow@CObject@@QBE_NXZ
_TEXT	SEGMENT
?AmICrow@CObject@@QBE_NXZ PROC				; CObject::AmICrow, COMDAT
; _this$ = ecx

; 90   : 	ICF	bool							AmICrow				() const			{ return !!Props.crow;		}

	mov	eax, DWORD PTR [ecx+164]
	shr	eax, 30					; 0000001eH
	and	eax, 1
	ret	0
?AmICrow@CObject@@QBE_NXZ ENDP				; CObject::AmICrow
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?AlwaysTheCrow@CObject@@UAEHXZ
_TEXT	SEGMENT
?AlwaysTheCrow@CObject@@UAEHXZ PROC			; CObject::AlwaysTheCrow, COMDAT
; _this$ = ecx

; 89   : 	virtual BOOL						AlwaysTheCrow		()					{ return FALSE;				}

	xor	eax, eax
	ret	0
?AlwaysTheCrow@CObject@@UAEHXZ ENDP			; CObject::AlwaysTheCrow
_TEXT	ENDS
PUBLIC	?IAmNotACrowAnyMore@CObject@@QAEXXZ		; CObject::IAmNotACrowAnyMore
; Function compile flags: /Ogtpy
;	COMDAT ?IAmNotACrowAnyMore@CObject@@QAEXXZ
_TEXT	SEGMENT
?IAmNotACrowAnyMore@CObject@@QAEXXZ PROC		; CObject::IAmNotACrowAnyMore, COMDAT
; _this$ = ecx

; 88   : 	ICF	void							IAmNotACrowAnyMore	()					{ Props.crow = false;		}

	and	DWORD PTR [ecx+164], -1073741825	; bfffffffH
	ret	0
?IAmNotACrowAnyMore@CObject@@QAEXXZ ENDP		; CObject::IAmNotACrowAnyMore
_TEXT	ENDS
PUBLIC	??4ICollidable@@QAEAAV0@ABV0@@Z			; ICollidable::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4ICollidable@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4ICollidable@@QAEAAV0@ABV0@@Z PROC			; ICollidable::operator=, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	ecx, DWORD PTR ___that$[esp-4]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	ret	4
??4ICollidable@@QAEAAV0@ABV0@@Z ENDP			; ICollidable::operator=
_TEXT	ENDS
PUBLIC	??0ICollidable@@QAE@ABV0@@Z			; ICollidable::ICollidable
; Function compile flags: /Ogtpy
;	COMDAT ??0ICollidable@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0ICollidable@@QAE@ABV0@@Z PROC			; ICollidable::ICollidable, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	ecx, DWORD PTR ___that$[esp-4]
	mov	DWORD PTR [eax], OFFSET ??_7ICollidable@@6B@
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	ret	4
??0ICollidable@@QAE@ABV0@@Z ENDP			; ICollidable::ICollidable
_TEXT	ENDS
PUBLIC	??4IRenderable@@QAEAAV0@ABV0@@Z			; IRenderable::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4IRenderable@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4IRenderable@@QAEAAV0@ABV0@@Z PROC			; IRenderable::operator=, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, DWORD PTR ___that$[esp]
	push	edi
	mov	eax, ecx
	add	esi, 4
	lea	edi, DWORD PTR [eax+4]
	mov	ecx, 19					; 00000013H
	rep movsd
	pop	edi
	pop	esi
	ret	4
??4IRenderable@@QAEAAV0@ABV0@@Z ENDP			; IRenderable::operator=
_TEXT	ENDS
PUBLIC	??0IRenderable@@QAE@ABV0@@Z			; IRenderable::IRenderable
; Function compile flags: /Ogtpy
;	COMDAT ??0IRenderable@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0IRenderable@@QAE@ABV0@@Z PROC			; IRenderable::IRenderable, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, DWORD PTR ___that$[esp]
	mov	eax, ecx
	push	edi
	add	esi, 4
	lea	edi, DWORD PTR [eax+4]
	mov	ecx, 19					; 00000013H
	mov	DWORD PTR [eax], OFFSET ??_7IRenderable@@6B@
	rep movsd
	pop	edi
	pop	esi
	ret	4
??0IRenderable@@QAE@ABV0@@Z ENDP			; IRenderable::IRenderable
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\irenderable.h
_TEXT	ENDS
;	COMDAT ?renderable_ShadowReceive@IRenderable@@UAEHXZ
_TEXT	SEGMENT
?renderable_ShadowReceive@IRenderable@@UAEHXZ PROC	; IRenderable::renderable_ShadowReceive, COMDAT
; _this$ = ecx

; 24   : 	virtual	BOOL						renderable_ShadowReceive	()	{ return FALSE; };

	xor	eax, eax
	ret	0
?renderable_ShadowReceive@IRenderable@@UAEHXZ ENDP	; IRenderable::renderable_ShadowReceive
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?renderable_ShadowGenerate@IRenderable@@UAEHXZ
_TEXT	SEGMENT
?renderable_ShadowGenerate@IRenderable@@UAEHXZ PROC	; IRenderable::renderable_ShadowGenerate, COMDAT
; _this$ = ecx

; 23   : 	virtual	BOOL						renderable_ShadowGenerate	()	{ return FALSE; };

	xor	eax, eax
	ret	0
?renderable_ShadowGenerate@IRenderable@@UAEHXZ ENDP	; IRenderable::renderable_ShadowGenerate
_TEXT	ENDS
PUBLIC	??4IRender_interface@@QAEAAV0@ABV0@@Z		; IRender_interface::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4IRender_interface@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4IRender_interface@@QAEAAV0@ABV0@@Z PROC		; IRender_interface::operator=, COMDAT
; _this$ = ecx
	mov	edx, DWORD PTR ___that$[esp-4]
	mov	eax, ecx
	mov	ecx, DWORD PTR [edx+4]
	push	esi
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [edx+8]
	push	edi
	mov	DWORD PTR [eax+8], ecx
	lea	esi, DWORD PTR [edx+12]
	lea	edi, DWORD PTR [eax+12]
	mov	ecx, 61					; 0000003dH
	rep movsd
	mov	edx, DWORD PTR [edx+256]
	pop	edi
	mov	DWORD PTR [eax+256], edx
	pop	esi
	ret	4
??4IRender_interface@@QAEAAV0@ABV0@@Z ENDP		; IRender_interface::operator=
_TEXT	ENDS
PUBLIC	??0IRender_interface@@QAE@ABV0@@Z		; IRender_interface::IRender_interface
; Function compile flags: /Ogtpy
;	COMDAT ??0IRender_interface@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0IRender_interface@@QAE@ABV0@@Z PROC			; IRender_interface::IRender_interface, COMDAT
; _this$ = ecx
	mov	edx, DWORD PTR ___that$[esp-4]
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7IRender_interface@@6B@
	mov	ecx, DWORD PTR [edx+4]
	push	esi
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [edx+8]
	push	edi
	mov	DWORD PTR [eax+8], ecx
	lea	esi, DWORD PTR [edx+12]
	lea	edi, DWORD PTR [eax+12]
	mov	ecx, 61					; 0000003dH
	rep movsd
	mov	edx, DWORD PTR [edx+256]
	pop	edi
	mov	DWORD PTR [eax+256], edx
	pop	esi
	ret	4
??0IRender_interface@@QAE@ABV0@@Z ENDP			; IRender_interface::IRender_interface
_TEXT	ENDS
PUBLIC	??0IRender_interface@@QAE@XZ			; IRender_interface::IRender_interface
; Function compile flags: /Ogtpy
;	COMDAT ??0IRender_interface@@QAE@XZ
_TEXT	SEGMENT
??0IRender_interface@@QAE@XZ PROC			; IRender_interface::IRender_interface, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7IRender_interface@@6B@
	ret	0
??0IRender_interface@@QAE@XZ ENDP			; IRender_interface::IRender_interface
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\render.h
_TEXT	ENDS
;	COMDAT ?glow_destroy@IRender_interface@@UAEXPAVIRender_Glow@@@Z
_TEXT	SEGMENT
_p_$ = 8						; size = 4
?glow_destroy@IRender_interface@@UAEXPAVIRender_Glow@@@Z PROC ; IRender_interface::glow_destroy, COMDAT
; _this$ = ecx

; 261  : 	virtual void					glow_destroy			(IRender_Glow* p_)							{ };

	ret	4
?glow_destroy@IRender_interface@@UAEXPAVIRender_Glow@@@Z ENDP ; IRender_interface::glow_destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?light_destroy@IRender_interface@@UAEXPAVIRender_Light@@@Z
_TEXT	SEGMENT
_p_$ = 8						; size = 4
?light_destroy@IRender_interface@@UAEXPAVIRender_Light@@@Z PROC ; IRender_interface::light_destroy, COMDAT
; _this$ = ecx

; 259  : 	virtual void					light_destroy			(IRender_Light* p_)							{ };

	ret	4
?light_destroy@IRender_interface@@UAEXPAVIRender_Light@@@Z ENDP ; IRender_interface::light_destroy
_TEXT	ENDS
PUBLIC	?set_Frustum@IRender_interface@@QAEXPAVCFrustum@@@Z ; IRender_interface::set_Frustum
; Function compile flags: /Ogtpy
;	COMDAT ?set_Frustum@IRender_interface@@QAEXPAVCFrustum@@@Z
_TEXT	SEGMENT
_O$ = 8							; size = 4
?set_Frustum@IRender_interface@@QAEXPAVCFrustum@@@Z PROC ; IRender_interface::set_Frustum, COMDAT
; _this$ = ecx

; 231  : 	IC		void					set_Frustum				(CFrustum*	O	)							{ VERIFY(O);	View = O;			}

	mov	eax, DWORD PTR _O$[esp-4]
	mov	DWORD PTR [ecx+256], eax
	ret	4
?set_Frustum@IRender_interface@@QAEXPAVCFrustum@@@Z ENDP ; IRender_interface::set_Frustum
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Statistics@IRender_interface@@UAEXPAVCGameFont@@@Z
_TEXT	SEGMENT
_F$ = 8							; size = 4
?Statistics@IRender_interface@@UAEXPAVCGameFont@@@Z PROC ; IRender_interface::Statistics, COMDAT
; _this$ = ecx

; 221  : 	virtual	void					Statistics				(CGameFont* F	)							{};

	ret	4
?Statistics@IRender_interface@@UAEXPAVCGameFont@@@Z ENDP ; IRender_interface::Statistics
_TEXT	ENDS
PUBLIC	?shader_option_skinning@IRender_interface@@QAEXH@Z ; IRender_interface::shader_option_skinning
; Function compile flags: /Ogtpy
;	COMDAT ?shader_option_skinning@IRender_interface@@QAEXH@Z
_TEXT	SEGMENT
_mode$ = 8						; size = 4
?shader_option_skinning@IRender_interface@@QAEXH@Z PROC	; IRender_interface::shader_option_skinning, COMDAT
; _this$ = ecx

; 206  : 			void					shader_option_skinning	(s32 mode)									{ m_skinning=mode;	}

	mov	eax, DWORD PTR _mode$[esp-4]
	mov	DWORD PTR [ecx+4], eax
	ret	4
?shader_option_skinning@IRender_interface@@QAEXH@Z ENDP	; IRender_interface::shader_option_skinning
_TEXT	ENDS
PUBLIC	??4IRender_Target@@QAEAAV0@ABV0@@Z		; IRender_Target::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4IRender_Target@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4IRender_Target@@QAEAAV0@ABV0@@Z PROC			; IRender_Target::operator=, COMDAT
; _this$ = ecx
	mov	eax, ecx
	ret	4
??4IRender_Target@@QAEAAV0@ABV0@@Z ENDP			; IRender_Target::operator=
_TEXT	ENDS
PUBLIC	??0IRender_Target@@QAE@ABV0@@Z			; IRender_Target::IRender_Target
; Function compile flags: /Ogtpy
;	COMDAT ??0IRender_Target@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0IRender_Target@@QAE@ABV0@@Z PROC			; IRender_Target::IRender_Target, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7IRender_Target@@6B@
	ret	4
??0IRender_Target@@QAE@ABV0@@Z ENDP			; IRender_Target::IRender_Target
_TEXT	ENDS
PUBLIC	??0IRender_Target@@QAE@XZ			; IRender_Target::IRender_Target
; Function compile flags: /Ogtpy
;	COMDAT ??0IRender_Target@@QAE@XZ
_TEXT	SEGMENT
??0IRender_Target@@QAE@XZ PROC				; IRender_Target::IRender_Target, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7IRender_Target@@6B@
	ret	0
??0IRender_Target@@QAE@XZ ENDP				; IRender_Target::IRender_Target
_TEXT	ENDS
PUBLIC	??1IRender_Target@@UAE@XZ			; IRender_Target::~IRender_Target
; Function compile flags: /Ogtpy
;	COMDAT ??1IRender_Target@@UAE@XZ
_TEXT	SEGMENT
??1IRender_Target@@UAE@XZ PROC				; IRender_Target::~IRender_Target, COMDAT
; _this$ = ecx

; 151  : 	virtual ~IRender_Target()		{};

	mov	DWORD PTR [ecx], OFFSET ??_7IRender_Target@@6B@
	ret	0
??1IRender_Target@@UAE@XZ ENDP				; IRender_Target::~IRender_Target
_TEXT	ENDS
PUBLIC	??4IRender_Sector@@QAEAAV0@ABV0@@Z		; IRender_Sector::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4IRender_Sector@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4IRender_Sector@@QAEAAV0@ABV0@@Z PROC			; IRender_Sector::operator=, COMDAT
; _this$ = ecx
	mov	eax, ecx
	ret	4
??4IRender_Sector@@QAEAAV0@ABV0@@Z ENDP			; IRender_Sector::operator=
_TEXT	ENDS
PUBLIC	??0IRender_Sector@@QAE@ABV0@@Z			; IRender_Sector::IRender_Sector
; Function compile flags: /Ogtpy
;	COMDAT ??0IRender_Sector@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0IRender_Sector@@QAE@ABV0@@Z PROC			; IRender_Sector::IRender_Sector, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7IRender_Sector@@6B@
	ret	4
??0IRender_Sector@@QAE@ABV0@@Z ENDP			; IRender_Sector::IRender_Sector
_TEXT	ENDS
PUBLIC	??0IRender_Sector@@QAE@XZ			; IRender_Sector::IRender_Sector
; Function compile flags: /Ogtpy
;	COMDAT ??0IRender_Sector@@QAE@XZ
_TEXT	SEGMENT
??0IRender_Sector@@QAE@XZ PROC				; IRender_Sector::IRender_Sector, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7IRender_Sector@@6B@
	ret	0
??0IRender_Sector@@QAE@XZ ENDP				; IRender_Sector::IRender_Sector
_TEXT	ENDS
PUBLIC	??1IRender_Sector@@UAE@XZ			; IRender_Sector::~IRender_Sector
; Function compile flags: /Ogtpy
;	COMDAT ??1IRender_Sector@@UAE@XZ
_TEXT	SEGMENT
??1IRender_Sector@@UAE@XZ PROC				; IRender_Sector::~IRender_Sector, COMDAT
; _this$ = ecx

; 128  : 	virtual ~IRender_Sector()			{};

	mov	DWORD PTR [ecx], OFFSET ??_7IRender_Sector@@6B@
	ret	0
??1IRender_Sector@@UAE@XZ ENDP				; IRender_Sector::~IRender_Sector
_TEXT	ENDS
PUBLIC	??4IRender_Portal@@QAEAAV0@ABV0@@Z		; IRender_Portal::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4IRender_Portal@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4IRender_Portal@@QAEAAV0@ABV0@@Z PROC			; IRender_Portal::operator=, COMDAT
; _this$ = ecx
	mov	eax, ecx
	ret	4
??4IRender_Portal@@QAEAAV0@ABV0@@Z ENDP			; IRender_Portal::operator=
_TEXT	ENDS
PUBLIC	??0IRender_Portal@@QAE@ABV0@@Z			; IRender_Portal::IRender_Portal
; Function compile flags: /Ogtpy
;	COMDAT ??0IRender_Portal@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0IRender_Portal@@QAE@ABV0@@Z PROC			; IRender_Portal::IRender_Portal, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7IRender_Portal@@6B@
	ret	4
??0IRender_Portal@@QAE@ABV0@@Z ENDP			; IRender_Portal::IRender_Portal
_TEXT	ENDS
PUBLIC	??0IRender_Portal@@QAE@XZ			; IRender_Portal::IRender_Portal
; Function compile flags: /Ogtpy
;	COMDAT ??0IRender_Portal@@QAE@XZ
_TEXT	SEGMENT
??0IRender_Portal@@QAE@XZ PROC				; IRender_Portal::IRender_Portal, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7IRender_Portal@@6B@
	ret	0
??0IRender_Portal@@QAE@XZ ENDP				; IRender_Portal::IRender_Portal
_TEXT	ENDS
PUBLIC	??1IRender_Portal@@UAE@XZ			; IRender_Portal::~IRender_Portal
; Function compile flags: /Ogtpy
;	COMDAT ??1IRender_Portal@@UAE@XZ
_TEXT	SEGMENT
??1IRender_Portal@@UAE@XZ PROC				; IRender_Portal::~IRender_Portal, COMDAT
; _this$ = ecx

; 121  : 	virtual ~IRender_Portal()			{};

	mov	DWORD PTR [ecx], OFFSET ??_7IRender_Portal@@6B@
	ret	0
??1IRender_Portal@@UAE@XZ ENDP				; IRender_Portal::~IRender_Portal
_TEXT	ENDS
PUBLIC	??4IRender_ObjectSpecific@@QAEAAV0@ABV0@@Z	; IRender_ObjectSpecific::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4IRender_ObjectSpecific@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4IRender_ObjectSpecific@@QAEAAV0@ABV0@@Z PROC		; IRender_ObjectSpecific::operator=, COMDAT
; _this$ = ecx
	mov	eax, ecx
	ret	4
??4IRender_ObjectSpecific@@QAEAAV0@ABV0@@Z ENDP		; IRender_ObjectSpecific::operator=
_TEXT	ENDS
PUBLIC	??0IRender_ObjectSpecific@@QAE@ABV0@@Z		; IRender_ObjectSpecific::IRender_ObjectSpecific
; Function compile flags: /Ogtpy
;	COMDAT ??0IRender_ObjectSpecific@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0IRender_ObjectSpecific@@QAE@ABV0@@Z PROC		; IRender_ObjectSpecific::IRender_ObjectSpecific, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7IRender_ObjectSpecific@@6B@
	ret	4
??0IRender_ObjectSpecific@@QAE@ABV0@@Z ENDP		; IRender_ObjectSpecific::IRender_ObjectSpecific
_TEXT	ENDS
PUBLIC	??0IRender_ObjectSpecific@@QAE@XZ		; IRender_ObjectSpecific::IRender_ObjectSpecific
; Function compile flags: /Ogtpy
;	COMDAT ??0IRender_ObjectSpecific@@QAE@XZ
_TEXT	SEGMENT
??0IRender_ObjectSpecific@@QAE@XZ PROC			; IRender_ObjectSpecific::IRender_ObjectSpecific, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7IRender_ObjectSpecific@@6B@
	ret	0
??0IRender_ObjectSpecific@@QAE@XZ ENDP			; IRender_ObjectSpecific::IRender_ObjectSpecific
_TEXT	ENDS
PUBLIC	??1IRender_ObjectSpecific@@UAE@XZ		; IRender_ObjectSpecific::~IRender_ObjectSpecific
; Function compile flags: /Ogtpy
;	COMDAT ??1IRender_ObjectSpecific@@UAE@XZ
_TEXT	SEGMENT
??1IRender_ObjectSpecific@@UAE@XZ PROC			; IRender_ObjectSpecific::~IRender_ObjectSpecific, COMDAT
; _this$ = ecx

; 114  : 	virtual ~IRender_ObjectSpecific()	{};

	mov	DWORD PTR [ecx], OFFSET ??_7IRender_ObjectSpecific@@6B@
	ret	0
??1IRender_ObjectSpecific@@UAE@XZ ENDP			; IRender_ObjectSpecific::~IRender_ObjectSpecific
_TEXT	ENDS
PUBLIC	??4resptrcode_glow@@QAEAAU0@ABU0@@Z		; resptrcode_glow::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4resptrcode_glow@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4resptrcode_glow@@QAEAAU0@ABU0@@Z PROC		; resptrcode_glow::operator=, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	ecx, DWORD PTR ___that$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	ret	4
??4resptrcode_glow@@QAEAAU0@ABU0@@Z ENDP		; resptrcode_glow::operator=
_TEXT	ENDS
PUBLIC	??4?$resptr_base@VIRender_Glow@@@@QAEAAV0@ABV0@@Z ; resptr_base<IRender_Glow>::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4?$resptr_base@VIRender_Glow@@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4?$resptr_base@VIRender_Glow@@@@QAEAAV0@ABV0@@Z PROC	; resptr_base<IRender_Glow>::operator=, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	ecx, DWORD PTR ___that$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	ret	4
??4?$resptr_base@VIRender_Glow@@@@QAEAAV0@ABV0@@Z ENDP	; resptr_base<IRender_Glow>::operator=
_TEXT	ENDS
PUBLIC	??4IRender_Glow@@QAEAAV0@ABV0@@Z		; IRender_Glow::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4IRender_Glow@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4IRender_Glow@@QAEAAV0@ABV0@@Z PROC			; IRender_Glow::operator=, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	ecx, DWORD PTR ___that$[esp-4]
	test	ecx, ecx
	je	SHORT $LN3@operator@3
	lea	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax+4], ecx
	ret	4
$LN3@operator@3:
	xor	edx, edx
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax+4], ecx
	ret	4
??4IRender_Glow@@QAEAAV0@ABV0@@Z ENDP			; IRender_Glow::operator=
_TEXT	ENDS
PUBLIC	??0IRender_Glow@@QAE@ABV0@@Z			; IRender_Glow::IRender_Glow
; Function compile flags: /Ogtpy
;	COMDAT ??0IRender_Glow@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0IRender_Glow@@QAE@ABV0@@Z PROC			; IRender_Glow::IRender_Glow, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	ecx, DWORD PTR ___that$[esp-4]
	test	ecx, ecx
	je	SHORT $LN3@IRender_Gl
	add	ecx, 4
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax], OFFSET ??_7IRender_Glow@@6B@
	ret	4
$LN3@IRender_Gl:
	xor	ecx, ecx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax], OFFSET ??_7IRender_Glow@@6B@
	ret	4
??0IRender_Glow@@QAE@ABV0@@Z ENDP			; IRender_Glow::IRender_Glow
_TEXT	ENDS
PUBLIC	??0IRender_Glow@@QAE@XZ				; IRender_Glow::IRender_Glow
; Function compile flags: /Ogtpy
;	COMDAT ??0IRender_Glow@@QAE@XZ
_TEXT	SEGMENT
??0IRender_Glow@@QAE@XZ PROC				; IRender_Glow::IRender_Glow, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax], OFFSET ??_7IRender_Glow@@6B@
	ret	0
??0IRender_Glow@@QAE@XZ ENDP				; IRender_Glow::IRender_Glow
_TEXT	ENDS
PUBLIC	??4resptrcode_light@@QAEAAU0@ABU0@@Z		; resptrcode_light::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4resptrcode_light@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4resptrcode_light@@QAEAAU0@ABU0@@Z PROC		; resptrcode_light::operator=, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	ecx, DWORD PTR ___that$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	ret	4
??4resptrcode_light@@QAEAAU0@ABU0@@Z ENDP		; resptrcode_light::operator=
_TEXT	ENDS
PUBLIC	??4?$resptr_base@VIRender_Light@@@@QAEAAV0@ABV0@@Z ; resptr_base<IRender_Light>::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4?$resptr_base@VIRender_Light@@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4?$resptr_base@VIRender_Light@@@@QAEAAV0@ABV0@@Z PROC	; resptr_base<IRender_Light>::operator=, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	ecx, DWORD PTR ___that$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	ret	4
??4?$resptr_base@VIRender_Light@@@@QAEAAV0@ABV0@@Z ENDP	; resptr_base<IRender_Light>::operator=
_TEXT	ENDS
PUBLIC	??4IRender_Light@@QAEAAV0@ABV0@@Z		; IRender_Light::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4IRender_Light@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4IRender_Light@@QAEAAV0@ABV0@@Z PROC			; IRender_Light::operator=, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	ecx, DWORD PTR ___that$[esp-4]
	test	ecx, ecx
	je	SHORT $LN3@operator@4
	lea	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax+4], ecx
	ret	4
$LN3@operator@4:
	xor	edx, edx
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax+4], ecx
	ret	4
??4IRender_Light@@QAEAAV0@ABV0@@Z ENDP			; IRender_Light::operator=
_TEXT	ENDS
PUBLIC	??0IRender_Light@@QAE@ABV0@@Z			; IRender_Light::IRender_Light
; Function compile flags: /Ogtpy
;	COMDAT ??0IRender_Light@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0IRender_Light@@QAE@ABV0@@Z PROC			; IRender_Light::IRender_Light, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	ecx, DWORD PTR ___that$[esp-4]
	test	ecx, ecx
	je	SHORT $LN3@IRender_Li
	add	ecx, 4
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax], OFFSET ??_7IRender_Light@@6B@
	ret	4
$LN3@IRender_Li:
	xor	ecx, ecx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax], OFFSET ??_7IRender_Light@@6B@
	ret	4
??0IRender_Light@@QAE@ABV0@@Z ENDP			; IRender_Light::IRender_Light
_TEXT	ENDS
PUBLIC	??0IRender_Light@@QAE@XZ			; IRender_Light::IRender_Light
; Function compile flags: /Ogtpy
;	COMDAT ??0IRender_Light@@QAE@XZ
_TEXT	SEGMENT
??0IRender_Light@@QAE@XZ PROC				; IRender_Light::IRender_Light, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax], OFFSET ??_7IRender_Light@@6B@
	ret	0
??0IRender_Light@@QAE@XZ ENDP				; IRender_Light::IRender_Light
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?set_indirect@IRender_Light@@UAEX_N@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?set_indirect@IRender_Light@@UAEX_N@Z PROC		; IRender_Light::set_indirect, COMDAT
; _this$ = ecx

; 58   : 	virtual void					set_indirect		(bool)								{};

	ret	4
?set_indirect@IRender_Light@@UAEX_N@Z ENDP		; IRender_Light::set_indirect
PUBLIC	?_set@?$resptr_base@VIRender_Glow@@@@QAEXPAVIRender_Glow@@@Z ; resptr_base<IRender_Glow>::_set
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xr_resource.h
;	COMDAT ?_set@?$resptr_base@VIRender_Glow@@@@QAEXPAVIRender_Glow@@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
?_set@?$resptr_base@VIRender_Glow@@@@QAEXPAVIRender_Glow@@@Z PROC ; resptr_base<IRender_Glow>::_set, COMDAT
; _this$ = ecx

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	push	esi
	push	edi
	mov	edi, DWORD PTR _rhs$[esp+4]
	test	edi, edi
	mov	esi, ecx
	je	SHORT $LN1@set@10
	add	DWORD PTR [edi+4], 1
$LN1@set@10:
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN15@set@10
	add	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN15@set@10
	test	eax, eax
	je	SHORT $LN15@set@10
	push	ebx
	push	eax
	call	___RTCastToVoid
	mov	ecx, DWORD PTR [esi]
	mov	ebx, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+32]
	add	esp, 4
	push	0
	call	edx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	ebx
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
	pop	ebx
$LN15@set@10:
	mov	DWORD PTR [esi], edi
	pop	edi
	pop	esi
	ret	4
?_set@?$resptr_base@VIRender_Glow@@@@QAEXPAVIRender_Glow@@@Z ENDP ; resptr_base<IRender_Glow>::_set
_TEXT	ENDS
PUBLIC	?_set@?$resptr_base@VIRender_Light@@@@QAEXPAVIRender_Light@@@Z ; resptr_base<IRender_Light>::_set
; Function compile flags: /Ogtpy
;	COMDAT ?_set@?$resptr_base@VIRender_Light@@@@QAEXPAVIRender_Light@@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
?_set@?$resptr_base@VIRender_Light@@@@QAEXPAVIRender_Light@@@Z PROC ; resptr_base<IRender_Light>::_set, COMDAT
; _this$ = ecx

; 46   : 	ICF		void		_set	(T * rhs) 							{	if (0!=rhs) rhs->dwReference++;	_dec(); p_ = rhs;											}

	push	esi
	push	edi
	mov	edi, DWORD PTR _rhs$[esp+4]
	test	edi, edi
	mov	esi, ecx
	je	SHORT $LN1@set@11
	add	DWORD PTR [edi+4], 1
$LN1@set@11:
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN15@set@11
	add	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN15@set@11
	test	eax, eax
	je	SHORT $LN15@set@11
	push	ebx
	push	eax
	call	___RTCastToVoid
	mov	ecx, DWORD PTR [esi]
	mov	ebx, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+76]
	add	esp, 4
	push	0
	call	edx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	ebx
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
	pop	ebx
$LN15@set@11:
	mov	DWORD PTR [esi], edi
	pop	edi
	pop	esi
	ret	4
?_set@?$resptr_base@VIRender_Light@@@@QAEXPAVIRender_Light@@@Z ENDP ; resptr_base<IRender_Light>::_set
_TEXT	ENDS
PUBLIC	?cNameSect_str@CObject@@QBEPBDXZ		; CObject::cNameSect_str
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_object.h
;	COMDAT ?cNameSect_str@CObject@@QBEPBDXZ
_TEXT	SEGMENT
?cNameSect_str@CObject@@QBEPBDXZ PROC			; CObject::cNameSect_str, COMDAT
; _this$ = ecx

; 144  : 	ICF LPCSTR							cNameSect_str		()			const	{ return NameSection.c_str();		}

	mov	eax, DWORD PTR [ecx+172]
	test	eax, eax
	je	SHORT $LN5@cNameSect_
	add	eax, 16					; 00000010H
	ret	0
$LN5@cNameSect_:
	xor	eax, eax
	ret	0
?cNameSect_str@CObject@@QBEPBDXZ ENDP			; CObject::cNameSect_str
_TEXT	ENDS
PUBLIC	?Sector@CObject@@QAEPAVIRender_Sector@@XZ	; CObject::Sector
; Function compile flags: /Ogtpy
;	COMDAT ?Sector@CObject@@QAEPAVIRender_Sector@@XZ
_TEXT	SEGMENT
?Sector@CObject@@QAEPAVIRender_Sector@@XZ PROC		; CObject::Sector, COMDAT
; _this$ = ecx

; 126  : 	IC IRender_Sector*					Sector				()					{ return H_Root()->spatial.sector;	}

	mov	eax, DWORD PTR [ecx+180]
	test	eax, eax
	je	SHORT $LN5@Sector
	mov	ecx, eax
	call	?H_Root@CObject@@QAEPAV1@XZ		; CObject::H_Root
	mov	eax, DWORD PTR [eax+60]
	ret	0
$LN5@Sector:
	mov	eax, DWORD PTR [ecx+60]
	ret	0
?Sector@CObject@@QAEPAVIRender_Sector@@XZ ENDP		; CObject::Sector
_TEXT	ENDS
PUBLIC	?H_Root@CObject@@QBEPBV1@XZ			; CObject::H_Root
; Function compile flags: /Ogtpy
;	COMDAT ?H_Root@CObject@@QBEPBV1@XZ
_TEXT	SEGMENT
?H_Root@CObject@@QBEPBV1@XZ PROC			; CObject::H_Root, COMDAT
; _this$ = ecx

; 107  : 	const CObject*						H_Root				()			const	{ return Parent?Parent->H_Root():this;	}

	mov	eax, DWORD PTR [ecx+180]
	test	eax, eax
	je	SHORT $LN3@H_Root@2
	mov	ecx, DWORD PTR [eax+180]
	test	ecx, ecx
	je	SHORT $LN4@H_Root@2
	jmp	?H_Root@CObject@@QAEPAV1@XZ		; CObject::H_Root
$LN3@H_Root@2:
	mov	eax, ecx
$LN4@H_Root@2:
	ret	0
?H_Root@CObject@@QBEPBV1@XZ ENDP			; CObject::H_Root
_TEXT	ENDS
PUBLIC	??_GICollidable@@UAEPAXI@Z			; ICollidable::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GICollidable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GICollidable@@UAEPAXI@Z PROC				; ICollidable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebx
	mov	ebx, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7ICollidable@@6B@
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@scalar@10
	push	edi
	push	eax
	call	___RTCastToVoid
	mov	ecx, DWORD PTR [esi+4]
	mov	edi, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	add	esp, 4
	push	0
	call	edx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	ebx
	mov	DWORD PTR [esi+4], 0
	pop	edi
$LN6@scalar@10:
	test	BYTE PTR ___flags$[esp+4], 1
	je	SHORT $LN16@scalar@10
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	ebx
$LN16@scalar@10:
	mov	eax, esi
	pop	esi
	pop	ebx
	ret	4
??_GICollidable@@UAEPAXI@Z ENDP				; ICollidable::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GIRenderable@@UAEPAXI@Z			; IRenderable::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GIRenderable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GIRenderable@@UAEPAXI@Z PROC				; IRenderable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	push	ebx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IRenderable@@6B@
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+156]
	push	edi
	push	0
	lea	ebx, DWORD PTR [esi+68]
	push	ebx
	call	eax
	cmp	DWORD PTR [esi+72], 0
	lea	edi, DWORD PTR [esi+72]
	je	SHORT $LN4@scalar@11
	mov	ecx, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+120]
	push	edi
	call	eax
$LN4@scalar@11:
	test	BYTE PTR ___flags$[esp+8], 1
	mov	DWORD PTR [ebx], 0
	mov	DWORD PTR [edi], 0
	je	SHORT $LN15@scalar@11
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN15@scalar@11:
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	ret	4
??_GIRenderable@@UAEPAXI@Z ENDP				; IRenderable::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GIRender_interface@@UAEPAXI@Z		; IRender_interface::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GIRender_interface@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GIRender_interface@@UAEPAXI@Z PROC			; IRender_interface::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IRender_interface@@6B@
	je	SHORT $LN11@scalar@12
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN11@scalar@12:
	mov	eax, esi
	pop	esi
	ret	4
??_GIRender_interface@@UAEPAXI@Z ENDP			; IRender_interface::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GIRender_Target@@UAEPAXI@Z			; IRender_Target::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GIRender_Target@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GIRender_Target@@UAEPAXI@Z PROC			; IRender_Target::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IRender_Target@@6B@
	je	SHORT $LN11@scalar@13
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN11@scalar@13:
	mov	eax, esi
	pop	esi
	ret	4
??_GIRender_Target@@UAEPAXI@Z ENDP			; IRender_Target::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GIRender_Sector@@UAEPAXI@Z			; IRender_Sector::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GIRender_Sector@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GIRender_Sector@@UAEPAXI@Z PROC			; IRender_Sector::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IRender_Sector@@6B@
	je	SHORT $LN11@scalar@14
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN11@scalar@14:
	mov	eax, esi
	pop	esi
	ret	4
??_GIRender_Sector@@UAEPAXI@Z ENDP			; IRender_Sector::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GIRender_Portal@@UAEPAXI@Z			; IRender_Portal::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GIRender_Portal@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GIRender_Portal@@UAEPAXI@Z PROC			; IRender_Portal::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IRender_Portal@@6B@
	je	SHORT $LN11@scalar@15
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN11@scalar@15:
	mov	eax, esi
	pop	esi
	ret	4
??_GIRender_Portal@@UAEPAXI@Z ENDP			; IRender_Portal::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GIRender_ObjectSpecific@@UAEPAXI@Z		; IRender_ObjectSpecific::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GIRender_ObjectSpecific@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GIRender_ObjectSpecific@@UAEPAXI@Z PROC		; IRender_ObjectSpecific::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IRender_ObjectSpecific@@6B@
	je	SHORT $LN11@scalar@16
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN11@scalar@16:
	mov	eax, esi
	pop	esi
	ret	4
??_GIRender_ObjectSpecific@@UAEPAXI@Z ENDP		; IRender_ObjectSpecific::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?destroy@resptrcode_glow@@QAEXXZ		; resptrcode_glow::destroy
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\render.h
;	COMDAT ?destroy@resptrcode_glow@@QAEXXZ
_TEXT	SEGMENT
?destroy@resptrcode_glow@@QAEXXZ PROC			; resptrcode_glow::destroy, COMDAT
; _this$ = ecx

; 93   : 	void				destroy			()					{ _set(NULL);					}

	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN17@destroy@3
	add	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN17@destroy@3
	test	eax, eax
	je	SHORT $LN17@destroy@3
	push	edi
	push	eax
	call	___RTCastToVoid
	mov	ecx, DWORD PTR [esi]
	mov	edi, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+32]
	add	esp, 4
	push	0
	call	edx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
	pop	edi
$LN17@destroy@3:
	mov	DWORD PTR [esi], 0
	pop	esi
	ret	0
?destroy@resptrcode_glow@@QAEXXZ ENDP			; resptrcode_glow::destroy
_TEXT	ENDS
PUBLIC	??_GIRender_Glow@@UAEPAXI@Z			; IRender_Glow::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GIRender_Glow@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GIRender_Glow@@UAEPAXI@Z PROC			; IRender_Glow::`scalar deleting destructor', COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IRender_Glow@@6B@
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+136]
	push	esi
	call	eax
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN11@scalar@17
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN11@scalar@17:
	mov	eax, esi
	pop	esi
	ret	4
??_GIRender_Glow@@UAEPAXI@Z ENDP			; IRender_Glow::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?destroy@resptrcode_light@@QAEXXZ		; resptrcode_light::destroy
; Function compile flags: /Ogtpy
;	COMDAT ?destroy@resptrcode_light@@QAEXXZ
_TEXT	SEGMENT
?destroy@resptrcode_light@@QAEXXZ PROC			; resptrcode_light::destroy, COMDAT
; _this$ = ecx

; 73   : 	void				destroy			()				{ _set(NULL);						}

	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN17@destroy@4
	add	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN17@destroy@4
	test	eax, eax
	je	SHORT $LN17@destroy@4
	push	edi
	push	eax
	call	___RTCastToVoid
	mov	ecx, DWORD PTR [esi]
	mov	edi, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+76]
	add	esp, 4
	push	0
	call	edx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
	pop	edi
$LN17@destroy@4:
	mov	DWORD PTR [esi], 0
	pop	esi
	ret	0
?destroy@resptrcode_light@@QAEXXZ ENDP			; resptrcode_light::destroy
_TEXT	ENDS
PUBLIC	??_GIRender_Light@@UAEPAXI@Z			; IRender_Light::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GIRender_Light@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GIRender_Light@@UAEPAXI@Z PROC			; IRender_Light::`scalar deleting destructor', COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7IRender_Light@@6B@
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+128]
	push	esi
	call	eax
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN11@scalar@18
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN11@scalar@18:
	mov	eax, esi
	pop	esi
	ret	4
??_GIRender_Light@@UAEPAXI@Z ENDP			; IRender_Light::`scalar deleting destructor'
PUBLIC	?_set@?$resptr_base@VIRender_Glow@@@@QAEXABV1@@Z ; resptr_base<IRender_Glow>::_set
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xr_resource.h
;	COMDAT ?_set@?$resptr_base@VIRender_Glow@@@@QAEXABV1@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
?_set@?$resptr_base@VIRender_Glow@@@@QAEXABV1@@Z PROC	; resptr_base<IRender_Glow>::_set, COMDAT
; _this$ = ecx

; 47   : 	ICF		void		_set	(resptr_base<T> const & rhs)		{	T* prhs = rhs._get(); _set(prhs);															}

	mov	eax, DWORD PTR _rhs$[esp-4]
	push	esi
	push	edi
	mov	edi, DWORD PTR [eax]
	test	edi, edi
	mov	esi, ecx
	je	SHORT $LN5@set@16
	add	DWORD PTR [edi+4], 1
$LN5@set@16:
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN19@set@16
	add	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN19@set@16
	test	eax, eax
	je	SHORT $LN19@set@16
	push	ebx
	push	eax
	call	___RTCastToVoid
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx]
	add	esp, 4
	mov	ebx, eax
	mov	eax, DWORD PTR [edx+32]
	push	0
	call	eax
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	ebx
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
	pop	ebx
$LN19@set@16:
	mov	DWORD PTR [esi], edi
	pop	edi
	pop	esi
	ret	4
?_set@?$resptr_base@VIRender_Glow@@@@QAEXABV1@@Z ENDP	; resptr_base<IRender_Glow>::_set
_TEXT	ENDS
PUBLIC	?_set@?$resptr_base@VIRender_Light@@@@QAEXABV1@@Z ; resptr_base<IRender_Light>::_set
; Function compile flags: /Ogtpy
;	COMDAT ?_set@?$resptr_base@VIRender_Light@@@@QAEXABV1@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
?_set@?$resptr_base@VIRender_Light@@@@QAEXABV1@@Z PROC	; resptr_base<IRender_Light>::_set, COMDAT
; _this$ = ecx

; 47   : 	ICF		void		_set	(resptr_base<T> const & rhs)		{	T* prhs = rhs._get(); _set(prhs);															}

	mov	eax, DWORD PTR _rhs$[esp-4]
	push	esi
	push	edi
	mov	edi, DWORD PTR [eax]
	test	edi, edi
	mov	esi, ecx
	je	SHORT $LN5@set@17
	add	DWORD PTR [edi+4], 1
$LN5@set@17:
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN19@set@17
	add	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN19@set@17
	test	eax, eax
	je	SHORT $LN19@set@17
	push	ebx
	push	eax
	call	___RTCastToVoid
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx]
	add	esp, 4
	mov	ebx, eax
	mov	eax, DWORD PTR [edx+76]
	push	0
	call	eax
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	ebx
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
	pop	ebx
$LN19@set@17:
	mov	DWORD PTR [esi], edi
	pop	edi
	pop	esi
	ret	4
?_set@?$resptr_base@VIRender_Light@@@@QAEXABV1@@Z ENDP	; resptr_base<IRender_Light>::_set
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_EICollidable@@UAEPAXI@Z
_TEXT	SEGMENT
tv162 = -4						; size = 4
___flags$ = 8						; size = 4
??_EICollidable@@UAEPAXI@Z PROC				; ICollidable::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ecx
	test	BYTE PTR ___flags$[esp], 2
	push	ebp
	push	esi
	push	edi
	mov	esi, ecx
	je	SHORT $LN3@vector@47
	mov	ebp, DWORD PTR [esi-4]
	lea	edi, DWORD PTR [esi-4]
	lea	esi, DWORD PTR [esi+ebp*8]
	sub	ebp, 1
	mov	DWORD PTR tv162[esp+16], edi
	js	SHORT $LN6@vector@47
	npad	1
$LL7@vector@47:
	sub	esi, 8
	mov	DWORD PTR [esi], OFFSET ??_7ICollidable@@6B@
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN12@vector@47
	push	eax
	call	___RTCastToVoid
	mov	ecx, DWORD PTR [esi+4]
	mov	edi, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	add	esp, 4
	push	0
	call	edx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	edi, DWORD PTR tv162[esp+16]
	mov	DWORD PTR [esi+4], 0
$LN12@vector@47:
	sub	ebp, 1
	jns	SHORT $LL7@vector@47
$LN6@vector@47:
	test	BYTE PTR ___flags$[esp+12], 1
	je	SHORT $LN19@vector@47
	test	edi, edi
	je	SHORT $LN19@vector@47
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN19@vector@47:
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ecx
	ret	4
$LN3@vector@47:
	mov	ebp, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], OFFSET ??_7ICollidable@@6B@
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN24@vector@47
	push	eax
	call	___RTCastToVoid
	mov	ecx, DWORD PTR [esi+4]
	mov	edi, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	add	esp, 4
	push	0
	call	edx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	ebp
	mov	DWORD PTR [esi+4], 0
$LN24@vector@47:
	test	BYTE PTR ___flags$[esp+12], 1
	je	SHORT $LN31@vector@47
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	ebp
$LN31@vector@47:
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ecx
	ret	4
??_EICollidable@@UAEPAXI@Z ENDP				; ICollidable::`vector deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_EIRenderable@@UAEPAXI@Z
_TEXT	SEGMENT
tv194 = -4						; size = 4
___flags$ = 8						; size = 4
??_EIRenderable@@UAEPAXI@Z PROC				; IRenderable::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ecx
	test	BYTE PTR ___flags$[esp], 2
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	je	$LN3@vector@48
	mov	ebx, DWORD PTR [edi-4]
	push	ebp
	lea	ebp, DWORD PTR [edi-4]
	lea	esi, DWORD PTR [ebx+ebx*4]
	shl	esi, 4
	add	esi, edi
	sub	ebx, 1
	mov	DWORD PTR tv194[esp+20], ebp
	js	SHORT $LN34@vector@48
	npad	7
$LL7@vector@48:
	mov	eax, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	sub	esi, 80					; 00000050H
	mov	DWORD PTR [esi], OFFSET ??_7IRenderable@@6B@
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+156]
	push	0
	lea	ebp, DWORD PTR [esi+68]
	push	ebp
	call	eax
	cmp	DWORD PTR [esi+72], 0
	lea	edi, DWORD PTR [esi+72]
	je	SHORT $LN10@vector@48
	mov	ecx, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+120]
	push	edi
	call	eax
$LN10@vector@48:
	sub	ebx, 1
	mov	DWORD PTR [ebp], 0
	mov	DWORD PTR [edi], 0
	jns	SHORT $LL7@vector@48
	mov	ebp, DWORD PTR tv194[esp+20]
$LN34@vector@48:
	test	BYTE PTR ___flags$[esp+16], 1
	je	SHORT $LN18@vector@48
	test	ebp, ebp
	je	SHORT $LN18@vector@48
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	ebp
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN18@vector@48:
	mov	eax, ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	pop	ecx
	ret	4
$LN3@vector@48:
	mov	ecx, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	mov	DWORD PTR [edi], OFFSET ??_7IRenderable@@6B@
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+156]
	push	0
	lea	ebx, DWORD PTR [edi+68]
	push	ebx
	call	eax
	cmp	DWORD PTR [edi+72], 0
	lea	esi, DWORD PTR [edi+72]
	je	SHORT $LN21@vector@48
	mov	ecx, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+120]
	push	esi
	call	eax
$LN21@vector@48:
	test	BYTE PTR ___flags$[esp+12], 1
	mov	DWORD PTR [ebx], 0
	mov	DWORD PTR [esi], 0
	je	SHORT $LN29@vector@48
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN29@vector@48:
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
	pop	ecx
	ret	4
??_EIRenderable@@UAEPAXI@Z ENDP				; IRenderable::`vector deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_EIRender_interface@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_EIRender_interface@@UAEPAXI@Z PROC			; IRender_interface::`vector deleting destructor', COMDAT
; _this$ = ecx
	mov	dl, BYTE PTR ___flags$[esp-4]
	test	dl, 2
	push	esi
	mov	esi, ecx
	je	SHORT $LN3@vector@49
	mov	ecx, DWORD PTR [esi-4]
	push	edi
	lea	edi, DWORD PTR [esi-4]
	mov	eax, ecx
	imul	eax, 260				; 00000104H
	add	eax, esi
	sub	ecx, 1
	js	SHORT $LN6@vector@49
$LL7@vector@49:
	sub	eax, 260				; 00000104H
	sub	ecx, 1
	mov	DWORD PTR [eax], OFFSET ??_7IRender_interface@@6B@
	jns	SHORT $LL7@vector@49
$LN6@vector@49:
	test	dl, 1
	je	SHORT $LN14@vector@49
	test	edi, edi
	je	SHORT $LN14@vector@49
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN14@vector@49:
	mov	eax, edi
	pop	edi
	pop	esi
	ret	4
$LN3@vector@49:
	test	dl, 1
	mov	DWORD PTR [esi], OFFSET ??_7IRender_interface@@6B@
	je	SHORT $LN21@vector@49
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN21@vector@49:
	mov	eax, esi
	pop	esi
	ret	4
??_EIRender_interface@@UAEPAXI@Z ENDP			; IRender_interface::`vector deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_EIRender_Target@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_EIRender_Target@@UAEPAXI@Z PROC			; IRender_Target::`vector deleting destructor', COMDAT
; _this$ = ecx
	mov	dl, BYTE PTR ___flags$[esp-4]
	test	dl, 2
	push	esi
	mov	esi, ecx
	je	SHORT $LN3@vector@50
	mov	ecx, DWORD PTR [esi-4]
	push	edi
	lea	edi, DWORD PTR [esi-4]
	lea	eax, DWORD PTR [esi+ecx*4]
	sub	ecx, 1
	js	SHORT $LN6@vector@50
	npad	5
$LL7@vector@50:
	sub	eax, 4
	sub	ecx, 1
	mov	DWORD PTR [eax], OFFSET ??_7IRender_Target@@6B@
	jns	SHORT $LL7@vector@50
$LN6@vector@50:
	test	dl, 1
	je	SHORT $LN14@vector@50
	test	edi, edi
	je	SHORT $LN14@vector@50
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN14@vector@50:
	mov	eax, edi
	pop	edi
	pop	esi
	ret	4
$LN3@vector@50:
	test	dl, 1
	mov	DWORD PTR [esi], OFFSET ??_7IRender_Target@@6B@
	je	SHORT $LN21@vector@50
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN21@vector@50:
	mov	eax, esi
	pop	esi
	ret	4
??_EIRender_Target@@UAEPAXI@Z ENDP			; IRender_Target::`vector deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_EIRender_Sector@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_EIRender_Sector@@UAEPAXI@Z PROC			; IRender_Sector::`vector deleting destructor', COMDAT
; _this$ = ecx
	mov	dl, BYTE PTR ___flags$[esp-4]
	test	dl, 2
	push	esi
	mov	esi, ecx
	je	SHORT $LN3@vector@51
	mov	ecx, DWORD PTR [esi-4]
	push	edi
	lea	edi, DWORD PTR [esi-4]
	lea	eax, DWORD PTR [esi+ecx*4]
	sub	ecx, 1
	js	SHORT $LN6@vector@51
	npad	5
$LL7@vector@51:
	sub	eax, 4
	sub	ecx, 1
	mov	DWORD PTR [eax], OFFSET ??_7IRender_Sector@@6B@
	jns	SHORT $LL7@vector@51
$LN6@vector@51:
	test	dl, 1
	je	SHORT $LN14@vector@51
	test	edi, edi
	je	SHORT $LN14@vector@51
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN14@vector@51:
	mov	eax, edi
	pop	edi
	pop	esi
	ret	4
$LN3@vector@51:
	test	dl, 1
	mov	DWORD PTR [esi], OFFSET ??_7IRender_Sector@@6B@
	je	SHORT $LN21@vector@51
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN21@vector@51:
	mov	eax, esi
	pop	esi
	ret	4
??_EIRender_Sector@@UAEPAXI@Z ENDP			; IRender_Sector::`vector deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_EIRender_Portal@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_EIRender_Portal@@UAEPAXI@Z PROC			; IRender_Portal::`vector deleting destructor', COMDAT
; _this$ = ecx
	mov	dl, BYTE PTR ___flags$[esp-4]
	test	dl, 2
	push	esi
	mov	esi, ecx
	je	SHORT $LN3@vector@52
	mov	ecx, DWORD PTR [esi-4]
	push	edi
	lea	edi, DWORD PTR [esi-4]
	lea	eax, DWORD PTR [esi+ecx*4]
	sub	ecx, 1
	js	SHORT $LN6@vector@52
	npad	5
$LL7@vector@52:
	sub	eax, 4
	sub	ecx, 1
	mov	DWORD PTR [eax], OFFSET ??_7IRender_Portal@@6B@
	jns	SHORT $LL7@vector@52
$LN6@vector@52:
	test	dl, 1
	je	SHORT $LN14@vector@52
	test	edi, edi
	je	SHORT $LN14@vector@52
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN14@vector@52:
	mov	eax, edi
	pop	edi
	pop	esi
	ret	4
$LN3@vector@52:
	test	dl, 1
	mov	DWORD PTR [esi], OFFSET ??_7IRender_Portal@@6B@
	je	SHORT $LN21@vector@52
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN21@vector@52:
	mov	eax, esi
	pop	esi
	ret	4
??_EIRender_Portal@@UAEPAXI@Z ENDP			; IRender_Portal::`vector deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_EIRender_ObjectSpecific@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_EIRender_ObjectSpecific@@UAEPAXI@Z PROC		; IRender_ObjectSpecific::`vector deleting destructor', COMDAT
; _this$ = ecx
	mov	dl, BYTE PTR ___flags$[esp-4]
	test	dl, 2
	push	esi
	mov	esi, ecx
	je	SHORT $LN3@vector@53
	mov	ecx, DWORD PTR [esi-4]
	push	edi
	lea	edi, DWORD PTR [esi-4]
	lea	eax, DWORD PTR [esi+ecx*4]
	sub	ecx, 1
	js	SHORT $LN6@vector@53
	npad	5
$LL7@vector@53:
	sub	eax, 4
	sub	ecx, 1
	mov	DWORD PTR [eax], OFFSET ??_7IRender_ObjectSpecific@@6B@
	jns	SHORT $LL7@vector@53
$LN6@vector@53:
	test	dl, 1
	je	SHORT $LN14@vector@53
	test	edi, edi
	je	SHORT $LN14@vector@53
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN14@vector@53:
	mov	eax, edi
	pop	edi
	pop	esi
	ret	4
$LN3@vector@53:
	test	dl, 1
	mov	DWORD PTR [esi], OFFSET ??_7IRender_ObjectSpecific@@6B@
	je	SHORT $LN21@vector@53
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN21@vector@53:
	mov	eax, esi
	pop	esi
	ret	4
??_EIRender_ObjectSpecific@@UAEPAXI@Z ENDP		; IRender_ObjectSpecific::`vector deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_EIRender_Glow@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_EIRender_Glow@@UAEPAXI@Z PROC			; IRender_Glow::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebx
	mov	bl, BYTE PTR ___flags$[esp]
	test	bl, 2
	push	esi
	mov	esi, ecx
	je	SHORT $LN3@vector@54
	push	ebp
	lea	ebp, DWORD PTR [esi-4]
	push	edi
	mov	edi, DWORD PTR [ebp]
	lea	esi, DWORD PTR [esi+edi*8]
	sub	edi, 1
	js	SHORT $LN6@vector@54
	npad	3
$LL7@vector@54:
	mov	eax, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	sub	esi, 8
	mov	DWORD PTR [esi], OFFSET ??_7IRender_Glow@@6B@
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+136]
	push	esi
	call	eax
	sub	edi, 1
	jns	SHORT $LL7@vector@54
$LN6@vector@54:
	test	bl, 1
	je	SHORT $LN14@vector@54
	test	ebp, ebp
	je	SHORT $LN14@vector@54
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	ebp
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN14@vector@54:
	pop	edi
	mov	eax, ebp
	pop	ebp
	pop	esi
	pop	ebx
	ret	4
$LN3@vector@54:
	mov	ecx, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	mov	DWORD PTR [esi], OFFSET ??_7IRender_Glow@@6B@
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+136]
	push	esi
	call	eax
	test	bl, 1
	je	SHORT $LN21@vector@54
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN21@vector@54:
	mov	eax, esi
	pop	esi
	pop	ebx
	ret	4
??_EIRender_Glow@@UAEPAXI@Z ENDP			; IRender_Glow::`vector deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_EIRender_Light@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_EIRender_Light@@UAEPAXI@Z PROC			; IRender_Light::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebx
	mov	bl, BYTE PTR ___flags$[esp]
	test	bl, 2
	push	esi
	mov	esi, ecx
	je	SHORT $LN3@vector@55
	push	ebp
	lea	ebp, DWORD PTR [esi-4]
	push	edi
	mov	edi, DWORD PTR [ebp]
	lea	esi, DWORD PTR [esi+edi*8]
	sub	edi, 1
	js	SHORT $LN6@vector@55
	npad	3
$LL7@vector@55:
	mov	eax, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	sub	esi, 8
	mov	DWORD PTR [esi], OFFSET ??_7IRender_Light@@6B@
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+128]
	push	esi
	call	eax
	sub	edi, 1
	jns	SHORT $LL7@vector@55
$LN6@vector@55:
	test	bl, 1
	je	SHORT $LN14@vector@55
	test	ebp, ebp
	je	SHORT $LN14@vector@55
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	ebp
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN14@vector@55:
	pop	edi
	mov	eax, ebp
	pop	ebp
	pop	esi
	pop	ebx
	ret	4
$LN3@vector@55:
	mov	ecx, DWORD PTR __imp_?Render@@3PAVIRender_interface@@A
	mov	DWORD PTR [esi], OFFSET ??_7IRender_Light@@6B@
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+128]
	push	esi
	call	eax
	test	bl, 1
	je	SHORT $LN21@vector@55
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN21@vector@55:
	mov	eax, esi
	pop	esi
	pop	ebx
	ret	4
??_EIRender_Light@@UAEPAXI@Z ENDP			; IRender_Light::`vector deleting destructor'
PUBLIC	?shedule_register@ISheduled@@QAEXXZ		; ISheduled::shedule_register
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\isheduled.cpp
;	COMDAT ?shedule_register@ISheduled@@QAEXXZ
_TEXT	SEGMENT
?shedule_register@ISheduled@@QAEXXZ PROC		; ISheduled::shedule_register, COMDAT
; _this$ = ecx

; 33   : 	Engine.Sheduler.Register				(this);

	push	0
	push	ecx
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+64
	call	?Register@CSheduler@@QAEXPAVISheduled@@H@Z ; CSheduler::Register

; 34   : }

	ret	0
?shedule_register@ISheduled@@QAEXXZ ENDP		; ISheduled::shedule_register
_TEXT	ENDS
PUBLIC	??4CObject@@QAEAAV0@ABV0@@Z			; CObject::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4CObject@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CObject@@QAEAAV0@ABV0@@Z PROC			; CObject::operator=, COMDAT
; _this$ = ecx
	mov	edx, DWORD PTR ___that$[esp-4]
	mov	eax, ecx
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+12], ecx
	push	esi
	push	edi
	lea	esi, DWORD PTR [edx+20]
	lea	edi, DWORD PTR [eax+20]
	mov	ecx, 12					; 0000000cH
	rep movsd
	mov	ecx, DWORD PTR [edx+72]
	mov	DWORD PTR [eax+72], ecx
	lea	esi, DWORD PTR [edx+80]
	lea	edi, DWORD PTR [eax+80]
	mov	ecx, 19					; 00000013H
	rep movsd
	mov	ecx, DWORD PTR [edx+160]
	mov	DWORD PTR [eax+160], ecx
	mov	ecx, DWORD PTR [edx+164]
	mov	DWORD PTR [eax+164], ecx
	mov	esi, DWORD PTR [edx+168]
	xor	edi, edi
	cmp	esi, edi
	je	SHORT $LN23@operator@93
	add	DWORD PTR [esi], 1
$LN23@operator@93:
	mov	ecx, DWORD PTR [eax+168]
	cmp	ecx, edi
	je	SHORT $LN26@operator@93
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [eax+168]
	cmp	DWORD PTR [ecx], edi
	jne	SHORT $LN26@operator@93
	mov	DWORD PTR [eax+168], edi
$LN26@operator@93:
	mov	DWORD PTR [eax+168], esi
	mov	ecx, DWORD PTR [edx+172]
	cmp	ecx, edi
	je	SHORT $LN32@operator@93
	add	DWORD PTR [ecx], 1
$LN32@operator@93:
	mov	esi, DWORD PTR [eax+172]
	cmp	esi, edi
	je	SHORT $LN35@operator@93
	add	DWORD PTR [esi], -1
	mov	esi, DWORD PTR [eax+172]
	cmp	DWORD PTR [esi], edi
	jne	SHORT $LN35@operator@93
	mov	DWORD PTR [eax+172], edi
$LN35@operator@93:
	mov	DWORD PTR [eax+172], ecx
	mov	esi, DWORD PTR [edx+176]
	cmp	esi, edi
	je	SHORT $LN41@operator@93
	add	DWORD PTR [esi], 1
$LN41@operator@93:
	mov	ecx, DWORD PTR [eax+176]
	cmp	ecx, edi
	je	SHORT $LN44@operator@93
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [eax+176]
	cmp	DWORD PTR [ecx], edi
	jne	SHORT $LN44@operator@93
	mov	DWORD PTR [eax+176], edi
$LN44@operator@93:
	mov	DWORD PTR [eax+176], esi
	mov	ecx, DWORD PTR [edx+180]
	mov	DWORD PTR [eax+180], ecx
	lea	esi, DWORD PTR [edx+184]
	lea	edi, DWORD PTR [eax+184]
	mov	ecx, 17					; 00000011H
	rep movsd
	mov	ecx, DWORD PTR [edx+252]
	mov	DWORD PTR [eax+252], ecx
	mov	edx, DWORD PTR [edx+256]
	pop	edi
	mov	DWORD PTR [eax+256], edx
	pop	esi
	ret	4
??4CObject@@QAEAAV0@ABV0@@Z ENDP			; CObject::operator=
_TEXT	ENDS
PUBLIC	?cNameVisual@CObject@@QBE?AVshared_str@@XZ	; CObject::cNameVisual
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\xr_object.h
;	COMDAT ?cNameVisual@CObject@@QBE?AVshared_str@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?cNameVisual@CObject@@QBE?AVshared_str@@XZ PROC		; CObject::cNameVisual, COMDAT
; _this$ = ecx

; 146  : 	ICF shared_str						cNameVisual			()			const	{ return NameVisual;				}

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR [ecx+176]
	test	ecx, ecx
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax], ecx
	je	SHORT $LN5@cNameVisua@2
	add	DWORD PTR [ecx], 1
$LN5@cNameVisua@2:
	ret	4
?cNameVisual@CObject@@QBE?AVshared_str@@XZ ENDP		; CObject::cNameVisual
_TEXT	ENDS
PUBLIC	?cNameSect@CObject@@QBE?AVshared_str@@XZ	; CObject::cNameSect
; Function compile flags: /Ogtpy
;	COMDAT ?cNameSect@CObject@@QBE?AVshared_str@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?cNameSect@CObject@@QBE?AVshared_str@@XZ PROC		; CObject::cNameSect, COMDAT
; _this$ = ecx

; 143  : 	ICF shared_str						cNameSect			()			const	{ return NameSection;				}

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR [ecx+172]
	test	ecx, ecx
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax], ecx
	je	SHORT $LN5@cNameSect
	add	DWORD PTR [ecx], 1
$LN5@cNameSect:
	ret	4
?cNameSect@CObject@@QBE?AVshared_str@@XZ ENDP		; CObject::cNameSect
_TEXT	ENDS
PUBLIC	?cName@CObject@@QBE?AVshared_str@@XZ		; CObject::cName
; Function compile flags: /Ogtpy
;	COMDAT ?cName@CObject@@QBE?AVshared_str@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?cName@CObject@@QBE?AVshared_str@@XZ PROC		; CObject::cName, COMDAT
; _this$ = ecx

; 141  : 	ICF shared_str						cName				()			const	{ return NameObject;				}

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR [ecx+168]
	test	ecx, ecx
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax], ecx
	je	SHORT $LN5@cName
	add	DWORD PTR [ecx], 1
$LN5@cName:
	ret	4
?cName@CObject@@QBE?AVshared_str@@XZ ENDP		; CObject::cName
; Function compile flags: /Ogtpy
;	COMDAT ?shedule_Name@CObject@@UBE?AVshared_str@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?shedule_Name@CObject@@UBE?AVshared_str@@XZ PROC	; CObject::shedule_Name, COMDAT
; _this$ = ecx

; 148  : 	virtual	shared_str					shedule_Name		() const			{ return cName(); };

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR [ecx+100]
	test	ecx, ecx
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax], ecx
	je	SHORT $LN7@shedule_Na@3
	add	DWORD PTR [ecx], 1
$LN7@shedule_Na@3:
	ret	4
?shedule_Name@CObject@@UBE?AVshared_str@@XZ ENDP	; CObject::shedule_Name
PUBLIC	?shedule_unregister@ISheduled@@QAEXXZ		; ISheduled::shedule_unregister
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\isheduled.cpp
;	COMDAT ?shedule_unregister@ISheduled@@QAEXXZ
_TEXT	SEGMENT
?shedule_unregister@ISheduled@@QAEXXZ PROC		; ISheduled::shedule_unregister, COMDAT
; _this$ = ecx

; 38   : 	Engine.Sheduler.Unregister				(this);

	push	ecx
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+64
	call	?Unregister@CSheduler@@QAEXPAVISheduled@@@Z ; CSheduler::Unregister

; 39   : }

	ret	0
?shedule_unregister@ISheduled@@QAEXXZ ENDP		; ISheduled::shedule_unregister
_TEXT	ENDS
PUBLIC	??1ISheduled@@UAE@XZ				; ISheduled::~ISheduled
; Function compile flags: /Ogtpy
;	COMDAT ??1ISheduled@@UAE@XZ
_TEXT	SEGMENT
??1ISheduled@@UAE@XZ PROC				; ISheduled::~ISheduled, COMDAT
; _this$ = ecx

; 18   : {

	mov	DWORD PTR [ecx], OFFSET ??_7ISheduled@@6B@

; 19   : 	VERIFY2				(
; 20   : 		!Engine.Sheduler.Registered(this),
; 21   : 		make_string("0x%08x : %s",this,*shedule_Name())
; 22   : 	);
; 23   : 
; 24   : 	// sad, but true
; 25   : 	// we need this to become MASTER_GOLD
; 26   : #ifndef DEBUG
; 27   : 	Engine.Sheduler.Unregister				(this);

	push	ecx
	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+64
	call	?Unregister@CSheduler@@QAEXPAVISheduled@@@Z ; CSheduler::Unregister

; 28   : #endif // DEBUG
; 29   : }

	ret	0
??1ISheduled@@UAE@XZ ENDP				; ISheduled::~ISheduled
_TEXT	ENDS
PUBLIC	??0CObject@@QAE@ABV0@@Z				; CObject::CObject
; Function compile flags: /Ogtpy
;	COMDAT ??0CObject@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0CObject@@QAE@ABV0@@Z PROC				; CObject::CObject, COMDAT
; _this$ = ecx
	mov	edx, DWORD PTR ___that$[esp-4]
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7DLL_Pure@@6B@
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR __imp_??_7ISpatial@@6B@
	mov	DWORD PTR [eax+16], ecx
	push	esi
	push	edi
	lea	esi, DWORD PTR [edx+20]
	lea	edi, DWORD PTR [eax+20]
	mov	ecx, 12					; 0000000cH
	rep movsd
	mov	DWORD PTR [eax+68], OFFSET ??_7ISheduled@@6B@
	mov	ecx, DWORD PTR [edx+72]
	mov	DWORD PTR [eax+72], ecx
	mov	DWORD PTR [eax+76], OFFSET ??_7IRenderable@@6B@
	lea	esi, DWORD PTR [edx+80]
	lea	edi, DWORD PTR [eax+80]
	mov	ecx, 19					; 00000013H
	rep movsd
	mov	DWORD PTR [eax+156], OFFSET ??_7ICollidable@@6B@
	mov	ecx, DWORD PTR [edx+160]
	mov	DWORD PTR [eax+160], ecx
	mov	DWORD PTR [eax], OFFSET ??_7CObject@@6BDLL_Pure@@@
	mov	DWORD PTR [eax+16], OFFSET ??_7CObject@@6BISpatial@@@
	mov	DWORD PTR [eax+68], OFFSET ??_7CObject@@6BISheduled@@@
	mov	DWORD PTR [eax+76], OFFSET ??_7CObject@@6BIRenderable@@@
	mov	DWORD PTR [eax+156], OFFSET ??_7CObject@@6BICollidable@@@
	mov	ecx, DWORD PTR [edx+164]
	xor	edi, edi
	mov	DWORD PTR [eax+164], ecx
	mov	DWORD PTR [eax+168], edi
	mov	esi, DWORD PTR [edx+168]
	cmp	esi, edi
	je	SHORT $LN23@CObject
	add	DWORD PTR [esi], 1
$LN23@CObject:
	mov	ecx, DWORD PTR [eax+168]
	cmp	ecx, edi
	je	SHORT $LN26@CObject
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [eax+168]
	cmp	DWORD PTR [ecx], edi
	jne	SHORT $LN26@CObject
	mov	DWORD PTR [eax+168], edi
$LN26@CObject:
	mov	DWORD PTR [eax+168], esi
	mov	DWORD PTR [eax+172], edi
	mov	ecx, DWORD PTR [edx+172]
	cmp	ecx, edi
	je	SHORT $LN32@CObject
	add	DWORD PTR [ecx], 1
$LN32@CObject:
	mov	esi, DWORD PTR [eax+172]
	cmp	esi, edi
	je	SHORT $LN35@CObject
	add	DWORD PTR [esi], -1
	mov	esi, DWORD PTR [eax+172]
	cmp	DWORD PTR [esi], edi
	jne	SHORT $LN35@CObject
	mov	DWORD PTR [eax+172], edi
$LN35@CObject:
	mov	DWORD PTR [eax+172], ecx
	mov	DWORD PTR [eax+176], edi
	mov	esi, DWORD PTR [edx+176]
	cmp	esi, edi
	je	SHORT $LN41@CObject
	add	DWORD PTR [esi], 1
$LN41@CObject:
	mov	ecx, DWORD PTR [eax+176]
	cmp	ecx, edi
	je	SHORT $LN44@CObject
	add	DWORD PTR [ecx], -1
	mov	ecx, DWORD PTR [eax+176]
	cmp	DWORD PTR [ecx], edi
	jne	SHORT $LN44@CObject
	mov	DWORD PTR [eax+176], edi
$LN44@CObject:
	mov	DWORD PTR [eax+176], esi
	mov	ecx, DWORD PTR [edx+180]
	mov	DWORD PTR [eax+180], ecx
	lea	esi, DWORD PTR [edx+184]
	lea	edi, DWORD PTR [eax+184]
	mov	ecx, 17					; 00000011H
	rep movsd
	mov	ecx, DWORD PTR [edx+252]
	mov	DWORD PTR [eax+252], ecx
	mov	edx, DWORD PTR [edx+256]
	pop	edi
	mov	DWORD PTR [eax+256], edx
	pop	esi
	ret	4
??0CObject@@QAE@ABV0@@Z ENDP				; CObject::CObject
; Function compile flags: /Ogtpy
;	COMDAT ??_ECObject@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_ECObject@@UAEPAXI@Z PROC				; CObject::`vector deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 2
	push	ebp
	mov	ebp, ecx
	je	SHORT $LN3@vector@102
	push	ebx
	push	esi
	push	edi
	mov	edi, DWORD PTR [ebp-4]
	lea	ebx, DWORD PTR [ebp-4]
	mov	esi, edi
	imul	esi, 260				; 00000104H
	add	esi, ebp
	sub	edi, 1
	js	SHORT $LN6@vector@102
$LL7@vector@102:
	sub	esi, 260				; 00000104H
	mov	ecx, esi
	call	??1CObject@@UAE@XZ			; CObject::~CObject
	sub	edi, 1
	jns	SHORT $LL7@vector@102
$LN6@vector@102:
	test	BYTE PTR ___flags$[esp+12], 1
	je	SHORT $LN12@vector@102
	test	ebx, ebx
	je	SHORT $LN12@vector@102
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	ebx
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN12@vector@102:
	pop	edi
	pop	esi
	mov	eax, ebx
	pop	ebx
	pop	ebp
	ret	4
$LN3@vector@102:
	call	??1CObject@@UAE@XZ			; CObject::~CObject
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN17@vector@102
	test	ebp, ebp
	je	SHORT $LN17@vector@102
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	ebp
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN17@vector@102:
	mov	eax, ebp
	pop	ebp
	ret	4
??_ECObject@@UAEPAXI@Z ENDP				; CObject::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??_GCObject@@UAEPAXI@Z				; CObject::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCObject@@UAEPAXI@Z PROC				; CObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CObject@@UAE@XZ			; CObject::~CObject
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN10@scalar@92
	test	esi, esi
	je	SHORT $LN10@scalar@92
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN10@scalar@92:
	mov	eax, esi
	pop	esi
	ret	4
??_GCObject@@UAEPAXI@Z ENDP				; CObject::`scalar deleting destructor'
; Function compile flags: /Odtpy
;	COMDAT ??_ECObject@@WEE@AEPAXI@Z
_TEXT	SEGMENT
??_ECObject@@WEE@AEPAXI@Z PROC				; [thunk]:CObject::`vector deleting destructor', COMDAT
	sub	ecx, 68					; 00000044H
	jmp	??_ECObject@@UAEPAXI@Z
??_ECObject@@WEE@AEPAXI@Z ENDP				; [thunk]:CObject::`vector deleting destructor'
; Function compile flags: /Odtpy
_TEXT	ENDS
;	COMDAT ??_ECObject@@WJM@AEPAXI@Z
_TEXT	SEGMENT
??_ECObject@@WJM@AEPAXI@Z PROC				; [thunk]:CObject::`vector deleting destructor', COMDAT
	sub	ecx, 156				; 0000009cH
	jmp	??_ECObject@@UAEPAXI@Z
??_ECObject@@WJM@AEPAXI@Z ENDP				; [thunk]:CObject::`vector deleting destructor'
; Function compile flags: /Odtpy
_TEXT	ENDS
;	COMDAT ??_ECObject@@WBA@AEPAXI@Z
_TEXT	SEGMENT
??_ECObject@@WBA@AEPAXI@Z PROC				; [thunk]:CObject::`vector deleting destructor', COMDAT
	sub	ecx, 16					; 00000010H
	jmp	??_ECObject@@UAEPAXI@Z
??_ECObject@@WBA@AEPAXI@Z ENDP				; [thunk]:CObject::`vector deleting destructor'
; Function compile flags: /Odtpy
_TEXT	ENDS
;	COMDAT ??_ECObject@@WEM@AEPAXI@Z
_TEXT	SEGMENT
??_ECObject@@WEM@AEPAXI@Z PROC				; [thunk]:CObject::`vector deleting destructor', COMDAT
	sub	ecx, 76					; 0000004cH
	jmp	??_ECObject@@UAEPAXI@Z
??_ECObject@@WEM@AEPAXI@Z ENDP				; [thunk]:CObject::`vector deleting destructor'
END
