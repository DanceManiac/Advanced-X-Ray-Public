; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\CLEARSKY\sources\engine\xrEngine\EngineAPI.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	?begin@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@QAEPAURESULT@CDB@@XZ ; stlp_std::priv::_Impl_vector<CDB::RESULT,xalloc<CDB::RESULT> >::begin
PUBLIC	?end@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@QAEPAURESULT@CDB@@XZ ; stlp_std::priv::_Impl_vector<CDB::RESULT,xalloc<CDB::RESULT> >::end
PUBLIC	??$__copy_ptrs@PAURESULT@CDB@@PAU12@@priv@stlp_std@@YAPAURESULT@CDB@@PAU23@00ABU__true_type@1@@Z ; stlp_std::priv::__copy_ptrs<CDB::RESULT *,CDB::RESULT *>
PUBLIC	??$__destroy_range_aux@PAURESULT@CDB@@U12@@stlp_std@@YAXPAURESULT@CDB@@00ABU__true_type@0@@Z ; stlp_std::__destroy_range_aux<CDB::RESULT *,CDB::RESULT>
PUBLIC	??$__destroy_range@PAURESULT@CDB@@U12@@stlp_std@@YAXPAURESULT@CDB@@00@Z ; stlp_std::__destroy_range<CDB::RESULT *,CDB::RESULT>
PUBLIC	??$_Destroy_Range@PAURESULT@CDB@@@stlp_std@@YAXPAURESULT@CDB@@0@Z ; stlp_std::_Destroy_Range<CDB::RESULT *>
PUBLIC	?_M_erase@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@AAEPAURESULT@CDB@@PAU45@0ABU__false_type@3@@Z ; stlp_std::priv::_Impl_vector<CDB::RESULT,xalloc<CDB::RESULT> >::_M_erase
PUBLIC	?erase@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@QAEPAURESULT@CDB@@PAU45@0@Z ; stlp_std::priv::_Impl_vector<CDB::RESULT,xalloc<CDB::RESULT> >::erase
PUBLIC	?clear@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Impl_vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear
PUBLIC	?clear@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@stlp_std@@QAEXXZ ; stlp_std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear
PUBLIC	?clear_and_free@?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QAEXXZ ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear_and_free
PUBLIC	??$xr_free@$$CBD@@YAXAAPBD@Z			; xr_free<char const >
PUBLIC	??$xr_free@Uxr_token@@@@YAXAAPAUxr_token@@@Z	; xr_free<xr_token>
PUBLIC	?back@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAEAAPBXXZ ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::back
PUBLIC	?cv_ref@?$_VoidCastTraitsAux@PBXPBX@priv@stlp_std@@SAAAPBXAAPBX@Z ; stlp_std::priv::_VoidCastTraitsAux<void const *,void const *>::cv_ref
PUBLIC	?to_value_type_ref@?$_CastTraits@PBXPBD@priv@stlp_std@@SAAAPBDAAPBX@Z ; stlp_std::priv::_CastTraits<void const *,char const *>::to_value_type_ref
PUBLIC	?back@?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAEAAPBDXZ ; stlp_std::vector<char const *,xalloc<char const *> >::back
PUBLIC	??$xr_alloc@PBX@@YAPAPBXI@Z			; xr_alloc<void const *>
PUBLIC	?allocate@?$xalloc@PBX@@QBEPAPBXIPBX@Z		; xalloc<void const *>::allocate
PUBLIC	?allocate@?$_STLP_alloc_proxy@PAPBXPBXV?$xalloc@PBX@@@priv@stlp_std@@QAEPAPBXI@Z ; stlp_std::priv::_STLP_alloc_proxy<void const * *,void const *,xalloc<void const *> >::allocate
PUBLIC	?allocate@?$_STLP_alloc_proxy@PAPBXPBXV?$xalloc@PBX@@@priv@stlp_std@@AAEPAPBXIAAIABU__false_type@3@@Z ; stlp_std::priv::_STLP_alloc_proxy<void const * *,void const *,xalloc<void const *> >::allocate
PUBLIC	?allocate@?$_STLP_alloc_proxy@PAPBXPBXV?$xalloc@PBX@@@priv@stlp_std@@QAEPAPBXIAAI@Z ; stlp_std::priv::_STLP_alloc_proxy<void const * *,void const *,xalloc<void const *> >::allocate
PUBLIC	?_M_clear@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@AAEXXZ ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::_M_clear
PUBLIC	?_M_set@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@AAEXPAPBX00@Z ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::_M_set
PUBLIC	??$__fill_n@PAPBXIPBX@priv@stlp_std@@YAPAPBXPAPBXIABQBX@Z ; stlp_std::priv::__fill_n<void const * *,unsigned int,void const *>
PUBLIC	?_M_insert_overflow@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@AAEXPAPBXABQBXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::_M_insert_overflow
PUBLIC	??$_Copy_Construct@PBX@stlp_std@@YAXPAPBXABQBX@Z ; stlp_std::_Copy_Construct<void const *>
PUBLIC	?push_back@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAEXABQBX@Z ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::push_back
PUBLIC	?uncv_cref@?$_VoidCastTraitsAux@PBXPBX@priv@stlp_std@@SAABQBXABQBX@Z ; stlp_std::priv::_VoidCastTraitsAux<void const *,void const *>::uncv_cref
PUBLIC	?to_storage_type_cref@?$_CastTraits@PBXPBD@priv@stlp_std@@SAABQBXABQBD@Z ; stlp_std::priv::_CastTraits<void const *,char const *>::to_storage_type_cref
PUBLIC	?push_back@?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAEXABQBD@Z ; stlp_std::vector<char const *,xalloc<char const *> >::push_back
PUBLIC	??0?$xalloc@PBD@@QAE@XZ				; xalloc<char const *>::xalloc<char const *>
PUBLIC	??0?$xalloc@PBX@@QAE@ABV0@@Z			; xalloc<void const *>::xalloc<void const *>
PUBLIC	??0?$_STLP_alloc_proxy@PAPBXPBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@ABV?$xalloc@PBX@@PAPBX@Z ; stlp_std::priv::_STLP_alloc_proxy<void const * *,void const *,xalloc<void const *> >::_STLP_alloc_proxy<void const * *,void const *,xalloc<void const *> >
PUBLIC	??0?$_Vector_base@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@ABV?$xalloc@PBX@@@Z ; stlp_std::priv::_Vector_base<void const *,xalloc<void const *> >::_Vector_base<void const *,xalloc<void const *> >
PUBLIC	??0?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@ABV?$xalloc@PBX@@@Z ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::_Impl_vector<void const *,xalloc<void const *> >
PUBLIC	??$?0PBD@?$xalloc@PBX@@QAE@ABV?$xalloc@PBD@@@Z	; xalloc<void const *>::xalloc<void const *><char const *>
PUBLIC	??0?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAE@ABV?$xalloc@PBD@@@Z ; stlp_std::vector<char const *,xalloc<char const *> >::vector<char const *,xalloc<char const *> >
PUBLIC	??0?$xr_vector@PBDV?$xalloc@PBD@@@@QAE@XZ	; xr_vector<char const *,xalloc<char const *> >::xr_vector<char const *,xalloc<char const *> >
PUBLIC	?size@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QBEIXZ ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::size
PUBLIC	?size@?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QBEIXZ ; stlp_std::vector<char const *,xalloc<char const *> >::size
PUBLIC	?size@?$xr_vector@PBDV?$xalloc@PBD@@@@QBEIXZ	; xr_vector<char const *,xalloc<char const *> >::size
PUBLIC	?cv_ptr@?$_VoidCastTraitsAux@PBXPBX@priv@stlp_std@@SAPAPBXPAPBX@Z ; stlp_std::priv::_VoidCastTraitsAux<void const *,void const *>::cv_ptr
PUBLIC	?to_value_type_ptr@?$_CastTraits@PBXPBD@priv@stlp_std@@SAPAPBDPAPBX@Z ; stlp_std::priv::_CastTraits<void const *,char const *>::to_value_type_ptr
PUBLIC	?begin@?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAEPAPBDXZ ; stlp_std::vector<char const *,xalloc<char const *> >::begin
PUBLIC	??A?$xr_vector@PBDV?$xalloc@PBD@@@@QAEAAPBDI@Z	; xr_vector<char const *,xalloc<char const *> >::operator[]
PUBLIC	??$xr_free@PBX@@YAXAAPAPBX@Z			; xr_free<void const *>
PUBLIC	?deallocate@?$xalloc@PBX@@QBEXPAPBXI@Z		; xalloc<void const *>::deallocate
PUBLIC	??1?$_Vector_base@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Vector_base<void const *,xalloc<void const *> >::~_Vector_base<void const *,xalloc<void const *> >
PUBLIC	?end@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAEPAPBXXZ ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::end
PUBLIC	?rbegin@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAPBX@3@XZ ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::rbegin
PUBLIC	?begin@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAEPAPBXXZ ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::begin
PUBLIC	??0?$reverse_iterator@PAPBX@stlp_std@@QAE@PAPBX@Z ; stlp_std::reverse_iterator<void const * *>::reverse_iterator<void const * *>
PUBLIC	?rend@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAPBX@3@XZ ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::rend
PUBLIC	??0?$reverse_iterator@PAPBX@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<void const * *>::reverse_iterator<void const * *>
PUBLIC	??$__destroy_range_aux@V?$reverse_iterator@PAPBX@stlp_std@@PBX@stlp_std@@YAXV?$reverse_iterator@PAPBX@0@0PAPBXABU__true_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<void const * *>,void const *>
PUBLIC	??$__destroy_range@V?$reverse_iterator@PAPBX@stlp_std@@PBX@stlp_std@@YAXV?$reverse_iterator@PAPBX@0@0PAPBX@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<void const * *>,void const *>
PUBLIC	??$_Destroy_Range@V?$reverse_iterator@PAPBX@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAPBX@0@0@Z ; stlp_std::_Destroy_Range<stlp_std::reverse_iterator<void const * *> >
PUBLIC	??1?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::~_Impl_vector<void const *,xalloc<void const *> >
PUBLIC	??1?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAE@XZ	; stlp_std::vector<char const *,xalloc<char const *> >::~vector<char const *,xalloc<char const *> >
PUBLIC	??1?$xr_vector@PBDV?$xalloc@PBD@@@@QAE@XZ	; xr_vector<char const *,xalloc<char const *> >::~xr_vector<char const *,xalloc<char const *> >
PUBLIC	??$xr_alloc@Uxr_token@@@@YAPAUxr_token@@I@Z	; xr_alloc<xr_token>
PUBLIC	?g_current_renderer@@3HA			; g_current_renderer
PUBLIC	??_C@_0BA@DPGJLDPL@xrRender_R2?4dll?$AA@	; `string'
PUBLIC	??_C@_0BA@PEDFGAFO@xrRender_R3?4dll?$AA@	; `string'
PUBLIC	??_C@_0BA@OJDAFAOG@xrRender_R4?4dll?$AA@	; `string'
PUBLIC	??_C@_0N@JIKIMOFM@Loading?5DLL?3?$AA@		; `string'
PUBLIC	??_C@_0DC@LFJBJBPM@?$CB?5?4?4?4Failed?5?9?5incompatible?5hardw@ ; `string'
PUBLIC	??_C@_0CF@CNMGIPII@?$CB?5?4?4?4Failed?5?9?5incompatible?5hardw@ ; `string'
PUBLIC	??_C@_0BA@LJPNMBFF@xrRender_R1?4dll?$AA@	; `string'
PUBLIC	??_C@_0BH@NDFMJLMM@CEngineAPI?3?3Initialize?$AA@ ; `string'
PUBLIC	??_C@_0DC@PKMJOHPN@D?3?2CLEARSKY?2sources?2engine?2xrEng@ ; `string'
PUBLIC	??_C@_07LEPDEGCI@hRender?$AA@			; `string'
PUBLIC	??_C@_0L@HEPPDCPJ@xrGame?4dll?$AA@		; `string'
PUBLIC	??_C@_0EI@MIEJDBBA@Game?5DLL?5raised?5exception?5during@ ; `string'
PUBLIC	??_C@_05JLFGAAMF@hGame?$AA@			; `string'
PUBLIC	??_C@_0BB@MKHBIDLK@xrFactory_Create?$AA@	; `string'
PUBLIC	??_C@_07JMLOEFBN@pCreate?$AA@			; `string'
PUBLIC	??_C@_0BC@CIEMGBIJ@xrFactory_Destroy?$AA@	; `string'
PUBLIC	??_C@_08GAKIJIAE@pDestroy?$AA@			; `string'
PUBLIC	??_C@_05PPHPCHNN@?9tune?$AA@			; `string'
PUBLIC	??_C@_0N@CPMNOCHA@vTuneAPI?4dll?$AA@		; `string'
PUBLIC	??_C@_0BN@FHMEHEAC@Intel?5vTune?5is?5not?5installed?$AA@ ; `string'
PUBLIC	??_C@_06PEALJFNC@hTuner?$AA@			; `string'
PUBLIC	??_C@_07GEAOFIDM@VTPause?$AA@			; `string'
PUBLIC	??_C@_0L@KOHIAGHA@tune_pause?$AA@		; `string'
PUBLIC	??_C@_08JPLHEFMG@VTResume?$AA@			; `string'
PUBLIC	??_C@_0M@OABHDOCD@tune_resume?$AA@		; `string'
PUBLIC	??_C@_0O@EDACHDEB@?9perfhud_hack?$AA@		; `string'
PUBLIC	??_C@_0BK@KNJLDIN@SupportsAdvancedRendering?$AA@ ; `string'
PUBLIC	??_C@_0BP@DKGCOAIB@CEngineAPI?3?3CreateRendererList?$AA@ ; `string'
PUBLIC	??_C@_0P@MMGGOEAE@test_rendering?$AA@		; `string'
PUBLIC	??_C@_0BG@OKLIJLBF@SupportsDX10Rendering?$AA@	; `string'
PUBLIC	??_C@_0BE@MJDGKPFG@test_dx10_rendering?$AA@	; `string'
PUBLIC	??_C@_0BG@CLDGEENF@SupportsDX11Rendering?$AA@	; `string'
PUBLIC	??_C@_0BE@FCJDODDJ@test_dx11_rendering?$AA@	; `string'
PUBLIC	??_C@_0M@JJOIBOAJ@renderer_r1?$AA@		; `string'
PUBLIC	??_C@_0N@HOFLEAF@renderer_r2a?$AA@		; `string'
PUBLIC	??_C@_0M@LCMFENMK@renderer_r2?$AA@		; `string'
PUBLIC	??_C@_0O@KJJKBJHA@renderer_r2?45?$AA@		; `string'
PUBLIC	??_C@_0M@KLNOHMIL@renderer_r3?$AA@		; `string'
PUBLIC	??_C@_0M@OEJPOKEM@renderer_r4?$AA@		; `string'
EXTRN	__imp_?r_clear_compact@COLLIDER@CDB@@QAEXXZ:PROC
EXTRN	__imp_?r_clear_compact@xrXRC@@QAEXXZ:PROC
EXTRN	__imp_?XRC@@3VxrXRC@@A:BYTE
EXTRN	__imp__GetSystemInfo@4:PROC
EXTRN	__imp__SetErrorMode@4:PROC
?g_current_renderer@@3HA DD 01H DUP (?)			; g_current_renderer
;	COMDAT ?ignore_always@?8??Initialize@CEngineAPI@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?8??Initialize@CEngineAPI@@QAEXXZ@4_NA DB 01H DUP (?) ; `CEngineAPI::Initialize'::`9'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?N@??Initialize@CEngineAPI@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?N@??Initialize@CEngineAPI@@QAEXXZ@4_NA DB 01H DUP (?) ; `CEngineAPI::Initialize'::`13'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BE@??Initialize@CEngineAPI@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?BE@??Initialize@CEngineAPI@@QAEXXZ@4_NA DB 01H DUP (?) ; `CEngineAPI::Initialize'::`20'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BI@??Initialize@CEngineAPI@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?BI@??Initialize@CEngineAPI@@QAEXXZ@4_NA DB 01H DUP (?) ; `CEngineAPI::Initialize'::`24'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BM@??Initialize@CEngineAPI@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?BM@??Initialize@CEngineAPI@@QAEXXZ@4_NA DB 01H DUP (?) ; `CEngineAPI::Initialize'::`28'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?CA@??Initialize@CEngineAPI@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?CA@??Initialize@CEngineAPI@@QAEXXZ@4_NA DB 01H DUP (?) ; `CEngineAPI::Initialize'::`32'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?CJ@??Initialize@CEngineAPI@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?CJ@??Initialize@CEngineAPI@@QAEXXZ@4_NA DB 01H DUP (?) ; `CEngineAPI::Initialize'::`41'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?CN@??Initialize@CEngineAPI@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?CN@??Initialize@CEngineAPI@@QAEXXZ@4_NA DB 01H DUP (?) ; `CEngineAPI::Initialize'::`45'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?DB@??Initialize@CEngineAPI@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?DB@??Initialize@CEngineAPI@@QAEXXZ@4_NA DB 01H DUP (?) ; `CEngineAPI::Initialize'::`49'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?DF@??Initialize@CEngineAPI@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?DF@??Initialize@CEngineAPI@@QAEXXZ@4_NA DB 01H DUP (?) ; `CEngineAPI::Initialize'::`53'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?O@??CreateRendererList@CEngineAPI@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?O@??CreateRendererList@CEngineAPI@@QAEXXZ@4_NA DB 01H DUP (?) ; `CEngineAPI::CreateRendererList'::`14'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BF@??CreateRendererList@CEngineAPI@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?BF@??CreateRendererList@CEngineAPI@@QAEXXZ@4_NA DB 01H DUP (?) ; `CEngineAPI::CreateRendererList'::`21'::ignore_always
_BSS	ENDS
;	COMDAT ?ignore_always@?BM@??CreateRendererList@CEngineAPI@@QAEXXZ@4_NA
_BSS	SEGMENT
?ignore_always@?BM@??CreateRendererList@CEngineAPI@@QAEXXZ@4_NA DB 01H DUP (?) ; `CEngineAPI::CreateRendererList'::`28'::ignore_always
;	COMDAT ??_C@_0M@OEJPOKEM@renderer_r4?$AA@
CONST	SEGMENT
??_C@_0M@OEJPOKEM@renderer_r4?$AA@ DB 'renderer_r4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KLNOHMIL@renderer_r3?$AA@
CONST	SEGMENT
??_C@_0M@KLNOHMIL@renderer_r3?$AA@ DB 'renderer_r3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KJJKBJHA@renderer_r2?45?$AA@
CONST	SEGMENT
??_C@_0O@KJJKBJHA@renderer_r2?45?$AA@ DB 'renderer_r2.5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LCMFENMK@renderer_r2?$AA@
CONST	SEGMENT
??_C@_0M@LCMFENMK@renderer_r2?$AA@ DB 'renderer_r2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HOFLEAF@renderer_r2a?$AA@
CONST	SEGMENT
??_C@_0N@HOFLEAF@renderer_r2a?$AA@ DB 'renderer_r2a', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JJOIBOAJ@renderer_r1?$AA@
CONST	SEGMENT
??_C@_0M@JJOIBOAJ@renderer_r1?$AA@ DB 'renderer_r1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FCJDODDJ@test_dx11_rendering?$AA@
CONST	SEGMENT
??_C@_0BE@FCJDODDJ@test_dx11_rendering?$AA@ DB 'test_dx11_rendering', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CLDGEENF@SupportsDX11Rendering?$AA@
CONST	SEGMENT
??_C@_0BG@CLDGEENF@SupportsDX11Rendering?$AA@ DB 'SupportsDX11Rendering', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MJDGKPFG@test_dx10_rendering?$AA@
CONST	SEGMENT
??_C@_0BE@MJDGKPFG@test_dx10_rendering?$AA@ DB 'test_dx10_rendering', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OKLIJLBF@SupportsDX10Rendering?$AA@
CONST	SEGMENT
??_C@_0BG@OKLIJLBF@SupportsDX10Rendering?$AA@ DB 'SupportsDX10Rendering', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MMGGOEAE@test_rendering?$AA@
CONST	SEGMENT
??_C@_0P@MMGGOEAE@test_rendering?$AA@ DB 'test_rendering', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@DKGCOAIB@CEngineAPI?3?3CreateRendererList?$AA@
CONST	SEGMENT
??_C@_0BP@DKGCOAIB@CEngineAPI?3?3CreateRendererList?$AA@ DB 'CEngineAPI::'
	DB	'CreateRendererList', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KNJLDIN@SupportsAdvancedRendering?$AA@
CONST	SEGMENT
??_C@_0BK@KNJLDIN@SupportsAdvancedRendering?$AA@ DB 'SupportsAdvancedRend'
	DB	'ering', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EDACHDEB@?9perfhud_hack?$AA@
CONST	SEGMENT
??_C@_0O@EDACHDEB@?9perfhud_hack?$AA@ DB '-perfhud_hack', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OABHDOCD@tune_resume?$AA@
CONST	SEGMENT
??_C@_0M@OABHDOCD@tune_resume?$AA@ DB 'tune_resume', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JPLHEFMG@VTResume?$AA@
CONST	SEGMENT
??_C@_08JPLHEFMG@VTResume?$AA@ DB 'VTResume', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KOHIAGHA@tune_pause?$AA@
CONST	SEGMENT
??_C@_0L@KOHIAGHA@tune_pause?$AA@ DB 'tune_pause', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07GEAOFIDM@VTPause?$AA@
CONST	SEGMENT
??_C@_07GEAOFIDM@VTPause?$AA@ DB 'VTPause', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06PEALJFNC@hTuner?$AA@
CONST	SEGMENT
??_C@_06PEALJFNC@hTuner?$AA@ DB 'hTuner', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FHMEHEAC@Intel?5vTune?5is?5not?5installed?$AA@
CONST	SEGMENT
??_C@_0BN@FHMEHEAC@Intel?5vTune?5is?5not?5installed?$AA@ DB 'Intel vTune '
	DB	'is not installed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CPMNOCHA@vTuneAPI?4dll?$AA@
CONST	SEGMENT
??_C@_0N@CPMNOCHA@vTuneAPI?4dll?$AA@ DB 'vTuneAPI.dll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05PPHPCHNN@?9tune?$AA@
CONST	SEGMENT
??_C@_05PPHPCHNN@?9tune?$AA@ DB '-tune', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GAKIJIAE@pDestroy?$AA@
CONST	SEGMENT
??_C@_08GAKIJIAE@pDestroy?$AA@ DB 'pDestroy', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CIEMGBIJ@xrFactory_Destroy?$AA@
CONST	SEGMENT
??_C@_0BC@CIEMGBIJ@xrFactory_Destroy?$AA@ DB 'xrFactory_Destroy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07JMLOEFBN@pCreate?$AA@
CONST	SEGMENT
??_C@_07JMLOEFBN@pCreate?$AA@ DB 'pCreate', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MKHBIDLK@xrFactory_Create?$AA@
CONST	SEGMENT
??_C@_0BB@MKHBIDLK@xrFactory_Create?$AA@ DB 'xrFactory_Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05JLFGAAMF@hGame?$AA@
CONST	SEGMENT
??_C@_05JLFGAAMF@hGame?$AA@ DB 'hGame', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@MIEJDBBA@Game?5DLL?5raised?5exception?5during@
CONST	SEGMENT
??_C@_0EI@MIEJDBBA@Game?5DLL?5raised?5exception?5during@ DB 'Game DLL rai'
	DB	'sed exception during loading or there is no game DLL at all', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HEPPDCPJ@xrGame?4dll?$AA@
CONST	SEGMENT
??_C@_0L@HEPPDCPJ@xrGame?4dll?$AA@ DB 'xrGame.dll', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07LEPDEGCI@hRender?$AA@
CONST	SEGMENT
??_C@_07LEPDEGCI@hRender?$AA@ DB 'hRender', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@PKMJOHPN@D?3?2CLEARSKY?2sources?2engine?2xrEng@
CONST	SEGMENT
??_C@_0DC@PKMJOHPN@D?3?2CLEARSKY?2sources?2engine?2xrEng@ DB 'D:\CLEARSKY'
	DB	'\sources\engine\xrEngine\EngineAPI.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NDFMJLMM@CEngineAPI?3?3Initialize?$AA@
CONST	SEGMENT
??_C@_0BH@NDFMJLMM@CEngineAPI?3?3Initialize?$AA@ DB 'CEngineAPI::Initiali'
	DB	'ze', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LJPNMBFF@xrRender_R1?4dll?$AA@
CONST	SEGMENT
??_C@_0BA@LJPNMBFF@xrRender_R1?4dll?$AA@ DB 'xrRender_R1.dll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@CNMGIPII@?$CB?5?4?4?4Failed?5?9?5incompatible?5hardw@
CONST	SEGMENT
??_C@_0CF@CNMGIPII@?$CB?5?4?4?4Failed?5?9?5incompatible?5hardw@ DB '! ...'
	DB	'Failed - incompatible hardware.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@LFJBJBPM@?$CB?5?4?4?4Failed?5?9?5incompatible?5hardw@
CONST	SEGMENT
??_C@_0DC@LFJBJBPM@?$CB?5?4?4?4Failed?5?9?5incompatible?5hardw@ DB '! ...'
	DB	'Failed - incompatible hardware/pre-Vista OS.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JIKIMOFM@Loading?5DLL?3?$AA@
CONST	SEGMENT
??_C@_0N@JIKIMOFM@Loading?5DLL?3?$AA@ DB 'Loading DLL:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OJDAFAOG@xrRender_R4?4dll?$AA@
CONST	SEGMENT
??_C@_0BA@OJDAFAOG@xrRender_R4?4dll?$AA@ DB 'xrRender_R4.dll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PEDFGAFO@xrRender_R3?4dll?$AA@
CONST	SEGMENT
??_C@_0BA@PEDFGAFO@xrRender_R3?4dll?$AA@ DB 'xrRender_R3.dll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DPGJLDPL@xrRender_R2?4dll?$AA@
CONST	SEGMENT
??_C@_0BA@DPGJLDPL@xrRender_R2?4dll?$AA@ DB 'xrRender_R2.dll', 00H ; `string'
_MACRO_ADD DB	0ecH
	DB	0afH
	DB	0caH
	DB	036H
	DB	0b7H
	DB	0dH
	DB	059H
	DB	0c1H
	DB	0faH
	DB	0a7H
	DB	071H
	DB	0b1H
	DB	023H
	DB	0c5H
	DB	08eH
	DB	065H
	DB	0d1H
	DB	036H
	DB	03H
	DB	012H
	DB	07aH
	DB	02cH
	DB	031H
	DB	03aH
	DB	03eH
	DB	014H
	DB	05dH
	DB	0d2H
	DB	0cH
	DB	051H
	DB	066H
	DB	0c7H
	DB	0e1H
	DB	060H
	DB	098H
	DB	06aH
	DB	016H
	DB	09dH
	DB	0a8H
	DB	080H
	DB	0e4H
	DB	07aH
	DB	094H
	DB	0b2H
	DB	0a2H
	DB	0f5H
	DB	06eH
	DB	027H
	DB	0f5H
	DB	0aH
	DB	03fH
	DB	0c5H
	DB	0ffH
	DB	020H
	DB	04cH
	DB	0b8H
	DB	0c5H
	DB	072H
	DB	071H
	DB	09aH
	DB	0a9H
	DB	0a0H
	DB	0ddH
	DB	04fH
	DB	068H
	DB	053H
	DB	0b1H
	DB	0faH
	DB	026H
	DB	014H
	DB	085H
	DB	094H
	DB	021H
	DB	014H
	DB	080H
	DB	05cH
	DB	070H
	DB	0baH
	DB	0c5H
	DB	0f6H
	DB	058H
	DB	0dbH
	DB	0aeH
	DB	0e5H
	DB	08dH
	DB	0cdH
	DB	0dcH
	DB	06aH
	DB	09cH
	DB	011H
	DB	0fcH
	DB	06dH
	DB	033H
	DB	017H
	DB	0fbH
	DB	0f2H
	DB	030H
	DB	0f2H
	DB	0e0H
	DB	0d3H
	DB	0e3H
	DB	092H
	DB	0acH
	DB	046H
	DB	0c7H
	DB	086H
	DB	09bH
	DB	06eH
	DB	074H
	DB	05dH
	DB	0b1H
	DB	05H
	DB	0b9H
	DB	0faH
	DB	075H
	DB	09fH
	DB	084H
	DB	057H
	DB	02aH
	DB	040H
	DB	072H
	DB	0e7H
	DB	0c9H
	DB	0cbH
_MACRO_SUB DB	0ecH
	DB	0afH
	DB	0caH
	DB	036H
	DB	0b7H
	DB	0dH
	DB	059H
	DB	0c1H
	DB	0faH
	DB	0a7H
	DB	071H
	DB	0b1H
	DB	023H
	DB	0c5H
	DB	08eH
	DB	065H
	DB	0d1H
	DB	036H
	DB	03H
	DB	012H
	DB	07aH
	DB	02cH
	DB	031H
	DB	03aH
	DB	03eH
	DB	014H
	DB	05dH
	DB	0d2H
	DB	0cH
	DB	051H
	DB	066H
	DB	0c7H
	DB	0e1H
	DB	060H
	DB	098H
	DB	06aH
	DB	016H
	DB	09dH
	DB	0a8H
	DB	080H
	DB	0e4H
	DB	07aH
	DB	094H
	DB	0b2H
	DB	0a2H
	DB	0f5H
	DB	06eH
	DB	027H
	DB	0f5H
	DB	0aH
	DB	03fH
	DB	0c5H
	DB	0ffH
	DB	020H
	DB	04cH
	DB	0b8H
	DB	0c5H
	DB	072H
	DB	071H
	DB	09aH
	DB	0a9H
	DB	0a0H
	DB	0ddH
	DB	04fH
	DB	068H
	DB	053H
	DB	0b1H
	DB	0faH
	DB	026H
	DB	014H
	DB	085H
	DB	094H
	DB	021H
	DB	014H
	DB	080H
	DB	05cH
	DB	070H
	DB	0baH
	DB	0c5H
	DB	0f6H
	DB	058H
	DB	0dbH
	DB	0aeH
	DB	0e5H
	DB	08dH
	DB	0cdH
	DB	0dcH
	DB	06aH
	DB	09cH
	DB	011H
	DB	0fcH
	DB	06dH
	DB	033H
	DB	017H
	DB	0fbH
	DB	0f2H
	DB	022H
	DB	0ecH
	DB	0b5H
	DB	0fdH
	DB	075H
	DB	0caH
	DB	02bH
	DB	055H
	DB	0ccH
	DB	02bH
	DB	0beH
	DB	0fcH
	DB	0c6H
	DB	073H
	DB	03cH
	DB	0efH
	DB	0fdH
	DB	0d7H
	DB	08bH
	DB	086H
	DB	069H
	DB	04aH
	DB	06aH
	DB	080H
	DB	0f0H
	DB	06eH
	DB	0a7H
	DB	09H
_MACRO_IF_EQL DB 0ecH
	DB	0afH
	DB	0aaH
	DB	093H
	DB	02dH
	DB	04H
	DB	0a3H
	DB	08fH
	DB	08aH
	DB	010H
	DB	067H
	DB	091H
	DB	0c9H
	DB	0e1H
	DB	0daH
	DB	02cH
	DB	031H
	DB	01dH
	DB	082H
	DB	0e2H
	DB	07H
	DB	0f9H
	DB	0e8H
	DB	024H
	DB	075H
	DB	0e9H
	DB	09dH
	DB	054H
	DB	070H
	DB	036H
	DB	04fH
	DB	0ffH
	DB	0ddH
	DB	04aH
	DB	082H
	DB	014H
	DB	088H
	DB	048H
	DB	074H
	DB	051H
	DB	03fH
	DB	0baH
	DB	051H
	DB	098H
	DB	0e9H
	DB	01dH
	DB	027H
	DB	0b1H
	DB	07bH
	DB	097H
	DB	027H
	DB	046H
	DB	09aH
	DB	046H
	DB	064H
	DB	0d4H
	DB	0efH
	DB	092H
	DB	0f0H
	DB	05H
	DB	05eH
	DB	079H
	DB	0edH
	DB	08dH
	DB	034H
	DB	052H
	DB	08aH
	DB	090H
	DB	0e9H
	DB	0baH
	DB	03cH
	DB	0beH
	DB	08bH
	DB	0e5H
	DB	0caH
	DB	028H
	DB	0b0H
	DB	092H
	DB	0deH
	DB	04cH
	DB	0d8H
	DB	031H
	DB	0ceH
	DB	0ceH
	DB	08eH
	DB	022H
	DB	078H
	DB	0f8H
	DB	07cH
	DB	0ceH
	DB	0f6H
	DB	04eH
	DB	084H
	DB	0d0H
	DB	0eeH
	DB	0b5H
	DB	0bH
	DB	08eH
	DB	053H
	DB	0d5H
	DB	0ceH
	DB	07cH
	DB	04fH
	DB	02fH
	DB	0faH
	DB	0f6H
	DB	0bfH
	DB	0c8H
	DB	070H
	DB	05aH
	DB	0eH
	DB	00H
	DB	0dbH
	DB	093H
	DB	044H
	DB	083H
	DB	0f4H
	DB	0fcH
	DB	0ebH
	DB	02fH
	DB	031H
	DB	01dH
	DB	02H
	DB	023H
	DB	09eH
	DB	08aH
	DB	0b5H
	DB	013H
	DB	068H
	DB	048H
	DB	03dH
	DB	076H
	DB	01H
	DB	0feH
	DB	040H
	DB	078H
	DB	02cH
	DB	0b7H
	DB	09H
	DB	039H
	DB	0cfH
	DB	0a4H
	DB	058H
	DB	087H
	DB	072H
	DB	0f8H
	DB	0a0H
	DB	0bcH
	DB	0e9H
	DB	0a3H
	DB	0d0H
	DB	0c0H
	DB	078H
	DB	080H
	DB	0faH
	DB	0dcH
	DB	05H
	DB	09aH
	DB	0cH
	DB	040H
	DB	09cH
	DB	0b6H
	DB	062H
	DB	0d4H
	DB	06eH
	DB	0a0H
	DB	018H
	DB	09aH
	DB	0eeH
	DB	085H
	DB	04aH
	DB	0b0H
	DB	063H
	DB	0d3H
	DB	02aH
	DB	084H
	DB	0caH
	DB	03cH
	DB	055H
	DB	0a9H
	DB	0d2H
	DB	018H
	DB	0aeH
	DB	04dH
	DB	040H
	DB	080H
	DB	0e5H
	DB	07aH
	DB	095H
	DB	033H
	DB	090H
	DB	0f2H
	DB	0f6H
	DB	06H
	DB	0d9H
	DB	065H
	DB	04dH
	DB	02bH
	DB	095H
	DB	029H
	DB	02H
	DB	0b9H
	DB	0f9H
	DB	0a6H
	DB	05H
	DB	056H
	DB	013H
	DB	02bH
	DB	09fH
	DB	069H
	DB	0faH
	DB	0f1H
	DB	0bbH
	DB	028H
	DB	0a6H
	DB	071H
	DB	040H
	DB	011H
	DB	0d7H
	DB	086H
	DB	04H
	DB	0eeH
	DB	0b6H
	DB	0eeH
	DB	0baH
	DB	0c6H
	DB	045H
	DB	07H
	DB	075H
	DB	0ecH
	DB	0c5H
	DB	0d0H
	DB	07dH
	DB	08cH
	DB	0c5H
	DB	051H
	DB	063H
	DB	0b4H
	DB	0eaH
	DB	051H
	DB	063H
	DB	0b4H
	DB	0eaH
	DB	0d6H
	DB	061H
	DB	0b1H
	DB	0e1H
	DB	0bfH
	DB	0d4H
	DB	05eH
	DB	0adH
	DB	07dH
	DB	0d5H
	DB	03H
	DB	053H
	DB	050H
	DB	09cH
	DB	068H
	DB	01bH
	DB	0a5H
	DB	0b4H
	DB	0f8H
	DB	066H
	DB	01eH
	DB	0c6H
	DB	076H
	DB	019H
	DB	0a9H
	DB	02fH
	DB	054H
	DB	0e6H
	DB	0c1H
	DB	041H
	DB	047H
	DB	0f1H
	DB	01aH
	DB	037H
	DB	047H
	DB	078H
	DB	0c5H
	DB	040H
	DB	07aH
	DB	028H
	DB	0a6H
	DB	0f1H
	DB	044H
	DB	014H
	DB	08eH
	DB	088H
	DB	015H
	DB	0aeH
	DB	0f0H
	DB	091H
	DB	0fH
	DB	06aH
	DB	0e3H
	DB	09dH
	DB	09bH
	DB	071H
	DB	099H
	DB	02H
	DB	034H
	DB	0e8H
	DB	05fH
	DB	02H
	DB	0b5H
	DB	06fH
	DB	045H
	DB	02aH
	DB	05aH
	DB	0efH
	DB	04bH
	DB	0d2H
	DB	07aH
	DB	0efH
	DB	04bH
	DB	053H
	DB	058H
	DB	073H
	DB	0a4H
	DB	01aH
	DB	01bH
	DB	015H
	DB	0e8H
	DB	04H
	DB	0c2H
	DB	0c3H
	DB	065H
	DB	0a5H
	DB	0bH
	DB	016H
	DB	0ccH
	DB	026H
	DB	0f0H
	DB	026H
	DB	0dbH
	DB	0caH
	DB	04aH
	DB	037H
	DB	03H
	DB	079H
	DB	064H
	DB	0dH
	DB	02aH
	DB	0baH
	DB	057H
	DB	061H
	DB	0bdH
	DB	0fcH
	DB	0e7H
	DB	0dH
	DB	0cdH
	DB	072H
	DB	0f9H
	DB	0deH
	DB	0abH
	DB	087H
	DB	054H
	DB	08fH
	DB	0eH
	DB	026H
	DB	0d5H
	DB	08aH
	DB	078H
	DB	015H
	DB	06cH
	DB	04bH
	DB	0dbH
	DB	015H
	DB	06cH
	DB	04bH
	DB	0dbH
	DB	015H
	DB	06cH
	DB	04bH
	DB	0dbH
	DB	095H
	DB	012H
	DB	0f0H
	DB	0f9H
	DB	01dH
	DB	010H
	DB	09fH
	DB	0c3H
	DB	0a8H
	DB	084H
	DB	0b0H
	DB	047H
	DB	058H
	DB	067H
	DB	094H
	DB	058H
	DB	06dH
	DB	08aH
	DB	0feH
	DB	064H
	DB	0daH
	DB	071H
	DB	0cfH
	DB	02dH
	DB	0daH
	DB	0d3H
	DB	06dH
	DB	083H
	DB	0e2H
	DB	07H
	DB	01fH
	DB	047H
	DB	0b7H
	DB	01bH
	DB	0afH
	DB	088H
	DB	021H
	DB	0deH
	DB	08cH
	DB	098H
	DB	052H
	DB	0a8H
	DB	070H
	DB	032H
	DB	092H
	DB	080H
	DB	01bH
	DB	00H
	DB	0fdH
	DB	049H
	DB	032H
	DB	0f0H
	DB	01eH
	DB	0b8H
	DB	0dbH
	DB	065H
	DB	033H
	DB	093H
	DB	093H
	DB	08eH
	DB	0a0H
	DB	097H
	DB	0efH
	DB	0a7H
	DB	0e3H
	DB	0d2H
	DB	084H
	DB	049H
	DB	02cH
	DB	0e0H
	DB	0d9H
	DB	0c0H
	DB	059H
	DB	0f8H
	DB	0cdH
	DB	062H
	DB	083H
	DB	0efH
	DB	07bH
	DB	055H
	DB	05dH
	DB	06bH
	DB	07fH
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
;	COMDAT ?begin@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@QAEPAURESULT@CDB@@XZ
_TEXT	SEGMENT
?begin@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@QAEPAURESULT@CDB@@XZ PROC ; stlp_std::priv::_Impl_vector<CDB::RESULT,xalloc<CDB::RESULT> >::begin, COMDAT
; _this$ = eax

; 170  :   iterator begin()             { return this->_M_start; }

	mov	eax, DWORD PTR [eax]
	ret	0
?begin@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@QAEPAURESULT@CDB@@XZ ENDP ; stlp_std::priv::_Impl_vector<CDB::RESULT,xalloc<CDB::RESULT> >::begin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@QAEPAURESULT@CDB@@XZ
_TEXT	SEGMENT
?end@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@QAEPAURESULT@CDB@@XZ PROC ; stlp_std::priv::_Impl_vector<CDB::RESULT,xalloc<CDB::RESULT> >::end, COMDAT
; _this$ = eax

; 172  :   iterator end()               { return this->_M_finish; }

	mov	eax, DWORD PTR [eax+4]
	ret	0
?end@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@QAEPAURESULT@CDB@@XZ ENDP ; stlp_std::priv::_Impl_vector<CDB::RESULT,xalloc<CDB::RESULT> >::end
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$__destroy_range_aux@V?$reverse_iterator@PAPBX@stlp_std@@PBX@stlp_std@@YAXV?$reverse_iterator@PAPBX@0@0PAPBXABU__true_type@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$__destroy_range_aux@V?$reverse_iterator@PAPBX@stlp_std@@PBX@stlp_std@@YAXV?$reverse_iterator@PAPBX@0@0PAPBXABU__true_type@0@@Z PROC ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<void const * *>,void const *>, COMDAT

; 169  : __destroy_range_aux(_ForwardIterator, _ForwardIterator, _Tp*, const __true_type& /*_Trivial_destructor*/) {}

	ret	0
??$__destroy_range_aux@V?$reverse_iterator@PAPBX@stlp_std@@PBX@stlp_std@@YAXV?$reverse_iterator@PAPBX@0@0PAPBXABU__true_type@0@@Z ENDP ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<void const * *>,void const *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory.h
_TEXT	ENDS
;	COMDAT ??$xr_alloc@PBX@@YAPAPBXI@Z
_TEXT	SEGMENT
??$xr_alloc@PBX@@YAPAPBXI@Z PROC			; xr_alloc<void const *>, COMDAT
; _count$ = eax

; 109  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	ecx, DWORD PTR [eax*4]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
??$xr_alloc@PBX@@YAPAPBXI@Z ENDP			; xr_alloc<void const *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__fill_n@PAPBXIPBX@priv@stlp_std@@YAPAPBXPAPBXIABQBX@Z
_TEXT	SEGMENT
??$__fill_n@PAPBXIPBX@priv@stlp_std@@YAPAPBXPAPBXIABQBX@Z PROC ; stlp_std::priv::__fill_n<void const * *,unsigned int,void const *>, COMDAT
; ___first$ = eax
; ___n$ = ecx
; ___val$ = edx

; 403  :   _STLP_FIX_LITERAL_BUG(__first)
; 404  :   for ( ; __n > 0; --__n, ++__first)

	test	ecx, ecx
	jbe	SHORT $LN1@fill_n@4
	push	esi
$LL3@fill_n@4:

; 405  :     *__first = __val;

	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	sub	ecx, 1
	add	eax, 4
	test	ecx, ecx
	ja	SHORT $LL3@fill_n@4
	pop	esi
$LN1@fill_n@4:

; 406  :   return __first;
; 407  : }

	ret	0
??$__fill_n@PAPBXIPBX@priv@stlp_std@@YAPAPBXPAPBXIABQBX@Z ENDP ; stlp_std::priv::__fill_n<void const * *,unsigned int,void const *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$__destroy_range_aux@PAURESULT@CDB@@U12@@stlp_std@@YAXPAURESULT@CDB@@00ABU__true_type@0@@Z
_TEXT	SEGMENT
??$__destroy_range_aux@PAURESULT@CDB@@U12@@stlp_std@@YAXPAURESULT@CDB@@00ABU__true_type@0@@Z PROC ; stlp_std::__destroy_range_aux<CDB::RESULT *,CDB::RESULT>, COMDAT

; 169  : __destroy_range_aux(_ForwardIterator, _ForwardIterator, _Tp*, const __true_type& /*_Trivial_destructor*/) {}

	ret	0
??$__destroy_range_aux@PAURESULT@CDB@@U12@@stlp_std@@YAXPAURESULT@CDB@@00ABU__true_type@0@@Z ENDP ; stlp_std::__destroy_range_aux<CDB::RESULT *,CDB::RESULT>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?allocate@?$xalloc@PBX@@QBEPAPBXIPBX@Z
_TEXT	SEGMENT
?allocate@?$xalloc@PBX@@QBEPAPBXIPBX@Z PROC		; xalloc<void const *>::allocate, COMDAT
; _n$ = eax

; 81   : 							pointer					allocate		(size_type n, const void* p=0) const	{	return xr_alloc<T>((u32)n);	}

	lea	ecx, DWORD PTR [eax*4]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
?allocate@?$xalloc@PBX@@QBEPAPBXIPBX@Z ENDP		; xalloc<void const *>::allocate
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_alloc.h
_TEXT	ENDS
;	COMDAT ?allocate@?$_STLP_alloc_proxy@PAPBXPBXV?$xalloc@PBX@@@priv@stlp_std@@QAEPAPBXI@Z
_TEXT	SEGMENT
?allocate@?$_STLP_alloc_proxy@PAPBXPBXV?$xalloc@PBX@@@priv@stlp_std@@QAEPAPBXI@Z PROC ; stlp_std::priv::_STLP_alloc_proxy<void const * *,void const *,xalloc<void const *> >::allocate, COMDAT
; ___n$ = eax

; 633  :   { return _Base::allocate(__n); }

	lea	ecx, DWORD PTR [eax*4]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
?allocate@?$_STLP_alloc_proxy@PAPBXPBXV?$xalloc@PBX@@@priv@stlp_std@@QAEPAPBXI@Z ENDP ; stlp_std::priv::_STLP_alloc_proxy<void const * *,void const *,xalloc<void const *> >::allocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?allocate@?$_STLP_alloc_proxy@PAPBXPBXV?$xalloc@PBX@@@priv@stlp_std@@AAEPAPBXIAAIABU__false_type@3@@Z
_TEXT	SEGMENT
?allocate@?$_STLP_alloc_proxy@PAPBXPBXV?$xalloc@PBX@@@priv@stlp_std@@AAEPAPBXIAAIABU__false_type@3@@Z PROC ; stlp_std::priv::_STLP_alloc_proxy<void const * *,void const *,xalloc<void const *> >::allocate, COMDAT
; ___n$ = eax
; ___allocated_n$ = ecx

; 640  :   { __allocated_n = __n; return allocate(__n); }

	lea	edx, DWORD PTR [eax*4]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edx
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
?allocate@?$_STLP_alloc_proxy@PAPBXPBXV?$xalloc@PBX@@@priv@stlp_std@@AAEPAPBXIAAIABU__false_type@3@@Z ENDP ; stlp_std::priv::_STLP_alloc_proxy<void const * *,void const *,xalloc<void const *> >::allocate
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator.h
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@PAPBX@stlp_std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$reverse_iterator@PAPBX@stlp_std@@QAE@ABV01@@Z PROC	; stlp_std::reverse_iterator<void const * *>::reverse_iterator<void const * *>, COMDAT
; _this$ = eax
; ___x$ = ecx

; 66   :   reverse_iterator(const _Self& __x) : current(__x.current) {}

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	ret	0
??0?$reverse_iterator@PAPBX@stlp_std@@QAE@ABV01@@Z ENDP	; stlp_std::reverse_iterator<void const * *>::reverse_iterator<void const * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_alloc.h
_TEXT	ENDS
;	COMDAT ?allocate@?$_STLP_alloc_proxy@PAPBXPBXV?$xalloc@PBX@@@priv@stlp_std@@QAEPAPBXIAAI@Z
_TEXT	SEGMENT
?allocate@?$_STLP_alloc_proxy@PAPBXPBXV?$xalloc@PBX@@@priv@stlp_std@@QAEPAPBXIAAI@Z PROC ; stlp_std::priv::_STLP_alloc_proxy<void const * *,void const *,xalloc<void const *> >::allocate, COMDAT
; ___n$ = eax
; ___allocated_n$ = ecx

; 611  : #if !defined (__BORLANDC__)
; 612  :     typedef typename _IsSTLportClass<_MaybeReboundAlloc>::_Ret _STLportAlloc;
; 613  : #else
; 614  :     typedef typename __bool2type<_IsSTLportClass<_MaybeReboundAlloc>::_Is>::_Ret _STLportAlloc;
; 615  : #endif
; 616  :     return allocate(__n, __allocated_n, _STLportAlloc());

	lea	edx, DWORD PTR [eax*4]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edx
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 617  :   }

	ret	0
?allocate@?$_STLP_alloc_proxy@PAPBXPBXV?$xalloc@PBX@@@priv@stlp_std@@QAEPAPBXIAAI@Z ENDP ; stlp_std::priv::_STLP_alloc_proxy<void const * *,void const *,xalloc<void const *> >::allocate
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?_M_set@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@AAEXPAPBX00@Z
_TEXT	SEGMENT
___e$ = 8						; size = 4
?_M_set@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@AAEXPAPBX00@Z PROC ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::_M_set, COMDAT
; _this$ = eax
; ___s$ = ecx
; ___f$ = edx

; 626  :     this->_M_start = __s;

	mov	DWORD PTR [eax], ecx

; 627  :     this->_M_finish = __f;
; 628  :     this->_M_end_of_storage._M_data = __e;

	mov	ecx, DWORD PTR ___e$[esp-4]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx

; 629  :   }

	ret	4
?_M_set@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@AAEXPAPBX00@Z ENDP ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::_M_set
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory.h
_TEXT	ENDS
;	COMDAT ??$xr_free@PBX@@YAXAAPAPBX@Z
_TEXT	SEGMENT
??$xr_free@PBX@@YAXAAPAPBX@Z PROC			; xr_free<void const *>, COMDAT
; _P$ = esi

; 111  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN1@xr_free@14
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
$LN1@xr_free@14:
	ret	0
??$xr_free@PBX@@YAXAAPAPBX@Z ENDP			; xr_free<void const *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??$?0PBD@?$xalloc@PBX@@QAE@ABV?$xalloc@PBD@@@Z
_TEXT	SEGMENT
??$?0PBD@?$xalloc@PBX@@QAE@ABV?$xalloc@PBD@@@Z PROC	; xalloc<void const *>::xalloc<void const *><char const *>, COMDAT
; _this$ = eax

; 79   : 	template<class _Other>							xalloc			(const xalloc<_Other>&)					{	}

	ret	0
??$?0PBD@?$xalloc@PBX@@QAE@ABV?$xalloc@PBD@@@Z ENDP	; xalloc<void const *>::xalloc<void const *><char const *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory.h
_TEXT	ENDS
;	COMDAT ??$xr_alloc@Uxr_token@@@@YAPAUxr_token@@I@Z
_TEXT	SEGMENT
??$xr_alloc@Uxr_token@@@@YAPAUxr_token@@I@Z PROC	; xr_alloc<xr_token>, COMDAT
; _count$ = eax

; 109  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	ecx, DWORD PTR [eax*8]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
??$xr_alloc@Uxr_token@@@@YAPAUxr_token@@I@Z ENDP	; xr_alloc<xr_token>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_free@Uxr_token@@@@YAXAAPAUxr_token@@@Z
_TEXT	SEGMENT
??$xr_free@Uxr_token@@@@YAXAAPAUxr_token@@@Z PROC	; xr_free<xr_token>, COMDAT

; 111  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	eax, DWORD PTR ?vid_quality_token@@3PAUxr_token@@A ; vid_quality_token
	test	eax, eax
	je	SHORT $LN1@xr_free@15
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR ?vid_quality_token@@3PAUxr_token@@A, 0 ; vid_quality_token
$LN1@xr_free@15:
	ret	0
??$xr_free@Uxr_token@@@@YAXAAPAUxr_token@@@Z ENDP	; xr_free<xr_token>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_free@$$CBD@@YAXAAPBD@Z
_TEXT	SEGMENT
??$xr_free@$$CBD@@YAXAAPBD@Z PROC			; xr_free<char const >, COMDAT
; _P$ = esi

; 111  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN1@xr_free@16
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
$LN1@xr_free@16:
	ret	0
??$xr_free@$$CBD@@YAXAAPBD@Z ENDP			; xr_free<char const >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$__destroy_range@PAURESULT@CDB@@U12@@stlp_std@@YAXPAURESULT@CDB@@00@Z
_TEXT	SEGMENT
??$__destroy_range@PAURESULT@CDB@@U12@@stlp_std@@YAXPAURESULT@CDB@@00@Z PROC ; stlp_std::__destroy_range<CDB::RESULT *,CDB::RESULT>, COMDAT

; 175  :   typedef typename __type_traits<_Tp>::has_trivial_destructor _Trivial_destructor;
; 176  :   __destroy_range_aux(__first, __last, __ptr, _Trivial_destructor());
; 177  : }

	ret	0
??$__destroy_range@PAURESULT@CDB@@U12@@stlp_std@@YAXPAURESULT@CDB@@00@Z ENDP ; stlp_std::__destroy_range<CDB::RESULT *,CDB::RESULT>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xalloc@PBX@@QAE@ABV0@@Z
_TEXT	SEGMENT
??0?$xalloc@PBX@@QAE@ABV0@@Z PROC			; xalloc<void const *>::xalloc<void const *>, COMDAT
; _this$ = eax

; 78   : 													xalloc			(const xalloc<T>&)						{	}

	ret	0
??0?$xalloc@PBX@@QAE@ABV0@@Z ENDP			; xalloc<void const *>::xalloc<void const *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_alloc.h
_TEXT	ENDS
;	COMDAT ??0?$_STLP_alloc_proxy@PAPBXPBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@ABV?$xalloc@PBX@@PAPBX@Z
_TEXT	SEGMENT
??0?$_STLP_alloc_proxy@PAPBXPBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@ABV?$xalloc@PBX@@PAPBX@Z PROC ; stlp_std::priv::_STLP_alloc_proxy<void const * *,void const *,xalloc<void const *> >::_STLP_alloc_proxy<void const * *,void const *,xalloc<void const *> >, COMDAT
; _this$ = eax

; 571  :     _MaybeReboundAlloc(__a), _M_data(__p) {}

	mov	DWORD PTR [eax], 0
	ret	0
??0?$_STLP_alloc_proxy@PAPBXPBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@ABV?$xalloc@PBX@@PAPBX@Z ENDP ; stlp_std::priv::_STLP_alloc_proxy<void const * *,void const *,xalloc<void const *> >::_STLP_alloc_proxy<void const * *,void const *,xalloc<void const *> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_TEXT	ENDS
;	COMDAT ?cv_ptr@?$_VoidCastTraitsAux@PBXPBX@priv@stlp_std@@SAPAPBXPAPBX@Z
_TEXT	SEGMENT
?cv_ptr@?$_VoidCastTraitsAux@PBXPBX@priv@stlp_std@@SAPAPBXPAPBX@Z PROC ; stlp_std::priv::_VoidCastTraitsAux<void const *,void const *>::cv_ptr, COMDAT
; ___ptr$ = eax

; 149  :   { return __ptr; }

	ret	0
?cv_ptr@?$_VoidCastTraitsAux@PBXPBX@priv@stlp_std@@SAPAPBXPAPBX@Z ENDP ; stlp_std::priv::_VoidCastTraitsAux<void const *,void const *>::cv_ptr
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ??0?$_Vector_base@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@ABV?$xalloc@PBX@@@Z
_TEXT	SEGMENT
??0?$_Vector_base@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@ABV?$xalloc@PBX@@@Z PROC ; stlp_std::priv::_Vector_base<void const *,xalloc<void const *> >::_Vector_base<void const *,xalloc<void const *> >, COMDAT
; _this$ = eax

; 67   :     : _M_start(0), _M_finish(0), _M_end_of_storage(__a, 0) {}

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$_Vector_base@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@ABV?$xalloc@PBX@@@Z ENDP ; stlp_std::priv::_Vector_base<void const *,xalloc<void const *> >::_Vector_base<void const *,xalloc<void const *> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator.h
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@PAPBX@stlp_std@@QAE@PAPBX@Z
_TEXT	SEGMENT
??0?$reverse_iterator@PAPBX@stlp_std@@QAE@PAPBX@Z PROC	; stlp_std::reverse_iterator<void const * *>::reverse_iterator<void const * *>, COMDAT
; _this$ = eax
; ___x$ = ecx

; 65   :   explicit reverse_iterator(iterator_type __x) : current(__x) {}

	mov	DWORD PTR [eax], ecx
	ret	0
??0?$reverse_iterator@PAPBX@stlp_std@@QAE@PAPBX@Z ENDP	; stlp_std::reverse_iterator<void const * *>::reverse_iterator<void const * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_TEXT	ENDS
;	COMDAT ?cv_ref@?$_VoidCastTraitsAux@PBXPBX@priv@stlp_std@@SAAAPBXAAPBX@Z
_TEXT	SEGMENT
?cv_ref@?$_VoidCastTraitsAux@PBXPBX@priv@stlp_std@@SAAAPBXAAPBX@Z PROC ; stlp_std::priv::_VoidCastTraitsAux<void const *,void const *>::cv_ref, COMDAT
; ___ref$ = eax

; 155  :   { return __ref; }

	ret	0
?cv_ref@?$_VoidCastTraitsAux@PBXPBX@priv@stlp_std@@SAAAPBXAAPBX@Z ENDP ; stlp_std::priv::_VoidCastTraitsAux<void const *,void const *>::cv_ref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?uncv_cref@?$_VoidCastTraitsAux@PBXPBX@priv@stlp_std@@SAABQBXABQBX@Z
_TEXT	SEGMENT
?uncv_cref@?$_VoidCastTraitsAux@PBXPBX@priv@stlp_std@@SAABQBXABQBX@Z PROC ; stlp_std::priv::_VoidCastTraitsAux<void const *,void const *>::uncv_cref, COMDAT
; ___ref$ = eax

; 147  :   { return __ref; }

	ret	0
?uncv_cref@?$_VoidCastTraitsAux@PBXPBX@priv@stlp_std@@SAABQBXABQBX@Z ENDP ; stlp_std::priv::_VoidCastTraitsAux<void const *,void const *>::uncv_cref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_value_type_ptr@?$_CastTraits@PBXPBD@priv@stlp_std@@SAPAPBDPAPBX@Z
_TEXT	SEGMENT
?to_value_type_ptr@?$_CastTraits@PBXPBD@priv@stlp_std@@SAPAPBDPAPBX@Z PROC ; stlp_std::priv::_CastTraits<void const *,char const *>::to_value_type_ptr, COMDAT
; ___ptr$ = eax

; 207  :   { return __REINTERPRET_CAST(value_type *, cv_traits::cv_ptr(__ptr)); }

	ret	0
?to_value_type_ptr@?$_CastTraits@PBXPBD@priv@stlp_std@@SAPAPBDPAPBX@Z ENDP ; stlp_std::priv::_CastTraits<void const *,char const *>::to_value_type_ptr
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?deallocate@?$xalloc@PBX@@QBEXPAPBXI@Z
_TEXT	SEGMENT
?deallocate@?$xalloc@PBX@@QBEXPAPBXI@Z PROC		; xalloc<void const *>::deallocate, COMDAT
; _p$ = eax

; 83   : 							void					deallocate		(pointer p, size_type n) const			{	xr_free	(p);				}

	test	eax, eax
	je	SHORT $LN3@deallocate@14
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN3@deallocate@14:
	ret	0
?deallocate@?$xalloc@PBX@@QBEXPAPBXI@Z ENDP		; xalloc<void const *>::deallocate
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?size@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QBEIXZ PROC ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::size, COMDAT
; _this$ = ecx

; 180  :   size_type size() const        { return size_type(this->_M_finish - this->_M_start); }

	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
	ret	0
?size@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QBEIXZ ENDP ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAEPAPBXXZ
_TEXT	SEGMENT
?end@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAEPAPBXXZ PROC ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::end, COMDAT
; _this$ = eax

; 172  :   iterator end()               { return this->_M_finish; }

	mov	eax, DWORD PTR [eax+4]
	ret	0
?end@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAEPAPBXXZ ENDP ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAEPAPBXXZ
_TEXT	SEGMENT
?begin@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAEPAPBXXZ PROC ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::begin, COMDAT
; _this$ = eax

; 170  :   iterator begin()             { return this->_M_start; }

	mov	eax, DWORD PTR [eax]
	ret	0
?begin@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAEPAPBXXZ ENDP ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::begin
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_TEXT	ENDS
;	COMDAT ?to_storage_type_cref@?$_CastTraits@PBXPBD@priv@stlp_std@@SAABQBXABQBD@Z
_TEXT	SEGMENT
?to_storage_type_cref@?$_CastTraits@PBXPBD@priv@stlp_std@@SAABQBXABQBD@Z PROC ; stlp_std::priv::_CastTraits<void const *,char const *>::to_storage_type_cref, COMDAT
; ___ref$ = eax

; 224  :   { return cv_traits::uncv_cref(__REINTERPRET_CAST(void_cv_type const&, __ref)); }

	ret	0
?to_storage_type_cref@?$_CastTraits@PBXPBD@priv@stlp_std@@SAABQBXABQBD@Z ENDP ; stlp_std::priv::_CastTraits<void const *,char const *>::to_storage_type_cref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_value_type_ref@?$_CastTraits@PBXPBD@priv@stlp_std@@SAAAPBDAAPBX@Z
_TEXT	SEGMENT
?to_value_type_ref@?$_CastTraits@PBXPBD@priv@stlp_std@@SAAAPBDAAPBX@Z PROC ; stlp_std::priv::_CastTraits<void const *,char const *>::to_value_type_ref, COMDAT
; ___ref$ = eax

; 213  :   { return __REINTERPRET_CAST(value_type &, cv_traits::cv_ref(__ref)); }

	ret	0
?to_value_type_ref@?$_CastTraits@PBXPBD@priv@stlp_std@@SAAAPBDAAPBX@Z ENDP ; stlp_std::priv::_CastTraits<void const *,char const *>::to_value_type_ref
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ??1?$_Vector_base@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_base@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@XZ PROC ; stlp_std::priv::_Vector_base<void const *,xalloc<void const *> >::~_Vector_base<void const *,xalloc<void const *> >, COMDAT
; _this$ = eax

; 85   :     if (_M_start != _STLP_DEFAULT_CONSTRUCTED(pointer))

	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN6@Vector_bas@6

; 86   :       _M_end_of_storage.deallocate(_M_start, _M_end_of_storage._M_data - _M_start);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN6@Vector_bas@6:

; 87   :   }

	ret	0
??1?$_Vector_base@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@XZ ENDP ; stlp_std::priv::_Vector_base<void const *,xalloc<void const *> >::~_Vector_base<void const *,xalloc<void const *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?back@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAEAAPBXXZ
_TEXT	SEGMENT
?back@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAEAAPBXXZ PROC ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::back, COMDAT
; _this$ = eax

; 195  :   reference back()              { return *(end() - 1); }

	mov	eax, DWORD PTR [eax+4]
	sub	eax, 4
	ret	0
?back@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAEAAPBXXZ ENDP ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::back
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?rend@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAPBX@3@XZ
_TEXT	SEGMENT
?rend@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAPBX@3@XZ PROC ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::rend, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 177  :   reverse_iterator rend()                { return reverse_iterator(begin()); }

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	ret	0
?rend@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAPBX@3@XZ ENDP ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::rend
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?rbegin@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAPBX@3@XZ
_TEXT	SEGMENT
?rbegin@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAPBX@3@XZ PROC ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::rbegin, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 175  :   reverse_iterator rbegin()              { return reverse_iterator(end()); }

	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
	ret	0
?rbegin@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAPBX@3@XZ ENDP ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::rbegin
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xalloc@PBD@@QAE@XZ
_TEXT	SEGMENT
??0?$xalloc@PBD@@QAE@XZ PROC				; xalloc<char const *>::xalloc<char const *>, COMDAT
; _this$ = eax

; 77   : 													xalloc			()										{	}

	ret	0
??0?$xalloc@PBD@@QAE@XZ ENDP				; xalloc<char const *>::xalloc<char const *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?size@?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QBEIXZ PROC	; stlp_std::vector<char const *,xalloc<char const *> >::size, COMDAT
; _this$ = ecx

; 89   :   size_type size() const        { return _M_impl.size(); }

	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
	ret	0
?size@?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QBEIXZ ENDP	; stlp_std::vector<char const *,xalloc<char const *> >::size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAEPAPBDXZ
_TEXT	SEGMENT
?begin@?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAEPAPBDXZ PROC ; stlp_std::vector<char const *,xalloc<char const *> >::begin, COMDAT
; _this$ = eax

; 79   :   iterator begin()             { return cast_traits::to_value_type_ptr(_M_impl.begin()); }

	mov	eax, DWORD PTR [eax]
	ret	0
?begin@?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAEPAPBDXZ ENDP ; stlp_std::vector<char const *,xalloc<char const *> >::begin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?back@?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAEAAPBDXZ
_TEXT	SEGMENT
?back@?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAEAAPBDXZ PROC ; stlp_std::vector<char const *,xalloc<char const *> >::back, COMDAT
; _this$ = eax

; 100  :   reference back()              { return cast_traits::to_value_type_ref(_M_impl.back()); }

	mov	eax, DWORD PTR [eax+4]
	sub	eax, 4
	ret	0
?back@?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAEAAPBDXZ ENDP ; stlp_std::vector<char const *,xalloc<char const *> >::back
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??A?$xr_vector@PBDV?$xalloc@PBD@@@@QAEAAPBDI@Z
_TEXT	SEGMENT
??A?$xr_vector@PBDV?$xalloc@PBD@@@@QAEAAPBDI@Z PROC	; xr_vector<char const *,xalloc<char const *> >::operator[], COMDAT
; _this$ = eax
; __Pos$ = edx

; 139  : 	reference operator[]		(size_type _Pos)					{ {VERIFY2(_Pos<size(),make_string("index is out of range: index requested[%d], size of container[%d]", _Pos, size()).c_str());} return (*(begin() + _Pos)); }

	mov	ecx, DWORD PTR [eax]
	lea	eax, DWORD PTR [ecx+edx*4]
	ret	0
??A?$xr_vector@PBDV?$xalloc@PBD@@@@QAEAAPBDI@Z ENDP	; xr_vector<char const *,xalloc<char const *> >::operator[]
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?size@?$xr_vector@PBDV?$xalloc@PBD@@@@QBEIXZ
_TEXT	SEGMENT
?size@?$xr_vector@PBDV?$xalloc@PBD@@@@QBEIXZ PROC	; xr_vector<char const *,xalloc<char const *> >::size, COMDAT
; _this$ = ecx

; 126  : 	u32		size				() const							{ return (u32)inherited::size();} 

	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
	ret	0
?size@?$xr_vector@PBDV?$xalloc@PBD@@@@QBEIXZ ENDP	; xr_vector<char const *,xalloc<char const *> >::size
_TEXT	ENDS
PUBLIC	?is_enough_address_space_available@@YA_NXZ	; is_enough_address_space_available
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\engineapi.cpp
;	COMDAT ?is_enough_address_space_available@@YA_NXZ
_TEXT	SEGMENT
_system_info$ = -36					; size = 36
?is_enough_address_space_available@@YA_NXZ PROC		; is_enough_address_space_available, COMDAT

; 48   : {

	sub	esp, 36					; 00000024H

; 49   : 	SYSTEM_INFO		system_info;
; 50   : 
; 51   : 	SECUROM_MARKER_HIGH_SECURITY_ON(12)

	DB	-21					; ffffffebH
	DB	14					; 0000000eH
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	48					; 00000030H
	DB	87					; 00000057H
	DB	121					; 00000079H
	DB	71					; 00000047H
	DB	49					; 00000031H
	DB	107					; 0000006bH
	DB	109					; 0000006dH
	DB	33					; 00000021H
	DB	12					; 0000000cH
	DB	0
	DB	0
	DB	0

; 52   : 
; 53   : 	GetSystemInfo	( &system_info );

	lea	eax, DWORD PTR _system_info$[esp+36]
	push	eax
	call	DWORD PTR __imp__GetSystemInfo@4

; 54   : 
; 55   : 	SECUROM_MARKER_HIGH_SECURITY_OFF(12)

	DB	-21					; ffffffebH
	DB	14					; 0000000eH
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	48					; 00000030H
	DB	87					; 00000057H
	DB	121					; 00000079H
	DB	71					; 00000047H
	DB	49					; 00000031H
	DB	107					; 0000006bH
	DB	109					; 0000006dH
	DB	34					; 00000022H
	DB	12					; 0000000cH
	DB	0
	DB	0
	DB	0

; 56   : 
; 57   : 	return			(*(u32*)&system_info.lpMaximumApplicationAddress) > 0x90000000;	

	mov	ecx, -1879048192			; 90000000H
	cmp	ecx, DWORD PTR _system_info$[esp+48]
	sbb	eax, eax
	neg	eax

; 58   : }

	add	esp, 36					; 00000024H
	ret	0
?is_enough_address_space_available@@YA_NXZ ENDP		; is_enough_address_space_available
_TEXT	ENDS
PUBLIC	??1CEngineAPI@@QAE@XZ				; CEngineAPI::~CEngineAPI
; Function compile flags: /Ogtpy
;	COMDAT ??1CEngineAPI@@QAE@XZ
_TEXT	SEGMENT
??1CEngineAPI@@QAE@XZ PROC				; CEngineAPI::~CEngineAPI, COMDAT
; _this$ = ecx

; 32   : 	// destroy quality token here
; 33   : 	if (vid_quality_token)

	mov	ecx, DWORD PTR ?vid_quality_token@@3PAUxr_token@@A ; vid_quality_token
	test	ecx, ecx
	je	SHORT $LN4@CEngineAPI
	push	ebx

; 34   : 	{
; 35   : 		for( int i=0; vid_quality_token[i].name; i++ )

	mov	ebx, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	push	edi
	xor	edi, edi
	cmp	DWORD PTR [ecx], edi
	je	SHORT $LN1@CEngineAPI
	xor	eax, eax
	push	esi
	npad	5
$LL3@CEngineAPI:

; 36   : 		{
; 37   : 			xr_free					(vid_quality_token[i].name);

	lea	esi, DWORD PTR [eax+ecx]
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@CEngineAPI
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebx
	mov	DWORD PTR [esi], 0
	mov	ecx, DWORD PTR ?vid_quality_token@@3PAUxr_token@@A ; vid_quality_token
$LN2@CEngineAPI:
	add	edi, 1
	lea	eax, DWORD PTR [edi*8]
	cmp	DWORD PTR [eax+ecx], 0
	jne	SHORT $LL3@CEngineAPI
	pop	esi
$LN1@CEngineAPI:

; 38   : 		}
; 39   : 		xr_free						(vid_quality_token);

	test	ecx, ecx
	je	SHORT $LN10@CEngineAPI
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	ebx
$LN10@CEngineAPI:
	pop	edi

; 40   : 		vid_quality_token			= NULL;

	mov	DWORD PTR ?vid_quality_token@@3PAUxr_token@@A, 0 ; vid_quality_token
	pop	ebx
$LN4@CEngineAPI:

; 41   : 	}
; 42   : }

	ret	0
??1CEngineAPI@@QAE@XZ ENDP				; CEngineAPI::~CEngineAPI
_TEXT	ENDS
PUBLIC	?dummy@@YAXXZ					; dummy
; Function compile flags: /Ogtpy
;	COMDAT ?dummy@@YAXXZ
_TEXT	SEGMENT
?dummy@@YAXXZ PROC					; dummy, COMDAT

; 18   : };

	ret	0
?dummy@@YAXXZ ENDP					; dummy
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
;	COMDAT ??$_Destroy_Range@PAURESULT@CDB@@@stlp_std@@YAXPAURESULT@CDB@@0@Z
_TEXT	SEGMENT
??$_Destroy_Range@PAURESULT@CDB@@@stlp_std@@YAXPAURESULT@CDB@@0@Z PROC ; stlp_std::_Destroy_Range<CDB::RESULT *>, COMDAT

; 181  :   __destroy_range(__first, __last, _STLP_VALUE_TYPE(__first, _ForwardIterator));
; 182  : }

	ret	0
??$_Destroy_Range@PAURESULT@CDB@@@stlp_std@@YAXPAURESULT@CDB@@0@Z ENDP ; stlp_std::_Destroy_Range<CDB::RESULT *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy_ptrs@PAURESULT@CDB@@PAU12@@priv@stlp_std@@YAPAURESULT@CDB@@PAU23@00ABU__true_type@1@@Z
_TEXT	SEGMENT
??$__copy_ptrs@PAURESULT@CDB@@PAU12@@priv@stlp_std@@YAPAURESULT@CDB@@PAU23@00ABU__true_type@1@@Z PROC ; stlp_std::priv::__copy_ptrs<CDB::RESULT *,CDB::RESULT *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 255  :   // we know they all pointers, so this cast is OK
; 256  :   //  return (_OutputIter)__copy_trivial(&(*__first), &(*__last), &(*__result));
; 257  :   return (_OutputIter)__copy_trivial(__first, __last, __result);

	sub	ecx, edx
	push	esi
	mov	esi, ecx
	je	SHORT $LN6@copy_ptrs@8
	push	esi
	push	edx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN6@copy_ptrs@8:
	pop	esi

; 258  : }

	ret	0
??$__copy_ptrs@PAURESULT@CDB@@PAU12@@priv@stlp_std@@YAPAURESULT@CDB@@PAU23@00ABU__true_type@1@@Z ENDP ; stlp_std::priv::__copy_ptrs<CDB::RESULT *,CDB::RESULT *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?_M_erase@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@AAEPAURESULT@CDB@@PAU45@0ABU__false_type@3@@Z
_TEXT	SEGMENT
?_M_erase@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@AAEPAURESULT@CDB@@PAU45@0ABU__false_type@3@@Z PROC ; stlp_std::priv::_Impl_vector<CDB::RESULT,xalloc<CDB::RESULT> >::_M_erase, COMDAT
; _this$ = ebx
; ___first$ = edi
; ___last$ = eax

; 578  :   iterator _M_erase(iterator __first, iterator __last, const __false_type& /*_Movable*/) {

	push	esi

; 579  :     pointer __i = _STLP_PRIV __copy_ptrs(__last, this->_M_finish, __first, _TrivialCopy());

	mov	esi, DWORD PTR [ebx+4]
	sub	esi, eax
	je	SHORT $LN7@M_erase@7
	push	esi
	push	eax
	push	edi
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi

; 580  :     _STLP_STD::_Destroy_Range(__i, this->_M_finish);
; 581  :     this->_M_finish = __i;

	mov	DWORD PTR [ebx+4], eax

; 582  :     return __first;

	mov	eax, edi
	pop	esi

; 583  :   }

	ret	0

; 579  :     pointer __i = _STLP_PRIV __copy_ptrs(__last, this->_M_finish, __first, _TrivialCopy());

$LN7@M_erase@7:

; 580  :     _STLP_STD::_Destroy_Range(__i, this->_M_finish);
; 581  :     this->_M_finish = __i;

	mov	DWORD PTR [ebx+4], edi

; 582  :     return __first;

	mov	eax, edi
	pop	esi

; 583  :   }

	ret	0
?_M_erase@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@AAEPAURESULT@CDB@@PAU45@0ABU__false_type@3@@Z ENDP ; stlp_std::priv::_Impl_vector<CDB::RESULT,xalloc<CDB::RESULT> >::_M_erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?erase@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@QAEPAURESULT@CDB@@PAU45@0@Z
_TEXT	SEGMENT
?erase@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@QAEPAURESULT@CDB@@PAU45@0@Z PROC ; stlp_std::priv::_Impl_vector<CDB::RESULT,xalloc<CDB::RESULT> >::erase, COMDAT
; _this$ = ebx
; ___first$ = edi
; ___last$ = eax

; 590  :     if (__first == __last)

	cmp	edi, eax

; 591  :       return __first;

	je	SHORT $LN12@erase@6
	push	esi

; 592  :     return _M_erase(__first, __last, _Movable());

	mov	esi, DWORD PTR [ebx+4]
	sub	esi, eax
	je	SHORT $LN10@erase@6
	push	esi
	push	eax
	push	edi
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
	mov	DWORD PTR [ebx+4], eax
	pop	esi
	mov	eax, edi

; 593  :   }

	ret	0

; 592  :     return _M_erase(__first, __last, _Movable());

$LN10@erase@6:
	mov	eax, edi
	mov	DWORD PTR [ebx+4], eax
	pop	esi
$LN12@erase@6:
	mov	eax, edi

; 593  :   }

	ret	0
?erase@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@QAEPAURESULT@CDB@@PAU45@0@Z ENDP ; stlp_std::priv::_Impl_vector<CDB::RESULT,xalloc<CDB::RESULT> >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?clear@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@QAEXXZ PROC ; stlp_std::priv::_Impl_vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear, COMDAT
; _this$ = edi

; 611  :     erase(begin(), end());

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN10@clear@10
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN16@clear@10
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN16@clear@10:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN10@clear@10:

; 612  :   }

	ret	0
?clear@?$_Impl_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@priv@stlp_std@@QAEXXZ ENDP ; stlp_std::priv::_Impl_vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?clear@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@stlp_std@@QAEXXZ PROC ; stlp_std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear, COMDAT
; _this$ = edi

; 223  :   void clear() { _M_impl.clear(); }

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN12@clear@11
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN18@clear@11
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN18@clear@11:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN12@clear@11:
	ret	0
?clear@?$vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@stlp_std@@QAEXXZ ENDP ; stlp_std::vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?clear_and_free@?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QAEXXZ
_TEXT	SEGMENT
?clear_and_free@?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QAEXXZ PROC ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear_and_free, COMDAT
; _this$ = edi

; 128  : 	void	clear_and_free		()									{ inherited::clear();			}

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN14@clear_and_@2
	push	esi
	mov	esi, ecx
	sub	esi, ecx
	je	SHORT $LN20@clear_and_@2
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN20@clear_and_@2:
	mov	DWORD PTR [edi+4], eax
	pop	esi
$LN14@clear_and_@2:
	ret	0
?clear_and_free@?$xr_vector@URESULT@CDB@@V?$xalloc@URESULT@CDB@@@@@@QAEXXZ ENDP ; xr_vector<CDB::RESULT,xalloc<CDB::RESULT> >::clear_and_free
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$__destroy_range@V?$reverse_iterator@PAPBX@stlp_std@@PBX@stlp_std@@YAXV?$reverse_iterator@PAPBX@0@0PAPBX@Z
_TEXT	SEGMENT
___first$ = 8						; size = 4
___last$ = 12						; size = 4
??$__destroy_range@V?$reverse_iterator@PAPBX@stlp_std@@PBX@stlp_std@@YAXV?$reverse_iterator@PAPBX@0@0PAPBX@Z PROC ; stlp_std::__destroy_range<stlp_std::reverse_iterator<void const * *>,void const *>, COMDAT

; 175  :   typedef typename __type_traits<_Tp>::has_trivial_destructor _Trivial_destructor;
; 176  :   __destroy_range_aux(__first, __last, __ptr, _Trivial_destructor());
; 177  : }

	ret	0
??$__destroy_range@V?$reverse_iterator@PAPBX@stlp_std@@PBX@stlp_std@@YAXV?$reverse_iterator@PAPBX@0@0PAPBX@Z ENDP ; stlp_std::__destroy_range<stlp_std::reverse_iterator<void const * *>,void const *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Copy_Construct@PBX@stlp_std@@YAXPAPBXABQBX@Z
_TEXT	SEGMENT
??$_Copy_Construct@PBX@stlp_std@@YAXPAPBXABQBX@Z PROC	; stlp_std::_Copy_Construct<void const *>, COMDAT
; ___p$ = eax
; ___val$ = ecx

; 110  : #if defined (_STLP_DEBUG_UNINITIALIZED)
; 111  :   memset((char*)__p, _STLP_SHRED_BYTE, sizeof(_Tp));
; 112  : #endif
; 113  :   _STLP_PLACEMENT_NEW (__p) _Tp(__val);

	test	eax, eax
	je	SHORT $LN3@Copy_Const@5
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Copy_Const@5:

; 114  : }

	ret	0
??$_Copy_Construct@PBX@stlp_std@@YAXPAPBXABQBX@Z ENDP	; stlp_std::_Copy_Construct<void const *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy_Range@V?$reverse_iterator@PAPBX@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAPBX@0@0@Z
_TEXT	SEGMENT
___first$ = 8						; size = 4
___last$ = 12						; size = 4
??$_Destroy_Range@V?$reverse_iterator@PAPBX@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAPBX@0@0@Z PROC ; stlp_std::_Destroy_Range<stlp_std::reverse_iterator<void const * *> >, COMDAT

; 181  :   __destroy_range(__first, __last, _STLP_VALUE_TYPE(__first, _ForwardIterator));
; 182  : }

	ret	0
??$_Destroy_Range@V?$reverse_iterator@PAPBX@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAPBX@0@0@Z ENDP ; stlp_std::_Destroy_Range<stlp_std::reverse_iterator<void const * *> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ??0?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@ABV?$xalloc@PBX@@@Z
_TEXT	SEGMENT
??0?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@ABV?$xalloc@PBX@@@Z PROC ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::_Impl_vector<void const *,xalloc<void const *> >, COMDAT
; _this$ = eax

; 208  :     : _STLP_PRIV _Vector_base<_Tp, _Alloc>(__a) {}

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@ABV?$xalloc@PBX@@@Z ENDP ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::_Impl_vector<void const *,xalloc<void const *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@XZ PROC ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::~_Impl_vector<void const *,xalloc<void const *> >, COMDAT
; _this$ = eax

; 286  :   ~vector() { _STLP_STD::_Destroy_Range(rbegin(), rend()); }

	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN34@Impl_vecto@3
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN34@Impl_vecto@3:
	ret	0
??1?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAE@XZ ENDP ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::~_Impl_vector<void const *,xalloc<void const *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAE@XZ PROC	; stlp_std::vector<char const *,xalloc<char const *> >::~vector<char const *,xalloc<char const *> >, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN36@vector@5
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN36@vector@5:
	ret	0
??1?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAE@XZ ENDP	; stlp_std::vector<char const *,xalloc<char const *> >::~vector<char const *,xalloc<char const *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$xr_vector@PBDV?$xalloc@PBD@@@@QAE@XZ
_TEXT	SEGMENT
??1?$xr_vector@PBDV?$xalloc@PBD@@@@QAE@XZ PROC		; xr_vector<char const *,xalloc<char const *> >::~xr_vector<char const *,xalloc<char const *> >, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN38@xr_vector@2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN38@xr_vector@2:
	ret	0
??1?$xr_vector@PBDV?$xalloc@PBD@@@@QAE@XZ ENDP		; xr_vector<char const *,xalloc<char const *> >::~xr_vector<char const *,xalloc<char const *> >
_TEXT	ENDS
PUBLIC	?InitializeNotDedicated@CEngineAPI@@QAEXXZ	; CEngineAPI::InitializeNotDedicated
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\engineapi.cpp
;	COMDAT ?InitializeNotDedicated@CEngineAPI@@QAEXXZ
_TEXT	SEGMENT
?InitializeNotDedicated@CEngineAPI@@QAEXXZ PROC		; CEngineAPI::InitializeNotDedicated, COMDAT
; _this$ = ecx

; 63   : {

	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	esi, ecx

; 64   : 	SECUROM_MARKER_HIGH_SECURITY_ON(2)

	DB	-21					; ffffffebH
	DB	14					; 0000000eH
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	48					; 00000030H
	DB	87					; 00000057H
	DB	121					; 00000079H
	DB	71					; 00000047H
	DB	49					; 00000031H
	DB	107					; 0000006bH
	DB	109					; 0000006dH
	DB	33					; 00000021H
	DB	2
	DB	0
	DB	0
	DB	0

; 65   : 
; 66   : 	LPCSTR			r2_name	= "xrRender_R2.dll";
; 67   : 	LPCSTR			r3_name	= "xrRender_R3.dll";
; 68   : 	LPCSTR			r4_name	= "xrRender_R4.dll";
; 69   : 
; 70   : 	if (psDeviceFlags.test(rsR4))

	push	2097152					; 00200000H
	mov	ecx, OFFSET ?psDeviceFlags@@3U?$_flags@I@@A ; psDeviceFlags
	call	?test@?$_flags@I@@QBEHI@Z		; _flags<unsigned int>::test
	test	eax, eax
	mov	ebp, DWORD PTR __imp_?Msg@@YAXPBDZZ
	mov	edi, DWORD PTR __imp_?Log@@YAXPBD0@Z
	mov	ebx, DWORD PTR __imp__LoadLibraryA@4
	je	SHORT $LN7@Initialize

; 71   : 	{
; 72   : 		// try to initialize R4
; 73   : 		Log				("Loading DLL:",	r4_name);

	push	OFFSET ??_C@_0BA@OJDAFAOG@xrRender_R4?4dll?$AA@
	push	OFFSET ??_C@_0N@JIKIMOFM@Loading?5DLL?3?$AA@
	call	edi
	add	esp, 8

; 74   : 		hRender			= LoadLibrary		(r4_name);

	push	OFFSET ??_C@_0BA@OJDAFAOG@xrRender_R4?4dll?$AA@
	call	ebx

; 75   : 		if (0==hRender)	

	test	eax, eax
	mov	DWORD PTR [esi+4], eax
	jne	SHORT $LN7@Initialize

; 76   : 		{
; 77   : 			// try to load R1
; 78   : 			Msg			("! ...Failed - incompatible hardware/pre-Vista OS.");

	push	OFFSET ??_C@_0DC@LFJBJBPM@?$CB?5?4?4?4Failed?5?9?5incompatible?5hardw@
	call	ebp
	add	esp, 4

; 79   : 			psDeviceFlags.set	(rsR2,TRUE);

	push	1
	push	524288					; 00080000H
	mov	ecx, OFFSET ?psDeviceFlags@@3U?$_flags@I@@A ; psDeviceFlags
	call	?set@?$_flags@I@@QAEAAU1@IH@Z		; _flags<unsigned int>::set
$LN7@Initialize:

; 80   : 		}
; 81   : 	}
; 82   : 
; 83   : 	if (psDeviceFlags.test(rsR3))

	push	1048576					; 00100000H
	mov	ecx, OFFSET ?psDeviceFlags@@3U?$_flags@I@@A ; psDeviceFlags
	call	?test@?$_flags@I@@QBEHI@Z		; _flags<unsigned int>::test
	test	eax, eax
	je	SHORT $LN4@Initialize

; 84   : 	{
; 85   : 		// try to initialize R3
; 86   : 		Log				("Loading DLL:",	r3_name);

	push	OFFSET ??_C@_0BA@PEDFGAFO@xrRender_R3?4dll?$AA@
	push	OFFSET ??_C@_0N@JIKIMOFM@Loading?5DLL?3?$AA@
	call	edi
	add	esp, 8

; 87   : 		hRender			= LoadLibrary		(r3_name);

	push	OFFSET ??_C@_0BA@PEDFGAFO@xrRender_R3?4dll?$AA@
	call	ebx

; 88   : 		if (0==hRender)	

	test	eax, eax
	mov	DWORD PTR [esi+4], eax
	jne	SHORT $LN5@Initialize

; 89   : 		{
; 90   : 			// try to load R1
; 91   : 			Msg			("! ...Failed - incompatible hardware/pre-Vista OS.");

	push	OFFSET ??_C@_0DC@LFJBJBPM@?$CB?5?4?4?4Failed?5?9?5incompatible?5hardw@
	call	ebp
	add	esp, 4

; 92   : 			psDeviceFlags.set	(rsR2,TRUE);

	push	1
	push	524288					; 00080000H
	mov	ecx, OFFSET ?psDeviceFlags@@3U?$_flags@I@@A ; psDeviceFlags
	call	?set@?$_flags@I@@QAEAAU1@IH@Z		; _flags<unsigned int>::set

; 93   : 		}
; 94   : 		else

	jmp	SHORT $LN4@Initialize
$LN5@Initialize:

; 95   : 			g_current_renderer	= 3;

	mov	DWORD PTR ?g_current_renderer@@3HA, 3	; g_current_renderer
$LN4@Initialize:

; 96   : 	}
; 97   : 
; 98   : 	if (psDeviceFlags.test(rsR2))	

	push	524288					; 00080000H
	mov	ecx, OFFSET ?psDeviceFlags@@3U?$_flags@I@@A ; psDeviceFlags
	call	?test@?$_flags@I@@QBEHI@Z		; _flags<unsigned int>::test
	test	eax, eax
	je	SHORT $LN1@Initialize

; 99   : 	{
; 100  : 		// try to initialize R2
; 101  : 		psDeviceFlags.set	(rsR4,FALSE);

	push	0
	push	2097152					; 00200000H
	mov	ecx, OFFSET ?psDeviceFlags@@3U?$_flags@I@@A ; psDeviceFlags
	call	?set@?$_flags@I@@QAEAAU1@IH@Z		; _flags<unsigned int>::set

; 102  : 		psDeviceFlags.set	(rsR3,FALSE);

	push	0
	push	1048576					; 00100000H
	mov	ecx, OFFSET ?psDeviceFlags@@3U?$_flags@I@@A ; psDeviceFlags
	call	?set@?$_flags@I@@QAEAAU1@IH@Z		; _flags<unsigned int>::set

; 103  : 		Log				("Loading DLL:",	r2_name);

	push	OFFSET ??_C@_0BA@DPGJLDPL@xrRender_R2?4dll?$AA@
	push	OFFSET ??_C@_0N@JIKIMOFM@Loading?5DLL?3?$AA@
	call	edi
	add	esp, 8

; 104  : 		hRender			= LoadLibrary		(r2_name);

	push	OFFSET ??_C@_0BA@DPGJLDPL@xrRender_R2?4dll?$AA@
	call	ebx

; 105  : 		if (0==hRender)	

	test	eax, eax
	mov	DWORD PTR [esi+4], eax
	jne	SHORT $LN2@Initialize

; 106  : 		{
; 107  : 			// try to load R1
; 108  : 			Msg			("! ...Failed - incompatible hardware.");

	push	OFFSET ??_C@_0CF@CNMGIPII@?$CB?5?4?4?4Failed?5?9?5incompatible?5hardw@
	call	ebp
	add	esp, 4

; 109  : 		}
; 110  : 		else

	jmp	SHORT $LN1@Initialize
$LN2@Initialize:

; 111  : 			g_current_renderer	= 2;

	mov	DWORD PTR ?g_current_renderer@@3HA, 2	; g_current_renderer
$LN1@Initialize:

; 112  : 	}
; 113  : 
; 114  : 	SECUROM_MARKER_HIGH_SECURITY_OFF(2)

	DB	-21					; ffffffebH
	DB	14					; 0000000eH
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	48					; 00000030H
	DB	87					; 00000057H
	DB	121					; 00000079H
	DB	71					; 00000047H
	DB	49					; 00000031H
	DB	107					; 0000006bH
	DB	109					; 0000006dH
	DB	34					; 00000022H
	DB	2
	DB	0
	DB	0
	DB	0
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 115  : }

	ret	0
?InitializeNotDedicated@CEngineAPI@@QAEXXZ ENDP		; CEngineAPI::InitializeNotDedicated
_TEXT	ENDS
PUBLIC	??0CEngineAPI@@QAE@XZ				; CEngineAPI::CEngineAPI
; Function compile flags: /Ogtpy
;	COMDAT ??0CEngineAPI@@QAE@XZ
_TEXT	SEGMENT
??0CEngineAPI@@QAE@XZ PROC				; CEngineAPI::CEngineAPI, COMDAT
; _this$ = ecx

; 20   : {

	mov	eax, ecx

; 21   : 	hGame			= 0;

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx

; 22   : 	hRender			= 0;

	mov	DWORD PTR [eax+4], ecx

; 23   : 	hTuner			= 0;

	mov	DWORD PTR [eax+8], ecx

; 24   : 	pCreate			= 0;

	mov	DWORD PTR [eax+12], ecx

; 25   : 	pDestroy		= 0;

	mov	DWORD PTR [eax+16], ecx

; 26   : 	tune_pause		= dummy	;

	mov	ecx, OFFSET ?dummy@@YAXXZ		; dummy
	mov	DWORD PTR [eax+24], ecx

; 27   : 	tune_resume		= dummy	;

	mov	DWORD PTR [eax+28], ecx

; 28   : }

	ret	0
??0CEngineAPI@@QAE@XZ ENDP				; CEngineAPI::CEngineAPI
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
;	COMDAT ?_M_clear@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@AAEXXZ
_TEXT	SEGMENT
?_M_clear@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@AAEXXZ PROC ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::_M_clear, COMDAT
; _this$ = eax

; 616  :     _STLP_STD::_Destroy_Range(rbegin(), rend());
; 617  :     this->_M_end_of_storage.deallocate(this->_M_start, this->_M_end_of_storage._M_data - this->_M_start);

	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN31@M_clear@4
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN31@M_clear@4:

; 618  :   }

	ret	0
?_M_clear@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@AAEXXZ ENDP ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::_M_clear
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.c
_TEXT	ENDS
;	COMDAT ?_M_insert_overflow@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@AAEXPAPBXABQBXABU__true_type@3@I_N@Z
_TEXT	SEGMENT
___old_size$ = -8					; size = 4
___fill_len$ = -4					; size = 4
___x$ = 8						; size = 4
?_M_insert_overflow@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@AAEXPAPBXABQBXABU__true_type@3@I_N@Z PROC ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::_M_insert_overflow, COMDAT
; _this$ = esi
; ___pos$ = eax

; 109  :                                              size_type __fill_len, bool __atend ) {

	sub	esp, 8
	push	ebx
	push	ebp
	push	edi
	mov	edi, eax

; 110  :   const size_type __old_size = size();

	mov	eax, DWORD PTR [esi+4]
	sub	eax, DWORD PTR [esi]

; 111  :   size_type __len = __old_size + (max)(__old_size, __fill_len);

	lea	ecx, DWORD PTR ___fill_len$[esp+20]
	push	ecx
	lea	edx, DWORD PTR ___old_size$[esp+24]
	sar	eax, 2
	push	edx
	mov	DWORD PTR ___fill_len$[esp+28], 1
	mov	DWORD PTR ___old_size$[esp+28], eax
	call	??$max@I@stlp_std@@YAABIABI0@Z		; stlp_std::max<unsigned int>
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR ___old_size$[esp+28]

; 112  : 
; 113  :   pointer __new_start = this->_M_end_of_storage.allocate(__len, __len);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	add	esp, 8
	lea	ebp, DWORD PTR [eax*4]
	push	ebp
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	mov	ebx, eax

; 114  :   pointer __new_finish = __STATIC_CAST(pointer, _STLP_PRIV __copy_trivial(this->_M_start, __pos, __new_start));

	mov	eax, DWORD PTR [esi]
	sub	edi, eax
	je	SHORT $LN22@M_insert_o@2
	push	edi
	push	eax
	push	ebx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, edi
	jmp	SHORT $LN23@M_insert_o@2
$LN22@M_insert_o@2:
	mov	eax, ebx
$LN23@M_insert_o@2:

; 115  :   // handle insertion
; 116  :   __new_finish = _STLP_PRIV __fill_n(__new_finish, __fill_len, __x);

	mov	ecx, DWORD PTR ___fill_len$[esp+20]
	test	ecx, ecx
	mov	edi, eax
	jbe	SHORT $LN24@M_insert_o@2
	npad	4
$LL26@M_insert_o@2:
	mov	eax, DWORD PTR ___x$[esp+16]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [edi], edx
	sub	ecx, 1
	add	edi, 4
	test	ecx, ecx
	ja	SHORT $LL26@M_insert_o@2
$LN24@M_insert_o@2:

; 117  :   if (!__atend)
; 118  :     __new_finish = __STATIC_CAST(pointer, _STLP_PRIV __copy_trivial(__pos, this->_M_finish, __new_finish)); // copy remainder
; 119  :   _M_clear();

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN63@M_insert_o@2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN63@M_insert_o@2:

; 120  :   _M_set(__new_start, __new_finish, __new_start + __len);

	add	ebp, ebx
	mov	DWORD PTR [esi+4], edi

; 121  : }

	pop	edi
	mov	DWORD PTR [esi+8], ebp
	pop	ebp
	mov	DWORD PTR [esi], ebx
	pop	ebx
	add	esp, 8
	ret	4
?_M_insert_overflow@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@AAEXPAPBXABQBXABU__true_type@3@I_N@Z ENDP ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::_M_insert_overflow
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?push_back@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAEXABQBX@Z
_TEXT	SEGMENT
?push_back@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAEXABQBX@Z PROC ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::push_back, COMDAT
; _this$ = eax
; ___x$ = ecx

; 360  :   void push_back(const _Tp& __x) {

	push	esi
	mov	esi, eax

; 361  : #endif /*!_STLP_DONT_SUP_DFLT_PARAM && !_STLP_NO_ANACHRONISMS*/
; 362  :     if (this->_M_finish != this->_M_end_of_storage._M_data) {

	mov	eax, DWORD PTR [esi+4]
	cmp	eax, DWORD PTR [esi+8]
	je	SHORT $LN2@push_back@7

; 363  :       _Copy_Construct(this->_M_finish, __x);

	test	eax, eax
	je	SHORT $LN7@push_back@7
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx
$LN7@push_back@7:

; 364  :       ++this->_M_finish;

	add	DWORD PTR [esi+4], 4
	pop	esi

; 368  :   }

	ret	0
$LN2@push_back@7:

; 365  :     }
; 366  :     else
; 367  :       _M_insert_overflow(this->_M_finish, __x, _TrivialCopy(), 1UL, true);

	push	ecx
	call	?_M_insert_overflow@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@AAEXPAPBXABQBXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::_M_insert_overflow
	pop	esi

; 368  :   }

	ret	0
?push_back@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@QAEXABQBX@Z ENDP ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::push_back
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ??0?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAE@ABV?$xalloc@PBD@@@Z
_TEXT	SEGMENT
??0?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAE@ABV?$xalloc@PBD@@@Z PROC ; stlp_std::vector<char const *,xalloc<char const *> >::vector<char const *,xalloc<char const *> >, COMDAT
; _this$ = eax

; 106  :   explicit vector(const allocator_type& __a = allocator_type())

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAE@ABV?$xalloc@PBD@@@Z ENDP ; stlp_std::vector<char const *,xalloc<char const *> >::vector<char const *,xalloc<char const *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAEXABQBD@Z
_TEXT	SEGMENT
?push_back@?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAEXABQBD@Z PROC ; stlp_std::vector<char const *,xalloc<char const *> >::push_back, COMDAT
; _this$ = eax
; ___x$ = ecx

; 171  :   { _M_impl.push_back(cast_traits::to_storage_type_cref(__x)); }

	push	esi
	mov	esi, eax
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, DWORD PTR [esi+8]
	je	SHORT $LN8@push_back@8
	test	eax, eax
	je	SHORT $LN13@push_back@8
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx
$LN13@push_back@8:
	add	DWORD PTR [esi+4], 4
	pop	esi
	ret	0
$LN8@push_back@8:
	push	ecx
	call	?_M_insert_overflow@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@AAEXPAPBXABQBXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::_M_insert_overflow
	pop	esi
	ret	0
?push_back@?$vector@PBDV?$xalloc@PBD@@@stlp_std@@QAEXABQBD@Z ENDP ; stlp_std::vector<char const *,xalloc<char const *> >::push_back
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xr_vector@PBDV?$xalloc@PBD@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xr_vector@PBDV?$xalloc@PBD@@@@QAE@XZ PROC		; xr_vector<char const *,xalloc<char const *> >::xr_vector<char const *,xalloc<char const *> >, COMDAT
; _this$ = eax

; 123  : 			xr_vector			()									: inherited	()					{}

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$xr_vector@PBDV?$xalloc@PBD@@@@QAE@XZ ENDP		; xr_vector<char const *,xalloc<char const *> >::xr_vector<char const *,xalloc<char const *> >
_TEXT	ENDS
PUBLIC	?CreateRendererList@CEngineAPI@@QAEXXZ		; CEngineAPI::CreateRendererList
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\engineapi.cpp
;	COMDAT ?CreateRendererList@CEngineAPI@@QAEXXZ
_TEXT	SEGMENT
_bSupports_r2$ = -20					; size = 1
_bSupports_r2_5$ = -19					; size = 1
_bSupports_r3$ = -18					; size = 1
_bSupports_r4$ = -17					; size = 1
$T289007 = -16						; size = 4
_test_dx10_rendering$115091 = -16			; size = 4
__tmp$ = -12						; size = 12
?CreateRendererList@CEngineAPI@@QAEXXZ PROC		; CEngineAPI::CreateRendererList, COMDAT
; _this$ = ecx

; 189  : {

	sub	esp, 20					; 00000014H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 190  : 	//	TODO: ask renderers if they are supported!
; 191  : 	if(vid_quality_token != NULL)		return;

	xor	edi, edi
	cmp	DWORD PTR ?vid_quality_token@@3PAUxr_token@@A, edi ; vid_quality_token
	mov	esi, ecx
	jne	$LN156@CreateRend

; 192  : 	bool bSupports_r2 = false;
; 193  : 	bool bSupports_r2_5 = false;
; 194  : 	bool bSupports_r3 = false;
; 195  : 	bool bSupports_r4 = false;
; 196  : 
; 197  : 	LPCSTR			r2_name	= "xrRender_R2.dll";
; 198  : 	LPCSTR			r3_name	= "xrRender_R3.dll";
; 199  : 	LPCSTR			r4_name	= "xrRender_R4.dll";
; 200  : 
; 201  : 	if (strstr(Core.Params,"-perfhud_hack"))

	mov	eax, DWORD PTR __imp_?Core@@3VxrCore@@A
	add	eax, 1232				; 000004d0H
	push	OFFSET ??_C@_0O@EDACHDEB@?9perfhud_hack?$AA@
	push	eax
	mov	BYTE PTR _bSupports_r2$[esp+44], 0
	mov	BYTE PTR _bSupports_r2_5$[esp+44], 0
	mov	BYTE PTR _bSupports_r3$[esp+44], 0
	mov	BYTE PTR _bSupports_r4$[esp+44], 0
	call	DWORD PTR __imp__strstr
	add	esp, 8
	test	eax, eax
	je	SHORT $LN44@CreateRend

; 202  : 	{
; 203  : 		bSupports_r2 = true;

	mov	BYTE PTR _bSupports_r2$[esp+36], 1

; 204  : 		bSupports_r2_5 = true;

	mov	BYTE PTR _bSupports_r2_5$[esp+36], 1

; 205  : 		bSupports_r3 = true;

	mov	BYTE PTR _bSupports_r3$[esp+36], 1

; 206  : 		bSupports_r4 = true;

	mov	BYTE PTR _bSupports_r4$[esp+36], 1

; 207  : 	}
; 208  : 	else

	jmp	$LN32@CreateRend
$LN44@CreateRend:

; 209  : 	{
; 210  : 		// try to initialize R2
; 211  : 		Log				("Loading DLL:",	r2_name);

	mov	ebp, DWORD PTR __imp_?Log@@YAXPBD0@Z
	push	OFFSET ??_C@_0BA@DPGJLDPL@xrRender_R2?4dll?$AA@
	push	OFFSET ??_C@_0N@JIKIMOFM@Loading?5DLL?3?$AA@
	call	ebp

; 212  : 		hRender			= LoadLibrary		(r2_name);

	mov	ebx, DWORD PTR __imp__LoadLibraryA@4
	add	esp, 8
	push	OFFSET ??_C@_0BA@DPGJLDPL@xrRender_R2?4dll?$AA@
	call	ebx

; 213  : 		if (hRender)	

	cmp	eax, edi
	mov	DWORD PTR [esi+4], eax
	je	SHORT $LN42@CreateRend

; 214  : 		{
; 215  : 			bSupports_r2 = true;
; 216  : 			SupportsAdvancedRendering *test_rendering = (SupportsAdvancedRendering*) GetProcAddress(hRender,"SupportsAdvancedRendering");	

	push	OFFSET ??_C@_0BK@KNJLDIN@SupportsAdvancedRendering?$AA@
	push	eax
	mov	BYTE PTR _bSupports_r2$[esp+44], 1
	call	DWORD PTR __imp__GetProcAddress@8

; 217  : 			R_ASSERT(test_rendering);

	cmp	BYTE PTR ?ignore_always@?O@??CreateRendererList@CEngineAPI@@QAEXXZ@4_NA, 0
	mov	edi, eax
	jne	SHORT $LN40@CreateRend
	test	edi, edi
	jne	SHORT $LN40@CreateRend
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?O@??CreateRendererList@CEngineAPI@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BP@DKGCOAIB@CEngineAPI?3?3CreateRendererList?$AA@
	push	217					; 000000d9H
	push	OFFSET ??_C@_0DC@PKMJOHPN@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0P@MMGGOEAE@test_rendering?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN40@CreateRend:

; 218  : 			bSupports_r2_5 = test_rendering();

	call	edi
	mov	BYTE PTR _bSupports_r2_5$[esp+36], al

; 219  : 			FreeLibrary(hRender);

	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	DWORD PTR __imp__FreeLibrary@4
$LN42@CreateRend:

; 220  : 		}
; 221  : 
; 222  : 		// try to initialize R3
; 223  : 		Log				("Loading DLL:",	r3_name);

	push	OFFSET ??_C@_0BA@PEDFGAFO@xrRender_R3?4dll?$AA@
	push	OFFSET ??_C@_0N@JIKIMOFM@Loading?5DLL?3?$AA@
	call	ebp

; 224  : 		//	Hide "d3d10.dll not found" message box for XP
; 225  : 		SetErrorMode(SEM_FAILCRITICALERRORS);

	mov	edi, DWORD PTR __imp__SetErrorMode@4
	add	esp, 8
	push	1
	call	edi

; 226  : 		hRender			= LoadLibrary		(r3_name);

	push	OFFSET ??_C@_0BA@PEDFGAFO@xrRender_R3?4dll?$AA@
	call	ebx

; 227  : 		//	Restore error handling
; 228  : 		SetErrorMode(0);

	push	0
	mov	DWORD PTR [esi+4], eax
	call	edi

; 229  : 		if (hRender)	

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN37@CreateRend

; 230  : 		{
; 231  : 			SupportsDX10Rendering *test_dx10_rendering = (SupportsDX10Rendering*) GetProcAddress(hRender,"SupportsDX10Rendering");

	push	OFFSET ??_C@_0BG@OKLIJLBF@SupportsDX10Rendering?$AA@
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8

; 232  : 			R_ASSERT(test_dx10_rendering);

	cmp	BYTE PTR ?ignore_always@?BF@??CreateRendererList@CEngineAPI@@QAEXXZ@4_NA, 0
	mov	DWORD PTR _test_dx10_rendering$115091[esp+36], eax
	jne	SHORT $LN35@CreateRend
	test	eax, eax
	jne	SHORT $LN35@CreateRend
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BF@??CreateRendererList@CEngineAPI@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BP@DKGCOAIB@CEngineAPI?3?3CreateRendererList?$AA@
	push	232					; 000000e8H
	push	OFFSET ??_C@_0DC@PKMJOHPN@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BE@MJDGKPFG@test_dx10_rendering?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
	mov	eax, DWORD PTR _test_dx10_rendering$115091[esp+36]
$LN35@CreateRend:

; 233  : 			bSupports_r3 = test_dx10_rendering();

	call	eax

; 234  : 			FreeLibrary(hRender);

	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	mov	BYTE PTR _bSupports_r3$[esp+40], al
	call	DWORD PTR __imp__FreeLibrary@4
$LN37@CreateRend:

; 235  : 		}
; 236  : 
; 237  : 		// try to initialize R4
; 238  : 		Log				("Loading DLL:",	r4_name);

	push	OFFSET ??_C@_0BA@OJDAFAOG@xrRender_R4?4dll?$AA@
	push	OFFSET ??_C@_0N@JIKIMOFM@Loading?5DLL?3?$AA@
	call	ebp
	add	esp, 8

; 239  : 		//	Hide "d3d10.dll not found" message box for XP
; 240  : 		SetErrorMode	(SEM_FAILCRITICALERRORS);

	push	1
	call	edi

; 241  : 		hRender			= LoadLibrary		(r4_name);

	push	OFFSET ??_C@_0BA@OJDAFAOG@xrRender_R4?4dll?$AA@
	call	ebx

; 242  : 		//	Restore error handling
; 243  : 		SetErrorMode	(0);

	push	0
	mov	DWORD PTR [esi+4], eax
	call	edi

; 244  : 		if (hRender)	

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN171@CreateRend

; 245  : 		{
; 246  : 			SupportsDX11Rendering *test_dx11_rendering = (SupportsDX11Rendering*) GetProcAddress(hRender,"SupportsDX11Rendering");

	push	OFFSET ??_C@_0BG@CLDGEENF@SupportsDX11Rendering?$AA@
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8

; 247  : 			R_ASSERT(test_dx11_rendering);

	cmp	BYTE PTR ?ignore_always@?BM@??CreateRendererList@CEngineAPI@@QAEXXZ@4_NA, 0
	mov	edi, eax
	jne	SHORT $LN30@CreateRend
	test	edi, edi
	jne	SHORT $LN30@CreateRend
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BM@??CreateRendererList@CEngineAPI@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BP@DKGCOAIB@CEngineAPI?3?3CreateRendererList?$AA@
	push	247					; 000000f7H
	push	OFFSET ??_C@_0DC@PKMJOHPN@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BE@FCJDODDJ@test_dx11_rendering?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN30@CreateRend:

; 248  : 			bSupports_r4 = test_dx11_rendering();

	call	edi

; 249  : 			FreeLibrary(hRender);

	mov	edx, DWORD PTR [esi+4]
	push	edx
	mov	BYTE PTR _bSupports_r4$[esp+40], al
	call	DWORD PTR __imp__FreeLibrary@4
$LN171@CreateRend:
	xor	edi, edi
$LN32@CreateRend:

; 250  : 		}
; 251  : 	}
; 252  : 
; 253  : 	hRender = 0;
; 254  : 
; 255  : 	xr_vector<LPCSTR>			_tmp;
; 256  : 	u32 i						= 0;

	mov	ebx, DWORD PTR __imp_?xr_strdup@@YAPADPBD@Z
	mov	DWORD PTR [esi+4], edi
	xor	esi, esi
	mov	DWORD PTR __tmp$[esp+36], edi
	mov	DWORD PTR __tmp$[esp+40], esi
	mov	DWORD PTR __tmp$[esp+44], edi
	xor	ebp, ebp
$LN27@CreateRend:

; 257  : 	bool bBreakLoop = false;
; 258  : 	for(; i<6; ++i)
; 259  : 	{
; 260  : 		switch (i)

	lea	eax, DWORD PTR [ebp-1]
	cmp	eax, 4
	ja	SHORT $LN170@CreateRend
	jmp	DWORD PTR $LN174@CreateRend[eax*4]
$LN22@CreateRend:

; 261  : 		{
; 262  : 		case 1:
; 263  : 			if (!bSupports_r2)

	cmp	BYTE PTR _bSupports_r2$[esp+36], 0

; 264  : 				bBreakLoop = true;
; 265  : 			break;

	jmp	SHORT $LN173@CreateRend
$LN20@CreateRend:

; 266  : 		case 3:		//"renderer_r2.5"
; 267  : 			if (!bSupports_r2_5)

	cmp	BYTE PTR _bSupports_r2_5$[esp+36], 0

; 268  : 				bBreakLoop = true;
; 269  : 			break;

	jmp	SHORT $LN173@CreateRend
$LN18@CreateRend:

; 270  : 		case 4:		//"renderer_r_dx10"
; 271  : 			if (!bSupports_r3)

	cmp	BYTE PTR _bSupports_r3$[esp+36], 0

; 272  : 				bBreakLoop = true;
; 273  : 			break;

	jmp	SHORT $LN173@CreateRend
$LN16@CreateRend:

; 274  : 		case 5:		//"renderer_r_dx11"
; 275  : 			if (!bSupports_r4)

	cmp	BYTE PTR _bSupports_r4$[esp+36], 0
$LN173@CreateRend:
	je	SHORT $LN169@CreateRend
$LN170@CreateRend:

; 276  : 				bBreakLoop = true;
; 277  : 			break;
; 278  : 		default:	;
; 279  : 		}
; 280  : 
; 281  : 		if (bBreakLoop) break;
; 282  : 
; 283  : 		_tmp.push_back				(NULL);

	cmp	esi, DWORD PTR __tmp$[esp+44]
	mov	DWORD PTR $T289007[esp+36], edi
	je	SHORT $LN73@CreateRend
	cmp	esi, edi
	je	SHORT $LN78@CreateRend
	mov	DWORD PTR [esi], edi
$LN78@CreateRend:
	add	esi, 4
	mov	DWORD PTR __tmp$[esp+40], esi
	jmp	SHORT $LN72@CreateRend
$LN73@CreateRend:
	lea	eax, DWORD PTR $T289007[esp+36]
	push	eax
	mov	eax, esi
	lea	esi, DWORD PTR __tmp$[esp+40]
	call	?_M_insert_overflow@?$_Impl_vector@PBXV?$xalloc@PBX@@@priv@stlp_std@@AAEXPAPBXABQBXABU__true_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<void const *,xalloc<void const *> >::_M_insert_overflow
	mov	esi, DWORD PTR __tmp$[esp+40]
$LN72@CreateRend:

; 284  : 		LPCSTR val					= NULL;

	xor	eax, eax

; 285  : 		switch (i)

	cmp	ebp, 5
	ja	SHORT $LN165@CreateRend
	jmp	DWORD PTR $LN175@CreateRend[ebp*4]
$LN10@CreateRend:

; 286  : 		{
; 287  : 		case 0: val ="renderer_r1";			break;

	mov	eax, OFFSET ??_C@_0M@JJOIBOAJ@renderer_r1?$AA@
	jmp	SHORT $LN165@CreateRend
$LN9@CreateRend:

; 288  : 		case 1: val ="renderer_r2a";		break;

	mov	eax, OFFSET ??_C@_0N@HOFLEAF@renderer_r2a?$AA@
	jmp	SHORT $LN165@CreateRend
$LN8@CreateRend:

; 289  : 		case 2: val ="renderer_r2";			break;

	mov	eax, OFFSET ??_C@_0M@LCMFENMK@renderer_r2?$AA@
	jmp	SHORT $LN165@CreateRend
$LN7@CreateRend:

; 290  : 		case 3: val ="renderer_r2.5";		break;

	mov	eax, OFFSET ??_C@_0O@KJJKBJHA@renderer_r2?45?$AA@
	jmp	SHORT $LN165@CreateRend
$LN6@CreateRend:

; 291  : 		case 4: val ="renderer_r3";			break; //  -)

	mov	eax, OFFSET ??_C@_0M@KLNOHMIL@renderer_r3?$AA@
	jmp	SHORT $LN165@CreateRend
$LN5@CreateRend:

; 292  : 		case 5: val ="renderer_r4";			break; //  -)

	mov	eax, OFFSET ??_C@_0M@OEJPOKEM@renderer_r4?$AA@
$LN165@CreateRend:

; 293  : 		}
; 294  : 		if (bBreakLoop) break;
; 295  : 		_tmp.back()					= xr_strdup(val);

	push	eax
	call	ebx
	add	ebp, 1
	add	esp, 4
	cmp	ebp, 6
	mov	DWORD PTR [esi-4], eax
	jb	$LN27@CreateRend
$LN169@CreateRend:

; 296  : 	}
; 297  : 	u32 _cnt								= _tmp.size()+1;

	mov	ebp, DWORD PTR __tmp$[esp+36]

; 298  : 	vid_quality_token						= xr_alloc<xr_token>(_cnt);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	sub	esi, ebp
	sar	esi, 2
	lea	edi, DWORD PTR [esi*8+8]
	push	edi
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	mov	DWORD PTR ?vid_quality_token@@3PAUxr_token@@A, eax ; vid_quality_token

; 299  : 
; 300  : 	vid_quality_token[_cnt-1].id			= -1;

	mov	DWORD PTR [edi+eax-4], -1

; 301  : 	vid_quality_token[_cnt-1].name			= NULL;

	mov	ecx, DWORD PTR ?vid_quality_token@@3PAUxr_token@@A ; vid_quality_token

; 302  : 
; 303  : #ifdef DEBUG
; 304  : 	Msg("Available render modes[%d]:",_tmp.size());
; 305  : #endif // DEBUG
; 306  : 	for(u32 i=0; i<_tmp.size();++i)

	xor	eax, eax
	test	esi, esi
	mov	DWORD PTR [edi+ecx-8], 0
	jbe	SHORT $LN1@CreateRend
	npad	9
$LL3@CreateRend:

; 307  : 	{
; 308  : 		vid_quality_token[i].id				= i;

	mov	edx, DWORD PTR ?vid_quality_token@@3PAUxr_token@@A ; vid_quality_token
	mov	DWORD PTR [edx+eax*8+4], eax

; 309  : 		vid_quality_token[i].name			= _tmp[i];

	mov	ecx, DWORD PTR [ebp+eax*4]
	mov	edx, DWORD PTR ?vid_quality_token@@3PAUxr_token@@A ; vid_quality_token
	mov	DWORD PTR [edx+eax*8], ecx
	add	eax, 1
	cmp	eax, esi
	jb	SHORT $LL3@CreateRend
$LN1@CreateRend:

; 310  : #ifdef DEBUG
; 311  : 		Msg							("[%s]",_tmp[i]);
; 312  : #endif // DEBUG
; 313  : 	}
; 314  : 
; 315  : 	/*
; 316  : 	if(vid_quality_token != NULL)		return;
; 317  : 
; 318  : 	D3DCAPS9					caps;
; 319  : 	CHW							_HW;
; 320  : 	_HW.CreateD3D				();
; 321  : 	_HW.pD3D->GetDeviceCaps		(D3DADAPTER_DEFAULT,D3DDEVTYPE_HAL,&caps);
; 322  : 	_HW.DestroyD3D				();
; 323  : 	u16		ps_ver_major		= u16 ( u32(u32(caps.PixelShaderVersion)&u32(0xf << 8ul))>>8 );
; 324  : 
; 325  : 	xr_vector<LPCSTR>			_tmp;
; 326  : 	u32 i						= 0;
; 327  : 	for(; i<5; ++i)
; 328  : 	{
; 329  : 		bool bBreakLoop = false;
; 330  : 		switch (i)
; 331  : 		{
; 332  : 		case 3:		//"renderer_r2.5"
; 333  : 			if (ps_ver_major < 3)
; 334  : 				bBreakLoop = true;
; 335  : 			break;
; 336  : 		case 4:		//"renderer_r_dx10"
; 337  : 			bBreakLoop = true;
; 338  : 			break;
; 339  : 		default:	;
; 340  : 		}
; 341  : 
; 342  : 		if (bBreakLoop) break;
; 343  : 
; 344  : 		_tmp.push_back				(NULL);
; 345  : 		LPCSTR val					= NULL;
; 346  : 		switch (i)
; 347  : 		{
; 348  : 		case 0: val ="renderer_r1";			break;
; 349  : 		case 1: val ="renderer_r2a";		break;
; 350  : 		case 2: val ="renderer_r2";			break;
; 351  : 		case 3: val ="renderer_r2.5";		break;
; 352  : 		case 4: val ="renderer_r_dx10";		break; //  -)
; 353  : 		}
; 354  : 		_tmp.back()					= xr_strdup(val);
; 355  : 	}
; 356  : 	u32 _cnt								= _tmp.size()+1;
; 357  : 	vid_quality_token						= xr_alloc<xr_token>(_cnt);
; 358  : 
; 359  : 	vid_quality_token[_cnt-1].id			= -1;
; 360  : 	vid_quality_token[_cnt-1].name			= NULL;
; 361  : 
; 362  : #ifdef DEBUG
; 363  : 	Msg("Available render modes[%d]:",_tmp.size());
; 364  : #endif // DEBUG
; 365  : 	for(u32 i=0; i<_tmp.size();++i)
; 366  : 	{
; 367  : 		vid_quality_token[i].id				= i;
; 368  : 		vid_quality_token[i].name			= _tmp[i];
; 369  : #ifdef DEBUG
; 370  : 		Msg							("[%s]",_tmp[i]);
; 371  : #endif // DEBUG
; 372  : 	}
; 373  : 	*/
; 374  : }

	test	ebp, ebp
	je	SHORT $LN156@CreateRend
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	ebp
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN156@CreateRend:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 20					; 00000014H
	ret	0
	npad	1
$LN174@CreateRend:
	DD	$LN22@CreateRend
	DD	$LN170@CreateRend
	DD	$LN20@CreateRend
	DD	$LN18@CreateRend
	DD	$LN16@CreateRend
$LN175@CreateRend:
	DD	$LN10@CreateRend
	DD	$LN9@CreateRend
	DD	$LN8@CreateRend
	DD	$LN7@CreateRend
	DD	$LN6@CreateRend
	DD	$LN5@CreateRend
?CreateRendererList@CEngineAPI@@QAEXXZ ENDP		; CEngineAPI::CreateRendererList
_TEXT	ENDS
PUBLIC	?Initialize@CEngineAPI@@QAEXXZ			; CEngineAPI::Initialize
; Function compile flags: /Ogtpy
;	COMDAT ?Initialize@CEngineAPI@@QAEXXZ
_TEXT	SEGMENT
?Initialize@CEngineAPI@@QAEXXZ PROC			; CEngineAPI::Initialize, COMDAT
; _this$ = ecx

; 120  : {

	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	esi, ecx

; 121  : 	//////////////////////////////////////////////////////////////////////////
; 122  : 	// render
; 123  : 	LPCSTR			r1_name	= "xrRender_R1.dll";
; 124  : 
; 125  : 	#ifndef DEDICATED_SERVER
; 126  : 		InitializeNotDedicated();

	call	?InitializeNotDedicated@CEngineAPI@@QAEXXZ ; CEngineAPI::InitializeNotDedicated

; 127  : 	#endif // DEDICATED_SERVER
; 128  : 
; 129  : 	if (0==hRender)		

	cmp	DWORD PTR [esi+4], 0
	mov	ebp, DWORD PTR __imp_?Log@@YAXPBD0@Z
	mov	ebx, DWORD PTR __imp__LoadLibraryA@4
	jne	$LN67@Initialize@3

; 130  : 	{
; 131  : 		// try to load R1
; 132  : 		psDeviceFlags.set	(rsR4,FALSE);

	push	0
	push	2097152					; 00200000H
	mov	ecx, OFFSET ?psDeviceFlags@@3U?$_flags@I@@A ; psDeviceFlags
	call	?set@?$_flags@I@@QAEAAU1@IH@Z		; _flags<unsigned int>::set

; 133  : 		psDeviceFlags.set	(rsR3,FALSE);

	push	0
	push	1048576					; 00100000H
	mov	ecx, OFFSET ?psDeviceFlags@@3U?$_flags@I@@A ; psDeviceFlags
	call	?set@?$_flags@I@@QAEAAU1@IH@Z		; _flags<unsigned int>::set

; 134  : 		psDeviceFlags.set	(rsR2,FALSE);

	push	0
	push	524288					; 00080000H
	mov	ecx, OFFSET ?psDeviceFlags@@3U?$_flags@I@@A ; psDeviceFlags
	call	?set@?$_flags@I@@QAEAAU1@IH@Z		; _flags<unsigned int>::set

; 135  : 		renderer_value		= 0; //con cmd
; 136  : 
; 137  : 		Log				("Loading DLL:",	r1_name);

	push	OFFSET ??_C@_0BA@LJPNMBFF@xrRender_R1?4dll?$AA@
	push	OFFSET ??_C@_0N@JIKIMOFM@Loading?5DLL?3?$AA@
	mov	DWORD PTR ?renderer_value@@3IA, 0	; renderer_value
	call	ebp
	add	esp, 8

; 138  : 		hRender			= LoadLibrary		(r1_name);

	push	OFFSET ??_C@_0BA@LJPNMBFF@xrRender_R1?4dll?$AA@
	call	ebx

; 139  : 		if (0==hRender)	R_CHK				(GetLastError());

	test	eax, eax
	mov	DWORD PTR [esi+4], eax
	jne	SHORT $LN41@Initialize@3
	call	DWORD PTR __imp__GetLastError@0
	cmp	BYTE PTR ?ignore_always@?8??Initialize@CEngineAPI@@QAEXXZ@4_NA, 0
	jne	SHORT $LN41@Initialize@3
	test	eax, eax
	jge	SHORT $LN41@Initialize@3
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?8??Initialize@CEngineAPI@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BH@NDFMJLMM@CEngineAPI?3?3Initialize?$AA@
	push	139					; 0000008bH
	push	OFFSET ??_C@_0DC@PKMJOHPN@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0P@OLMLMBJL@GetLastError?$CI?$CJ?$AA@
	push	eax
	call	DWORD PTR __imp_?error@xrDebug@@QAEXJPBD0H0AA_N@Z
$LN41@Initialize@3:

; 140  : 		R_ASSERT		(hRender);

	cmp	BYTE PTR ?ignore_always@?N@??Initialize@CEngineAPI@@QAEXXZ@4_NA, 0
	jne	SHORT $LN38@Initialize@3
	cmp	DWORD PTR [esi+4], 0
	jne	SHORT $LN38@Initialize@3
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?N@??Initialize@CEngineAPI@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BH@NDFMJLMM@CEngineAPI?3?3Initialize?$AA@
	push	140					; 0000008cH
	push	OFFSET ??_C@_0DC@PKMJOHPN@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_07LEPDEGCI@hRender?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN38@Initialize@3:

; 141  : 		g_current_renderer	= 1;

	mov	DWORD PTR ?g_current_renderer@@3HA, 1	; g_current_renderer
$LN67@Initialize@3:

; 142  : 	}
; 143  : 
; 144  : 	Device.ConnectToRender();

	cmp	DWORD PTR ?Device@@3VCRenderDevice@@A+868, 0
	jne	SHORT $LN60@Initialize@3
	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	mov	DWORD PTR ?Device@@3VCRenderDevice@@A+868, eax
$LN60@Initialize@3:

; 145  : 
; 146  : 	// game	
; 147  : 	{
; 148  : 		LPCSTR			g_name	= "xrGame.dll";
; 149  : 		Log				("Loading DLL:",g_name);

	push	OFFSET ??_C@_0L@HEPPDCPJ@xrGame?4dll?$AA@
	push	OFFSET ??_C@_0N@JIKIMOFM@Loading?5DLL?3?$AA@
	call	ebp
	add	esp, 8

; 150  : 		hGame			= LoadLibrary	(g_name);

	push	OFFSET ??_C@_0L@HEPPDCPJ@xrGame?4dll?$AA@
	call	ebx

; 151  : 		if (0==hGame)	R_CHK			(GetLastError());

	test	eax, eax
	mov	DWORD PTR [esi], eax
	jne	SHORT $LN32@Initialize@3
	call	DWORD PTR __imp__GetLastError@0
	cmp	BYTE PTR ?ignore_always@?BE@??Initialize@CEngineAPI@@QAEXXZ@4_NA, 0
	jne	SHORT $LN32@Initialize@3
	test	eax, eax
	jge	SHORT $LN32@Initialize@3
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BE@??Initialize@CEngineAPI@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BH@NDFMJLMM@CEngineAPI?3?3Initialize?$AA@
	push	151					; 00000097H
	push	OFFSET ??_C@_0DC@PKMJOHPN@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0P@OLMLMBJL@GetLastError?$CI?$CJ?$AA@
	push	eax
	call	DWORD PTR __imp_?error@xrDebug@@QAEXJPBD0H0AA_N@Z
$LN32@Initialize@3:

; 152  : 		R_ASSERT2		(hGame,"Game DLL raised exception during loading or there is no game DLL at all");

	cmp	BYTE PTR ?ignore_always@?BI@??Initialize@CEngineAPI@@QAEXXZ@4_NA, 0
	jne	SHORT $LN29@Initialize@3
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN29@Initialize@3
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BI@??Initialize@CEngineAPI@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BH@NDFMJLMM@CEngineAPI?3?3Initialize?$AA@
	push	152					; 00000098H
	push	OFFSET ??_C@_0DC@PKMJOHPN@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0EI@MIEJDBBA@Game?5DLL?5raised?5exception?5during@
	push	OFFSET ??_C@_05JLFGAAMF@hGame?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD00H0AA_N@Z
$LN29@Initialize@3:

; 153  : 		pCreate			= (Factory_Create*)		GetProcAddress(hGame,"xrFactory_Create"		);	R_ASSERT(pCreate);

	mov	ecx, DWORD PTR [esi]
	mov	edi, DWORD PTR __imp__GetProcAddress@8
	push	OFFSET ??_C@_0BB@MKHBIDLK@xrFactory_Create?$AA@
	push	ecx
	call	edi
	mov	DWORD PTR [esi+12], eax
	cmp	BYTE PTR ?ignore_always@?BM@??Initialize@CEngineAPI@@QAEXXZ@4_NA, 0
	jne	SHORT $LN25@Initialize@3
	test	eax, eax
	jne	SHORT $LN25@Initialize@3
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?BM@??Initialize@CEngineAPI@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BH@NDFMJLMM@CEngineAPI?3?3Initialize?$AA@
	push	153					; 00000099H
	push	OFFSET ??_C@_0DC@PKMJOHPN@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_07JMLOEFBN@pCreate?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN25@Initialize@3:

; 154  : 		pDestroy		= (Factory_Destroy*)	GetProcAddress(hGame,"xrFactory_Destroy"	);	R_ASSERT(pDestroy);

	mov	edx, DWORD PTR [esi]
	push	OFFSET ??_C@_0BC@CIEMGBIJ@xrFactory_Destroy?$AA@
	push	edx
	call	edi
	mov	DWORD PTR [esi+16], eax
	cmp	BYTE PTR ?ignore_always@?CA@??Initialize@CEngineAPI@@QAEXXZ@4_NA, 0
	jne	SHORT $LN21@Initialize@3
	test	eax, eax
	jne	SHORT $LN21@Initialize@3
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?CA@??Initialize@CEngineAPI@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BH@NDFMJLMM@CEngineAPI?3?3Initialize?$AA@
	push	154					; 0000009aH
	push	OFFSET ??_C@_0DC@PKMJOHPN@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_08GAKIJIAE@pDestroy?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN21@Initialize@3:

; 155  : 	}
; 156  : 
; 157  : 	//////////////////////////////////////////////////////////////////////////
; 158  : 	// vTune
; 159  : 	tune_enabled		= FALSE;

	mov	DWORD PTR [esi+20], 0

; 160  : 	if (strstr(Core.Params,"-tune"))	{

	mov	eax, DWORD PTR __imp_?Core@@3VxrCore@@A
	add	eax, 1232				; 000004d0H
	push	OFFSET ??_C@_05PPHPCHNN@?9tune?$AA@
	push	eax
	call	DWORD PTR __imp__strstr
	add	esp, 8
	test	eax, eax
	je	$LN2@Initialize@3

; 161  : 		LPCSTR			g_name	= "vTuneAPI.dll";
; 162  : 		Log				("Loading DLL:",g_name);

	push	OFFSET ??_C@_0N@CPMNOCHA@vTuneAPI?4dll?$AA@
	push	OFFSET ??_C@_0N@JIKIMOFM@Loading?5DLL?3?$AA@
	call	ebp
	add	esp, 8

; 163  : 		hTuner			= LoadLibrary	(g_name);

	push	OFFSET ??_C@_0N@CPMNOCHA@vTuneAPI?4dll?$AA@
	call	ebx

; 164  : 		if (0==hTuner)	R_CHK			(GetLastError());

	test	eax, eax
	mov	DWORD PTR [esi+8], eax
	jne	SHORT $LN14@Initialize@3
	call	DWORD PTR __imp__GetLastError@0
	cmp	BYTE PTR ?ignore_always@?CJ@??Initialize@CEngineAPI@@QAEXXZ@4_NA, 0
	jne	SHORT $LN14@Initialize@3
	test	eax, eax
	jge	SHORT $LN14@Initialize@3
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?CJ@??Initialize@CEngineAPI@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BH@NDFMJLMM@CEngineAPI?3?3Initialize?$AA@
	push	164					; 000000a4H
	push	OFFSET ??_C@_0DC@PKMJOHPN@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0P@OLMLMBJL@GetLastError?$CI?$CJ?$AA@
	push	eax
	call	DWORD PTR __imp_?error@xrDebug@@QAEXJPBD0H0AA_N@Z
$LN14@Initialize@3:

; 165  : 		R_ASSERT2		(hTuner,"Intel vTune is not installed");

	cmp	BYTE PTR ?ignore_always@?CN@??Initialize@CEngineAPI@@QAEXXZ@4_NA, 0
	jne	SHORT $LN11@Initialize@3
	cmp	DWORD PTR [esi+8], 0
	jne	SHORT $LN11@Initialize@3
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?CN@??Initialize@CEngineAPI@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BH@NDFMJLMM@CEngineAPI?3?3Initialize?$AA@
	push	165					; 000000a5H
	push	OFFSET ??_C@_0DC@PKMJOHPN@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0BN@FHMEHEAC@Intel?5vTune?5is?5not?5installed?$AA@
	push	OFFSET ??_C@_06PEALJFNC@hTuner?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD00H0AA_N@Z
$LN11@Initialize@3:

; 166  : 		tune_enabled	= TRUE;
; 167  : 		tune_pause		= (VTPause*)	GetProcAddress(hTuner,"VTPause"		);	R_ASSERT(tune_pause);

	mov	eax, DWORD PTR [esi+8]
	push	OFFSET ??_C@_07GEAOFIDM@VTPause?$AA@
	push	eax
	mov	DWORD PTR [esi+20], 1
	call	edi
	mov	DWORD PTR [esi+24], eax
	cmp	BYTE PTR ?ignore_always@?DB@??Initialize@CEngineAPI@@QAEXXZ@4_NA, 0
	jne	SHORT $LN7@Initialize@3
	test	eax, eax
	jne	SHORT $LN7@Initialize@3
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?DB@??Initialize@CEngineAPI@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BH@NDFMJLMM@CEngineAPI?3?3Initialize?$AA@
	push	167					; 000000a7H
	push	OFFSET ??_C@_0DC@PKMJOHPN@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0L@KOHIAGHA@tune_pause?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN7@Initialize@3:

; 168  : 		tune_resume		= (VTResume*)	GetProcAddress(hTuner,"VTResume"	);	R_ASSERT(tune_resume);

	mov	ecx, DWORD PTR [esi+8]
	push	OFFSET ??_C@_08JPLHEFMG@VTResume?$AA@
	push	ecx
	call	edi
	mov	DWORD PTR [esi+28], eax
	cmp	BYTE PTR ?ignore_always@?DF@??Initialize@CEngineAPI@@QAEXXZ@4_NA, 0
	jne	SHORT $LN2@Initialize@3
	test	eax, eax
	jne	SHORT $LN2@Initialize@3
	mov	ecx, DWORD PTR __imp_?Debug@@3VxrDebug@@A
	push	OFFSET ?ignore_always@?DF@??Initialize@CEngineAPI@@QAEXXZ@4_NA
	push	OFFSET ??_C@_0BH@NDFMJLMM@CEngineAPI?3?3Initialize?$AA@
	push	168					; 000000a8H
	push	OFFSET ??_C@_0DC@PKMJOHPN@D?3?2CLEARSKY?2sources?2engine?2xrEng@
	push	OFFSET ??_C@_0M@OABHDOCD@tune_resume?$AA@
	call	DWORD PTR __imp_?fail@xrDebug@@QAEXPBD0H0AA_N@Z
$LN2@Initialize@3:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 169  : 	}
; 170  : }

	ret	0
?Initialize@CEngineAPI@@QAEXXZ ENDP			; CEngineAPI::Initialize
PUBLIC	?Destroy@CEngineAPI@@QAEXXZ			; CEngineAPI::Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?Destroy@CEngineAPI@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CEngineAPI@@QAEXXZ PROC			; CEngineAPI::Destroy, COMDAT
; _this$ = ecx

; 173  : {

	push	esi
	mov	esi, ecx

; 174  : 	if (hGame)				{ FreeLibrary(hGame);	hGame	= 0; }

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	push	edi
	mov	edi, DWORD PTR __imp__FreeLibrary@4
	je	SHORT $LN2@Destroy@10
	push	eax
	call	edi
	mov	DWORD PTR [esi], 0
$LN2@Destroy@10:

; 175  : 	if (hRender)			{ FreeLibrary(hRender); hRender = 0; }

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN1@Destroy@10
	push	eax
	call	edi
	mov	DWORD PTR [esi+4], 0
$LN1@Destroy@10:

; 176  : 	pCreate					= 0;
; 177  : 	pDestroy				= 0;
; 178  : 	Engine.Event._destroy	();

	mov	ecx, OFFSET ?Engine@@3VCEngine@@A+36
	mov	DWORD PTR [esi+12], 0
	mov	DWORD PTR [esi+16], 0
	call	?_destroy@CEventAPI@@QAEXXZ		; CEventAPI::_destroy

; 179  : 	XRC.r_clear_compact		();

	mov	ecx, DWORD PTR __imp_?XRC@@3VxrXRC@@A
	pop	edi
	pop	esi
	jmp	DWORD PTR __imp_?r_clear_compact@xrXRC@@QAEXXZ
?Destroy@CEngineAPI@@QAEXXZ ENDP			; CEngineAPI::Destroy
END
