; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\CLEARSKY\sources\engine\xrEngine\StatGraph.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	?OnRender@CStatGraph@@UAEXXZ			; CStatGraph::OnRender
PUBLIC	??_R4CStatGraph@@6B@				; CStatGraph::`RTTI Complete Object Locator'
PUBLIC	??_R3CStatGraph@@8				; CStatGraph::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CStatGraph@@8				; CStatGraph::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CStatGraph@@8			; CStatGraph::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCStatGraph@@@8				; CStatGraph `RTTI Type Descriptor'
PUBLIC	?set@?$_vector2@M@@QAEAAU1@HH@Z			; _vector2<float>::set
PUBLIC	??0?$FactoryPtr@VIStatGraphRender@@@@QAE@XZ	; FactoryPtr<IStatGraphRender>::FactoryPtr<IStatGraphRender>
PUBLIC	??0?$xalloc@USSubGraph@CStatGraph@@@@QAE@XZ	; xalloc<CStatGraph::SSubGraph>::xalloc<CStatGraph::SSubGraph>
PUBLIC	??0?$_Vector_base@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USSubGraph@CStatGraph@@@@@Z ; stlp_std::priv::_Vector_base<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_Vector_base<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
PUBLIC	??0?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USSubGraph@CStatGraph@@@@@Z ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
PUBLIC	??0?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAE@ABV?$xalloc@USSubGraph@CStatGraph@@@@@Z ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
PUBLIC	??0?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QAE@XZ ; xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
PUBLIC	??0?$xalloc@USMarker@CStatGraph@@@@QAE@XZ	; xalloc<CStatGraph::SMarker>::xalloc<CStatGraph::SMarker>
PUBLIC	??0?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
PUBLIC	??0?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@@Z ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
PUBLIC	??0?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QAE@XZ ; xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
PUBLIC	??C?$FactoryPtr@VIStatGraphRender@@@@QBEPAVIStatGraphRender@@XZ ; FactoryPtr<IStatGraphRender>::operator->
PUBLIC	?SetStyle@SSubGraph@CStatGraph@@QAEXW4EStyle@2@@Z ; CStatGraph::SSubGraph::SetStyle
PUBLIC	?end@?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAEPAUSSubGraph@CStatGraph@@XZ ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::end
PUBLIC	??0SElement@CStatGraph@@QAE@MI@Z		; CStatGraph::SElement::SElement
PUBLIC	?_M_push_back_aux_v@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXABUSElement@CStatGraph@@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_push_back_aux_v
PUBLIC	??$_Copy_Construct@USElement@CStatGraph@@@stlp_std@@YAXPAUSElement@CStatGraph@@ABU12@@Z ; stlp_std::_Copy_Construct<CStatGraph::SElement>
PUBLIC	?push_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEXABUSElement@CStatGraph@@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::push_back
PUBLIC	?to_storage_type_cref@?$_CastTraits@USElement@CStatGraph@@U12@@priv@stlp_std@@SAABUSElement@CStatGraph@@ABU45@@Z ; stlp_std::priv::_CastTraits<CStatGraph::SElement,CStatGraph::SElement>::to_storage_type_cref
PUBLIC	?push_back@?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAEXABUSElement@CStatGraph@@@Z ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::push_back
PUBLIC	?_M_pop_front_aux@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXXZ ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_pop_front_aux
PUBLIC	??$__destroy_aux@USElement@CStatGraph@@@stlp_std@@YAXPAUSElement@CStatGraph@@ABU__true_type@0@@Z ; stlp_std::__destroy_aux<CStatGraph::SElement>
PUBLIC	??$_Destroy@USElement@CStatGraph@@@stlp_std@@YAXPAUSElement@CStatGraph@@@Z ; stlp_std::_Destroy<CStatGraph::SElement>
PUBLIC	?pop_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::pop_front
PUBLIC	?pop_front@?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAEXXZ ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::pop_front
PUBLIC	?size@?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QBEIXZ ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::size
PUBLIC	?size@?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QBEIXZ ; xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::size
PUBLIC	?to_value_type_ptr@?$_CastTraits@USSubGraph@CStatGraph@@U12@@priv@stlp_std@@SAPAUSSubGraph@CStatGraph@@PAU45@@Z ; stlp_std::priv::_CastTraits<CStatGraph::SSubGraph,CStatGraph::SSubGraph>::to_value_type_ptr
PUBLIC	?begin@?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAEPAUSSubGraph@CStatGraph@@XZ ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::begin
PUBLIC	??0?$xalloc@USElement@CStatGraph@@@@QAE@XZ	; xalloc<CStatGraph::SElement>::xalloc<CStatGraph::SElement>
PUBLIC	??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
PUBLIC	??0?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@@Z ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
PUBLIC	??0?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QAE@XZ ; xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
PUBLIC	??0SSubGraph@CStatGraph@@QAE@W4EStyle@1@@Z	; CStatGraph::SSubGraph::SSubGraph
PUBLIC	??$__destroy_mv_srcs@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@@Z ; stlp_std::__destroy_mv_srcs<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>
PUBLIC	??$_Destroy_Moved_Range@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0@Z ; stlp_std::_Destroy_Moved_Range<stlp_std::reverse_iterator<CStatGraph::SSubGraph *> >
PUBLIC	?_M_clear_after_move@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXXZ ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_clear_after_move
PUBLIC	?_M_set@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXPAUSSubGraph@CStatGraph@@00@Z ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_set
PUBLIC	??$__ucopy@PAUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph *,int>
PUBLIC	??$__ucopy_ptrs@PAUSSubGraph@CStatGraph@@PAU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@00ABU__false_type@1@@Z ; stlp_std::priv::__ucopy_ptrs<CStatGraph::SSubGraph *,CStatGraph::SSubGraph *>
PUBLIC	??$__uninitialized_move@PAUSSubGraph@CStatGraph@@PAU12@U__false_type@stlp_std@@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@00U__false_type@1@ABU41@@Z ; stlp_std::priv::__uninitialized_move<CStatGraph::SSubGraph *,CStatGraph::SSubGraph *,stlp_std::__false_type>
PUBLIC	??$__ufill@PAUSSubGraph@CStatGraph@@U12@H@priv@stlp_std@@YAXPAUSSubGraph@CStatGraph@@0ABU23@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ufill<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,int>
PUBLIC	??$__uninitialized_fill_n@PAUSSubGraph@CStatGraph@@IU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@IABU23@@Z ; stlp_std::priv::__uninitialized_fill_n<CStatGraph::SSubGraph *,unsigned int,CStatGraph::SSubGraph>
PUBLIC	?_M_insert_overflow_aux@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXPAUSSubGraph@CStatGraph@@ABU45@ABU__false_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_insert_overflow_aux
PUBLIC	?_M_insert_overflow@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXPAUSSubGraph@CStatGraph@@ABU45@ABU__false_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_insert_overflow
PUBLIC	??$_Copy_Construct@USSubGraph@CStatGraph@@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@ABU12@@Z ; stlp_std::_Copy_Construct<CStatGraph::SSubGraph>
PUBLIC	?push_back@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEXABUSSubGraph@CStatGraph@@@Z ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::push_back
PUBLIC	?to_storage_type_cref@?$_CastTraits@USSubGraph@CStatGraph@@U12@@priv@stlp_std@@SAABUSSubGraph@CStatGraph@@ABU45@@Z ; stlp_std::priv::_CastTraits<CStatGraph::SSubGraph,CStatGraph::SSubGraph>::to_storage_type_cref
PUBLIC	?push_back@?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAEXABUSSubGraph@CStatGraph@@@Z ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::push_back
PUBLIC	?size@?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QBEIXZ ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::size
PUBLIC	?size@?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QBEIXZ ; xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::size
PUBLIC	?_M_push_back_aux_v@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXABUSMarker@CStatGraph@@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_push_back_aux_v
PUBLIC	??$_Copy_Construct@USMarker@CStatGraph@@@stlp_std@@YAXPAUSMarker@CStatGraph@@ABU12@@Z ; stlp_std::_Copy_Construct<CStatGraph::SMarker>
PUBLIC	?push_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXABUSMarker@CStatGraph@@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::push_back
PUBLIC	?to_storage_type_cref@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAABUSMarker@CStatGraph@@ABU45@@Z ; stlp_std::priv::_CastTraits<CStatGraph::SMarker,CStatGraph::SMarker>::to_storage_type_cref
PUBLIC	?push_back@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAEXABUSMarker@CStatGraph@@@Z ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::push_back
PUBLIC	??A?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEAAUSMarker@CStatGraph@@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator[]
PUBLIC	??A?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEAAUSMarker@CStatGraph@@I@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::operator[]
PUBLIC	?to_value_type_ref@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAAAUSMarker@CStatGraph@@AAU45@@Z ; stlp_std::priv::_CastTraits<CStatGraph::SMarker,CStatGraph::SMarker>::to_value_type_ref
PUBLIC	??A?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAEAAUSMarker@CStatGraph@@I@Z ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::operator[]
PUBLIC	?clear@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAEXXZ ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::clear
PUBLIC	?begin@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@XZ ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::begin
PUBLIC	?begin@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@2@XZ ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::begin
PUBLIC	?_M_pop_back_aux@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXXZ ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_pop_back_aux
PUBLIC	?pop_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::pop_back
PUBLIC	?_M_pop_front_aux@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXXZ ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_pop_front_aux
PUBLIC	??$__destroy_aux@USMarker@CStatGraph@@@stlp_std@@YAXPAUSMarker@CStatGraph@@ABU__true_type@0@@Z ; stlp_std::__destroy_aux<CStatGraph::SMarker>
PUBLIC	??$_Destroy@USMarker@CStatGraph@@@stlp_std@@YAXPAUSMarker@CStatGraph@@@Z ; stlp_std::_Destroy<CStatGraph::SMarker>
PUBLIC	?pop_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::pop_front
PUBLIC	?_M_erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@ABU__false_type@3@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_erase
PUBLIC	?erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::erase
PUBLIC	?to_value_type_ptr@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAPAUSMarker@CStatGraph@@PAU45@@Z ; stlp_std::priv::_CastTraits<CStatGraph::SMarker,CStatGraph::SMarker>::to_value_type_ptr
PUBLIC	?to_value_type_pptr@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAPAPAUSMarker@CStatGraph@@PAPAU45@@Z ; stlp_std::priv::_CastTraits<CStatGraph::SMarker,CStatGraph::SMarker>::to_value_type_pptr
PUBLIC	?to_value_type_ite@?$_DequeIteCast@USMarker@CStatGraph@@U12@@priv@stlp_std@@SA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@ABU423@@Z ; stlp_std::priv::_DequeIteCast<CStatGraph::SMarker,CStatGraph::SMarker>::to_value_type_ite
PUBLIC	?to_storage_type_ptr@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAPAUSMarker@CStatGraph@@PAU45@@Z ; stlp_std::priv::_CastTraits<CStatGraph::SMarker,CStatGraph::SMarker>::to_storage_type_ptr
PUBLIC	?to_storage_type_pptr@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAPAPAUSMarker@CStatGraph@@PAPAU45@@Z ; stlp_std::priv::_CastTraits<CStatGraph::SMarker,CStatGraph::SMarker>::to_storage_type_pptr
PUBLIC	?to_storage_type_ite@?$_DequeIteCast@USMarker@CStatGraph@@U12@@priv@stlp_std@@SA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@ABU423@@Z ; stlp_std::priv::_DequeIteCast<CStatGraph::SMarker,CStatGraph::SMarker>::to_storage_type_ite
PUBLIC	?erase@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@2@U342@@Z ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::erase
PUBLIC	?size@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QBEIXZ ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::size
PUBLIC	?size@?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QBEIXZ ; xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::size
PUBLIC	?DestroyObject@?$FactoryPtr@VIStatGraphRender@@@@AAEXXZ ; FactoryPtr<IStatGraphRender>::DestroyObject
PUBLIC	??1?$FactoryPtr@VIStatGraphRender@@@@QAE@XZ	; FactoryPtr<IStatGraphRender>::~FactoryPtr<IStatGraphRender>
PUBLIC	?CreateObject@?$FactoryPtr@VIStatGraphRender@@@@AAEXXZ ; FactoryPtr<IStatGraphRender>::CreateObject
PUBLIC	??0?$FactoryPtr@VIStatGraphRender@@@@QAE@ABV0@@Z ; FactoryPtr<IStatGraphRender>::FactoryPtr<IStatGraphRender>
PUBLIC	??1?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QAE@XZ ; xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::~xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
PUBLIC	??0?$_STLP_alloc_proxy@PAUSSubGraph@CStatGraph@@U12@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USSubGraph@CStatGraph@@@@PAUSSubGraph@CStatGraph@@@Z ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_STLP_alloc_proxy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
PUBLIC	??0?$_Vector_base@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@IABV?$xalloc@USSubGraph@CStatGraph@@@@@Z ; stlp_std::priv::_Vector_base<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_Vector_base<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
PUBLIC	??0?$xalloc@USSubGraph@CStatGraph@@@@QAE@ABV0@@Z ; xalloc<CStatGraph::SSubGraph>::xalloc<CStatGraph::SSubGraph>
PUBLIC	?get_allocator@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBE?AV?$xalloc@USSubGraph@CStatGraph@@@@XZ ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::get_allocator
PUBLIC	?begin@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBEPBUSSubGraph@CStatGraph@@XZ ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::begin
PUBLIC	?end@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBEPBUSSubGraph@CStatGraph@@XZ ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::end
PUBLIC	??0?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
PUBLIC	??0?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
PUBLIC	??1?$_Vector_base@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Vector_base<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::~_Vector_base<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
PUBLIC	??1?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::~_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
PUBLIC	??1?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAE@XZ ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::~vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
PUBLIC	??0?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QAE@ABV0@@Z ; xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
PUBLIC	??1?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QAE@XZ ; xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::~xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
PUBLIC	?_M_create_nodes@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXPAPAUSMarker@CStatGraph@@0@Z ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_create_nodes
PUBLIC	?_M_initialize_map@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_initialize_map
PUBLIC	??0?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_Deque_iterator_base<CStatGraph::SMarker>
PUBLIC	??0?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >
PUBLIC	??0?$xalloc@PAUSMarker@CStatGraph@@@@QAE@ABV0@@Z ; xalloc<CStatGraph::SMarker *>::xalloc<CStatGraph::SMarker *>
PUBLIC	??0?$_STLP_alloc_proxy@PAPAUSMarker@CStatGraph@@PAU12@V?$xalloc@PAUSMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@PAUSMarker@CStatGraph@@@@PAPAUSMarker@CStatGraph@@@Z ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SMarker * *,CStatGraph::SMarker *,xalloc<CStatGraph::SMarker *> >::_STLP_alloc_proxy<CStatGraph::SMarker * *,CStatGraph::SMarker *,xalloc<CStatGraph::SMarker *> >
PUBLIC	??0?$_STLP_alloc_proxy@IUSMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@I@Z ; stlp_std::priv::_STLP_alloc_proxy<unsigned int,CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_STLP_alloc_proxy<unsigned int,CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
PUBLIC	??$?0USMarker@CStatGraph@@@?$xalloc@PAUSMarker@CStatGraph@@@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@@Z ; xalloc<CStatGraph::SMarker *>::xalloc<CStatGraph::SMarker *><CStatGraph::SMarker>
PUBLIC	??0?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@I@Z ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
PUBLIC	??0?$xalloc@USMarker@CStatGraph@@@@QAE@ABV0@@Z	; xalloc<CStatGraph::SMarker>::xalloc<CStatGraph::SMarker>
PUBLIC	?get_allocator@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QBE?AV?$xalloc@USMarker@CStatGraph@@@@XZ ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::get_allocator
PUBLIC	??$__ucopy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@@Z ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
PUBLIC	??0?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
PUBLIC	??0?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
PUBLIC	??1?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::~_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
PUBLIC	??1?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::~_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
PUBLIC	??1?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE@XZ ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::~deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
PUBLIC	??0?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QAE@ABV0@@Z ; xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
PUBLIC	??4?$FactoryPtr@VIStatGraphRender@@@@QAEAAV0@ABV0@@Z ; FactoryPtr<IStatGraphRender>::operator=
PUBLIC	?size@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBEIXZ ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::size
PUBLIC	?capacity@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBEIXZ ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::capacity
PUBLIC	??$xr_free@USSubGraph@CStatGraph@@@@YAXAAPAUSSubGraph@CStatGraph@@@Z ; xr_free<CStatGraph::SSubGraph>
PUBLIC	?deallocate@?$xalloc@USSubGraph@CStatGraph@@@@QBEXPAUSSubGraph@CStatGraph@@I@Z ; xalloc<CStatGraph::SSubGraph>::deallocate
PUBLIC	?end@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEPAUSSubGraph@CStatGraph@@XZ ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::end
PUBLIC	?rbegin@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@3@XZ ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::rbegin
PUBLIC	?begin@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEPAUSSubGraph@CStatGraph@@XZ ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::begin
PUBLIC	??0?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QAE@PAUSSubGraph@CStatGraph@@@Z ; stlp_std::reverse_iterator<CStatGraph::SSubGraph *>::reverse_iterator<CStatGraph::SSubGraph *>
PUBLIC	?rend@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@3@XZ ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::rend
PUBLIC	??0?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::reverse_iterator<CStatGraph::SSubGraph *>::reverse_iterator<CStatGraph::SSubGraph *>
PUBLIC	??D?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QBEAAUSSubGraph@CStatGraph@@XZ ; stlp_std::reverse_iterator<CStatGraph::SSubGraph *>::operator*
PUBLIC	??E?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QAEAAV01@XZ ; stlp_std::reverse_iterator<CStatGraph::SSubGraph *>::operator++
PUBLIC	?base@?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QBEPAUSSubGraph@CStatGraph@@XZ ; stlp_std::reverse_iterator<CStatGraph::SSubGraph *>::base
PUBLIC	??$?8PAUSSubGraph@CStatGraph@@@stlp_std@@YA_NABV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0@Z ; stlp_std::operator==<CStatGraph::SSubGraph *>
PUBLIC	??$?9PAUSSubGraph@CStatGraph@@@stlp_std@@YA_NABV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0@Z ; stlp_std::operator!=<CStatGraph::SSubGraph *>
PUBLIC	??$__destroy_range_aux@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>
PUBLIC	??$__destroy_range@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@@Z ; stlp_std::__destroy_range<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>
PUBLIC	??$_Destroy_Range@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0@Z ; stlp_std::_Destroy_Range<stlp_std::reverse_iterator<CStatGraph::SSubGraph *> >
PUBLIC	?_M_clear@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXXZ ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_clear
PUBLIC	??$xr_alloc@USSubGraph@CStatGraph@@@@YAPAUSSubGraph@CStatGraph@@I@Z ; xr_alloc<CStatGraph::SSubGraph>
PUBLIC	?allocate@?$xalloc@USSubGraph@CStatGraph@@@@QBEPAUSSubGraph@CStatGraph@@IPBX@Z ; xalloc<CStatGraph::SSubGraph>::allocate
PUBLIC	?allocate@?$_STLP_alloc_proxy@PAUSSubGraph@CStatGraph@@U12@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEPAUSSubGraph@CStatGraph@@I@Z ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::allocate
PUBLIC	?allocate@?$_STLP_alloc_proxy@PAUSSubGraph@CStatGraph@@U12@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEPAUSSubGraph@CStatGraph@@IAAIABU__false_type@3@@Z ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::allocate
PUBLIC	?allocate@?$_STLP_alloc_proxy@PAUSSubGraph@CStatGraph@@U12@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEPAUSSubGraph@CStatGraph@@IAAI@Z ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::allocate
PUBLIC	?_Answer@?$_BothPtrType@PBUSSubGraph@CStatGraph@@PAU12@@stlp_std@@SA?AU__true_type@2@XZ ; stlp_std::_BothPtrType<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *>::_Answer
PUBLIC	?_M_create_nodes@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXPAPAUSElement@CStatGraph@@0@Z ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_create_nodes
PUBLIC	?_M_initialize_map@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_initialize_map
PUBLIC	??0?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_Deque_iterator_base<CStatGraph::SElement>
PUBLIC	??0?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >
PUBLIC	??0?$xalloc@PAUSElement@CStatGraph@@@@QAE@ABV0@@Z ; xalloc<CStatGraph::SElement *>::xalloc<CStatGraph::SElement *>
PUBLIC	??0?$_STLP_alloc_proxy@PAPAUSElement@CStatGraph@@PAU12@V?$xalloc@PAUSElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@PAUSElement@CStatGraph@@@@PAPAUSElement@CStatGraph@@@Z ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SElement * *,CStatGraph::SElement *,xalloc<CStatGraph::SElement *> >::_STLP_alloc_proxy<CStatGraph::SElement * *,CStatGraph::SElement *,xalloc<CStatGraph::SElement *> >
PUBLIC	??0?$_STLP_alloc_proxy@IUSElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@I@Z ; stlp_std::priv::_STLP_alloc_proxy<unsigned int,CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_STLP_alloc_proxy<unsigned int,CStatGraph::SElement,xalloc<CStatGraph::SElement> >
PUBLIC	??$?0USElement@CStatGraph@@@?$xalloc@PAUSElement@CStatGraph@@@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@@Z ; xalloc<CStatGraph::SElement *>::xalloc<CStatGraph::SElement *><CStatGraph::SElement>
PUBLIC	??0?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@I@Z ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
PUBLIC	??0?$xalloc@USElement@CStatGraph@@@@QAE@ABV0@@Z	; xalloc<CStatGraph::SElement>::xalloc<CStatGraph::SElement>
PUBLIC	?get_allocator@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QBE?AV?$xalloc@USElement@CStatGraph@@@@XZ ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::get_allocator
PUBLIC	??$__ucopy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@@Z ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
PUBLIC	??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
PUBLIC	??0?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAE@ABV01@@Z ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
PUBLIC	??0?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QAE@ABV0@@Z ; xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
PUBLIC	??0SSubGraph@CStatGraph@@QAE@ABU01@@Z		; CStatGraph::SSubGraph::SSubGraph
PUBLIC	??$_Param_Construct@USSubGraph@CStatGraph@@U12@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@ABU12@@Z ; stlp_std::_Param_Construct<CStatGraph::SSubGraph,CStatGraph::SSubGraph>
PUBLIC	??$__ucopy@PBUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *,int>
PUBLIC	??$__ucopy_ptrs@PBUSSubGraph@CStatGraph@@PAU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABU__false_type@1@@Z ; stlp_std::priv::__ucopy_ptrs<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *>
PUBLIC	??$_UseTrivialUCopy@USSubGraph@CStatGraph@@U12@@stlp_std@@YA?AU?$_TrivialUCopy@USSubGraph@CStatGraph@@U12@@0@PAUSSubGraph@CStatGraph@@0@Z ; stlp_std::_UseTrivialUCopy<CStatGraph::SSubGraph,CStatGraph::SSubGraph>
PUBLIC	?_Answer@?$_TrivialUCopy@USSubGraph@CStatGraph@@U12@@stlp_std@@SA?AU__false_type@2@XZ ; stlp_std::_TrivialUCopy<CStatGraph::SSubGraph,CStatGraph::SSubGraph>::_Answer
PUBLIC	??$__ucopy_aux@PBUSSubGraph@CStatGraph@@PAU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABU__true_type@1@@Z ; stlp_std::priv::__ucopy_aux<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *>
PUBLIC	??$uninitialized_copy@PBUSSubGraph@CStatGraph@@PAU12@@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU12@0PAU12@@Z ; stlp_std::uninitialized_copy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *>
PUBLIC	??$_M_allocate_and_copy@PBUSSubGraph@CStatGraph@@@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEPAUSSubGraph@CStatGraph@@AAIPBU34@1@Z ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_allocate_and_copy<CStatGraph::SSubGraph const *>
PUBLIC	?begin@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QBE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@23@XZ ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::begin
PUBLIC	?end@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QBE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@23@XZ ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::end
PUBLIC	?_M_erase@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@U423@0ABU__false_type@3@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_erase
PUBLIC	??$__destroy_range_aux@PAUSElement@CStatGraph@@U12@@stlp_std@@YAXPAUSElement@CStatGraph@@00ABU__true_type@0@@Z ; stlp_std::__destroy_range_aux<CStatGraph::SElement *,CStatGraph::SElement>
PUBLIC	??$__destroy_range@PAUSElement@CStatGraph@@U12@@stlp_std@@YAXPAUSElement@CStatGraph@@00@Z ; stlp_std::__destroy_range<CStatGraph::SElement *,CStatGraph::SElement>
PUBLIC	??$_Destroy_Range@PAUSElement@CStatGraph@@@stlp_std@@YAXPAUSElement@CStatGraph@@0@Z ; stlp_std::_Destroy_Range<CStatGraph::SElement *>
PUBLIC	?clear@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::clear
PUBLIC	??$?8USElement@CStatGraph@@@priv@stlp_std@@YA_NABU?$_Deque_iterator_base@USElement@CStatGraph@@@01@0@Z ; stlp_std::priv::operator==<CStatGraph::SElement>
PUBLIC	?erase@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@U423@0@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::erase
PUBLIC	??H?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::operator+
PUBLIC	??$__distance@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAHABU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0ABUrandom_access_iterator_tag@0@@Z ; stlp_std::__distance<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >
PUBLIC	??$distance@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAHU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0@Z ; stlp_std::distance<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >
PUBLIC	?size@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QBEIXZ ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::size
PUBLIC	??Z?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator-=
PUBLIC	??G?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator-
PUBLIC	?_M_reserve_map_at_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reserve_map_at_front
PUBLIC	?_M_new_elements_at_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_new_elements_at_front
PUBLIC	?_M_reserve_elements_at_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@I@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reserve_elements_at_front
PUBLIC	??Y?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator+=
PUBLIC	??H?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator+
PUBLIC	??$xr_alloc@USElement@CStatGraph@@@@YAPAUSElement@CStatGraph@@I@Z ; xr_alloc<CStatGraph::SElement>
PUBLIC	?allocate@?$xalloc@USElement@CStatGraph@@@@QBEPAUSElement@CStatGraph@@IPBX@Z ; xalloc<CStatGraph::SElement>::allocate
PUBLIC	?allocate@?$_STLP_alloc_proxy@IUSElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEPAUSElement@CStatGraph@@I@Z ; stlp_std::priv::_STLP_alloc_proxy<unsigned int,CStatGraph::SElement,xalloc<CStatGraph::SElement> >::allocate
PUBLIC	??$xr_alloc@PAUSElement@CStatGraph@@@@YAPAPAUSElement@CStatGraph@@I@Z ; xr_alloc<CStatGraph::SElement *>
PUBLIC	?allocate@?$xalloc@PAUSElement@CStatGraph@@@@QBEPAPAUSElement@CStatGraph@@IPBX@Z ; xalloc<CStatGraph::SElement *>::allocate
PUBLIC	?allocate@?$_STLP_alloc_proxy@PAPAUSElement@CStatGraph@@PAU12@V?$xalloc@PAUSElement@CStatGraph@@@@@priv@stlp_std@@QAEPAPAUSElement@CStatGraph@@I@Z ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SElement * *,CStatGraph::SElement *,xalloc<CStatGraph::SElement *> >::allocate
PUBLIC	??$__copy_ptrs@PAPAUSElement@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z ; stlp_std::priv::__copy_ptrs<CStatGraph::SElement * *,CStatGraph::SElement * *>
PUBLIC	??$__copy_aux@PAPAUSElement@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z ; stlp_std::priv::__copy_aux<CStatGraph::SElement * *,CStatGraph::SElement * *>
PUBLIC	??$copy@PAPAUSElement@CStatGraph@@PAPAU12@@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU12@00@Z ; stlp_std::copy<CStatGraph::SElement * *,CStatGraph::SElement * *>
PUBLIC	?_Answer@?$_BothPtrType@PAPAUSElement@CStatGraph@@PAPAU12@@stlp_std@@SA?AU__true_type@2@XZ ; stlp_std::_BothPtrType<CStatGraph::SElement * *,CStatGraph::SElement * *>::_Answer
PUBLIC	??$_UseTrivialCopy@PAUSElement@CStatGraph@@PAU12@@stlp_std@@YA?AU?$_TrivialCopy@PAUSElement@CStatGraph@@PAU12@@0@PAPAUSElement@CStatGraph@@0@Z ; stlp_std::_UseTrivialCopy<CStatGraph::SElement *,CStatGraph::SElement *>
PUBLIC	?_Answer@?$_TrivialCopy@PAUSElement@CStatGraph@@PAU12@@stlp_std@@SA?AU__true_type@2@XZ ; stlp_std::_TrivialCopy<CStatGraph::SElement *,CStatGraph::SElement *>::_Answer
PUBLIC	??$__copy_backward_ptrs@PAPAUSElement@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z ; stlp_std::priv::__copy_backward_ptrs<CStatGraph::SElement * *,CStatGraph::SElement * *>
PUBLIC	??$__copy_backward_aux@PAPAUSElement@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z ; stlp_std::priv::__copy_backward_aux<CStatGraph::SElement * *,CStatGraph::SElement * *>
PUBLIC	??$copy_backward@PAPAUSElement@CStatGraph@@PAPAU12@@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU12@00@Z ; stlp_std::copy_backward<CStatGraph::SElement * *,CStatGraph::SElement * *>
PUBLIC	?_M_reallocate_map@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI_N@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reallocate_map
PUBLIC	?_M_reserve_map_at_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reserve_map_at_back
PUBLIC	?_M_new_elements_at_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_new_elements_at_back
PUBLIC	?_M_reserve_elements_at_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@I@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reserve_elements_at_back
PUBLIC	??$__copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>
PUBLIC	??$__copy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z ; stlp_std::priv::__copy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
PUBLIC	??$copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@20@0U120@@Z ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
PUBLIC	?_M_decrement@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_decrement
PUBLIC	??F?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator--
PUBLIC	??$__copy_backward@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>
PUBLIC	??$__copy_backward_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z ; stlp_std::priv::__copy_backward_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
PUBLIC	??$copy_backward@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
PUBLIC	??$__copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>
PUBLIC	??$__copy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z ; stlp_std::priv::__copy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
PUBLIC	??$copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
PUBLIC	?_M_advance@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_advance
PUBLIC	??Y?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::operator+=
PUBLIC	??$__advance@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@H@stlp_std@@YAXAAU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@HABUrandom_access_iterator_tag@0@@Z ; stlp_std::__advance<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,int>
PUBLIC	??$advance@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@H@stlp_std@@YAXAAU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@H@Z ; stlp_std::advance<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,int>
PUBLIC	??$__uninitialized_copy_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@23@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@0U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@10@Z ; stlp_std::priv::__uninitialized_copy_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
PUBLIC	?_Answer@?$_BothPtrType@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@SA?AU__false_type@2@XZ ; stlp_std::_BothPtrType<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >::_Answer
PUBLIC	??D?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEABUSElement@CStatGraph@@XZ ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::operator*
PUBLIC	??G?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEHABU012@@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::operator-
PUBLIC	??E?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::operator++
PUBLIC	??$__ucopy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>
PUBLIC	??$__ucopy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z ; stlp_std::priv::__ucopy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
PUBLIC	??$uninitialized_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@20@0U120@@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
PUBLIC	?_Answer@?$_BothPtrType@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@SA?AU__false_type@2@XZ ; stlp_std::_BothPtrType<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >::_Answer
PUBLIC	??D?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEAAUSElement@CStatGraph@@XZ ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator*
PUBLIC	?_M_subtract@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QBEHABU123@@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_subtract
PUBLIC	??G?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEHABU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator-
PUBLIC	?_M_set_node@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXPAPAUSElement@CStatGraph@@@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_set_node
PUBLIC	?_M_increment@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_increment
PUBLIC	??E?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator++
PUBLIC	??0?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@ABU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >
PUBLIC	??$_Param_Construct@USElement@CStatGraph@@U12@@stlp_std@@YAXPAUSElement@CStatGraph@@ABU12@@Z ; stlp_std::_Param_Construct<CStatGraph::SElement,CStatGraph::SElement>
PUBLIC	??$__ucopy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>
PUBLIC	??$__ucopy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z ; stlp_std::priv::__ucopy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
PUBLIC	??$uninitialized_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
PUBLIC	??$__uninitialized_copy_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@U423@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@11@Z ; stlp_std::priv::__uninitialized_copy_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
PUBLIC	??$_M_insert_range_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1IABU__false_type@2@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_insert_range_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >
PUBLIC	??$_M_insert@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1ABUforward_iterator_tag@2@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_insert<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >
PUBLIC	??$_M_insert_dispatch@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1ABU__false_type@2@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_insert_dispatch<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >
PUBLIC	??$insert@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::insert<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >
PUBLIC	??4?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::operator=
PUBLIC	??4?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAEAAV01@ABV01@@Z ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::operator=
PUBLIC	??4?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QAEAAV0@ABV0@@Z ; xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::operator=
PUBLIC	??4SSubGraph@CStatGraph@@QAEAAU01@ABU01@@Z	; CStatGraph::SSubGraph::operator=
PUBLIC	??$__copy@PBUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__copy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *,int>
PUBLIC	??$__copy_ptrs@PBUSSubGraph@CStatGraph@@PAU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABU__false_type@1@@Z ; stlp_std::priv::__copy_ptrs<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *>
PUBLIC	??$xr_free@USElement@CStatGraph@@@@YAXAAPAUSElement@CStatGraph@@@Z ; xr_free<CStatGraph::SElement>
PUBLIC	?deallocate@?$xalloc@USElement@CStatGraph@@@@QBEXPAUSElement@CStatGraph@@I@Z ; xalloc<CStatGraph::SElement>::deallocate
PUBLIC	?buffer_size@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@SAIXZ ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::buffer_size
PUBLIC	?_M_destroy_nodes@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXPAPAUSElement@CStatGraph@@0@Z ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_destroy_nodes
PUBLIC	??$xr_free@PAUSElement@CStatGraph@@@@YAXAAPAPAUSElement@CStatGraph@@@Z ; xr_free<CStatGraph::SElement *>
PUBLIC	?deallocate@?$xalloc@PAUSElement@CStatGraph@@@@QBEXPAPAUSElement@CStatGraph@@I@Z ; xalloc<CStatGraph::SElement *>::deallocate
PUBLIC	??1?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
PUBLIC	??0?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@ABU012@@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >
PUBLIC	??$__destroy_range_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@USElement@CStatGraph@@@stlp_std@@YAXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0PAUSElement@CStatGraph@@ABU__true_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,CStatGraph::SElement>
PUBLIC	??$__destroy_range@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@USElement@CStatGraph@@@stlp_std@@YAXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0PAUSElement@CStatGraph@@@Z ; stlp_std::__destroy_range<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,CStatGraph::SElement>
PUBLIC	??$_Destroy_Range@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0@Z ; stlp_std::_Destroy_Range<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
PUBLIC	??1?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
PUBLIC	??1?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAE@XZ ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
PUBLIC	??1?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QAE@XZ ; xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
PUBLIC	??1SSubGraph@CStatGraph@@QAE@XZ			; CStatGraph::SSubGraph::~SSubGraph
PUBLIC	??_GSSubGraph@CStatGraph@@QAEPAXI@Z		; CStatGraph::SSubGraph::`scalar deleting destructor'
PUBLIC	??$__destroy_aux@USSubGraph@CStatGraph@@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z ; stlp_std::__destroy_aux<CStatGraph::SSubGraph>
PUBLIC	??$__destroy_range_aux@PAUSSubGraph@CStatGraph@@U12@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@00ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<CStatGraph::SSubGraph *,CStatGraph::SSubGraph>
PUBLIC	??$__destroy_range@PAUSSubGraph@CStatGraph@@U12@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@00@Z ; stlp_std::__destroy_range<CStatGraph::SSubGraph *,CStatGraph::SSubGraph>
PUBLIC	??$_Destroy_Range@PAUSSubGraph@CStatGraph@@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@0@Z ; stlp_std::_Destroy_Range<CStatGraph::SSubGraph *>
PUBLIC	??4?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::operator=
PUBLIC	??4?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAEAAV01@ABV01@@Z ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::operator=
PUBLIC	??4?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QAEAAV0@ABV0@@Z ; xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::operator=
PUBLIC	?begin@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QBE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@23@XZ ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::begin
PUBLIC	?end@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QBE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@23@XZ ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::end
PUBLIC	?_M_destroy_nodes@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXPAPAUSMarker@CStatGraph@@0@Z ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_destroy_nodes
PUBLIC	??$__destroy_range_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@USMarker@CStatGraph@@@stlp_std@@YAXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0PAUSMarker@CStatGraph@@ABU__true_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,CStatGraph::SMarker>
PUBLIC	??$__destroy_range@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@USMarker@CStatGraph@@@stlp_std@@YAXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0PAUSMarker@CStatGraph@@@Z ; stlp_std::__destroy_range<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,CStatGraph::SMarker>
PUBLIC	??$_Destroy_Range@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0@Z ; stlp_std::_Destroy_Range<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
PUBLIC	?_M_erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@0ABU__false_type@3@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_erase
PUBLIC	??$xr_free@USMarker@CStatGraph@@@@YAXAAPAUSMarker@CStatGraph@@@Z ; xr_free<CStatGraph::SMarker>
PUBLIC	?deallocate@?$xalloc@USMarker@CStatGraph@@@@QBEXPAUSMarker@CStatGraph@@I@Z ; xalloc<CStatGraph::SMarker>::deallocate
PUBLIC	??$__destroy_range_aux@PAUSMarker@CStatGraph@@U12@@stlp_std@@YAXPAUSMarker@CStatGraph@@00ABU__true_type@0@@Z ; stlp_std::__destroy_range_aux<CStatGraph::SMarker *,CStatGraph::SMarker>
PUBLIC	??$__destroy_range@PAUSMarker@CStatGraph@@U12@@stlp_std@@YAXPAUSMarker@CStatGraph@@00@Z ; stlp_std::__destroy_range<CStatGraph::SMarker *,CStatGraph::SMarker>
PUBLIC	??$_Destroy_Range@PAUSMarker@CStatGraph@@@stlp_std@@YAXPAUSMarker@CStatGraph@@0@Z ; stlp_std::_Destroy_Range<CStatGraph::SMarker *>
PUBLIC	?clear@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::clear
PUBLIC	??$?8USMarker@CStatGraph@@@priv@stlp_std@@YA_NABU?$_Deque_iterator_base@USMarker@CStatGraph@@@01@0@Z ; stlp_std::priv::operator==<CStatGraph::SMarker>
PUBLIC	?erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@0@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::erase
PUBLIC	??H?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::operator+
PUBLIC	??$__distance@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAHABU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0ABUrandom_access_iterator_tag@0@@Z ; stlp_std::__distance<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >
PUBLIC	??$distance@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAHU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0@Z ; stlp_std::distance<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >
PUBLIC	?size@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QBEIXZ ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::size
PUBLIC	??Z?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator-=
PUBLIC	??G?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator-
PUBLIC	?_M_reserve_map_at_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reserve_map_at_front
PUBLIC	?_M_new_elements_at_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_new_elements_at_front
PUBLIC	?_M_reserve_elements_at_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@I@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reserve_elements_at_front
PUBLIC	??Y?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator+=
PUBLIC	??H?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator+
PUBLIC	?buffer_size@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@SAIXZ ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::buffer_size
PUBLIC	??$xr_alloc@USMarker@CStatGraph@@@@YAPAUSMarker@CStatGraph@@I@Z ; xr_alloc<CStatGraph::SMarker>
PUBLIC	?allocate@?$xalloc@USMarker@CStatGraph@@@@QBEPAUSMarker@CStatGraph@@IPBX@Z ; xalloc<CStatGraph::SMarker>::allocate
PUBLIC	?allocate@?$_STLP_alloc_proxy@IUSMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEPAUSMarker@CStatGraph@@I@Z ; stlp_std::priv::_STLP_alloc_proxy<unsigned int,CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::allocate
PUBLIC	??$xr_free@PAUSMarker@CStatGraph@@@@YAXAAPAPAUSMarker@CStatGraph@@@Z ; xr_free<CStatGraph::SMarker *>
PUBLIC	?deallocate@?$xalloc@PAUSMarker@CStatGraph@@@@QBEXPAPAUSMarker@CStatGraph@@I@Z ; xalloc<CStatGraph::SMarker *>::deallocate
PUBLIC	??$xr_alloc@PAUSMarker@CStatGraph@@@@YAPAPAUSMarker@CStatGraph@@I@Z ; xr_alloc<CStatGraph::SMarker *>
PUBLIC	?allocate@?$xalloc@PAUSMarker@CStatGraph@@@@QBEPAPAUSMarker@CStatGraph@@IPBX@Z ; xalloc<CStatGraph::SMarker *>::allocate
PUBLIC	?allocate@?$_STLP_alloc_proxy@PAPAUSMarker@CStatGraph@@PAU12@V?$xalloc@PAUSMarker@CStatGraph@@@@@priv@stlp_std@@QAEPAPAUSMarker@CStatGraph@@I@Z ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SMarker * *,CStatGraph::SMarker *,xalloc<CStatGraph::SMarker *> >::allocate
PUBLIC	??$__copy_ptrs@PAPAUSMarker@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z ; stlp_std::priv::__copy_ptrs<CStatGraph::SMarker * *,CStatGraph::SMarker * *>
PUBLIC	??$__copy_aux@PAPAUSMarker@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z ; stlp_std::priv::__copy_aux<CStatGraph::SMarker * *,CStatGraph::SMarker * *>
PUBLIC	??$copy@PAPAUSMarker@CStatGraph@@PAPAU12@@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU12@00@Z ; stlp_std::copy<CStatGraph::SMarker * *,CStatGraph::SMarker * *>
PUBLIC	?_Answer@?$_BothPtrType@PAPAUSMarker@CStatGraph@@PAPAU12@@stlp_std@@SA?AU__true_type@2@XZ ; stlp_std::_BothPtrType<CStatGraph::SMarker * *,CStatGraph::SMarker * *>::_Answer
PUBLIC	??$_UseTrivialCopy@PAUSMarker@CStatGraph@@PAU12@@stlp_std@@YA?AU?$_TrivialCopy@PAUSMarker@CStatGraph@@PAU12@@0@PAPAUSMarker@CStatGraph@@0@Z ; stlp_std::_UseTrivialCopy<CStatGraph::SMarker *,CStatGraph::SMarker *>
PUBLIC	?_Answer@?$_TrivialCopy@PAUSMarker@CStatGraph@@PAU12@@stlp_std@@SA?AU__true_type@2@XZ ; stlp_std::_TrivialCopy<CStatGraph::SMarker *,CStatGraph::SMarker *>::_Answer
PUBLIC	??$__copy_backward_ptrs@PAPAUSMarker@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z ; stlp_std::priv::__copy_backward_ptrs<CStatGraph::SMarker * *,CStatGraph::SMarker * *>
PUBLIC	??$__copy_backward_aux@PAPAUSMarker@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z ; stlp_std::priv::__copy_backward_aux<CStatGraph::SMarker * *,CStatGraph::SMarker * *>
PUBLIC	??$copy_backward@PAPAUSMarker@CStatGraph@@PAPAU12@@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU12@00@Z ; stlp_std::copy_backward<CStatGraph::SMarker * *,CStatGraph::SMarker * *>
PUBLIC	?_M_reallocate_map@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI_N@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reallocate_map
PUBLIC	?_M_reserve_map_at_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reserve_map_at_back
PUBLIC	?_M_new_elements_at_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_new_elements_at_back
PUBLIC	?_M_reserve_elements_at_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@I@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reserve_elements_at_back
PUBLIC	??$__copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>
PUBLIC	??$__copy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z ; stlp_std::priv::__copy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
PUBLIC	??$copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@20@0U120@@Z ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
PUBLIC	?_M_decrement@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_decrement
PUBLIC	??F?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator--
PUBLIC	??$__copy_backward@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>
PUBLIC	??$__copy_backward_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z ; stlp_std::priv::__copy_backward_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
PUBLIC	??$copy_backward@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
PUBLIC	??$__copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>
PUBLIC	??$__copy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z ; stlp_std::priv::__copy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
PUBLIC	??$copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
PUBLIC	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
PUBLIC	??Y?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::operator+=
PUBLIC	??$__advance@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@H@stlp_std@@YAXAAU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@HABUrandom_access_iterator_tag@0@@Z ; stlp_std::__advance<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,int>
PUBLIC	??$advance@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@H@stlp_std@@YAXAAU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@H@Z ; stlp_std::advance<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,int>
PUBLIC	??$__uninitialized_copy_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@23@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@0U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@10@Z ; stlp_std::priv::__uninitialized_copy_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
PUBLIC	?_Answer@?$_BothPtrType@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@SA?AU__false_type@2@XZ ; stlp_std::_BothPtrType<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >::_Answer
PUBLIC	??D?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEABUSMarker@CStatGraph@@XZ ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::operator*
PUBLIC	??G?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEHABU012@@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::operator-
PUBLIC	??E?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::operator++
PUBLIC	??$__ucopy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>
PUBLIC	??$__ucopy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z ; stlp_std::priv::__ucopy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
PUBLIC	??$uninitialized_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@20@0U120@@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
PUBLIC	?_Answer@?$_BothPtrType@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@SA?AU__false_type@2@XZ ; stlp_std::_BothPtrType<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >::_Answer
PUBLIC	??0?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@ABU012@@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >
PUBLIC	??D?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEAAUSMarker@CStatGraph@@XZ ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator*
PUBLIC	?_M_subtract@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QBEHABU123@@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_subtract
PUBLIC	??G?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEHABU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator-
PUBLIC	?_M_set_node@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXPAPAUSMarker@CStatGraph@@@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_set_node
PUBLIC	?_M_increment@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_increment
PUBLIC	??E?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator++
PUBLIC	??0?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@ABU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >
PUBLIC	??$_Param_Construct@USMarker@CStatGraph@@U12@@stlp_std@@YAXPAUSMarker@CStatGraph@@ABU12@@Z ; stlp_std::_Param_Construct<CStatGraph::SMarker,CStatGraph::SMarker>
PUBLIC	??$__ucopy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>
PUBLIC	??$__ucopy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z ; stlp_std::priv::__ucopy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
PUBLIC	??$uninitialized_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
PUBLIC	??$__uninitialized_copy_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@11@Z ; stlp_std::priv::__uninitialized_copy_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
PUBLIC	??$_M_insert_range_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1IABU__false_type@2@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_insert_range_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >
PUBLIC	??$_M_insert@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1ABUforward_iterator_tag@2@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_insert<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >
PUBLIC	??$_M_insert_dispatch@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1ABU__false_type@2@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_insert_dispatch<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >
PUBLIC	??$insert@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::insert<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >
PUBLIC	??4?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::operator=
PUBLIC	??4?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAEAAV01@ABV01@@Z ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::operator=
PUBLIC	??4?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QAEAAV0@ABV0@@Z ; xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::operator=
PUBLIC	??_7CStatGraph@@6B@				; CStatGraph::`vftable'
;	COMDAT ??_7CStatGraph@@6B@
CONST	SEGMENT
??_7CStatGraph@@6B@ DD FLAT:??_R4CStatGraph@@6B@	; CStatGraph::`vftable'
	DD	FLAT:?OnRender@CStatGraph@@UAEXXZ
CONST	ENDS
;	COMDAT ??_R4CStatGraph@@6B@
rdata$r	SEGMENT
??_R4CStatGraph@@6B@ DD 00H				; CStatGraph::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCStatGraph@@@8
	DD	FLAT:??_R3CStatGraph@@8
rdata$r	ENDS
;	COMDAT ??_R3CStatGraph@@8
rdata$r	SEGMENT
??_R3CStatGraph@@8 DD 00H				; CStatGraph::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CStatGraph@@8
rdata$r	ENDS
;	COMDAT ??_R2CStatGraph@@8
rdata$r	SEGMENT
??_R2CStatGraph@@8 DD FLAT:??_R1A@?0A@EA@CStatGraph@@8	; CStatGraph::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@pureRender@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CStatGraph@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CStatGraph@@8 DD FLAT:??_R0?AVCStatGraph@@@8 ; CStatGraph::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CStatGraph@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCStatGraph@@@8
_DATA	SEGMENT
??_R0?AVCStatGraph@@@8 DD FLAT:??_7type_info@@6B@	; CStatGraph `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCStatGraph@@', 00H
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\include\xrrender\factoryptr.h
;	COMDAT ?CreateObject@?$FactoryPtr@VIStatGraphRender@@@@AAEXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?CreateObject@?$FactoryPtr@VIStatGraphRender@@@@AAEXXZ PROC ; FactoryPtr<IStatGraphRender>::CreateObject, COMDAT

; 59   : 	FACTORY_PTR_INSTANCIATE(StatGraphRender)

	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	mov	ecx, DWORD PTR _this$[esp-4]
	mov	DWORD PTR [ecx], eax
	ret	4
?CreateObject@?$FactoryPtr@VIStatGraphRender@@@@AAEXXZ ENDP ; FactoryPtr<IStatGraphRender>::CreateObject
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?DestroyObject@?$FactoryPtr@VIStatGraphRender@@@@AAEXXZ
_TEXT	SEGMENT
?DestroyObject@?$FactoryPtr@VIStatGraphRender@@@@AAEXXZ PROC ; FactoryPtr<IStatGraphRender>::DestroyObject, COMDAT
; _this$ = esi

; 59   : 	FACTORY_PTR_INSTANCIATE(StatGraphRender)

	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [edx+20]
	push	eax
	call	edx
	mov	DWORD PTR [esi], 0
	ret	0
?DestroyObject@?$FactoryPtr@VIStatGraphRender@@@@AAEXXZ ENDP ; FactoryPtr<IStatGraphRender>::DestroyObject
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$__destroy_range_aux@PAUSElement@CStatGraph@@U12@@stlp_std@@YAXPAUSElement@CStatGraph@@00ABU__true_type@0@@Z
_TEXT	SEGMENT
??$__destroy_range_aux@PAUSElement@CStatGraph@@U12@@stlp_std@@YAXPAUSElement@CStatGraph@@00ABU__true_type@0@@Z PROC ; stlp_std::__destroy_range_aux<CStatGraph::SElement *,CStatGraph::SElement>, COMDAT

; 169  : __destroy_range_aux(_ForwardIterator, _ForwardIterator, _Tp*, const __true_type& /*_Trivial_destructor*/) {}

	ret	0
??$__destroy_range_aux@PAUSElement@CStatGraph@@U12@@stlp_std@@YAXPAUSElement@CStatGraph@@00ABU__true_type@0@@Z ENDP ; stlp_std::__destroy_range_aux<CStatGraph::SElement *,CStatGraph::SElement>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__destroy_range@PAUSElement@CStatGraph@@U12@@stlp_std@@YAXPAUSElement@CStatGraph@@00@Z
_TEXT	SEGMENT
??$__destroy_range@PAUSElement@CStatGraph@@U12@@stlp_std@@YAXPAUSElement@CStatGraph@@00@Z PROC ; stlp_std::__destroy_range<CStatGraph::SElement *,CStatGraph::SElement>, COMDAT

; 175  :   typedef typename __type_traits<_Tp>::has_trivial_destructor _Trivial_destructor;
; 176  :   __destroy_range_aux(__first, __last, __ptr, _Trivial_destructor());
; 177  : }

	ret	0
??$__destroy_range@PAUSElement@CStatGraph@@U12@@stlp_std@@YAXPAUSElement@CStatGraph@@00@Z ENDP ; stlp_std::__destroy_range<CStatGraph::SElement *,CStatGraph::SElement>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\type_traits.h
_TEXT	ENDS
;	COMDAT ?_Answer@?$_BothPtrType@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@SA?AU__false_type@2@XZ
_TEXT	SEGMENT
?_Answer@?$_BothPtrType@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@SA?AU__false_type@2@XZ PROC ; stlp_std::_BothPtrType<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >::_Answer, COMDAT

; 468  :   static _Ret _Answer() { return _Ret(); }

	xor	al, al
	ret	0
?_Answer@?$_BothPtrType@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@SA?AU__false_type@2@XZ ENDP ; stlp_std::_BothPtrType<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >::_Answer
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$_Destroy_Range@PAUSElement@CStatGraph@@@stlp_std@@YAXPAUSElement@CStatGraph@@0@Z
_TEXT	SEGMENT
??$_Destroy_Range@PAUSElement@CStatGraph@@@stlp_std@@YAXPAUSElement@CStatGraph@@0@Z PROC ; stlp_std::_Destroy_Range<CStatGraph::SElement *>, COMDAT

; 181  :   __destroy_range(__first, __last, _STLP_VALUE_TYPE(__first, _ForwardIterator));
; 182  : }

	ret	0
??$_Destroy_Range@PAUSElement@CStatGraph@@@stlp_std@@YAXPAUSElement@CStatGraph@@0@Z ENDP ; stlp_std::_Destroy_Range<CStatGraph::SElement *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\type_traits.h
_TEXT	ENDS
;	COMDAT ?_Answer@?$_BothPtrType@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@SA?AU__false_type@2@XZ
_TEXT	SEGMENT
?_Answer@?$_BothPtrType@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@SA?AU__false_type@2@XZ PROC ; stlp_std::_BothPtrType<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >::_Answer, COMDAT

; 468  :   static _Ret _Answer() { return _Ret(); }

	xor	al, al
	ret	0
?_Answer@?$_BothPtrType@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@SA?AU__false_type@2@XZ ENDP ; stlp_std::_BothPtrType<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >::_Answer
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator.h
_TEXT	ENDS
;	COMDAT ?base@?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QBEPAUSSubGraph@CStatGraph@@XZ
_TEXT	SEGMENT
?base@?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QBEPAUSSubGraph@CStatGraph@@XZ PROC ; stlp_std::reverse_iterator<CStatGraph::SSubGraph *>::base, COMDAT
; _this$ = eax

; 75   :   iterator_type base() const { return current; }

	mov	eax, DWORD PTR [eax]
	ret	0
?base@?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QBEPAUSSubGraph@CStatGraph@@XZ ENDP ; stlp_std::reverse_iterator<CStatGraph::SSubGraph *>::base
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??$?8USElement@CStatGraph@@@priv@stlp_std@@YA_NABU?$_Deque_iterator_base@USElement@CStatGraph@@@01@0@Z
_TEXT	SEGMENT
??$?8USElement@CStatGraph@@@priv@stlp_std@@YA_NABU?$_Deque_iterator_base@USElement@CStatGraph@@@01@0@Z PROC ; stlp_std::priv::operator==<CStatGraph::SElement>, COMDAT
; ___x$ = eax
; ___y$ = edx

; 235  : { return __x._M_cur == __y._M_cur; }

	mov	ecx, DWORD PTR [eax]
	xor	eax, eax
	cmp	ecx, DWORD PTR [edx]
	sete	al
	ret	0
??$?8USElement@CStatGraph@@@priv@stlp_std@@YA_NABU?$_Deque_iterator_base@USElement@CStatGraph@@@01@0@Z ENDP ; stlp_std::priv::operator==<CStatGraph::SElement>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator.h
_TEXT	ENDS
;	COMDAT ??$?8PAUSSubGraph@CStatGraph@@@stlp_std@@YA_NABV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0@Z
_TEXT	SEGMENT
??$?8PAUSSubGraph@CStatGraph@@@stlp_std@@YA_NABV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0@Z PROC ; stlp_std::operator==<CStatGraph::SSubGraph *>, COMDAT
; ___x$ = eax
; ___y$ = edx

; 116  : { return __x.base() == __y.base(); }

	mov	ecx, DWORD PTR [eax]
	xor	eax, eax
	cmp	ecx, DWORD PTR [edx]
	sete	al
	ret	0
??$?8PAUSSubGraph@CStatGraph@@@stlp_std@@YA_NABV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0@Z ENDP ; stlp_std::operator==<CStatGraph::SSubGraph *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\type_traits.h
_TEXT	ENDS
;	COMDAT ??$_UseTrivialCopy@PAUSMarker@CStatGraph@@PAU12@@stlp_std@@YA?AU?$_TrivialCopy@PAUSMarker@CStatGraph@@PAU12@@0@PAPAUSMarker@CStatGraph@@0@Z
_TEXT	SEGMENT
??$_UseTrivialCopy@PAUSMarker@CStatGraph@@PAU12@@stlp_std@@YA?AU?$_TrivialCopy@PAUSMarker@CStatGraph@@PAU12@@0@PAPAUSMarker@CStatGraph@@0@Z PROC ; stlp_std::_UseTrivialCopy<CStatGraph::SMarker *,CStatGraph::SMarker *>, COMDAT

; 485  : { return _TrivialCopy<_Src, _Dst>(); }

	xor	al, al
	ret	0
??$_UseTrivialCopy@PAUSMarker@CStatGraph@@PAU12@@stlp_std@@YA?AU?$_TrivialCopy@PAUSMarker@CStatGraph@@PAU12@@0@PAPAUSMarker@CStatGraph@@0@Z ENDP ; stlp_std::_UseTrivialCopy<CStatGraph::SMarker *,CStatGraph::SMarker *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_UseTrivialUCopy@USSubGraph@CStatGraph@@U12@@stlp_std@@YA?AU?$_TrivialUCopy@USSubGraph@CStatGraph@@U12@@0@PAUSSubGraph@CStatGraph@@0@Z
_TEXT	SEGMENT
??$_UseTrivialUCopy@USSubGraph@CStatGraph@@U12@@stlp_std@@YA?AU?$_TrivialUCopy@USSubGraph@CStatGraph@@U12@@0@PAUSSubGraph@CStatGraph@@0@Z PROC ; stlp_std::_UseTrivialUCopy<CStatGraph::SSubGraph,CStatGraph::SSubGraph>, COMDAT

; 489  : { return _TrivialUCopy<_Src, _Dst>(); }

	xor	al, al
	ret	0
??$_UseTrivialUCopy@USSubGraph@CStatGraph@@U12@@stlp_std@@YA?AU?$_TrivialUCopy@USSubGraph@CStatGraph@@U12@@0@PAUSSubGraph@CStatGraph@@0@Z ENDP ; stlp_std::_UseTrivialUCopy<CStatGraph::SSubGraph,CStatGraph::SSubGraph>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_UseTrivialCopy@PAUSElement@CStatGraph@@PAU12@@stlp_std@@YA?AU?$_TrivialCopy@PAUSElement@CStatGraph@@PAU12@@0@PAPAUSElement@CStatGraph@@0@Z
_TEXT	SEGMENT
??$_UseTrivialCopy@PAUSElement@CStatGraph@@PAU12@@stlp_std@@YA?AU?$_TrivialCopy@PAUSElement@CStatGraph@@PAU12@@0@PAPAUSElement@CStatGraph@@0@Z PROC ; stlp_std::_UseTrivialCopy<CStatGraph::SElement *,CStatGraph::SElement *>, COMDAT

; 485  : { return _TrivialCopy<_Src, _Dst>(); }

	xor	al, al
	ret	0
??$_UseTrivialCopy@PAUSElement@CStatGraph@@PAU12@@stlp_std@@YA?AU?$_TrivialCopy@PAUSElement@CStatGraph@@PAU12@@0@PAPAUSElement@CStatGraph@@0@Z ENDP ; stlp_std::_UseTrivialCopy<CStatGraph::SElement *,CStatGraph::SElement *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Answer@?$_TrivialCopy@PAUSMarker@CStatGraph@@PAU12@@stlp_std@@SA?AU__true_type@2@XZ
_TEXT	SEGMENT
?_Answer@?$_TrivialCopy@PAUSMarker@CStatGraph@@PAU12@@stlp_std@@SA?AU__true_type@2@XZ PROC ; stlp_std::_TrivialCopy<CStatGraph::SMarker *,CStatGraph::SMarker *>::_Answer, COMDAT

; 390  :   static _Ret _Answer() { return _Ret(); }

	xor	al, al
	ret	0
?_Answer@?$_TrivialCopy@PAUSMarker@CStatGraph@@PAU12@@stlp_std@@SA?AU__true_type@2@XZ ENDP ; stlp_std::_TrivialCopy<CStatGraph::SMarker *,CStatGraph::SMarker *>::_Answer
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Answer@?$_TrivialUCopy@USSubGraph@CStatGraph@@U12@@stlp_std@@SA?AU__false_type@2@XZ
_TEXT	SEGMENT
?_Answer@?$_TrivialUCopy@USSubGraph@CStatGraph@@U12@@stlp_std@@SA?AU__false_type@2@XZ PROC ; stlp_std::_TrivialUCopy<CStatGraph::SSubGraph,CStatGraph::SSubGraph>::_Answer, COMDAT

; 407  :   static _Ret _Answer() { return _Ret(); }

	xor	al, al
	ret	0
?_Answer@?$_TrivialUCopy@USSubGraph@CStatGraph@@U12@@stlp_std@@SA?AU__false_type@2@XZ ENDP ; stlp_std::_TrivialUCopy<CStatGraph::SSubGraph,CStatGraph::SSubGraph>::_Answer
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Answer@?$_TrivialCopy@PAUSElement@CStatGraph@@PAU12@@stlp_std@@SA?AU__true_type@2@XZ
_TEXT	SEGMENT
?_Answer@?$_TrivialCopy@PAUSElement@CStatGraph@@PAU12@@stlp_std@@SA?AU__true_type@2@XZ PROC ; stlp_std::_TrivialCopy<CStatGraph::SElement *,CStatGraph::SElement *>::_Answer, COMDAT

; 390  :   static _Ret _Answer() { return _Ret(); }

	xor	al, al
	ret	0
?_Answer@?$_TrivialCopy@PAUSElement@CStatGraph@@PAU12@@stlp_std@@SA?AU__true_type@2@XZ ENDP ; stlp_std::_TrivialCopy<CStatGraph::SElement *,CStatGraph::SElement *>::_Answer
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator.h
_TEXT	ENDS
;	COMDAT ??$?9PAUSSubGraph@CStatGraph@@@stlp_std@@YA_NABV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0@Z
_TEXT	SEGMENT
??$?9PAUSSubGraph@CStatGraph@@@stlp_std@@YA_NABV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0@Z PROC ; stlp_std::operator!=<CStatGraph::SSubGraph *>, COMDAT
; ___x$ = eax
; ___y$ = edx

; 127  : { return !(__x == __y); }

	mov	ecx, DWORD PTR [eax]
	xor	eax, eax
	cmp	ecx, DWORD PTR [edx]
	setne	al
	ret	0
??$?9PAUSSubGraph@CStatGraph@@@stlp_std@@YA_NABV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0@Z ENDP ; stlp_std::operator!=<CStatGraph::SSubGraph *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$__destroy_range_aux@PAUSMarker@CStatGraph@@U12@@stlp_std@@YAXPAUSMarker@CStatGraph@@00ABU__true_type@0@@Z
_TEXT	SEGMENT
??$__destroy_range_aux@PAUSMarker@CStatGraph@@U12@@stlp_std@@YAXPAUSMarker@CStatGraph@@00ABU__true_type@0@@Z PROC ; stlp_std::__destroy_range_aux<CStatGraph::SMarker *,CStatGraph::SMarker>, COMDAT

; 169  : __destroy_range_aux(_ForwardIterator, _ForwardIterator, _Tp*, const __true_type& /*_Trivial_destructor*/) {}

	ret	0
??$__destroy_range_aux@PAUSMarker@CStatGraph@@U12@@stlp_std@@YAXPAUSMarker@CStatGraph@@00ABU__true_type@0@@Z ENDP ; stlp_std::__destroy_range_aux<CStatGraph::SMarker *,CStatGraph::SMarker>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\type_traits.h
_TEXT	ENDS
;	COMDAT ?_Answer@?$_BothPtrType@PAPAUSMarker@CStatGraph@@PAPAU12@@stlp_std@@SA?AU__true_type@2@XZ
_TEXT	SEGMENT
?_Answer@?$_BothPtrType@PAPAUSMarker@CStatGraph@@PAPAU12@@stlp_std@@SA?AU__true_type@2@XZ PROC ; stlp_std::_BothPtrType<CStatGraph::SMarker * *,CStatGraph::SMarker * *>::_Answer, COMDAT

; 468  :   static _Ret _Answer() { return _Ret(); }

	xor	al, al
	ret	0
?_Answer@?$_BothPtrType@PAPAUSMarker@CStatGraph@@PAPAU12@@stlp_std@@SA?AU__true_type@2@XZ ENDP ; stlp_std::_BothPtrType<CStatGraph::SMarker * *,CStatGraph::SMarker * *>::_Answer
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Answer@?$_BothPtrType@PBUSSubGraph@CStatGraph@@PAU12@@stlp_std@@SA?AU__true_type@2@XZ
_TEXT	SEGMENT
?_Answer@?$_BothPtrType@PBUSSubGraph@CStatGraph@@PAU12@@stlp_std@@SA?AU__true_type@2@XZ PROC ; stlp_std::_BothPtrType<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *>::_Answer, COMDAT

; 468  :   static _Ret _Answer() { return _Ret(); }

	xor	al, al
	ret	0
?_Answer@?$_BothPtrType@PBUSSubGraph@CStatGraph@@PAU12@@stlp_std@@SA?AU__true_type@2@XZ ENDP ; stlp_std::_BothPtrType<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *>::_Answer
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Answer@?$_BothPtrType@PAPAUSElement@CStatGraph@@PAPAU12@@stlp_std@@SA?AU__true_type@2@XZ
_TEXT	SEGMENT
?_Answer@?$_BothPtrType@PAPAUSElement@CStatGraph@@PAPAU12@@stlp_std@@SA?AU__true_type@2@XZ PROC ; stlp_std::_BothPtrType<CStatGraph::SElement * *,CStatGraph::SElement * *>::_Answer, COMDAT

; 468  :   static _Ret _Answer() { return _Ret(); }

	xor	al, al
	ret	0
?_Answer@?$_BothPtrType@PAPAUSElement@CStatGraph@@PAPAU12@@stlp_std@@SA?AU__true_type@2@XZ ENDP ; stlp_std::_BothPtrType<CStatGraph::SElement * *,CStatGraph::SElement * *>::_Answer
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??D?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEABUSElement@CStatGraph@@XZ
_TEXT	SEGMENT
??D?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEABUSElement@CStatGraph@@XZ PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::operator*, COMDAT
; _this$ = eax

; 187  :     return *this->_M_cur;

	mov	eax, DWORD PTR [eax]

; 188  :   }

	ret	0
??D?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEABUSElement@CStatGraph@@XZ ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::operator*
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator.h
_TEXT	ENDS
;	COMDAT ??E?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QAEAAV01@XZ PROC ; stlp_std::reverse_iterator<CStatGraph::SSubGraph *>::operator++, COMDAT
; _this$ = eax

; 82   :     --current;

	add	DWORD PTR [eax], -44			; ffffffd4H

; 83   :     return *this;
; 84   :   }

	ret	0
??E?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QAEAAV01@XZ ENDP ; stlp_std::reverse_iterator<CStatGraph::SSubGraph *>::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QBEAAUSSubGraph@CStatGraph@@XZ
_TEXT	SEGMENT
??D?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QBEAAUSSubGraph@CStatGraph@@XZ PROC ; stlp_std::reverse_iterator<CStatGraph::SSubGraph *>::operator*, COMDAT
; _this$ = eax

; 77   :     _Iterator __tmp = current;
; 78   :     return *--__tmp;

	mov	eax, DWORD PTR [eax]
	sub	eax, 44					; 0000002cH

; 79   :   }

	ret	0
??D?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QBEAAUSSubGraph@CStatGraph@@XZ ENDP ; stlp_std::reverse_iterator<CStatGraph::SSubGraph *>::operator*
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??D?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEAAUSElement@CStatGraph@@XZ
_TEXT	SEGMENT
??D?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEAAUSElement@CStatGraph@@XZ PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator*, COMDAT
; _this$ = eax

; 187  :     return *this->_M_cur;

	mov	eax, DWORD PTR [eax]

; 188  :   }

	ret	0
??D?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEAAUSElement@CStatGraph@@XZ ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator*
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$__destroy_aux@USMarker@CStatGraph@@@stlp_std@@YAXPAUSMarker@CStatGraph@@ABU__true_type@0@@Z
_TEXT	SEGMENT
??$__destroy_aux@USMarker@CStatGraph@@@stlp_std@@YAXPAUSMarker@CStatGraph@@ABU__true_type@0@@Z PROC ; stlp_std::__destroy_aux<CStatGraph::SMarker>, COMDAT

; 56   : inline void __destroy_aux(_Tp*, const __true_type& /*_Trivial_destructor*/) {}

	ret	0
??$__destroy_aux@USMarker@CStatGraph@@@stlp_std@@YAXPAUSMarker@CStatGraph@@ABU__true_type@0@@Z ENDP ; stlp_std::__destroy_aux<CStatGraph::SMarker>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__destroy_range_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@USMarker@CStatGraph@@@stlp_std@@YAXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0PAUSMarker@CStatGraph@@ABU__true_type@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 16
___formal$ = 24						; size = 16
??$__destroy_range_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@USMarker@CStatGraph@@@stlp_std@@YAXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0PAUSMarker@CStatGraph@@ABU__true_type@0@@Z PROC ; stlp_std::__destroy_range_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,CStatGraph::SMarker>, COMDAT

; 169  : __destroy_range_aux(_ForwardIterator, _ForwardIterator, _Tp*, const __true_type& /*_Trivial_destructor*/) {}

	ret	0
??$__destroy_range_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@USMarker@CStatGraph@@@stlp_std@@YAXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0PAUSMarker@CStatGraph@@ABU__true_type@0@@Z ENDP ; stlp_std::__destroy_range_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,CStatGraph::SMarker>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__destroy_range_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@USElement@CStatGraph@@@stlp_std@@YAXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0PAUSElement@CStatGraph@@ABU__true_type@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 16
___formal$ = 24						; size = 16
??$__destroy_range_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@USElement@CStatGraph@@@stlp_std@@YAXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0PAUSElement@CStatGraph@@ABU__true_type@0@@Z PROC ; stlp_std::__destroy_range_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,CStatGraph::SElement>, COMDAT

; 169  : __destroy_range_aux(_ForwardIterator, _ForwardIterator, _Tp*, const __true_type& /*_Trivial_destructor*/) {}

	ret	0
??$__destroy_range_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@USElement@CStatGraph@@@stlp_std@@YAXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0PAUSElement@CStatGraph@@ABU__true_type@0@@Z ENDP ; stlp_std::__destroy_range_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,CStatGraph::SElement>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__destroy_range@PAUSMarker@CStatGraph@@U12@@stlp_std@@YAXPAUSMarker@CStatGraph@@00@Z
_TEXT	SEGMENT
??$__destroy_range@PAUSMarker@CStatGraph@@U12@@stlp_std@@YAXPAUSMarker@CStatGraph@@00@Z PROC ; stlp_std::__destroy_range<CStatGraph::SMarker *,CStatGraph::SMarker>, COMDAT

; 175  :   typedef typename __type_traits<_Tp>::has_trivial_destructor _Trivial_destructor;
; 176  :   __destroy_range_aux(__first, __last, __ptr, _Trivial_destructor());
; 177  : }

	ret	0
??$__destroy_range@PAUSMarker@CStatGraph@@U12@@stlp_std@@YAXPAUSMarker@CStatGraph@@00@Z ENDP ; stlp_std::__destroy_range<CStatGraph::SMarker *,CStatGraph::SMarker>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\type_traits.h
_TEXT	ENDS
;	COMDAT ?_Answer@?$_BothPtrType@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@SA?AU__false_type@2@XZ
_TEXT	SEGMENT
?_Answer@?$_BothPtrType@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@SA?AU__false_type@2@XZ PROC ; stlp_std::_BothPtrType<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >::_Answer, COMDAT

; 468  :   static _Ret _Answer() { return _Ret(); }

	xor	al, al
	ret	0
?_Answer@?$_BothPtrType@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@SA?AU__false_type@2@XZ ENDP ; stlp_std::_BothPtrType<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >::_Answer
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Answer@?$_BothPtrType@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@SA?AU__false_type@2@XZ
_TEXT	SEGMENT
?_Answer@?$_BothPtrType@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@SA?AU__false_type@2@XZ PROC ; stlp_std::_BothPtrType<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >::_Answer, COMDAT

; 468  :   static _Ret _Answer() { return _Ret(); }

	xor	al, al
	ret	0
?_Answer@?$_BothPtrType@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@SA?AU__false_type@2@XZ ENDP ; stlp_std::_BothPtrType<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >::_Answer
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??D?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEABUSMarker@CStatGraph@@XZ
_TEXT	SEGMENT
??D?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEABUSMarker@CStatGraph@@XZ PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::operator*, COMDAT
; _this$ = eax

; 187  :     return *this->_M_cur;

	mov	eax, DWORD PTR [eax]

; 188  :   }

	ret	0
??D?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEABUSMarker@CStatGraph@@XZ ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::operator*
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory.h
_TEXT	ENDS
;	COMDAT ??$xr_alloc@PAUSMarker@CStatGraph@@@@YAPAPAUSMarker@CStatGraph@@I@Z
_TEXT	SEGMENT
??$xr_alloc@PAUSMarker@CStatGraph@@@@YAPAPAUSMarker@CStatGraph@@I@Z PROC ; xr_alloc<CStatGraph::SMarker *>, COMDAT
; _count$ = eax

; 109  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	ecx, DWORD PTR [eax*4]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
??$xr_alloc@PAUSMarker@CStatGraph@@@@YAPAPAUSMarker@CStatGraph@@I@Z ENDP ; xr_alloc<CStatGraph::SMarker *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_alloc@USMarker@CStatGraph@@@@YAPAUSMarker@CStatGraph@@I@Z
_TEXT	SEGMENT
??$xr_alloc@USMarker@CStatGraph@@@@YAPAUSMarker@CStatGraph@@I@Z PROC ; xr_alloc<CStatGraph::SMarker>, COMDAT
; _count$ = eax

; 109  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	lea	eax, DWORD PTR [eax+eax*2]
	add	eax, eax
	add	eax, eax
	push	eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
??$xr_alloc@USMarker@CStatGraph@@@@YAPAUSMarker@CStatGraph@@I@Z ENDP ; xr_alloc<CStatGraph::SMarker>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_alloc@PAUSElement@CStatGraph@@@@YAPAPAUSElement@CStatGraph@@I@Z
_TEXT	SEGMENT
??$xr_alloc@PAUSElement@CStatGraph@@@@YAPAPAUSElement@CStatGraph@@I@Z PROC ; xr_alloc<CStatGraph::SElement *>, COMDAT
; _count$ = eax

; 109  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	ecx, DWORD PTR [eax*4]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
??$xr_alloc@PAUSElement@CStatGraph@@@@YAPAPAUSElement@CStatGraph@@I@Z ENDP ; xr_alloc<CStatGraph::SElement *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_alloc@USElement@CStatGraph@@@@YAPAUSElement@CStatGraph@@I@Z
_TEXT	SEGMENT
??$xr_alloc@USElement@CStatGraph@@@@YAPAUSElement@CStatGraph@@I@Z PROC ; xr_alloc<CStatGraph::SElement>, COMDAT
; _count$ = eax

; 109  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	lea	ecx, DWORD PTR [eax*8]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
??$xr_alloc@USElement@CStatGraph@@@@YAPAUSElement@CStatGraph@@I@Z ENDP ; xr_alloc<CStatGraph::SElement>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_free@PAUSMarker@CStatGraph@@@@YAXAAPAPAUSMarker@CStatGraph@@@Z
_TEXT	SEGMENT
??$xr_free@PAUSMarker@CStatGraph@@@@YAXAAPAPAUSMarker@CStatGraph@@@Z PROC ; xr_free<CStatGraph::SMarker *>, COMDAT
; _P$ = esi

; 111  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN1@xr_free@8
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
$LN1@xr_free@8:
	ret	0
??$xr_free@PAUSMarker@CStatGraph@@@@YAXAAPAPAUSMarker@CStatGraph@@@Z ENDP ; xr_free<CStatGraph::SMarker *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??$?8USMarker@CStatGraph@@@priv@stlp_std@@YA_NABU?$_Deque_iterator_base@USMarker@CStatGraph@@@01@0@Z
_TEXT	SEGMENT
??$?8USMarker@CStatGraph@@@priv@stlp_std@@YA_NABU?$_Deque_iterator_base@USMarker@CStatGraph@@@01@0@Z PROC ; stlp_std::priv::operator==<CStatGraph::SMarker>, COMDAT
; ___x$ = eax
; ___y$ = edx

; 235  : { return __x._M_cur == __y._M_cur; }

	mov	ecx, DWORD PTR [eax]
	xor	eax, eax
	cmp	ecx, DWORD PTR [edx]
	sete	al
	ret	0
??$?8USMarker@CStatGraph@@@priv@stlp_std@@YA_NABU?$_Deque_iterator_base@USMarker@CStatGraph@@@01@0@Z ENDP ; stlp_std::priv::operator==<CStatGraph::SMarker>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$_Destroy@USMarker@CStatGraph@@@stlp_std@@YAXPAUSMarker@CStatGraph@@@Z
_TEXT	SEGMENT
??$_Destroy@USMarker@CStatGraph@@@stlp_std@@YAXPAUSMarker@CStatGraph@@@Z PROC ; stlp_std::_Destroy<CStatGraph::SMarker>, COMDAT

; 60   : #if defined (_STLP_MSVC) && (_STLP_MSVC <= 1010)
; 61   :   __pointer;
; 62   : #endif
; 63   :   typedef typename __type_traits<_Tp>::has_trivial_destructor _Trivial_destructor;
; 64   :   __destroy_aux(__pointer, _Trivial_destructor());
; 65   : #if defined (_STLP_DEBUG_UNINITIALIZED)
; 66   :   memset(__REINTERPRET_CAST(char*, __pointer), _STLP_SHRED_BYTE, sizeof(_Tp));
; 67   : #endif
; 68   : }

	ret	0
??$_Destroy@USMarker@CStatGraph@@@stlp_std@@YAXPAUSMarker@CStatGraph@@@Z ENDP ; stlp_std::_Destroy<CStatGraph::SMarker>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory.h
_TEXT	ENDS
;	COMDAT ??$xr_free@USMarker@CStatGraph@@@@YAXAAPAUSMarker@CStatGraph@@@Z
_TEXT	SEGMENT
??$xr_free@USMarker@CStatGraph@@@@YAXAAPAUSMarker@CStatGraph@@@Z PROC ; xr_free<CStatGraph::SMarker>, COMDAT
; _P$ = esi

; 111  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN1@xr_free@9
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
$LN1@xr_free@9:
	ret	0
??$xr_free@USMarker@CStatGraph@@@@YAXAAPAUSMarker@CStatGraph@@@Z ENDP ; xr_free<CStatGraph::SMarker>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_free@PAUSElement@CStatGraph@@@@YAXAAPAPAUSElement@CStatGraph@@@Z
_TEXT	SEGMENT
??$xr_free@PAUSElement@CStatGraph@@@@YAXAAPAPAUSElement@CStatGraph@@@Z PROC ; xr_free<CStatGraph::SElement *>, COMDAT
; _P$ = esi

; 111  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN1@xr_free@10
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
$LN1@xr_free@10:
	ret	0
??$xr_free@PAUSElement@CStatGraph@@@@YAXAAPAPAUSElement@CStatGraph@@@Z ENDP ; xr_free<CStatGraph::SElement *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_free@USElement@CStatGraph@@@@YAXAAPAUSElement@CStatGraph@@@Z
_TEXT	SEGMENT
??$xr_free@USElement@CStatGraph@@@@YAXAAPAUSElement@CStatGraph@@@Z PROC ; xr_free<CStatGraph::SElement>, COMDAT
; _P$ = esi

; 111  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN1@xr_free@11
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
$LN1@xr_free@11:
	ret	0
??$xr_free@USElement@CStatGraph@@@@YAXAAPAUSElement@CStatGraph@@@Z ENDP ; xr_free<CStatGraph::SElement>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$__destroy_aux@USElement@CStatGraph@@@stlp_std@@YAXPAUSElement@CStatGraph@@ABU__true_type@0@@Z
_TEXT	SEGMENT
??$__destroy_aux@USElement@CStatGraph@@@stlp_std@@YAXPAUSElement@CStatGraph@@ABU__true_type@0@@Z PROC ; stlp_std::__destroy_aux<CStatGraph::SElement>, COMDAT

; 56   : inline void __destroy_aux(_Tp*, const __true_type& /*_Trivial_destructor*/) {}

	ret	0
??$__destroy_aux@USElement@CStatGraph@@@stlp_std@@YAXPAUSElement@CStatGraph@@ABU__true_type@0@@Z ENDP ; stlp_std::__destroy_aux<CStatGraph::SElement>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy_Range@PAUSMarker@CStatGraph@@@stlp_std@@YAXPAUSMarker@CStatGraph@@0@Z
_TEXT	SEGMENT
??$_Destroy_Range@PAUSMarker@CStatGraph@@@stlp_std@@YAXPAUSMarker@CStatGraph@@0@Z PROC ; stlp_std::_Destroy_Range<CStatGraph::SMarker *>, COMDAT

; 181  :   __destroy_range(__first, __last, _STLP_VALUE_TYPE(__first, _ForwardIterator));
; 182  : }

	ret	0
??$_Destroy_Range@PAUSMarker@CStatGraph@@@stlp_std@@YAXPAUSMarker@CStatGraph@@0@Z ENDP ; stlp_std::_Destroy_Range<CStatGraph::SMarker *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?allocate@?$xalloc@PAUSMarker@CStatGraph@@@@QBEPAPAUSMarker@CStatGraph@@IPBX@Z
_TEXT	SEGMENT
?allocate@?$xalloc@PAUSMarker@CStatGraph@@@@QBEPAPAUSMarker@CStatGraph@@IPBX@Z PROC ; xalloc<CStatGraph::SMarker *>::allocate, COMDAT
; _n$ = eax

; 81   : 							pointer					allocate		(size_type n, const void* p=0) const	{	return xr_alloc<T>((u32)n);	}

	lea	ecx, DWORD PTR [eax*4]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
?allocate@?$xalloc@PAUSMarker@CStatGraph@@@@QBEPAPAUSMarker@CStatGraph@@IPBX@Z ENDP ; xalloc<CStatGraph::SMarker *>::allocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?allocate@?$xalloc@USMarker@CStatGraph@@@@QBEPAUSMarker@CStatGraph@@IPBX@Z
_TEXT	SEGMENT
?allocate@?$xalloc@USMarker@CStatGraph@@@@QBEPAUSMarker@CStatGraph@@IPBX@Z PROC ; xalloc<CStatGraph::SMarker>::allocate, COMDAT
; _n$ = eax

; 81   : 							pointer					allocate		(size_type n, const void* p=0) const	{	return xr_alloc<T>((u32)n);	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	lea	eax, DWORD PTR [eax+eax*2]
	add	eax, eax
	add	eax, eax
	push	eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
?allocate@?$xalloc@USMarker@CStatGraph@@@@QBEPAUSMarker@CStatGraph@@IPBX@Z ENDP ; xalloc<CStatGraph::SMarker>::allocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?allocate@?$xalloc@PAUSElement@CStatGraph@@@@QBEPAPAUSElement@CStatGraph@@IPBX@Z
_TEXT	SEGMENT
?allocate@?$xalloc@PAUSElement@CStatGraph@@@@QBEPAPAUSElement@CStatGraph@@IPBX@Z PROC ; xalloc<CStatGraph::SElement *>::allocate, COMDAT
; _n$ = eax

; 81   : 							pointer					allocate		(size_type n, const void* p=0) const	{	return xr_alloc<T>((u32)n);	}

	lea	ecx, DWORD PTR [eax*4]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
?allocate@?$xalloc@PAUSElement@CStatGraph@@@@QBEPAPAUSElement@CStatGraph@@IPBX@Z ENDP ; xalloc<CStatGraph::SElement *>::allocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?allocate@?$xalloc@USElement@CStatGraph@@@@QBEPAUSElement@CStatGraph@@IPBX@Z
_TEXT	SEGMENT
?allocate@?$xalloc@USElement@CStatGraph@@@@QBEPAUSElement@CStatGraph@@IPBX@Z PROC ; xalloc<CStatGraph::SElement>::allocate, COMDAT
; _n$ = eax

; 81   : 							pointer					allocate		(size_type n, const void* p=0) const	{	return xr_alloc<T>((u32)n);	}

	lea	ecx, DWORD PTR [eax*8]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
?allocate@?$xalloc@USElement@CStatGraph@@@@QBEPAUSElement@CStatGraph@@IPBX@Z ENDP ; xalloc<CStatGraph::SElement>::allocate
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator.h
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QAE@ABV01@@Z PROC ; stlp_std::reverse_iterator<CStatGraph::SSubGraph *>::reverse_iterator<CStatGraph::SSubGraph *>, COMDAT
; _this$ = eax
; ___x$ = ecx

; 66   :   reverse_iterator(const _Self& __x) : current(__x.current) {}

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	ret	0
??0?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QAE@ABV01@@Z ENDP ; stlp_std::reverse_iterator<CStatGraph::SSubGraph *>::reverse_iterator<CStatGraph::SSubGraph *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_alloc.h
_TEXT	ENDS
;	COMDAT ?allocate@?$_STLP_alloc_proxy@IUSMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEPAUSMarker@CStatGraph@@I@Z
_TEXT	SEGMENT
?allocate@?$_STLP_alloc_proxy@IUSMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEPAUSMarker@CStatGraph@@I@Z PROC ; stlp_std::priv::_STLP_alloc_proxy<unsigned int,CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::allocate, COMDAT
; ___n$ = eax

; 633  :   { return _Base::allocate(__n); }

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	lea	eax, DWORD PTR [eax+eax*2]
	add	eax, eax
	add	eax, eax
	push	eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
?allocate@?$_STLP_alloc_proxy@IUSMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEPAUSMarker@CStatGraph@@I@Z ENDP ; stlp_std::priv::_STLP_alloc_proxy<unsigned int,CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::allocate
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?deallocate@?$xalloc@PAUSMarker@CStatGraph@@@@QBEXPAPAUSMarker@CStatGraph@@I@Z
_TEXT	SEGMENT
?deallocate@?$xalloc@PAUSMarker@CStatGraph@@@@QBEXPAPAUSMarker@CStatGraph@@I@Z PROC ; xalloc<CStatGraph::SMarker *>::deallocate, COMDAT
; _p$ = eax

; 83   : 							void					deallocate		(pointer p, size_type n) const			{	xr_free	(p);				}

	test	eax, eax
	je	SHORT $LN3@deallocate@8
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN3@deallocate@8:
	ret	0
?deallocate@?$xalloc@PAUSMarker@CStatGraph@@@@QBEXPAPAUSMarker@CStatGraph@@I@Z ENDP ; xalloc<CStatGraph::SMarker *>::deallocate
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_alloc.h
_TEXT	ENDS
;	COMDAT ?allocate@?$_STLP_alloc_proxy@PAPAUSMarker@CStatGraph@@PAU12@V?$xalloc@PAUSMarker@CStatGraph@@@@@priv@stlp_std@@QAEPAPAUSMarker@CStatGraph@@I@Z
_TEXT	SEGMENT
?allocate@?$_STLP_alloc_proxy@PAPAUSMarker@CStatGraph@@PAU12@V?$xalloc@PAUSMarker@CStatGraph@@@@@priv@stlp_std@@QAEPAPAUSMarker@CStatGraph@@I@Z PROC ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SMarker * *,CStatGraph::SMarker *,xalloc<CStatGraph::SMarker *> >::allocate, COMDAT
; ___n$ = eax

; 633  :   { return _Base::allocate(__n); }

	lea	ecx, DWORD PTR [eax*4]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
?allocate@?$_STLP_alloc_proxy@PAPAUSMarker@CStatGraph@@PAU12@V?$xalloc@PAUSMarker@CStatGraph@@@@@priv@stlp_std@@QAEPAPAUSMarker@CStatGraph@@I@Z ENDP ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SMarker * *,CStatGraph::SMarker *,xalloc<CStatGraph::SMarker *> >::allocate
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ?buffer_size@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@SAIXZ
_TEXT	SEGMENT
?buffer_size@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@SAIXZ PROC ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::buffer_size, COMDAT

; 354  :   static size_t _STLP_CALL buffer_size() { return (size_t)_Deque_iterator_base<_Tp>::__buffer_size; }

	mov	eax, 10					; 0000000aH
	ret	0
?buffer_size@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@SAIXZ ENDP ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::buffer_size
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?deallocate@?$xalloc@USMarker@CStatGraph@@@@QBEXPAUSMarker@CStatGraph@@I@Z
_TEXT	SEGMENT
?deallocate@?$xalloc@USMarker@CStatGraph@@@@QBEXPAUSMarker@CStatGraph@@I@Z PROC ; xalloc<CStatGraph::SMarker>::deallocate, COMDAT
; _p$ = eax

; 83   : 							void					deallocate		(pointer p, size_type n) const			{	xr_free	(p);				}

	test	eax, eax
	je	SHORT $LN3@deallocate@9
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN3@deallocate@9:
	ret	0
?deallocate@?$xalloc@USMarker@CStatGraph@@@@QBEXPAUSMarker@CStatGraph@@I@Z ENDP ; xalloc<CStatGraph::SMarker>::deallocate
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?_M_set@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXPAUSSubGraph@CStatGraph@@00@Z
_TEXT	SEGMENT
___e$ = 8						; size = 4
?_M_set@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXPAUSSubGraph@CStatGraph@@00@Z PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_set, COMDAT
; _this$ = eax
; ___s$ = ecx
; ___f$ = edx

; 626  :     this->_M_start = __s;

	mov	DWORD PTR [eax], ecx

; 627  :     this->_M_finish = __f;
; 628  :     this->_M_end_of_storage._M_data = __e;

	mov	ecx, DWORD PTR ___e$[esp-4]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx

; 629  :   }

	ret	4
?_M_set@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXPAUSSubGraph@CStatGraph@@00@Z ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_set
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?capacity@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBEIXZ PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::capacity, COMDAT
; _this$ = eax

; 187  :   size_type capacity() const    { return size_type(this->_M_end_of_storage._M_data - this->_M_start); }

	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR [eax]
	mov	eax, 780903145				; 2e8ba2e9H
	imul	ecx
	sar	edx, 3
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	ret	0
?capacity@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBEIXZ ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::capacity
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_alloc.h
_TEXT	ENDS
;	COMDAT ?allocate@?$_STLP_alloc_proxy@IUSElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEPAUSElement@CStatGraph@@I@Z
_TEXT	SEGMENT
?allocate@?$_STLP_alloc_proxy@IUSElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEPAUSElement@CStatGraph@@I@Z PROC ; stlp_std::priv::_STLP_alloc_proxy<unsigned int,CStatGraph::SElement,xalloc<CStatGraph::SElement> >::allocate, COMDAT
; ___n$ = eax

; 633  :   { return _Base::allocate(__n); }

	lea	ecx, DWORD PTR [eax*8]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
?allocate@?$_STLP_alloc_proxy@IUSElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEPAUSElement@CStatGraph@@I@Z ENDP ; stlp_std::priv::_STLP_alloc_proxy<unsigned int,CStatGraph::SElement,xalloc<CStatGraph::SElement> >::allocate
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?deallocate@?$xalloc@PAUSElement@CStatGraph@@@@QBEXPAPAUSElement@CStatGraph@@I@Z
_TEXT	SEGMENT
?deallocate@?$xalloc@PAUSElement@CStatGraph@@@@QBEXPAPAUSElement@CStatGraph@@I@Z PROC ; xalloc<CStatGraph::SElement *>::deallocate, COMDAT
; _p$ = eax

; 83   : 							void					deallocate		(pointer p, size_type n) const			{	xr_free	(p);				}

	test	eax, eax
	je	SHORT $LN3@deallocate@10
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN3@deallocate@10:
	ret	0
?deallocate@?$xalloc@PAUSElement@CStatGraph@@@@QBEXPAPAUSElement@CStatGraph@@I@Z ENDP ; xalloc<CStatGraph::SElement *>::deallocate
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_alloc.h
_TEXT	ENDS
;	COMDAT ?allocate@?$_STLP_alloc_proxy@PAPAUSElement@CStatGraph@@PAU12@V?$xalloc@PAUSElement@CStatGraph@@@@@priv@stlp_std@@QAEPAPAUSElement@CStatGraph@@I@Z
_TEXT	SEGMENT
?allocate@?$_STLP_alloc_proxy@PAPAUSElement@CStatGraph@@PAU12@V?$xalloc@PAUSElement@CStatGraph@@@@@priv@stlp_std@@QAEPAPAUSElement@CStatGraph@@I@Z PROC ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SElement * *,CStatGraph::SElement *,xalloc<CStatGraph::SElement *> >::allocate, COMDAT
; ___n$ = eax

; 633  :   { return _Base::allocate(__n); }

	lea	ecx, DWORD PTR [eax*4]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
?allocate@?$_STLP_alloc_proxy@PAPAUSElement@CStatGraph@@PAU12@V?$xalloc@PAUSElement@CStatGraph@@@@@priv@stlp_std@@QAEPAPAUSElement@CStatGraph@@I@Z ENDP ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SElement * *,CStatGraph::SElement *,xalloc<CStatGraph::SElement *> >::allocate
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ?_M_set_node@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXPAPAUSElement@CStatGraph@@@Z
_TEXT	SEGMENT
?_M_set_node@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXPAPAUSElement@CStatGraph@@@Z PROC ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_set_node, COMDAT
; _this$ = eax
; ___new_node$ = ecx

; 156  :     _M_last = (_M_first = *(_M_node = __new_node)) + difference_type(__buffer_size);

	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	add	ecx, 128				; 00000080H
	mov	DWORD PTR [eax+8], ecx

; 157  :   }

	ret	0
?_M_set_node@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXPAPAUSElement@CStatGraph@@@Z ENDP ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_set_node
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?buffer_size@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@SAIXZ
_TEXT	SEGMENT
?buffer_size@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@SAIXZ PROC ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::buffer_size, COMDAT

; 354  :   static size_t _STLP_CALL buffer_size() { return (size_t)_Deque_iterator_base<_Tp>::__buffer_size; }

	mov	eax, 16					; 00000010H
	ret	0
?buffer_size@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@SAIXZ ENDP ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::buffer_size
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?deallocate@?$xalloc@USElement@CStatGraph@@@@QBEXPAUSElement@CStatGraph@@I@Z
_TEXT	SEGMENT
?deallocate@?$xalloc@USElement@CStatGraph@@@@QBEXPAUSElement@CStatGraph@@I@Z PROC ; xalloc<CStatGraph::SElement>::deallocate, COMDAT
; _p$ = eax

; 83   : 							void					deallocate		(pointer p, size_type n) const			{	xr_free	(p);				}

	test	eax, eax
	je	SHORT $LN3@deallocate@11
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN3@deallocate@11:
	ret	0
?deallocate@?$xalloc@USElement@CStatGraph@@@@QBEXPAUSElement@CStatGraph@@I@Z ENDP ; xalloc<CStatGraph::SElement>::deallocate
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory.h
_TEXT	ENDS
;	COMDAT ??$xr_alloc@USSubGraph@CStatGraph@@@@YAPAUSSubGraph@CStatGraph@@I@Z
_TEXT	SEGMENT
??$xr_alloc@USSubGraph@CStatGraph@@@@YAPAUSSubGraph@CStatGraph@@I@Z PROC ; xr_alloc<CStatGraph::SSubGraph>, COMDAT
; _count$ = eax

; 109  : 	IC T*		xr_alloc	(u32 count)				{	return  (T*)Memory.mem_alloc(count*sizeof(T));	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	imul	eax, 44					; 0000002cH
	push	eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
??$xr_alloc@USSubGraph@CStatGraph@@@@YAPAUSSubGraph@CStatGraph@@I@Z ENDP ; xr_alloc<CStatGraph::SSubGraph>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??$?0USMarker@CStatGraph@@@?$xalloc@PAUSMarker@CStatGraph@@@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@@Z
_TEXT	SEGMENT
??$?0USMarker@CStatGraph@@@?$xalloc@PAUSMarker@CStatGraph@@@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@@Z PROC ; xalloc<CStatGraph::SMarker *>::xalloc<CStatGraph::SMarker *><CStatGraph::SMarker>, COMDAT
; _this$ = eax

; 79   : 	template<class _Other>							xalloc			(const xalloc<_Other>&)					{	}

	ret	0
??$?0USMarker@CStatGraph@@@?$xalloc@PAUSMarker@CStatGraph@@@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@@Z ENDP ; xalloc<CStatGraph::SMarker *>::xalloc<CStatGraph::SMarker *><CStatGraph::SMarker>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory.h
_TEXT	ENDS
;	COMDAT ??$xr_free@USSubGraph@CStatGraph@@@@YAXAAPAUSSubGraph@CStatGraph@@@Z
_TEXT	SEGMENT
??$xr_free@USSubGraph@CStatGraph@@@@YAXAAPAUSSubGraph@CStatGraph@@@Z PROC ; xr_free<CStatGraph::SSubGraph>, COMDAT
; _P$ = esi

; 111  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN1@xr_free@12
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
$LN1@xr_free@12:
	ret	0
??$xr_free@USSubGraph@CStatGraph@@@@YAXAAPAUSSubGraph@CStatGraph@@@Z ENDP ; xr_free<CStatGraph::SSubGraph>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??$?0USElement@CStatGraph@@@?$xalloc@PAUSElement@CStatGraph@@@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@@Z
_TEXT	SEGMENT
??$?0USElement@CStatGraph@@@?$xalloc@PAUSElement@CStatGraph@@@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@@Z PROC ; xalloc<CStatGraph::SElement *>::xalloc<CStatGraph::SElement *><CStatGraph::SElement>, COMDAT
; _this$ = eax

; 79   : 	template<class _Other>							xalloc			(const xalloc<_Other>&)					{	}

	ret	0
??$?0USElement@CStatGraph@@@?$xalloc@PAUSElement@CStatGraph@@@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@@Z ENDP ; xalloc<CStatGraph::SElement *>::xalloc<CStatGraph::SElement *><CStatGraph::SElement>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$_Destroy@USElement@CStatGraph@@@stlp_std@@YAXPAUSElement@CStatGraph@@@Z
_TEXT	SEGMENT
??$_Destroy@USElement@CStatGraph@@@stlp_std@@YAXPAUSElement@CStatGraph@@@Z PROC ; stlp_std::_Destroy<CStatGraph::SElement>, COMDAT

; 60   : #if defined (_STLP_MSVC) && (_STLP_MSVC <= 1010)
; 61   :   __pointer;
; 62   : #endif
; 63   :   typedef typename __type_traits<_Tp>::has_trivial_destructor _Trivial_destructor;
; 64   :   __destroy_aux(__pointer, _Trivial_destructor());
; 65   : #if defined (_STLP_DEBUG_UNINITIALIZED)
; 66   :   memset(__REINTERPRET_CAST(char*, __pointer), _STLP_SHRED_BYTE, sizeof(_Tp));
; 67   : #endif
; 68   : }

	ret	0
??$_Destroy@USElement@CStatGraph@@@stlp_std@@YAXPAUSElement@CStatGraph@@@Z ENDP ; stlp_std::_Destroy<CStatGraph::SElement>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.c
_TEXT	ENDS
;	COMDAT ?clear@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXXZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::clear, COMDAT
; _this$ = edi

; 337  : void deque<_Tp,_Alloc>::clear() {

	push	ebx

; 338  :   for (_Map_pointer __node = this->_M_start._M_node + 1;
; 339  :        __node < this->_M_finish._M_node;
; 340  :        ++__node) {

	mov	ebx, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	push	esi
	mov	esi, DWORD PTR [edi+12]
	add	esi, 4
	cmp	esi, DWORD PTR [edi+28]
	jae	SHORT $LN3@clear
$LL5@clear:

; 341  :     _STLP_STD::_Destroy_Range(*__node, *__node + this->buffer_size());
; 342  :     this->_M_map_size.deallocate(*__node, this->buffer_size());

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN4@clear
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebx
$LN4@clear:
	add	esi, 4
	cmp	esi, DWORD PTR [edi+28]
	jb	SHORT $LL5@clear
$LN3@clear:

; 343  :   }
; 344  : 
; 345  :   if (this->_M_start._M_node != this->_M_finish._M_node) {

	mov	eax, DWORD PTR [edi+12]
	cmp	eax, DWORD PTR [edi+28]
	je	SHORT $LN2@clear

; 346  :     _STLP_STD::_Destroy_Range(this->_M_start._M_cur, this->_M_start._M_last);
; 347  :     _STLP_STD::_Destroy_Range(this->_M_finish._M_first, this->_M_finish._M_cur);
; 348  :     this->_M_map_size.deallocate(this->_M_finish._M_first, this->buffer_size());

	mov	eax, DWORD PTR [edi+20]
	test	eax, eax
	je	SHORT $LN2@clear
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebx
$LN2@clear:

; 349  :   }
; 350  :   else
; 351  :     _STLP_STD::_Destroy_Range(this->_M_start._M_cur, this->_M_finish._M_cur);
; 352  : 
; 353  :   this->_M_finish = this->_M_start;

	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR [edi+16], ecx
	mov	ecx, DWORD PTR [edi+12]
	mov	DWORD PTR [edi+20], edx
	pop	esi
	mov	DWORD PTR [edi+24], eax
	mov	DWORD PTR [edi+28], ecx
	pop	ebx

; 354  : }

	ret	0
?clear@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXXZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::clear
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_pop_front_aux@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXXZ
_TEXT	SEGMENT
?_M_pop_front_aux@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXXZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_pop_front_aux, COMDAT
; _this$ = esi

; 445  :   if (this->_M_start._M_cur != this->_M_start._M_last - 1)

	mov	ecx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [esi]
	sub	ecx, 8
	cmp	eax, ecx
	je	SHORT $LN2@M_pop_fron

; 446  :     ++this->_M_start._M_cur;

	add	eax, 8
	mov	DWORD PTR [esi], eax

; 451  :   }
; 452  : }

	ret	0
$LN2@M_pop_fron:

; 447  :   else {
; 448  :     this->_M_map_size.deallocate(this->_M_start._M_first, this->buffer_size());

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN9@M_pop_fron
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN9@M_pop_fron:

; 449  :     this->_M_start._M_set_node(this->_M_start._M_node + 1);

	mov	eax, DWORD PTR [esi+12]
	add	eax, 4
	mov	DWORD PTR [esi+12], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi+4], eax

; 450  :     this->_M_start._M_cur = this->_M_start._M_first;

	mov	edx, DWORD PTR [esi+4]
	add	eax, 128				; 00000080H
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi], edx

; 451  :   }
; 452  : }

	ret	0
?_M_pop_front_aux@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXXZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_pop_front_aux
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?allocate@?$xalloc@USSubGraph@CStatGraph@@@@QBEPAUSSubGraph@CStatGraph@@IPBX@Z
_TEXT	SEGMENT
?allocate@?$xalloc@USSubGraph@CStatGraph@@@@QBEPAUSSubGraph@CStatGraph@@IPBX@Z PROC ; xalloc<CStatGraph::SSubGraph>::allocate, COMDAT
; _n$ = eax

; 81   : 							pointer					allocate		(size_type n, const void* p=0) const	{	return xr_alloc<T>((u32)n);	}

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	imul	eax, 44					; 0000002cH
	push	eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
?allocate@?$xalloc@USSubGraph@CStatGraph@@@@QBEPAUSSubGraph@CStatGraph@@IPBX@Z ENDP ; xalloc<CStatGraph::SSubGraph>::allocate
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_alloc.h
_TEXT	ENDS
;	COMDAT ?allocate@?$_STLP_alloc_proxy@PAUSSubGraph@CStatGraph@@U12@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEPAUSSubGraph@CStatGraph@@I@Z
_TEXT	SEGMENT
?allocate@?$_STLP_alloc_proxy@PAUSSubGraph@CStatGraph@@U12@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEPAUSSubGraph@CStatGraph@@I@Z PROC ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::allocate, COMDAT
; ___n$ = eax

; 633  :   { return _Base::allocate(__n); }

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	imul	eax, 44					; 0000002cH
	push	eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
?allocate@?$_STLP_alloc_proxy@PAUSSubGraph@CStatGraph@@U12@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEPAUSSubGraph@CStatGraph@@I@Z ENDP ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::allocate
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xalloc@PAUSMarker@CStatGraph@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
??0?$xalloc@PAUSMarker@CStatGraph@@@@QAE@ABV0@@Z PROC	; xalloc<CStatGraph::SMarker *>::xalloc<CStatGraph::SMarker *>, COMDAT
; _this$ = eax

; 78   : 													xalloc			(const xalloc<T>&)						{	}

	ret	0
??0?$xalloc@PAUSMarker@CStatGraph@@@@QAE@ABV0@@Z ENDP	; xalloc<CStatGraph::SMarker *>::xalloc<CStatGraph::SMarker *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ?_M_subtract@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QBEHABU123@@Z
_TEXT	SEGMENT
?_M_subtract@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QBEHABU123@@Z PROC ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_subtract, COMDAT
; _this$ = edx
; ___x$ = esi

; 121  :     return difference_type(__buffer_size) * (_M_node - __x._M_node - 1) +
; 122  :       (_M_cur - _M_first) + (__x._M_last - __x._M_cur);

	mov	eax, DWORD PTR [edx+12]
	sub	eax, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR [edx]
	sub	ecx, DWORD PTR [edx+4]
	sar	eax, 2
	push	edi
	lea	edi, DWORD PTR [eax+eax*4]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, DWORD PTR [esi]
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	edi, DWORD PTR [eax+edi*2]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	ecx, edx
	add	edi, edx
	shr	ecx, 31					; 0000001fH
	lea	eax, DWORD PTR [ecx+edi-10]
	pop	edi

; 123  :   }

	ret	0
?_M_subtract@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QBEHABU123@@Z ENDP ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_subtract
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_alloc.h
_TEXT	ENDS
;	COMDAT ?allocate@?$_STLP_alloc_proxy@PAUSSubGraph@CStatGraph@@U12@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEPAUSSubGraph@CStatGraph@@IAAIABU__false_type@3@@Z
_TEXT	SEGMENT
?allocate@?$_STLP_alloc_proxy@PAUSSubGraph@CStatGraph@@U12@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEPAUSSubGraph@CStatGraph@@IAAIABU__false_type@3@@Z PROC ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::allocate, COMDAT
; ___n$ = eax
; ___allocated_n$ = ecx

; 640  :   { __allocated_n = __n; return allocate(__n); }

	mov	DWORD PTR [ecx], eax
	imul	eax, 44					; 0000002cH
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
?allocate@?$_STLP_alloc_proxy@PAUSSubGraph@CStatGraph@@U12@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEPAUSSubGraph@CStatGraph@@IAAIABU__false_type@3@@Z ENDP ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::allocate
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xalloc@PAUSElement@CStatGraph@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
??0?$xalloc@PAUSElement@CStatGraph@@@@QAE@ABV0@@Z PROC	; xalloc<CStatGraph::SElement *>::xalloc<CStatGraph::SElement *>, COMDAT
; _this$ = eax

; 78   : 													xalloc			(const xalloc<T>&)						{	}

	ret	0
??0?$xalloc@PAUSElement@CStatGraph@@@@QAE@ABV0@@Z ENDP	; xalloc<CStatGraph::SElement *>::xalloc<CStatGraph::SElement *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ?_M_subtract@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QBEHABU123@@Z
_TEXT	SEGMENT
?_M_subtract@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QBEHABU123@@Z PROC ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_subtract, COMDAT
; _this$ = ecx
; ___x$ = eax

; 121  :     return difference_type(__buffer_size) * (_M_node - __x._M_node - 1) +
; 122  :       (_M_cur - _M_first) + (__x._M_last - __x._M_cur);

	mov	edx, DWORD PTR [ecx+12]
	sub	edx, DWORD PTR [eax+12]
	push	esi
	mov	esi, DWORD PTR [ecx]
	sub	esi, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR [eax]
	sar	edx, 2
	sar	esi, 3
	shl	edx, 4
	add	edx, esi
	sar	ecx, 3
	lea	eax, DWORD PTR [edx+ecx-16]
	pop	esi

; 123  :   }

	ret	0
?_M_subtract@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QBEHABU123@@Z ENDP ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_subtract
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAE@XZ PROC ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_Deque_iterator_base<CStatGraph::SElement>, COMDAT
; _this$ = eax

; 111  :   _Deque_iterator_base() : _M_cur(0), _M_first(0), _M_last(0), _M_node(0) {}

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	ret	0
??0?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAE@XZ ENDP ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_Deque_iterator_base<CStatGraph::SElement>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xalloc@USElement@CStatGraph@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
??0?$xalloc@USElement@CStatGraph@@@@QAE@ABV0@@Z PROC	; xalloc<CStatGraph::SElement>::xalloc<CStatGraph::SElement>, COMDAT
; _this$ = eax

; 78   : 													xalloc			(const xalloc<T>&)						{	}

	ret	0
??0?$xalloc@USElement@CStatGraph@@@@QAE@ABV0@@Z ENDP	; xalloc<CStatGraph::SElement>::xalloc<CStatGraph::SElement>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??0?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@ABU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@@Z
_TEXT	SEGMENT
??0?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@ABU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >, COMDAT
; _this$ = eax
; ___x$ = ecx

; 184  :     _Deque_iterator_base<value_type>(__x) {}

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], ecx
	ret	0
??0?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@ABU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@ABU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@@Z
_TEXT	SEGMENT
??0?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@ABU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >, COMDAT
; _this$ = eax
; ___x$ = ecx

; 184  :     _Deque_iterator_base<value_type>(__x) {}

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], ecx
	ret	0
??0?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@ABU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_alloc.h
_TEXT	ENDS
;	COMDAT ??0?$_STLP_alloc_proxy@PAPAUSMarker@CStatGraph@@PAU12@V?$xalloc@PAUSMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@PAUSMarker@CStatGraph@@@@PAPAUSMarker@CStatGraph@@@Z
_TEXT	SEGMENT
??0?$_STLP_alloc_proxy@PAPAUSMarker@CStatGraph@@PAU12@V?$xalloc@PAUSMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@PAUSMarker@CStatGraph@@@@PAPAUSMarker@CStatGraph@@@Z PROC ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SMarker * *,CStatGraph::SMarker *,xalloc<CStatGraph::SMarker *> >::_STLP_alloc_proxy<CStatGraph::SMarker * *,CStatGraph::SMarker *,xalloc<CStatGraph::SMarker *> >, COMDAT
; _this$ = eax

; 571  :     _MaybeReboundAlloc(__a), _M_data(__p) {}

	mov	DWORD PTR [eax], 0
	ret	0
??0?$_STLP_alloc_proxy@PAPAUSMarker@CStatGraph@@PAU12@V?$xalloc@PAUSMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@PAUSMarker@CStatGraph@@@@PAPAUSMarker@CStatGraph@@@Z ENDP ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SMarker * *,CStatGraph::SMarker *,xalloc<CStatGraph::SMarker *> >::_STLP_alloc_proxy<CStatGraph::SMarker * *,CStatGraph::SMarker *,xalloc<CStatGraph::SMarker *> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ?_M_set_node@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXPAPAUSMarker@CStatGraph@@@Z
_TEXT	SEGMENT
?_M_set_node@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXPAPAUSMarker@CStatGraph@@@Z PROC ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_set_node, COMDAT
; _this$ = eax
; ___new_node$ = ecx

; 156  :     _M_last = (_M_first = *(_M_node = __new_node)) + difference_type(__buffer_size);

	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	add	ecx, 120				; 00000078H
	mov	DWORD PTR [eax+8], ecx

; 157  :   }

	ret	0
?_M_set_node@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXPAPAUSMarker@CStatGraph@@@Z ENDP ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_set_node
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAE@XZ PROC ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_Deque_iterator_base<CStatGraph::SMarker>, COMDAT
; _this$ = eax

; 111  :   _Deque_iterator_base() : _M_cur(0), _M_first(0), _M_last(0), _M_node(0) {}

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	ret	0
??0?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAE@XZ ENDP ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_Deque_iterator_base<CStatGraph::SMarker>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??G?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEHABU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@@Z
_TEXT	SEGMENT
??G?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEHABU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator-, COMDAT
; _this$ = edx
; ___x$ = esi

; 192  :   difference_type operator-(const const_iterator& __x) const { return this->_M_subtract(__x); }

	mov	eax, DWORD PTR [edx+12]
	sub	eax, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR [edx]
	sub	ecx, DWORD PTR [edx+4]
	sar	eax, 2
	push	edi
	lea	edi, DWORD PTR [eax+eax*4]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, DWORD PTR [esi]
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	edi, DWORD PTR [eax+edi*2]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	ecx, edx
	add	edi, edx
	shr	ecx, 31					; 0000001fH
	lea	eax, DWORD PTR [ecx+edi-10]
	pop	edi
	ret	0
??G?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEHABU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator-
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEAAUSMarker@CStatGraph@@XZ
_TEXT	SEGMENT
??D?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEAAUSMarker@CStatGraph@@XZ PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator*, COMDAT
; _this$ = eax

; 187  :     return *this->_M_cur;

	mov	eax, DWORD PTR [eax]

; 188  :   }

	ret	0
??D?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEAAUSMarker@CStatGraph@@XZ ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator*
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xalloc@USMarker@CStatGraph@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
??0?$xalloc@USMarker@CStatGraph@@@@QAE@ABV0@@Z PROC	; xalloc<CStatGraph::SMarker>::xalloc<CStatGraph::SMarker>, COMDAT
; _this$ = eax

; 78   : 													xalloc			(const xalloc<T>&)						{	}

	ret	0
??0?$xalloc@USMarker@CStatGraph@@@@QAE@ABV0@@Z ENDP	; xalloc<CStatGraph::SMarker>::xalloc<CStatGraph::SMarker>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_alloc.h
_TEXT	ENDS
;	COMDAT ?allocate@?$_STLP_alloc_proxy@PAUSSubGraph@CStatGraph@@U12@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEPAUSSubGraph@CStatGraph@@IAAI@Z
_TEXT	SEGMENT
?allocate@?$_STLP_alloc_proxy@PAUSSubGraph@CStatGraph@@U12@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEPAUSSubGraph@CStatGraph@@IAAI@Z PROC ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::allocate, COMDAT
; ___n$ = eax
; ___allocated_n$ = ecx

; 611  : #if !defined (__BORLANDC__)
; 612  :     typedef typename _IsSTLportClass<_MaybeReboundAlloc>::_Ret _STLportAlloc;
; 613  : #else
; 614  :     typedef typename __bool2type<_IsSTLportClass<_MaybeReboundAlloc>::_Is>::_Ret _STLportAlloc;
; 615  : #endif
; 616  :     return allocate(__n, __allocated_n, _STLportAlloc());

	mov	DWORD PTR [ecx], eax
	imul	eax, 44					; 0000002cH
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 617  :   }

	ret	0
?allocate@?$_STLP_alloc_proxy@PAUSSubGraph@CStatGraph@@U12@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEPAUSSubGraph@CStatGraph@@IAAI@Z ENDP ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::allocate
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xalloc@USSubGraph@CStatGraph@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
??0?$xalloc@USSubGraph@CStatGraph@@@@QAE@ABV0@@Z PROC	; xalloc<CStatGraph::SSubGraph>::xalloc<CStatGraph::SSubGraph>, COMDAT
; _this$ = eax

; 78   : 													xalloc			(const xalloc<T>&)						{	}

	ret	0
??0?$xalloc@USSubGraph@CStatGraph@@@@QAE@ABV0@@Z ENDP	; xalloc<CStatGraph::SSubGraph>::xalloc<CStatGraph::SSubGraph>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_alloc.h
_TEXT	ENDS
;	COMDAT ??0?$_STLP_alloc_proxy@IUSElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@I@Z
_TEXT	SEGMENT
??0?$_STLP_alloc_proxy@IUSElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@I@Z PROC ; stlp_std::priv::_STLP_alloc_proxy<unsigned int,CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_STLP_alloc_proxy<unsigned int,CStatGraph::SElement,xalloc<CStatGraph::SElement> >, COMDAT
; _this$ = eax

; 571  :     _MaybeReboundAlloc(__a), _M_data(__p) {}

	mov	DWORD PTR [eax], 0
	ret	0
??0?$_STLP_alloc_proxy@IUSElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@I@Z ENDP ; stlp_std::priv::_STLP_alloc_proxy<unsigned int,CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_STLP_alloc_proxy<unsigned int,CStatGraph::SElement,xalloc<CStatGraph::SElement> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_STLP_alloc_proxy@PAPAUSElement@CStatGraph@@PAU12@V?$xalloc@PAUSElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@PAUSElement@CStatGraph@@@@PAPAUSElement@CStatGraph@@@Z
_TEXT	SEGMENT
??0?$_STLP_alloc_proxy@PAPAUSElement@CStatGraph@@PAU12@V?$xalloc@PAUSElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@PAUSElement@CStatGraph@@@@PAPAUSElement@CStatGraph@@@Z PROC ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SElement * *,CStatGraph::SElement *,xalloc<CStatGraph::SElement *> >::_STLP_alloc_proxy<CStatGraph::SElement * *,CStatGraph::SElement *,xalloc<CStatGraph::SElement *> >, COMDAT
; _this$ = eax

; 571  :     _MaybeReboundAlloc(__a), _M_data(__p) {}

	mov	DWORD PTR [eax], 0
	ret	0
??0?$_STLP_alloc_proxy@PAPAUSElement@CStatGraph@@PAU12@V?$xalloc@PAUSElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@PAUSElement@CStatGraph@@@@PAPAUSElement@CStatGraph@@@Z ENDP ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SElement * *,CStatGraph::SElement *,xalloc<CStatGraph::SElement *> >::_STLP_alloc_proxy<CStatGraph::SElement * *,CStatGraph::SElement *,xalloc<CStatGraph::SElement *> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??G?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEHABU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@@Z
_TEXT	SEGMENT
??G?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEHABU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator-, COMDAT
; _this$ = ecx
; ___x$ = eax

; 192  :   difference_type operator-(const const_iterator& __x) const { return this->_M_subtract(__x); }

	mov	edx, DWORD PTR [ecx+12]
	sub	edx, DWORD PTR [eax+12]
	push	esi
	mov	esi, DWORD PTR [ecx]
	sub	esi, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR [eax]
	sar	edx, 2
	sar	esi, 3
	shl	edx, 4
	add	edx, esi
	sar	ecx, 3
	lea	eax, DWORD PTR [edx+ecx-16]
	pop	esi
	ret	0
??G?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEHABU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator-
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@XZ PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >, COMDAT
; _this$ = eax

; 181  :   _Deque_iterator() {}

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	ret	0
??0?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@XZ ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_TEXT	ENDS
;	COMDAT ?to_storage_type_pptr@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAPAPAUSMarker@CStatGraph@@PAPAU45@@Z
_TEXT	SEGMENT
?to_storage_type_pptr@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAPAPAUSMarker@CStatGraph@@PAPAU45@@Z PROC ; stlp_std::priv::_CastTraits<CStatGraph::SMarker,CStatGraph::SMarker>::to_storage_type_pptr, COMDAT
; ___ptr$ = eax

; 252  :   { return __ptr; }

	ret	0
?to_storage_type_pptr@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAPAPAUSMarker@CStatGraph@@PAPAU45@@Z ENDP ; stlp_std::priv::_CastTraits<CStatGraph::SMarker,CStatGraph::SMarker>::to_storage_type_pptr
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_storage_type_ptr@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAPAUSMarker@CStatGraph@@PAU45@@Z
_TEXT	SEGMENT
?to_storage_type_ptr@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAPAUSMarker@CStatGraph@@PAU45@@Z PROC ; stlp_std::priv::_CastTraits<CStatGraph::SMarker,CStatGraph::SMarker>::to_storage_type_ptr, COMDAT
; ___ptr$ = eax

; 248  :   { return __ptr; }

	ret	0
?to_storage_type_ptr@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAPAUSMarker@CStatGraph@@PAU45@@Z ENDP ; stlp_std::priv::_CastTraits<CStatGraph::SMarker,CStatGraph::SMarker>::to_storage_type_ptr
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_value_type_pptr@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAPAPAUSMarker@CStatGraph@@PAPAU45@@Z
_TEXT	SEGMENT
?to_value_type_pptr@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAPAPAUSMarker@CStatGraph@@PAPAU45@@Z PROC ; stlp_std::priv::_CastTraits<CStatGraph::SMarker,CStatGraph::SMarker>::to_value_type_pptr, COMDAT
; ___ptr$ = eax

; 241  :   { return __ptr; }

	ret	0
?to_value_type_pptr@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAPAPAUSMarker@CStatGraph@@PAPAU45@@Z ENDP ; stlp_std::priv::_CastTraits<CStatGraph::SMarker,CStatGraph::SMarker>::to_value_type_pptr
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_value_type_ptr@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAPAUSMarker@CStatGraph@@PAU45@@Z
_TEXT	SEGMENT
?to_value_type_ptr@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAPAUSMarker@CStatGraph@@PAU45@@Z PROC ; stlp_std::priv::_CastTraits<CStatGraph::SMarker,CStatGraph::SMarker>::to_value_type_ptr, COMDAT
; ___ptr$ = eax

; 237  :   { return __ptr; }

	ret	0
?to_value_type_ptr@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAPAUSMarker@CStatGraph@@PAU45@@Z ENDP ; stlp_std::priv::_CastTraits<CStatGraph::SMarker,CStatGraph::SMarker>::to_value_type_ptr
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator.h
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QAE@PAUSSubGraph@CStatGraph@@@Z
_TEXT	SEGMENT
??0?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QAE@PAUSSubGraph@CStatGraph@@@Z PROC ; stlp_std::reverse_iterator<CStatGraph::SSubGraph *>::reverse_iterator<CStatGraph::SSubGraph *>, COMDAT
; _this$ = eax
; ___x$ = ecx

; 65   :   explicit reverse_iterator(iterator_type __x) : current(__x) {}

	mov	DWORD PTR [eax], ecx
	ret	0
??0?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@QAE@PAUSSubGraph@CStatGraph@@@Z ENDP ; stlp_std::reverse_iterator<CStatGraph::SSubGraph *>::reverse_iterator<CStatGraph::SSubGraph *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z
_TEXT	SEGMENT
?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z PROC ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance, COMDAT
; _this$ = esi
; ___n$ = ebx

; 140  :   void _M_advance(difference_type __n) {

	push	edi

; 141  :     difference_type __offset = __n + (_M_cur - _M_first);

	mov	edi, DWORD PTR [esi]
	mov	ecx, edi
	sub	ecx, DWORD PTR [esi+4]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	add	ecx, ebx

; 142  :     if (__offset >= 0 && __offset < difference_type(__buffer_size))

	cmp	ecx, 9
	ja	SHORT $LN2@M_advance

; 143  :       _M_cur += __n;

	lea	eax, DWORD PTR [ebx+ebx*2]
	lea	ecx, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [esi], ecx
	pop	edi

; 152  :     }
; 153  :   }

	ret	0
$LN2@M_advance:

; 144  :     else {
; 145  :       difference_type __node_offset =
; 146  :         __offset > 0 ? __offset / __buffer_size
; 147  :                    : -difference_type((-__offset - 1) / __buffer_size) - 1;

	test	ecx, ecx
	mov	eax, 1717986919				; 66666667H
	jle	SHORT $LN5@M_advance
	imul	ecx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	jmp	SHORT $LN6@M_advance
$LN5@M_advance:
	lea	edx, DWORD PTR [ecx+1]
	imul	edx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	lea	eax, DWORD PTR [edx+eax-1]
$LN6@M_advance:

; 148  :       _M_set_node(_M_node + __node_offset);

	mov	edx, DWORD PTR [esi+12]
	lea	edx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR [esi+12], edx
	mov	edx, DWORD PTR [edx]

; 149  :       _M_cur = _M_first +
; 150  : 
; 151  :         (__offset - __node_offset * difference_type(__buffer_size));

	lea	eax, DWORD PTR [eax+eax*4]
	mov	DWORD PTR [esi+4], edx
	add	eax, eax
	add	edx, 120				; 00000078H
	sub	ecx, eax
	mov	DWORD PTR [esi+8], edx
	mov	edx, DWORD PTR [esi+4]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR [esi], eax
	pop	edi

; 152  :     }
; 153  :   }

	ret	0
?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ENDP ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@XZ PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >, COMDAT
; _this$ = eax

; 181  :   _Deque_iterator() {}

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	ret	0
??0?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@XZ ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?get_allocator@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QBE?AV?$xalloc@USMarker@CStatGraph@@@@XZ
_TEXT	SEGMENT
?get_allocator@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QBE?AV?$xalloc@USMarker@CStatGraph@@@@XZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::get_allocator, COMDAT
; ___$ReturnUdt$ = eax

; 477  :   allocator_type get_allocator() const { return this->_M_map_size; }

	ret	0
?get_allocator@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QBE?AV?$xalloc@USMarker@CStatGraph@@@@XZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::get_allocator
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?size@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QBEIXZ
_TEXT	SEGMENT
$T211280 = -16						; size = 16
?size@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QBEIXZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::size, COMDAT
; _this$ = ecx

; 474  :   size_type size() const { return this->_M_finish - this->_M_start; }

	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR $T211280[esp+20], eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	push	ebx
	mov	ebx, DWORD PTR [ecx+12]
	push	esi
	mov	esi, DWORD PTR [ecx+8]
	push	edi
	mov	edi, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+28]
	sar	edx, 1
	sub	ecx, ebx
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	sar	ecx, 2
	lea	ecx, DWORD PTR [ecx+ecx*4]
	lea	ecx, DWORD PTR [eax+ecx*2]
	sub	esi, edi
	mov	eax, 715827883				; 2aaaaaabH
	imul	esi
	sar	edx, 1
	mov	eax, edx
	pop	edi
	shr	eax, 31					; 0000001fH
	add	ecx, edx
	pop	esi
	lea	eax, DWORD PTR [eax+ecx-10]
	pop	ebx
	add	esp, 16					; 00000010H
	ret	0
?size@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QBEIXZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QBE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@23@XZ
_TEXT	SEGMENT
?end@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QBE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@23@XZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::end, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 438  :   const_iterator end() const { return const_iterator(this->_M_finish); }

	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+24]
	mov	ecx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ecx
	ret	0
?end@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QBE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@23@XZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QBE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@23@XZ
_TEXT	SEGMENT
?begin@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QBE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@23@XZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::begin, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 437  :   const_iterator begin() const { return const_iterator(this->_M_start); }

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ecx
	ret	0
?begin@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QBE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@23@XZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::begin
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?size@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBEIXZ PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::size, COMDAT
; _this$ = eax

; 180  :   size_type size() const        { return size_type(this->_M_finish - this->_M_start); }

	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR [eax]
	mov	eax, 780903145				; 2e8ba2e9H
	imul	ecx
	sar	edx, 3
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	ret	0
?size@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBEIXZ ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBEPBUSSubGraph@CStatGraph@@XZ
_TEXT	SEGMENT
?end@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBEPBUSSubGraph@CStatGraph@@XZ PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::end, COMDAT
; _this$ = eax

; 173  :   const_iterator end() const   { return this->_M_finish; }

	mov	eax, DWORD PTR [eax+4]
	ret	0
?end@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBEPBUSSubGraph@CStatGraph@@XZ ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBEPBUSSubGraph@CStatGraph@@XZ
_TEXT	SEGMENT
?begin@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBEPBUSSubGraph@CStatGraph@@XZ PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::begin, COMDAT
; _this$ = eax

; 171  :   const_iterator begin() const { return this->_M_start; }

	mov	eax, DWORD PTR [eax]
	ret	0
?begin@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBEPBUSSubGraph@CStatGraph@@XZ ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::begin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?get_allocator@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBE?AV?$xalloc@USSubGraph@CStatGraph@@@@XZ
_TEXT	SEGMENT
?get_allocator@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBE?AV?$xalloc@USSubGraph@CStatGraph@@@@XZ PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::get_allocator, COMDAT
; ___$ReturnUdt$ = eax

; 134  :   { return _STLP_CONVERT_ALLOCATOR((const allocator_type&)this->_M_end_of_storage, _Tp); }

	ret	0
?get_allocator@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QBE?AV?$xalloc@USSubGraph@CStatGraph@@@@XZ ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::get_allocator
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?deallocate@?$xalloc@USSubGraph@CStatGraph@@@@QBEXPAUSSubGraph@CStatGraph@@I@Z
_TEXT	SEGMENT
?deallocate@?$xalloc@USSubGraph@CStatGraph@@@@QBEXPAUSSubGraph@CStatGraph@@I@Z PROC ; xalloc<CStatGraph::SSubGraph>::deallocate, COMDAT
; _p$ = eax

; 83   : 							void					deallocate		(pointer p, size_type n) const			{	xr_free	(p);				}

	test	eax, eax
	je	SHORT $LN3@deallocate@12
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN3@deallocate@12:
	ret	0
?deallocate@?$xalloc@USSubGraph@CStatGraph@@@@QBEXPAUSSubGraph@CStatGraph@@I@Z ENDP ; xalloc<CStatGraph::SSubGraph>::deallocate
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ?size@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QBEIXZ
_TEXT	SEGMENT
$T211330 = -16						; size = 16
?size@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QBEIXZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::size, COMDAT
; _this$ = eax

; 474  :   size_type size() const { return this->_M_finish - this->_M_start; }

	sub	esp, 16					; 00000010H
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax]
	push	esi
	mov	esi, DWORD PTR [eax+12]
	push	edi
	mov	edi, DWORD PTR [eax+16]
	sub	edi, DWORD PTR [eax+20]
	mov	DWORD PTR $T211330[esp+28], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+28]
	sub	eax, esi
	sar	eax, 2
	sar	edi, 3
	shl	eax, 4
	add	edi, eax
	sub	ecx, edx
	sar	ecx, 3
	lea	eax, DWORD PTR [edi+ecx-16]
	pop	edi
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
?size@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QBEIXZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::size
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_tools.h
_TEXT	ENDS
;	COMDAT ?to_storage_type_cref@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAABUSMarker@CStatGraph@@ABU45@@Z
_TEXT	SEGMENT
?to_storage_type_cref@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAABUSMarker@CStatGraph@@ABU45@@Z PROC ; stlp_std::priv::_CastTraits<CStatGraph::SMarker,CStatGraph::SMarker>::to_storage_type_cref, COMDAT
; ___ref$ = eax

; 254  :   { return __ref; }

	ret	0
?to_storage_type_cref@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAABUSMarker@CStatGraph@@ABU45@@Z ENDP ; stlp_std::priv::_CastTraits<CStatGraph::SMarker,CStatGraph::SMarker>::to_storage_type_cref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_value_type_ref@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAAAUSMarker@CStatGraph@@AAU45@@Z
_TEXT	SEGMENT
?to_value_type_ref@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAAAUSMarker@CStatGraph@@AAU45@@Z PROC ; stlp_std::priv::_CastTraits<CStatGraph::SMarker,CStatGraph::SMarker>::to_value_type_ref, COMDAT
; ___ref$ = eax

; 243  :   { return __ref; }

	ret	0
?to_value_type_ref@?$_CastTraits@USMarker@CStatGraph@@U12@@priv@stlp_std@@SAAAUSMarker@CStatGraph@@AAU45@@Z ENDP ; stlp_std::priv::_CastTraits<CStatGraph::SMarker,CStatGraph::SMarker>::to_value_type_ref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_storage_type_cref@?$_CastTraits@USSubGraph@CStatGraph@@U12@@priv@stlp_std@@SAABUSSubGraph@CStatGraph@@ABU45@@Z
_TEXT	SEGMENT
?to_storage_type_cref@?$_CastTraits@USSubGraph@CStatGraph@@U12@@priv@stlp_std@@SAABUSSubGraph@CStatGraph@@ABU45@@Z PROC ; stlp_std::priv::_CastTraits<CStatGraph::SSubGraph,CStatGraph::SSubGraph>::to_storage_type_cref, COMDAT
; ___ref$ = eax

; 254  :   { return __ref; }

	ret	0
?to_storage_type_cref@?$_CastTraits@USSubGraph@CStatGraph@@U12@@priv@stlp_std@@SAABUSSubGraph@CStatGraph@@ABU45@@Z ENDP ; stlp_std::priv::_CastTraits<CStatGraph::SSubGraph,CStatGraph::SSubGraph>::to_storage_type_cref
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_value_type_ptr@?$_CastTraits@USSubGraph@CStatGraph@@U12@@priv@stlp_std@@SAPAUSSubGraph@CStatGraph@@PAU45@@Z
_TEXT	SEGMENT
?to_value_type_ptr@?$_CastTraits@USSubGraph@CStatGraph@@U12@@priv@stlp_std@@SAPAUSSubGraph@CStatGraph@@PAU45@@Z PROC ; stlp_std::priv::_CastTraits<CStatGraph::SSubGraph,CStatGraph::SSubGraph>::to_value_type_ptr, COMDAT
; ___ptr$ = eax

; 237  :   { return __ptr; }

	ret	0
?to_value_type_ptr@?$_CastTraits@USSubGraph@CStatGraph@@U12@@priv@stlp_std@@SAPAUSSubGraph@CStatGraph@@PAU45@@Z ENDP ; stlp_std::priv::_CastTraits<CStatGraph::SSubGraph,CStatGraph::SSubGraph>::to_value_type_ptr
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_storage_type_cref@?$_CastTraits@USElement@CStatGraph@@U12@@priv@stlp_std@@SAABUSElement@CStatGraph@@ABU45@@Z
_TEXT	SEGMENT
?to_storage_type_cref@?$_CastTraits@USElement@CStatGraph@@U12@@priv@stlp_std@@SAABUSElement@CStatGraph@@ABU45@@Z PROC ; stlp_std::priv::_CastTraits<CStatGraph::SElement,CStatGraph::SElement>::to_storage_type_cref, COMDAT
; ___ref$ = eax

; 254  :   { return __ref; }

	ret	0
?to_storage_type_cref@?$_CastTraits@USElement@CStatGraph@@U12@@priv@stlp_std@@SAABUSElement@CStatGraph@@ABU45@@Z ENDP ; stlp_std::priv::_CastTraits<CStatGraph::SElement,CStatGraph::SElement>::to_storage_type_cref
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??Y?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z
_TEXT	SEGMENT
??Y?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator+=, COMDAT
; _this$ = eax
; ___n$ = ebx

; 208  :   _Self& operator+=(difference_type __n) { this->_M_advance(__n); return *this; }

	push	esi
	mov	esi, eax
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
	mov	eax, esi
	pop	esi
	ret	0
??Y?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@ABU012@@Z
_TEXT	SEGMENT
??0?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@ABU012@@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >, COMDAT
; _this$ = eax
; ___x$ = ecx

; 184  :     _Deque_iterator_base<value_type>(__x) {}

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], ecx
	ret	0
??0?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@ABU012@@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@XZ
_TEXT	SEGMENT
?begin@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@XZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::begin, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 435  :   iterator begin() { return this->_M_start; }

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ecx
	ret	0
?begin@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@XZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::begin
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_deque.h
_TEXT	ENDS
;	COMDAT ?size@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QBEIXZ
_TEXT	SEGMENT
$T211389 = -16						; size = 16
?size@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QBEIXZ PROC ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::size, COMDAT
; _this$ = ecx

; 151  :   size_type size() const     { return _M_impl.size(); }

	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR $T211389[esp+20], eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	push	ebx
	mov	ebx, DWORD PTR [ecx+12]
	push	esi
	mov	esi, DWORD PTR [ecx+8]
	push	edi
	mov	edi, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+28]
	sar	edx, 1
	sub	ecx, ebx
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	sar	ecx, 2
	lea	ecx, DWORD PTR [ecx+ecx*4]
	lea	ecx, DWORD PTR [eax+ecx*2]
	sub	esi, edi
	mov	eax, 715827883				; 2aaaaaabH
	imul	esi
	sar	edx, 1
	mov	eax, edx
	pop	edi
	shr	eax, 31					; 0000001fH
	add	ecx, edx
	pop	esi
	lea	eax, DWORD PTR [eax+ecx-10]
	pop	ebx
	add	esp, 16					; 00000010H
	ret	0
?size@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QBEIXZ ENDP ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::size
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ??1?$_Vector_base@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_base@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@XZ PROC ; stlp_std::priv::_Vector_base<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::~_Vector_base<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >, COMDAT
; _this$ = eax

; 85   :     if (_M_start != _STLP_DEFAULT_CONSTRUCTED(pointer))

	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN6@Vector_bas@5

; 86   :       _M_end_of_storage.deallocate(_M_start, _M_end_of_storage._M_data - _M_start);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN6@Vector_bas@5:

; 87   :   }

	ret	0
??1?$_Vector_base@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ENDP ; stlp_std::priv::_Vector_base<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::~_Vector_base<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEPAUSSubGraph@CStatGraph@@XZ
_TEXT	SEGMENT
?end@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEPAUSSubGraph@CStatGraph@@XZ PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::end, COMDAT
; _this$ = eax

; 172  :   iterator end()               { return this->_M_finish; }

	mov	eax, DWORD PTR [eax+4]
	ret	0
?end@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEPAUSSubGraph@CStatGraph@@XZ ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEPAUSSubGraph@CStatGraph@@XZ
_TEXT	SEGMENT
?begin@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEPAUSSubGraph@CStatGraph@@XZ PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::begin, COMDAT
; _this$ = eax

; 170  :   iterator begin()             { return this->_M_start; }

	mov	eax, DWORD PTR [eax]
	ret	0
?begin@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEPAUSSubGraph@CStatGraph@@XZ ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::begin
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xalloc@USSubGraph@CStatGraph@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xalloc@USSubGraph@CStatGraph@@@@QAE@XZ PROC	; xalloc<CStatGraph::SSubGraph>::xalloc<CStatGraph::SSubGraph>, COMDAT
; _this$ = eax

; 77   : 													xalloc			()										{	}

	ret	0
??0?$xalloc@USSubGraph@CStatGraph@@@@QAE@XZ ENDP	; xalloc<CStatGraph::SSubGraph>::xalloc<CStatGraph::SSubGraph>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?size@?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QBEIXZ PROC ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::size, COMDAT
; _this$ = eax

; 89   :   size_type size() const        { return _M_impl.size(); }

	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR [eax]
	mov	eax, 780903145				; 2e8ba2e9H
	imul	ecx
	sar	edx, 3
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	ret	0
?size@?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QBEIXZ ENDP ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::size
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??0?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@ABU012@@Z
_TEXT	SEGMENT
??0?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@ABU012@@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >, COMDAT
; _this$ = eax
; ___x$ = ecx

; 184  :     _Deque_iterator_base<value_type>(__x) {}

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], ecx
	ret	0
??0?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAE@ABU012@@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?pop_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?pop_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEXXZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::pop_front, COMDAT
; _this$ = esi

; 717  :     _STLP_STD::_Destroy(this->_M_start._M_cur);
; 718  :     _M_pop_front_aux();

	mov	ecx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [esi]
	sub	ecx, 8
	cmp	eax, ecx
	je	SHORT $LN4@pop_front
	add	eax, 8
	mov	DWORD PTR [esi], eax

; 719  :   }

	ret	0

; 717  :     _STLP_STD::_Destroy(this->_M_start._M_cur);
; 718  :     _M_pop_front_aux();

$LN4@pop_front:
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN11@pop_front
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN11@pop_front:
	mov	eax, DWORD PTR [esi+12]
	add	eax, 4
	mov	DWORD PTR [esi+12], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi+4], eax
	mov	edx, DWORD PTR [esi+4]
	add	eax, 128				; 00000080H
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi], edx

; 719  :   }

	ret	0
?pop_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEXXZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::pop_front
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_deque.h
_TEXT	ENDS
;	COMDAT ?size@?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QBEIXZ
_TEXT	SEGMENT
$T211483 = -16						; size = 16
?size@?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QBEIXZ PROC ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::size, COMDAT
; _this$ = eax

; 151  :   size_type size() const     { return _M_impl.size(); }

	sub	esp, 16					; 00000010H
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax]
	push	esi
	mov	esi, DWORD PTR [eax+12]
	push	edi
	mov	edi, DWORD PTR [eax+16]
	sub	edi, DWORD PTR [eax+20]
	mov	DWORD PTR $T211483[esp+28], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+28]
	sub	eax, esi
	sar	eax, 2
	sar	edi, 3
	shl	eax, 4
	add	edi, eax
	sub	ecx, edx
	sar	ecx, 3
	lea	eax, DWORD PTR [edi+ecx-16]
	pop	edi
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
?size@?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QBEIXZ ENDP ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::size
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??H?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z
_TEXT	SEGMENT
___tmp$ = -20						; size = 16
??H?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator+, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = edi
; ___n$ = ebx

; 209  :   _Self operator+(difference_type __n) const {

	sub	esp, 24					; 00000018H

; 210  :     _Self __tmp = *this;

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ___tmp$[esp+24], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR ___tmp$[esp+28], edx
	mov	edx, DWORD PTR [eax+12]
	push	esi

; 211  :     return __tmp += __n;

	lea	esi, DWORD PTR ___tmp$[esp+28]
	mov	DWORD PTR ___tmp$[esp+36], ecx
	mov	DWORD PTR ___tmp$[esp+40], edx
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
	mov	eax, DWORD PTR ___tmp$[esp+28]
	mov	ecx, DWORD PTR ___tmp$[esp+32]
	mov	edx, DWORD PTR ___tmp$[esp+36]
	mov	DWORD PTR [edi], eax
	mov	eax, DWORD PTR ___tmp$[esp+40]
	mov	DWORD PTR [edi+4], ecx
	mov	DWORD PTR [edi+8], edx
	mov	DWORD PTR [edi+12], eax
	mov	eax, edi

; 212  :   }

	pop	esi
	add	esp, 24					; 00000018H
	ret	0
??H?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator+
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xalloc@USMarker@CStatGraph@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xalloc@USMarker@CStatGraph@@@@QAE@XZ PROC		; xalloc<CStatGraph::SMarker>::xalloc<CStatGraph::SMarker>, COMDAT
; _this$ = eax

; 77   : 													xalloc			()										{	}

	ret	0
??0?$xalloc@USMarker@CStatGraph@@@@QAE@XZ ENDP		; xalloc<CStatGraph::SMarker>::xalloc<CStatGraph::SMarker>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_deque.h
_TEXT	ENDS
;	COMDAT ?clear@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAEXXZ PROC ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::clear, COMDAT
; _this$ = edi

; 360  :   void clear() { _M_impl.clear(); }

	jmp	?clear@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::clear
?clear@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAEXXZ ENDP ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::clear
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?size@?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QBEIXZ
_TEXT	SEGMENT
$T211539 = -16						; size = 16
?size@?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QBEIXZ PROC ; xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::size, COMDAT
; _this$ = ecx

; 170  : 	u32		size				() const							{return (u32)__super::size();	} 

	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR $T211539[esp+20], eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	push	ebx
	mov	ebx, DWORD PTR [ecx+12]
	push	esi
	mov	esi, DWORD PTR [ecx+8]
	push	edi
	mov	edi, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+28]
	sar	edx, 1
	sub	ecx, ebx
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	sar	ecx, 2
	lea	ecx, DWORD PTR [ecx+ecx*4]
	lea	ecx, DWORD PTR [eax+ecx*2]
	sub	esi, edi
	mov	eax, 715827883				; 2aaaaaabH
	imul	esi
	sar	edx, 1
	mov	eax, edx
	pop	edi
	shr	eax, 31					; 0000001fH
	add	ecx, edx
	pop	esi
	lea	eax, DWORD PTR [eax+ecx-10]
	pop	ebx
	add	esp, 16					; 00000010H
	ret	0
?size@?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QBEIXZ ENDP ; xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::size
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?end@?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAEPAUSSubGraph@CStatGraph@@XZ
_TEXT	SEGMENT
?end@?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAEPAUSSubGraph@CStatGraph@@XZ PROC ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::end, COMDAT
; _this$ = eax

; 81   :   iterator end()               { return cast_traits::to_value_type_ptr(_M_impl.end()); }

	mov	eax, DWORD PTR [eax+4]
	ret	0
?end@?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAEPAUSSubGraph@CStatGraph@@XZ ENDP ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAEPAUSSubGraph@CStatGraph@@XZ
_TEXT	SEGMENT
?begin@?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAEPAUSSubGraph@CStatGraph@@XZ PROC ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::begin, COMDAT
; _this$ = eax

; 79   :   iterator begin()             { return cast_traits::to_value_type_ptr(_M_impl.begin()); }

	mov	eax, DWORD PTR [eax]
	ret	0
?begin@?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAEPAUSSubGraph@CStatGraph@@XZ ENDP ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::begin
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?size@?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QBEIXZ
_TEXT	SEGMENT
?size@?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QBEIXZ PROC ; xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::size, COMDAT
; _this$ = eax

; 126  : 	u32		size				() const							{ return (u32)inherited::size();} 

	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR [eax]
	mov	eax, 780903145				; 2e8ba2e9H
	imul	ecx
	sar	edx, 3
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	ret	0
?size@?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QBEIXZ ENDP ; xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xalloc@USElement@CStatGraph@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xalloc@USElement@CStatGraph@@@@QAE@XZ PROC		; xalloc<CStatGraph::SElement>::xalloc<CStatGraph::SElement>, COMDAT
; _this$ = eax

; 77   : 													xalloc			()										{	}

	ret	0
??0?$xalloc@USElement@CStatGraph@@@@QAE@XZ ENDP		; xalloc<CStatGraph::SElement>::xalloc<CStatGraph::SElement>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_deque.h
_TEXT	ENDS
;	COMDAT ?pop_front@?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?pop_front@?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAEXXZ PROC ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::pop_front, COMDAT
; _this$ = esi

; 278  :   void pop_front() { _M_impl.pop_front(); }

	mov	ecx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [esi]
	sub	ecx, 8
	cmp	eax, ecx
	je	SHORT $LN6@pop_front@2
	add	eax, 8
	mov	DWORD PTR [esi], eax
	ret	0
$LN6@pop_front@2:
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN13@pop_front@2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN13@pop_front@2:
	mov	eax, DWORD PTR [esi+12]
	add	eax, 4
	mov	DWORD PTR [esi+12], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi+4], eax
	mov	edx, DWORD PTR [esi+4]
	add	eax, 128				; 00000080H
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi], edx
	ret	0
?pop_front@?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAEXXZ ENDP ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::pop_front
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ?size@?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QBEIXZ
_TEXT	SEGMENT
$T211662 = -16						; size = 16
?size@?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QBEIXZ PROC ; xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::size, COMDAT
; _this$ = eax

; 170  : 	u32		size				() const							{return (u32)__super::size();	} 

	sub	esp, 16					; 00000010H
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax]
	push	esi
	mov	esi, DWORD PTR [eax+12]
	push	edi
	mov	edi, DWORD PTR [eax+16]
	sub	edi, DWORD PTR [eax+20]
	mov	DWORD PTR $T211662[esp+28], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+28]
	sub	eax, esi
	sar	eax, 2
	sar	edi, 3
	shl	eax, 4
	add	edi, eax
	sub	ecx, edx
	sar	ecx, 3
	lea	eax, DWORD PTR [edi+ecx-16]
	pop	edi
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
?size@?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QBEIXZ ENDP ; xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::size
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\include\xrrender\factoryptr.h
_TEXT	ENDS
;	COMDAT ??C?$FactoryPtr@VIStatGraphRender@@@@QBEPAVIStatGraphRender@@XZ
_TEXT	SEGMENT
??C?$FactoryPtr@VIStatGraphRender@@@@QBEPAVIStatGraphRender@@XZ PROC ; FactoryPtr<IStatGraphRender>::operator->, COMDAT
; _this$ = eax

; 40   : 	T* operator->() const {return m_pObject;}

	mov	eax, DWORD PTR [eax]
	ret	0
??C?$FactoryPtr@VIStatGraphRender@@@@QBEPAVIStatGraphRender@@XZ ENDP ; FactoryPtr<IStatGraphRender>::operator->
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??4?$FactoryPtr@VIStatGraphRender@@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
??4?$FactoryPtr@VIStatGraphRender@@@@QAEAAV0@ABV0@@Z PROC ; FactoryPtr<IStatGraphRender>::operator=, COMDAT
; _this$ = esi
; __in$ = edx

; 35   : 		m_pObject->Copy(*_in.m_pObject);

	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [eax+4]
	push	edx
	call	eax

; 36   : 		return *this;

	mov	eax, esi

; 37   : 	}

	ret	0
??4?$FactoryPtr@VIStatGraphRender@@@@QAEAAV0@ABV0@@Z ENDP ; FactoryPtr<IStatGraphRender>::operator=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$FactoryPtr@VIStatGraphRender@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
__in$ = 8						; size = 4
??0?$FactoryPtr@VIStatGraphRender@@@@QAE@ABV0@@Z PROC	; FactoryPtr<IStatGraphRender>::FactoryPtr<IStatGraphRender>, COMDAT
; _this$ = esi

; 28   : 	{
; 29   : 		CreateObject();

	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax

; 30   : 		m_pObject->Copy(*_in.m_pObject);

	mov	ecx, DWORD PTR __in$[esp-4]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx+4]
	push	ecx
	mov	ecx, eax
	call	edx

; 31   : 	}

	mov	eax, esi
	ret	4
??0?$FactoryPtr@VIStatGraphRender@@@@QAE@ABV0@@Z ENDP	; FactoryPtr<IStatGraphRender>::FactoryPtr<IStatGraphRender>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$FactoryPtr@VIStatGraphRender@@@@QAE@XZ
_TEXT	SEGMENT
??1?$FactoryPtr@VIStatGraphRender@@@@QAE@XZ PROC	; FactoryPtr<IStatGraphRender>::~FactoryPtr<IStatGraphRender>, COMDAT
; _this$ = esi

; 25   : 	~FactoryPtr() { DestroyObject();}

	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [edx+20]
	push	eax
	call	edx
	mov	DWORD PTR [esi], 0
	ret	0
??1?$FactoryPtr@VIStatGraphRender@@@@QAE@XZ ENDP	; FactoryPtr<IStatGraphRender>::~FactoryPtr<IStatGraphRender>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$FactoryPtr@VIStatGraphRender@@@@QAE@XZ
_TEXT	SEGMENT
??0?$FactoryPtr@VIStatGraphRender@@@@QAE@XZ PROC	; FactoryPtr<IStatGraphRender>::FactoryPtr<IStatGraphRender>, COMDAT
; _this$ = esi

; 24   : 	FactoryPtr() { CreateObject();}

	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	mov	DWORD PTR [esi], eax
	mov	eax, esi
	ret	0
??0?$FactoryPtr@VIStatGraphRender@@@@QAE@XZ ENDP	; FactoryPtr<IStatGraphRender>::FactoryPtr<IStatGraphRender>
_TEXT	ENDS
PUBLIC	__real@3f800000
;	COMDAT __real@3f800000
; File d:\clearsky\sources\engine\xrcore\_vector2.h
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?set@?$_vector2@M@@QAEAAU1@HH@Z
_TEXT	SEGMENT
?set@?$_vector2@M@@QAEAAU1@HH@Z PROC			; _vector2<float>::set, COMDAT
; _this$ = eax

; 17   : 	IC SelfRef set(int _u, int _v)					{ x=T(_u); y=T(_v);				return *this;	}

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax], xmm0
	movss	DWORD PTR [eax+4], xmm0
	ret	0
?set@?$_vector2@M@@QAEAAU1@HH@Z ENDP			; _vector2<float>::set
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\statgraph.cpp
_TEXT	ENDS
;	COMDAT ?OnRender@CStatGraph@@UAEXXZ
_TEXT	SEGMENT
?OnRender@CStatGraph@@UAEXXZ PROC			; CStatGraph::OnRender, COMDAT
; _this$ = ecx

; 46   : {

	mov	eax, ecx

; 47   : 	m_pRender->OnRender(*this);

	mov	ecx, DWORD PTR [eax+76]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+16]
	call	eax

; 48   : 	/*
; 49   : 	RCache.OnFrameEnd();
; 50   : 
; 51   : 	RenderBack();
; 52   : 
; 53   : 	u32			TriElem = 0;
; 54   : 	u32			LineElem = 0;
; 55   : 	for (SubGraphVecIt it=subgraphs.begin(); it!=subgraphs.end(); it++)
; 56   : 	{
; 57   : 		switch (it->style)
; 58   : 		{
; 59   : 		case stBar: 
; 60   : 			{
; 61   : 				TriElem += it->elements.size()*4;
; 62   : 			}break;
; 63   : 		case stCurve: 
; 64   : 			{
; 65   : 				LineElem += it->elements.size()*2;
; 66   : 			}break;
; 67   : 		case stBarLine: 
; 68   : 			{
; 69   : 				LineElem += it->elements.size()*4;
; 70   : 			}break;
; 71   : 		case stPoint: 
; 72   : 			{
; 73   : 				//				TriElem += it->elements.size()*4;
; 74   : 			}break;
; 75   : 		};
; 76   : 	};
; 77   : 
; 78   : 	u32			dwOffsetTri = 0, dwOffsetLine = 0,dwCount;
; 79   : 	FVF::TL0uv* pv_Tri_start	= NULL;
; 80   : 	FVF::TL0uv* pv_Tri;
; 81   : 	FVF::TL0uv* pv_Line_start	= NULL;
; 82   : 	FVF::TL0uv* pv_Line;
; 83   : 
; 84   : 	if (TriElem)
; 85   : 	{
; 86   : 		pv_Tri_start = (FVF::TL0uv*)RCache.Vertex.Lock(TriElem,hGeomTri->vb_stride,dwOffsetTri);
; 87   : 		pv_Tri = pv_Tri_start;
; 88   : 
; 89   : 		pv_Tri = pv_Tri_start;
; 90   : 		for (SubGraphVecIt it=subgraphs.begin(); it!=subgraphs.end(); it++)
; 91   : 		{
; 92   : 			switch(it->style)
; 93   : 			{
; 94   : 			case stBar:		RenderBars		(&pv_Tri, &(it->elements));		break;
; 95   : 			};
; 96   : 		};
; 97   : 		dwCount 				= u32(pv_Tri-pv_Tri_start);
; 98   : 		RCache.Vertex.Unlock	(dwCount,hGeomTri->vb_stride);
; 99   : 		RCache.set_Geometry		(hGeomTri);
; 100  : 		RCache.Render	   		(D3DPT_TRIANGLELIST,dwOffsetTri,0, dwCount, 0, dwCount/2);
; 101  : 	};
; 102  : 
; 103  : 	if (LineElem)
; 104  : 	{
; 105  : 		pv_Line_start = (FVF::TL0uv*)RCache.Vertex.Lock(LineElem,hGeomLine->vb_stride,dwOffsetLine);
; 106  : 		pv_Line = pv_Line_start;
; 107  : 
; 108  : 		for (SubGraphVecIt it=subgraphs.begin(); it!=subgraphs.end(); it++)
; 109  : 		{
; 110  : 			switch(it->style)
; 111  : 			{
; 112  : 			case stCurve:	RenderLines		(&pv_Line, &(it->elements));	break;
; 113  : 			case stBarLine:	RenderBarLines	(&pv_Line, &(it->elements));	break;
; 114  : 			};
; 115  : 		};
; 116  : 
; 117  : 		dwCount 				= u32(pv_Line-pv_Line_start);
; 118  : 		RCache.Vertex.Unlock	(dwCount,hGeomLine->vb_stride);
; 119  : 		RCache.set_Geometry		(hGeomLine);
; 120  : 		RCache.Render	   		(D3DPT_LINELIST,dwOffsetLine,dwCount/2);
; 121  : 	};
; 122  : 
; 123  : 	if (!m_Markers.empty())
; 124  : 	{
; 125  : 		dwOffsetLine = 0;
; 126  : 		LineElem = m_Markers.size()*2;
; 127  : 
; 128  : 		pv_Line_start = (FVF::TL0uv*)RCache.Vertex.Lock(LineElem,hGeomLine->vb_stride,dwOffsetLine);
; 129  : 		pv_Line = pv_Line_start;
; 130  : 
; 131  : 		RenderMarkers		(&pv_Line, &(m_Markers));
; 132  : 
; 133  : 		dwCount 				= u32(pv_Line-pv_Line_start);
; 134  : 		RCache.Vertex.Unlock	(dwCount,hGeomLine->vb_stride);
; 135  : 		RCache.set_Geometry		(hGeomLine);
; 136  : 		RCache.Render	   		(D3DPT_LINELIST,dwOffsetLine,dwCount/2);
; 137  : 	}
; 138  : 	*/
; 139  : };

	ret	0
?OnRender@CStatGraph@@UAEXXZ ENDP			; CStatGraph::OnRender
_TEXT	ENDS
PUBLIC	?OnDeviceDestroy@CStatGraph@@QAEXXZ		; CStatGraph::OnDeviceDestroy
; Function compile flags: /Ogtpy
;	COMDAT ?OnDeviceDestroy@CStatGraph@@QAEXXZ
_TEXT	SEGMENT
?OnDeviceDestroy@CStatGraph@@QAEXXZ PROC		; CStatGraph::OnDeviceDestroy, COMDAT
; _this$ = ecx

; 40   : 	m_pRender->OnDeviceDestroy();

	mov	ecx, DWORD PTR [ecx+76]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	jmp	edx
?OnDeviceDestroy@CStatGraph@@QAEXXZ ENDP		; CStatGraph::OnDeviceDestroy
_TEXT	ENDS
PUBLIC	?OnDeviceCreate@CStatGraph@@QAEXXZ		; CStatGraph::OnDeviceCreate
; Function compile flags: /Ogtpy
;	COMDAT ?OnDeviceCreate@CStatGraph@@QAEXXZ
_TEXT	SEGMENT
?OnDeviceCreate@CStatGraph@@QAEXXZ PROC			; CStatGraph::OnDeviceCreate, COMDAT
; _this$ = ecx

; 33   : 	m_pRender->OnDeviceCreate();

	mov	ecx, DWORD PTR [ecx+76]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	jmp	edx
?OnDeviceCreate@CStatGraph@@QAEXXZ ENDP			; CStatGraph::OnDeviceCreate
_TEXT	ENDS
PUBLIC	?ClearMarkers@CStatGraph@@QAEXXZ		; CStatGraph::ClearMarkers
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\statgraph.h
;	COMDAT ?ClearMarkers@CStatGraph@@QAEXXZ
_TEXT	SEGMENT
?ClearMarkers@CStatGraph@@QAEXXZ PROC			; CStatGraph::ClearMarkers, COMDAT
; _this$ = ecx

; 156  : 	{

	push	edi

; 157  : 		m_Markers.clear();

	lea	edi, DWORD PTR [ecx+80]
	call	?clear@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::clear
	pop	edi

; 158  : 	}

	ret	0
?ClearMarkers@CStatGraph@@QAEXXZ ENDP			; CStatGraph::ClearMarkers
_TEXT	ENDS
PUBLIC	?SetMinMax@CStatGraph@@QAEXMMI@Z		; CStatGraph::SetMinMax
; Function compile flags: /Ogtpy
;	COMDAT ?SetMinMax@CStatGraph@@QAEXMMI@Z
_TEXT	SEGMENT
$T211798 = -16						; size = 16
_it$117689 = 8						; size = 4
__mn$ = 8						; size = 4
__mx$ = 12						; size = 4
_item_count$ = 16					; size = 4
?SetMinMax@CStatGraph@@QAEXMMI@Z PROC			; CStatGraph::SetMinMax, COMDAT
; _this$ = ecx

; 108  :     {

	sub	esp, 16					; 00000010H

; 109  :         mn			= _mn;

	movss	xmm0, DWORD PTR __mn$[esp+12]

; 110  :         mx			= _mx;
; 111  :         max_item_count = item_count;

	mov	eax, DWORD PTR _item_count$[esp+12]
	push	esi
	push	edi
	mov	edi, ecx

; 112  : 		for (SubGraphVecIt it=subgraphs.begin(); it!=subgraphs.end(); it++)

	mov	esi, DWORD PTR [edi+4]
	cmp	esi, DWORD PTR [edi+8]
	movss	DWORD PTR [edi+16], xmm0
	movss	xmm0, DWORD PTR __mx$[esp+20]
	movss	DWORD PTR [edi+20], xmm0
	mov	DWORD PTR [edi+24], eax
	mov	DWORD PTR _it$117689[esp+20], esi
	je	$LN3@SetMinMax
	push	ebx
	add	esi, 32					; 00000020H
	push	ebp
	npad	7
$LL5@SetMinMax:

; 113  : 		{
; 114  : 			while(it->elements.size()>max_item_count) it->elements.pop_front();

	mov	edx, DWORD PTR [esi-24]
	mov	ebp, DWORD PTR [esi]
	mov	ebx, DWORD PTR [esi-12]
	sub	ebx, DWORD PTR [esi-8]
	mov	ecx, DWORD PTR [esi-28]
	mov	eax, DWORD PTR [esi-20]
	mov	DWORD PTR $T211798[esp+36], edx
	mov	edx, DWORD PTR [esi-16]
	sub	ebp, edx
	sar	ebp, 2
	sub	ebp, 1
	sar	ebx, 3
	shl	ebp, 4
	sub	eax, ecx
	add	ebx, ebp
	sar	eax, 3
	add	ebx, eax
	cmp	ebx, DWORD PTR [edi+24]
	jbe	SHORT $LN4@SetMinMax
$LL2@SetMinMax:
	mov	ecx, DWORD PTR [esi-20]
	mov	eax, DWORD PTR [esi-28]
	sub	ecx, 8
	cmp	eax, ecx
	je	SHORT $LN37@SetMinMax
	add	eax, 8
	mov	DWORD PTR [esi-28], eax
	jmp	SHORT $LN36@SetMinMax
$LN37@SetMinMax:
	mov	eax, DWORD PTR [esi-24]
	test	eax, eax
	je	SHORT $LN44@SetMinMax
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN44@SetMinMax:
	mov	eax, DWORD PTR [esi-16]
	add	eax, 4
	mov	DWORD PTR [esi-16], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi-24], eax
	mov	edx, DWORD PTR [esi-24]
	add	eax, 128				; 00000080H
	mov	DWORD PTR [esi-20], eax
	mov	DWORD PTR [esi-28], edx
$LN36@SetMinMax:
	mov	edx, DWORD PTR [esi-16]
	mov	ebp, DWORD PTR [esi]
	mov	eax, DWORD PTR [esi-24]
	mov	ebx, DWORD PTR [esi-12]
	sub	ebx, DWORD PTR [esi-8]
	mov	ecx, DWORD PTR [esi-28]
	sub	ebp, edx
	sar	ebp, 2
	mov	DWORD PTR $T211798[esp+36], eax
	mov	eax, DWORD PTR [esi-20]
	sub	ebp, 1
	sar	ebx, 3
	shl	ebp, 4
	sub	eax, ecx
	add	ebx, ebp
	sar	eax, 3
	add	ebx, eax
	cmp	ebx, DWORD PTR [edi+24]
	ja	SHORT $LL2@SetMinMax
$LN4@SetMinMax:

; 112  : 		for (SubGraphVecIt it=subgraphs.begin(); it!=subgraphs.end(); it++)

	mov	eax, DWORD PTR _it$117689[esp+28]
	add	eax, 44					; 0000002cH
	add	esi, 44					; 0000002cH
	cmp	eax, DWORD PTR [edi+8]
	mov	DWORD PTR _it$117689[esp+28], eax
	jne	$LL5@SetMinMax
	pop	ebp
	pop	ebx
$LN3@SetMinMax:
	pop	edi
	pop	esi

; 115  : 		};
; 116  :     }

	add	esp, 16					; 00000010H
	ret	12					; 0000000cH
?SetMinMax@CStatGraph@@QAEXMMI@Z ENDP			; CStatGraph::SetMinMax
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?SetStyle@SSubGraph@CStatGraph@@QAEXW4EStyle@2@@Z
_TEXT	SEGMENT
?SetStyle@SSubGraph@CStatGraph@@QAEXW4EStyle@2@@Z PROC	; CStatGraph::SSubGraph::SetStyle, COMDAT
; _this$ = eax
; _s$ = ecx

; 42   : 			style = s;

	mov	DWORD PTR [eax], ecx

; 43   : 		};

	ret	0
?SetStyle@SSubGraph@CStatGraph@@QAEXW4EStyle@2@@Z ENDP	; CStatGraph::SSubGraph::SetStyle
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0SElement@CStatGraph@@QAE@MI@Z
_TEXT	SEGMENT
??0SElement@CStatGraph@@QAE@MI@Z PROC			; CStatGraph::SElement::SElement, COMDAT
; _this$ = eax
; _d$ = xmm0s
; _clr$ = ecx

; 26   :         {
; 27   :         	color	= clr;

	mov	DWORD PTR [eax], ecx

; 28   :             data	= d;

	movss	DWORD PTR [eax+4], xmm0

; 29   :         }

	ret	0
??0SElement@CStatGraph@@QAE@MI@Z ENDP			; CStatGraph::SElement::SElement
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
;	COMDAT ?_M_decrement@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?_M_decrement@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXXZ PROC ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_decrement, COMDAT
; _this$ = eax

; 133  :     if (_M_cur == _M_first) {

	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN6@M_decremen@2

; 134  :       _M_set_node(_M_node - 1);

	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, 4
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	add	ecx, 128				; 00000080H
	mov	DWORD PTR [eax+8], ecx

; 135  :       _M_cur = _M_last;

	mov	DWORD PTR [eax], ecx
$LN6@M_decremen@2:

; 136  :     }
; 137  :     --_M_cur;

	add	DWORD PTR [eax], -8			; fffffff8H

; 138  :   }

	ret	0
?_M_decrement@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXXZ ENDP ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_decrement
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??F?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ
_TEXT	SEGMENT
??F?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator--, COMDAT
; _this$ = eax

; 201  :   _Self& operator--() { this->_M_decrement(); return *this; }

	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN8@operator@15
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, 4
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	add	ecx, 128				; 00000080H
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax], ecx
$LN8@operator@15:
	add	DWORD PTR [eax], -8			; fffffff8H
	ret	0
??F?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator--
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy_backward@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___first$ = 12						; size = 16
___last$ = 28						; size = 16
___result$ = 44						; size = 16
??$__copy_backward@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>, COMDAT

; 236  :   for (_Distance __n = __last - __first; __n > 0; --__n)

	mov	ecx, DWORD PTR ___last$[esp+8]
	sub	ecx, DWORD PTR ___first$[esp+8]
	mov	edx, DWORD PTR ___first$[esp+4]
	sub	edx, DWORD PTR ___first$[esp-4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	sar	ecx, 2
	push	ebx
	mov	ebx, DWORD PTR ___result$[esp+12]
	shl	ecx, 4
	sar	edx, 3
	add	ecx, edx
	mov	edx, DWORD PTR ___last$[esp]
	push	ebp
	mov	ebp, DWORD PTR ___result$[esp+12]
	push	esi
	mov	esi, edx
	sub	esi, DWORD PTR ___last$[esp+12]
	push	edi
	mov	edi, DWORD PTR ___result$[esp+16]
	sar	esi, 3
	lea	esi, DWORD PTR [ecx+esi-16]
	test	esi, esi
	mov	ecx, DWORD PTR ___result$[esp+12]
	jle	SHORT $LN1@copy_backw@4
$LN3@copy_backw@4:

; 237  :     *--__result = *--__last;

	cmp	edx, DWORD PTR ___last$[esp+16]
	jne	SHORT $LN14@copy_backw@4
	mov	eax, DWORD PTR ___last$[esp+24]
	add	eax, -4					; fffffffcH
	mov	DWORD PTR ___last$[esp+24], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR ___last$[esp+16], eax
	lea	edx, DWORD PTR [eax+128]
$LN14@copy_backw@4:
	sub	edx, 8
	cmp	ecx, edi
	jne	SHORT $LN23@copy_backw@4
	mov	edi, DWORD PTR [ebx-4]
	add	ebx, -4					; fffffffcH
	lea	ebp, DWORD PTR [edi+128]
	mov	ecx, ebp
$LN23@copy_backw@4:
	mov	eax, DWORD PTR [edx]
	sub	ecx, 8
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	sub	esi, 1
	test	esi, esi
	mov	DWORD PTR [ecx+4], eax
	jg	SHORT $LN3@copy_backw@4

; 236  :   for (_Distance __n = __last - __first; __n > 0; --__n)

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+12]
$LN1@copy_backw@4:

; 238  :   return __result;

	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edi

; 239  : }

	pop	edi
	pop	esi
	mov	DWORD PTR [eax+8], ebp
	pop	ebp
	mov	DWORD PTR [eax+12], ebx
	pop	ebx
	ret	0
??$__copy_backward@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__copy_backward_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$__copy_backward_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z PROC ; stlp_std::priv::__copy_backward_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >, COMDAT
; ___$ReturnUdt$ = esi

; 298  : inline _OutputIter __copy_backward_aux(_InputIter __first, _InputIter __last, _OutputIter __result, const __false_type&) {

	push	ecx

; 299  :   return __copy_backward(__first, __last, __result, _STLP_ITERATOR_CATEGORY(__first,_InputIter), _STLP_DISTANCE_TYPE(__first, _InputIter));

	mov	ecx, DWORD PTR ___result$[esp]
	mov	edx, DWORD PTR ___result$[esp+4]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	push	esi
	mov	DWORD PTR [eax+12], edx
	call	??$__copy_backward@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>
	add	esp, 52					; 00000034H
	mov	eax, esi
	pop	ecx

; 300  : }

	ret	0
??$__copy_backward_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z ENDP ; stlp_std::priv::__copy_backward_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$copy_backward@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$copy_backward@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z PROC ; stlp_std::copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >, COMDAT
; ___$ReturnUdt$ = eax

; 313  :   _STLP_DEBUG_CHECK(_STLP_PRIV __check_range(__first, __last))
; 314  :   return _STLP_PRIV __copy_backward_aux(__first, __last, __result, _BothPtrType< _InputIter, _OutputIter>::_Answer() );

	mov	ecx, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	push	esi
	mov	esi, eax
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	call	??$__copy_backward_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z ; stlp_std::priv::__copy_backward_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
	add	esp, 48					; 00000030H
	mov	eax, esi

; 315  : }

	pop	esi
	ret	0
??$copy_backward@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ENDP ; stlp_std::copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.c
_TEXT	ENDS
;	COMDAT ?clear@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEXXZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::clear, COMDAT
; _this$ = edi

; 337  : void deque<_Tp,_Alloc>::clear() {

	push	ebx

; 338  :   for (_Map_pointer __node = this->_M_start._M_node + 1;
; 339  :        __node < this->_M_finish._M_node;
; 340  :        ++__node) {

	mov	ebx, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	push	esi
	mov	esi, DWORD PTR [edi+12]
	add	esi, 4
	cmp	esi, DWORD PTR [edi+28]
	jae	SHORT $LN3@clear@5
$LL5@clear@5:

; 341  :     _STLP_STD::_Destroy_Range(*__node, *__node + this->buffer_size());
; 342  :     this->_M_map_size.deallocate(*__node, this->buffer_size());

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN4@clear@5
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebx
$LN4@clear@5:
	add	esi, 4
	cmp	esi, DWORD PTR [edi+28]
	jb	SHORT $LL5@clear@5
$LN3@clear@5:

; 343  :   }
; 344  : 
; 345  :   if (this->_M_start._M_node != this->_M_finish._M_node) {

	mov	eax, DWORD PTR [edi+12]
	cmp	eax, DWORD PTR [edi+28]
	je	SHORT $LN2@clear@5

; 346  :     _STLP_STD::_Destroy_Range(this->_M_start._M_cur, this->_M_start._M_last);
; 347  :     _STLP_STD::_Destroy_Range(this->_M_finish._M_first, this->_M_finish._M_cur);
; 348  :     this->_M_map_size.deallocate(this->_M_finish._M_first, this->buffer_size());

	mov	eax, DWORD PTR [edi+20]
	test	eax, eax
	je	SHORT $LN2@clear@5
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebx
$LN2@clear@5:

; 349  :   }
; 350  :   else
; 351  :     _STLP_STD::_Destroy_Range(this->_M_start._M_cur, this->_M_finish._M_cur);
; 352  : 
; 353  :   this->_M_finish = this->_M_start;

	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR [edi+16], ecx
	mov	ecx, DWORD PTR [edi+12]
	mov	DWORD PTR [edi+20], edx
	pop	esi
	mov	DWORD PTR [edi+24], eax
	mov	DWORD PTR [edi+28], ecx
	pop	ebx

; 354  : }

	ret	0
?clear@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEXXZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::clear
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy_backward_ptrs@PAPAUSMarker@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z
_TEXT	SEGMENT
??$__copy_backward_ptrs@PAPAUSMarker@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z PROC ; stlp_std::priv::__copy_backward_ptrs<CStatGraph::SMarker * *,CStatGraph::SMarker * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 294  :   return (_OutputIter)__copy_trivial_backward(__first, __last, __result);

	sub	ecx, edx
	test	ecx, ecx
	jle	SHORT $LN6@copy_backw@5
	push	ecx
	push	edx
	sub	eax, ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
$LN6@copy_backw@5:

; 295  : }

	ret	0
??$__copy_backward_ptrs@PAPAUSMarker@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z ENDP ; stlp_std::priv::__copy_backward_ptrs<CStatGraph::SMarker * *,CStatGraph::SMarker * *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__copy_ptrs@PAPAUSMarker@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z
_TEXT	SEGMENT
??$__copy_ptrs@PAPAUSMarker@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z PROC ; stlp_std::priv::__copy_ptrs<CStatGraph::SMarker * *,CStatGraph::SMarker * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 255  :   // we know they all pointers, so this cast is OK
; 256  :   //  return (_OutputIter)__copy_trivial(&(*__first), &(*__last), &(*__result));
; 257  :   return (_OutputIter)__copy_trivial(__first, __last, __result);

	sub	ecx, edx
	push	esi
	mov	esi, ecx
	je	SHORT $LN6@copy_ptrs@5
	push	esi
	push	edx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN6@copy_ptrs@5:
	pop	esi

; 258  : }

	ret	0
??$__copy_ptrs@PAPAUSMarker@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z ENDP ; stlp_std::priv::__copy_ptrs<CStatGraph::SMarker * *,CStatGraph::SMarker * *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__copy_backward_ptrs@PAPAUSElement@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z
_TEXT	SEGMENT
??$__copy_backward_ptrs@PAPAUSElement@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z PROC ; stlp_std::priv::__copy_backward_ptrs<CStatGraph::SElement * *,CStatGraph::SElement * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 294  :   return (_OutputIter)__copy_trivial_backward(__first, __last, __result);

	sub	ecx, edx
	test	ecx, ecx
	jle	SHORT $LN6@copy_backw@6
	push	ecx
	push	edx
	sub	eax, ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
$LN6@copy_backw@6:

; 295  : }

	ret	0
??$__copy_backward_ptrs@PAPAUSElement@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z ENDP ; stlp_std::priv::__copy_backward_ptrs<CStatGraph::SElement * *,CStatGraph::SElement * *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__copy_ptrs@PAPAUSElement@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z
_TEXT	SEGMENT
??$__copy_ptrs@PAPAUSElement@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z PROC ; stlp_std::priv::__copy_ptrs<CStatGraph::SElement * *,CStatGraph::SElement * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 255  :   // we know they all pointers, so this cast is OK
; 256  :   //  return (_OutputIter)__copy_trivial(&(*__first), &(*__last), &(*__result));
; 257  :   return (_OutputIter)__copy_trivial(__first, __last, __result);

	sub	ecx, edx
	push	esi
	mov	esi, ecx
	je	SHORT $LN6@copy_ptrs@6
	push	esi
	push	edx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN6@copy_ptrs@6:
	pop	esi

; 258  : }

	ret	0
??$__copy_ptrs@PAPAUSElement@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z ENDP ; stlp_std::priv::__copy_ptrs<CStatGraph::SElement * *,CStatGraph::SElement * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ?_M_advance@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXH@Z
_TEXT	SEGMENT
?_M_advance@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXH@Z PROC ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_advance, COMDAT
; _this$ = esi
; ___n$ = edx

; 141  :     difference_type __offset = __n + (_M_cur - _M_first);

	mov	eax, DWORD PTR [esi]
	mov	ecx, eax
	sub	ecx, DWORD PTR [esi+4]
	sar	ecx, 3
	add	ecx, edx

; 142  :     if (__offset >= 0 && __offset < difference_type(__buffer_size))

	cmp	ecx, 15					; 0000000fH
	ja	SHORT $LN2@M_advance@2

; 143  :       _M_cur += __n;

	lea	eax, DWORD PTR [eax+edx*8]
	mov	DWORD PTR [esi], eax

; 152  :     }
; 153  :   }

	ret	0
$LN2@M_advance@2:

; 144  :     else {
; 145  :       difference_type __node_offset =
; 146  :         __offset > 0 ? __offset / __buffer_size
; 147  :                    : -difference_type((-__offset - 1) / __buffer_size) - 1;

	test	ecx, ecx
	jle	SHORT $LN5@M_advance@2
	mov	eax, ecx
	cdq
	and	edx, 15					; 0000000fH
	add	eax, edx
	sar	eax, 4
	jmp	SHORT $LN6@M_advance@2
$LN5@M_advance@2:
	lea	eax, DWORD PTR [ecx+1]
	cdq
	and	edx, 15					; 0000000fH
	add	eax, edx
	sar	eax, 4
	sub	eax, 1
$LN6@M_advance@2:

; 148  :       _M_set_node(_M_node + __node_offset);

	mov	edx, DWORD PTR [esi+12]
	lea	edx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR [esi+12], edx
	mov	edx, DWORD PTR [edx]

; 149  :       _M_cur = _M_first +
; 150  : 
; 151  :         (__offset - __node_offset * difference_type(__buffer_size));

	shl	eax, 4
	mov	DWORD PTR [esi+4], edx
	sub	ecx, eax
	mov	eax, DWORD PTR [esi+4]
	add	edx, 128				; 00000080H
	lea	ecx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR [esi+8], edx
	mov	DWORD PTR [esi], ecx

; 152  :     }
; 153  :   }

	ret	0
?_M_advance@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXH@Z ENDP ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_advance
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Y?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z
_TEXT	SEGMENT
??Y?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::operator+=, COMDAT
; _this$ = eax
; ___n$ = edx

; 208  :   _Self& operator+=(difference_type __n) { this->_M_advance(__n); return *this; }

	push	esi
	mov	esi, eax
	call	?_M_advance@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_advance
	mov	eax, esi
	pop	esi
	ret	0
??Y?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_decrement@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?_M_decrement@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXXZ PROC ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_decrement, COMDAT
; _this$ = eax

; 133  :     if (_M_cur == _M_first) {

	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN6@M_decremen@3

; 134  :       _M_set_node(_M_node - 1);

	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, 4
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	add	ecx, 120				; 00000078H
	mov	DWORD PTR [eax+8], ecx

; 135  :       _M_cur = _M_last;

	mov	DWORD PTR [eax], ecx
$LN6@M_decremen@3:

; 136  :     }
; 137  :     --_M_cur;

	add	DWORD PTR [eax], -12			; fffffff4H

; 138  :   }

	ret	0
?_M_decrement@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXXZ ENDP ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_decrement
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??H?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z
_TEXT	SEGMENT
___tmp$ = -16						; size = 16
___n$ = 8						; size = 4
??H?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::operator+, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = edi

; 209  :   _Self operator+(difference_type __n) const {

	sub	esp, 20					; 00000014H

; 210  :     _Self __tmp = *this;

	mov	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR ___tmp$[esp+24], edx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR ___tmp$[esp+20], ecx
	mov	ecx, DWORD PTR [eax+8]
	push	esi
	mov	DWORD PTR ___tmp$[esp+36], edx

; 211  :     return __tmp += __n;

	mov	edx, DWORD PTR ___n$[esp+20]
	lea	esi, DWORD PTR ___tmp$[esp+24]
	mov	DWORD PTR ___tmp$[esp+32], ecx
	call	?_M_advance@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_advance
	mov	eax, DWORD PTR ___tmp$[esp+24]
	mov	ecx, DWORD PTR ___tmp$[esp+28]
	mov	edx, DWORD PTR ___tmp$[esp+32]
	mov	DWORD PTR [edi], eax
	mov	eax, DWORD PTR ___tmp$[esp+36]
	mov	DWORD PTR [edi+4], ecx
	mov	DWORD PTR [edi+8], edx
	mov	DWORD PTR [edi+12], eax
	mov	eax, edi

; 212  :   }

	pop	esi
	add	esp, 20					; 00000014H
	ret	4
??H?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::operator+
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??F?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ
_TEXT	SEGMENT
??F?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator--, COMDAT
; _this$ = eax

; 201  :   _Self& operator--() { this->_M_decrement(); return *this; }

	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN8@operator@16
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, 4
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	add	ecx, 120				; 00000078H
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax], ecx
$LN8@operator@16:
	add	DWORD PTR [eax], -12			; fffffff4H
	ret	0
??F?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator--
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$_Param_Construct@USElement@CStatGraph@@U12@@stlp_std@@YAXPAUSElement@CStatGraph@@ABU12@@Z
_TEXT	SEGMENT
??$_Param_Construct@USElement@CStatGraph@@U12@@stlp_std@@YAXPAUSElement@CStatGraph@@ABU12@@Z PROC ; stlp_std::_Param_Construct<CStatGraph::SElement,CStatGraph::SElement>, COMDAT
; ___p$ = eax
; ___val$ = ecx

; 118  : #if defined (_STLP_DEBUG_UNINITIALIZED)
; 119  :   memset((char*)__p, _STLP_SHRED_BYTE, sizeof(_T1));
; 120  : #endif
; 121  :   _STLP_PLACEMENT_NEW (__p) _T1(__val);

	test	eax, eax
	je	SHORT $LN3@Param_Cons@3
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN3@Param_Cons@3:

; 122  : }

	ret	0
??$_Param_Construct@USElement@CStatGraph@@U12@@stlp_std@@YAXPAUSElement@CStatGraph@@ABU12@@Z ENDP ; stlp_std::_Param_Construct<CStatGraph::SElement,CStatGraph::SElement>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy_backward@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___first$ = 12						; size = 16
___last$ = 28						; size = 16
___result$ = 44						; size = 16
??$__copy_backward@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>, COMDAT

; 236  :   for (_Distance __n = __last - __first; __n > 0; --__n)

	mov	ecx, DWORD PTR ___first$[esp+4]
	sub	ecx, DWORD PTR ___first$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR ___last$[esp+12]
	mov	eax, ebx
	sub	eax, DWORD PTR ___first$[esp+12]
	push	ebp
	sar	eax, 2
	push	esi
	lea	esi, DWORD PTR [eax+eax*4]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	mov	ecx, DWORD PTR ___last$[esp+8]
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp+8]
	lea	esi, DWORD PTR [eax+esi*2]
	mov	edx, ecx
	sub	edx, DWORD PTR ___last$[esp+12]
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	esi, edx
	lea	edx, DWORD PTR [eax+esi-10]
	test	edx, edx
	mov	esi, DWORD PTR ___result$[esp+12]
	mov	eax, DWORD PTR ___result$[esp+8]
	push	edi
	mov	edi, DWORD PTR ___result$[esp+24]
	jle	SHORT $LN1@copy_backw@7
$LN3@copy_backw@7:

; 237  :     *--__result = *--__last;

	cmp	ecx, DWORD PTR ___last$[esp+16]
	jne	SHORT $LN14@copy_backw@7
	mov	ecx, DWORD PTR [ebx-4]
	add	ebx, -4					; fffffffcH
	mov	DWORD PTR ___last$[esp+16], ecx
	add	ecx, 120				; 00000078H
$LN14@copy_backw@7:
	sub	ecx, 12					; 0000000cH
	cmp	eax, esi
	jne	SHORT $LN23@copy_backw@7
	mov	esi, DWORD PTR [edi-4]
	add	edi, -4					; fffffffcH
	lea	eax, DWORD PTR [esi+120]
	mov	DWORD PTR ___result$[esp+20], eax
$LN23@copy_backw@7:
	mov	ebp, DWORD PTR [ecx]
	sub	eax, 12					; 0000000cH
	mov	DWORD PTR [eax], ebp
	mov	ebp, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ebp
	mov	ebp, DWORD PTR [ecx+8]
	sub	edx, 1
	test	edx, edx
	mov	DWORD PTR [eax+8], ebp
	jg	SHORT $LN3@copy_backw@7

; 236  :   for (_Distance __n = __last - __first; __n > 0; --__n)

	mov	ebp, DWORD PTR ___$ReturnUdt$[esp+12]
$LN1@copy_backw@7:

; 238  :   return __result;

	mov	ecx, DWORD PTR ___result$[esp+20]
	mov	DWORD PTR [ebp], eax
	mov	DWORD PTR [ebp+4], esi
	mov	DWORD PTR [ebp+8], ecx
	mov	DWORD PTR [ebp+12], edi

; 239  : }

	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	pop	ebx
	ret	0
??$__copy_backward@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__copy_backward_aux@PAPAUSMarker@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z
_TEXT	SEGMENT
??$__copy_backward_aux@PAPAUSMarker@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z PROC ; stlp_std::priv::__copy_backward_aux<CStatGraph::SMarker * *,CStatGraph::SMarker * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 304  :   return __copy_backward_ptrs(__first, __last, __result,
; 305  :                               _UseTrivialCopy(_STLP_VALUE_TYPE(__first, _InputIter),
; 306  :                                               _STLP_VALUE_TYPE(__result, _OutputIter))._Answer());

	sub	ecx, edx
	test	ecx, ecx
	jle	SHORT $LN12@copy_backw@8
	push	ecx
	push	edx
	sub	eax, ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
$LN12@copy_backw@8:

; 307  : }

	ret	0
??$__copy_backward_aux@PAPAUSMarker@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z ENDP ; stlp_std::priv::__copy_backward_aux<CStatGraph::SMarker * *,CStatGraph::SMarker * *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__copy_aux@PAPAUSMarker@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z
_TEXT	SEGMENT
??$__copy_aux@PAPAUSMarker@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z PROC ; stlp_std::priv::__copy_aux<CStatGraph::SMarker * *,CStatGraph::SMarker * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 263  :   return __copy_ptrs(__first, __last, __result,
; 264  :                      _UseTrivialCopy(_STLP_VALUE_TYPE(__first, _InputIter),
; 265  :                                      _STLP_VALUE_TYPE(__result, _OutputIter))._Answer());

	sub	ecx, edx
	push	esi
	mov	esi, ecx
	je	SHORT $LN12@copy_aux
	push	esi
	push	edx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN12@copy_aux:
	pop	esi

; 266  : }

	ret	0
??$__copy_aux@PAPAUSMarker@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z ENDP ; stlp_std::priv::__copy_aux<CStatGraph::SMarker * *,CStatGraph::SMarker * *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__copy_backward_aux@PAPAUSElement@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z
_TEXT	SEGMENT
??$__copy_backward_aux@PAPAUSElement@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z PROC ; stlp_std::priv::__copy_backward_aux<CStatGraph::SElement * *,CStatGraph::SElement * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 304  :   return __copy_backward_ptrs(__first, __last, __result,
; 305  :                               _UseTrivialCopy(_STLP_VALUE_TYPE(__first, _InputIter),
; 306  :                                               _STLP_VALUE_TYPE(__result, _OutputIter))._Answer());

	sub	ecx, edx
	test	ecx, ecx
	jle	SHORT $LN12@copy_backw@9
	push	ecx
	push	edx
	sub	eax, ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
$LN12@copy_backw@9:

; 307  : }

	ret	0
??$__copy_backward_aux@PAPAUSElement@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z ENDP ; stlp_std::priv::__copy_backward_aux<CStatGraph::SElement * *,CStatGraph::SElement * *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__copy_aux@PAPAUSElement@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z
_TEXT	SEGMENT
??$__copy_aux@PAPAUSElement@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z PROC ; stlp_std::priv::__copy_aux<CStatGraph::SElement * *,CStatGraph::SElement * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 263  :   return __copy_ptrs(__first, __last, __result,
; 264  :                      _UseTrivialCopy(_STLP_VALUE_TYPE(__first, _InputIter),
; 265  :                                      _STLP_VALUE_TYPE(__result, _OutputIter))._Answer());

	sub	ecx, edx
	push	esi
	mov	esi, ecx
	je	SHORT $LN12@copy_aux@2
	push	esi
	push	edx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN12@copy_aux@2:
	pop	esi

; 266  : }

	ret	0
??$__copy_aux@PAPAUSElement@CStatGraph@@PAPAU12@@priv@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU23@00ABU__true_type@1@@Z ENDP ; stlp_std::priv::__copy_aux<CStatGraph::SElement * *,CStatGraph::SElement * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ?_M_increment@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?_M_increment@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXXZ PROC ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_increment, COMDAT
; _this$ = eax

; 126  :     if (++_M_cur == _M_last) {

	add	DWORD PTR [eax], 8
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@M_incremen

; 127  :       _M_set_node(_M_node + 1);

	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 4
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	add	ecx, 128				; 00000080H
	mov	DWORD PTR [eax+8], ecx

; 128  :       _M_cur = _M_first;

	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [eax], ecx
$LN1@M_incremen:

; 129  :     }
; 130  :   }

	ret	0
?_M_increment@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXXZ ENDP ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_increment
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ
_TEXT	SEGMENT
??E?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::operator++, COMDAT
; _this$ = eax

; 194  :   _Self& operator++() { this->_M_increment(); return *this; }

	add	DWORD PTR [eax], 8
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@operator@17
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 4
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	add	ecx, 128				; 00000080H
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [eax], ecx
$LN3@operator@17:
	ret	0
??E?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??G?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEHABU012@@Z
_TEXT	SEGMENT
??G?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEHABU012@@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::operator-, COMDAT
; _this$ = ecx
; ___x$ = eax

; 192  :   difference_type operator-(const const_iterator& __x) const { return this->_M_subtract(__x); }

	mov	edx, DWORD PTR [ecx+12]
	sub	edx, DWORD PTR [eax+12]
	push	esi
	mov	esi, DWORD PTR [ecx]
	sub	esi, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR [eax]
	sar	edx, 2
	sar	esi, 3
	shl	edx, 4
	add	edx, esi
	sar	ecx, 3
	lea	eax, DWORD PTR [edx+ecx-16]
	pop	esi
	ret	0
??G?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEHABU012@@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::operator-
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ
_TEXT	SEGMENT
??E?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator++, COMDAT
; _this$ = eax

; 194  :   _Self& operator++() { this->_M_increment(); return *this; }

	add	DWORD PTR [eax], 8
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@operator@18
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 4
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	add	ecx, 128				; 00000080H
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [eax], ecx
$LN3@operator@18:
	ret	0
??E?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator++
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__ucopy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$__ucopy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>, COMDAT
; ___$ReturnUdt$ = eax

; 84   :   _OutputIter __cur = __result;

	mov	ecx, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+8]
	push	ebp
	mov	DWORD PTR [eax+8], ecx

; 85   :   _STLP_TRY {
; 86   :     for (_Distance __n = __last - __first; __n > 0; --__n) {

	mov	ecx, DWORD PTR ___last$[esp+12]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp]
	sub	edx, DWORD PTR ___last$[esp+4]
	push	esi
	mov	esi, DWORD PTR ___first$[esp+4]
	push	edi
	mov	edi, DWORD PTR ___first$[esp+20]
	sub	ecx, edi
	sar	ecx, 2
	sar	edx, 3
	shl	ecx, 4
	add	ecx, edx
	mov	edx, DWORD PTR ___first$[esp+16]
	sub	edx, esi
	sar	edx, 3
	lea	ebp, DWORD PTR [ecx+edx-16]
	test	ebp, ebp
	jle	SHORT $LN1@ucopy
	push	ebx
	mov	ebx, DWORD PTR [eax+8]
$LL39@ucopy:

; 87   :       _Param_Construct(&*__cur, *__first);

	mov	edx, DWORD PTR [eax]
	test	edx, edx
	je	SHORT $LN18@ucopy
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [edx+4], ecx
$LN18@ucopy:

; 88   :       ++__first;

	add	esi, 8
	cmp	esi, DWORD PTR ___first$[esp+20]
	jne	SHORT $LN24@ucopy
	mov	ecx, DWORD PTR [edi+4]
	add	edi, 4
	lea	esi, DWORD PTR [ecx+128]
	mov	DWORD PTR ___first$[esp+20], esi
	mov	esi, ecx
$LN24@ucopy:

; 89   :       ++__cur;

	lea	ecx, DWORD PTR [edx+8]
	cmp	ecx, ebx
	mov	DWORD PTR [eax], ecx
	jne	SHORT $LN2@ucopy
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 4
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	lea	ebx, DWORD PTR [ecx+128]
	mov	DWORD PTR [eax], ecx
$LN2@ucopy:
	sub	ebp, 1
	test	ebp, ebp
	jg	SHORT $LL39@ucopy
	mov	DWORD PTR [eax+8], ebx
	pop	ebx
$LN1@ucopy:
	pop	edi
	pop	esi
	pop	ebp

; 90   :     }
; 91   :     return __cur;
; 92   :   }
; 93   :   _STLP_UNWIND(_STLP_STD::_Destroy_Range(__result, __cur))
; 94   :   _STLP_RET_AFTER_THROW(__cur)
; 95   : }

	ret	0
??$__ucopy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$_Param_Construct@USMarker@CStatGraph@@U12@@stlp_std@@YAXPAUSMarker@CStatGraph@@ABU12@@Z
_TEXT	SEGMENT
??$_Param_Construct@USMarker@CStatGraph@@U12@@stlp_std@@YAXPAUSMarker@CStatGraph@@ABU12@@Z PROC ; stlp_std::_Param_Construct<CStatGraph::SMarker,CStatGraph::SMarker>, COMDAT
; ___p$ = eax
; ___val$ = ecx

; 118  : #if defined (_STLP_DEBUG_UNINITIALIZED)
; 119  :   memset((char*)__p, _STLP_SHRED_BYTE, sizeof(_T1));
; 120  : #endif
; 121  :   _STLP_PLACEMENT_NEW (__p) _T1(__val);

	test	eax, eax
	je	SHORT $LN3@Param_Cons@4
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx
$LN3@Param_Cons@4:

; 122  : }

	ret	0
??$_Param_Construct@USMarker@CStatGraph@@U12@@stlp_std@@YAXPAUSMarker@CStatGraph@@ABU12@@Z ENDP ; stlp_std::_Param_Construct<CStatGraph::SMarker,CStatGraph::SMarker>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy_backward_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$__copy_backward_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z PROC ; stlp_std::priv::__copy_backward_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >, COMDAT
; ___$ReturnUdt$ = esi

; 298  : inline _OutputIter __copy_backward_aux(_InputIter __first, _InputIter __last, _OutputIter __result, const __false_type&) {

	push	ecx

; 299  :   return __copy_backward(__first, __last, __result, _STLP_ITERATOR_CATEGORY(__first,_InputIter), _STLP_DISTANCE_TYPE(__first, _InputIter));

	mov	ecx, DWORD PTR ___result$[esp]
	mov	edx, DWORD PTR ___result$[esp+4]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	push	esi
	mov	DWORD PTR [eax+12], edx
	call	??$__copy_backward@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>
	add	esp, 52					; 00000034H
	mov	eax, esi
	pop	ecx

; 300  : }

	ret	0
??$__copy_backward_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z ENDP ; stlp_std::priv::__copy_backward_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$copy_backward@PAPAUSMarker@CStatGraph@@PAPAU12@@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU12@00@Z
_TEXT	SEGMENT
??$copy_backward@PAPAUSMarker@CStatGraph@@PAPAU12@@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU12@00@Z PROC ; stlp_std::copy_backward<CStatGraph::SMarker * *,CStatGraph::SMarker * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 313  :   _STLP_DEBUG_CHECK(_STLP_PRIV __check_range(__first, __last))
; 314  :   return _STLP_PRIV __copy_backward_aux(__first, __last, __result, _BothPtrType< _InputIter, _OutputIter>::_Answer() );

	sub	ecx, edx
	test	ecx, ecx
	jle	SHORT $LN16@copy_backw@10
	push	ecx
	push	edx
	sub	eax, ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
$LN16@copy_backw@10:

; 315  : }

	ret	0
??$copy_backward@PAPAUSMarker@CStatGraph@@PAPAU12@@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU12@00@Z ENDP ; stlp_std::copy_backward<CStatGraph::SMarker * *,CStatGraph::SMarker * *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$copy@PAPAUSMarker@CStatGraph@@PAPAU12@@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU12@00@Z
_TEXT	SEGMENT
??$copy@PAPAUSMarker@CStatGraph@@PAPAU12@@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU12@00@Z PROC ; stlp_std::copy<CStatGraph::SMarker * *,CStatGraph::SMarker * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 280  :   _STLP_DEBUG_CHECK(_STLP_PRIV __check_range(__first, __last))
; 281  :   return _STLP_PRIV __copy_aux(__first, __last, __result, _BothPtrType< _InputIter, _OutputIter>::_Answer());

	sub	ecx, edx
	push	esi
	mov	esi, ecx
	je	SHORT $LN16@copy@2
	push	esi
	push	edx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN16@copy@2:
	pop	esi

; 282  : }

	ret	0
??$copy@PAPAUSMarker@CStatGraph@@PAPAU12@@stlp_std@@YAPAPAUSMarker@CStatGraph@@PAPAU12@00@Z ENDP ; stlp_std::copy<CStatGraph::SMarker * *,CStatGraph::SMarker * *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$copy_backward@PAPAUSElement@CStatGraph@@PAPAU12@@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU12@00@Z
_TEXT	SEGMENT
??$copy_backward@PAPAUSElement@CStatGraph@@PAPAU12@@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU12@00@Z PROC ; stlp_std::copy_backward<CStatGraph::SElement * *,CStatGraph::SElement * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 313  :   _STLP_DEBUG_CHECK(_STLP_PRIV __check_range(__first, __last))
; 314  :   return _STLP_PRIV __copy_backward_aux(__first, __last, __result, _BothPtrType< _InputIter, _OutputIter>::_Answer() );

	sub	ecx, edx
	test	ecx, ecx
	jle	SHORT $LN16@copy_backw@11
	push	ecx
	push	edx
	sub	eax, ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
$LN16@copy_backw@11:

; 315  : }

	ret	0
??$copy_backward@PAPAUSElement@CStatGraph@@PAPAU12@@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU12@00@Z ENDP ; stlp_std::copy_backward<CStatGraph::SElement * *,CStatGraph::SElement * *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$copy@PAPAUSElement@CStatGraph@@PAPAU12@@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU12@00@Z
_TEXT	SEGMENT
??$copy@PAPAUSElement@CStatGraph@@PAPAU12@@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU12@00@Z PROC ; stlp_std::copy<CStatGraph::SElement * *,CStatGraph::SElement * *>, COMDAT
; ___first$ = edx
; ___last$ = ecx
; ___result$ = eax

; 280  :   _STLP_DEBUG_CHECK(_STLP_PRIV __check_range(__first, __last))
; 281  :   return _STLP_PRIV __copy_aux(__first, __last, __result, _BothPtrType< _InputIter, _OutputIter>::_Answer());

	sub	ecx, edx
	push	esi
	mov	esi, ecx
	je	SHORT $LN16@copy@3
	push	esi
	push	edx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
$LN16@copy@3:
	pop	esi

; 282  : }

	ret	0
??$copy@PAPAUSElement@CStatGraph@@PAPAU12@@stlp_std@@YAPAPAUSElement@CStatGraph@@PAPAU12@00@Z ENDP ; stlp_std::copy<CStatGraph::SElement * *,CStatGraph::SElement * *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??Z?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z
_TEXT	SEGMENT
??Z?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator-=, COMDAT
; _this$ = eax
; ___n$ = ecx

; 214  :   _Self& operator-=(difference_type __n) { return *this += -__n; }

	push	ebx
	mov	ebx, ecx
	push	esi
	mov	esi, eax
	neg	ebx
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
	mov	eax, esi
	pop	esi
	pop	ebx
	ret	0
??Z?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator-=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??G?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEHABU012@@Z
_TEXT	SEGMENT
??G?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEHABU012@@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::operator-, COMDAT
; _this$ = edx
; ___x$ = esi

; 192  :   difference_type operator-(const const_iterator& __x) const { return this->_M_subtract(__x); }

	mov	eax, DWORD PTR [edx+12]
	sub	eax, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR [edx]
	sub	ecx, DWORD PTR [edx+4]
	sar	eax, 2
	push	edi
	lea	edi, DWORD PTR [eax+eax*4]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, DWORD PTR [esi]
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	edi, DWORD PTR [eax+edi*2]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	ecx, edx
	add	edi, edx
	shr	ecx, 31					; 0000001fH
	lea	eax, DWORD PTR [ecx+edi-10]
	pop	edi
	ret	0
??G?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEHABU012@@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::operator-
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??G?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z
_TEXT	SEGMENT
___tmp$ = -16						; size = 16
___n$ = 8						; size = 4
??G?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator-, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = edi

; 215  :   _Self operator-(difference_type __n) const {

	sub	esp, 16					; 00000010H

; 216  :     _Self __tmp = *this;

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	push	ebx

; 217  :     return __tmp -= __n;

	mov	ebx, DWORD PTR ___n$[esp+16]
	mov	DWORD PTR ___tmp$[esp+20], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR ___tmp$[esp+24], edx
	mov	edx, DWORD PTR [eax+12]
	push	esi
	neg	ebx
	lea	esi, DWORD PTR ___tmp$[esp+24]
	mov	DWORD PTR ___tmp$[esp+32], ecx
	mov	DWORD PTR ___tmp$[esp+36], edx
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
	mov	eax, DWORD PTR ___tmp$[esp+24]
	mov	ecx, DWORD PTR ___tmp$[esp+28]
	mov	edx, DWORD PTR ___tmp$[esp+32]
	mov	DWORD PTR [edi], eax
	mov	eax, DWORD PTR ___tmp$[esp+36]
	mov	DWORD PTR [edi+4], ecx
	mov	DWORD PTR [edi+8], edx

; 218  :   }

	pop	esi
	mov	DWORD PTR [edi+12], eax
	mov	eax, edi
	pop	ebx
	add	esp, 16					; 00000010H
	ret	4
??G?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator-
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__ucopy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$__ucopy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@@Z PROC ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >, COMDAT
; ___$ReturnUdt$ = esi

; 100  : { return __ucopy(__first, __last, __result, random_access_iterator_tag(), (ptrdiff_t*)0); }

	mov	ecx, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+20]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+12]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+16]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+36]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+28]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+32]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+52]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	eax, esi
	call	??$__ucopy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>
	add	esp, 48					; 00000030H
	mov	eax, esi
	ret	0
??$__ucopy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@@Z ENDP ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$__destroy_range@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@USMarker@CStatGraph@@@stlp_std@@YAXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0PAUSMarker@CStatGraph@@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
??$__destroy_range@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@USMarker@CStatGraph@@@stlp_std@@YAXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0PAUSMarker@CStatGraph@@@Z PROC ; stlp_std::__destroy_range<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,CStatGraph::SMarker>, COMDAT

; 175  :   typedef typename __type_traits<_Tp>::has_trivial_destructor _Trivial_destructor;
; 176  :   __destroy_range_aux(__first, __last, __ptr, _Trivial_destructor());
; 177  : }

	ret	0
??$__destroy_range@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@USMarker@CStatGraph@@@stlp_std@@YAXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0PAUSMarker@CStatGraph@@@Z ENDP ; stlp_std::__destroy_range<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,CStatGraph::SMarker>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__destroy_range@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@USElement@CStatGraph@@@stlp_std@@YAXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0PAUSElement@CStatGraph@@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
??$__destroy_range@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@USElement@CStatGraph@@@stlp_std@@YAXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0PAUSElement@CStatGraph@@@Z PROC ; stlp_std::__destroy_range<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,CStatGraph::SElement>, COMDAT

; 175  :   typedef typename __type_traits<_Tp>::has_trivial_destructor _Trivial_destructor;
; 176  :   __destroy_range_aux(__first, __last, __ptr, _Trivial_destructor());
; 177  : }

	ret	0
??$__destroy_range@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@USElement@CStatGraph@@@stlp_std@@YAXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0PAUSElement@CStatGraph@@@Z ENDP ; stlp_std::__destroy_range<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,CStatGraph::SElement>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$copy_backward@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$copy_backward@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z PROC ; stlp_std::copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >, COMDAT
; ___$ReturnUdt$ = eax

; 313  :   _STLP_DEBUG_CHECK(_STLP_PRIV __check_range(__first, __last))
; 314  :   return _STLP_PRIV __copy_backward_aux(__first, __last, __result, _BothPtrType< _InputIter, _OutputIter>::_Answer() );

	mov	ecx, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	push	esi
	mov	esi, eax
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	call	??$__copy_backward_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z ; stlp_std::priv::__copy_backward_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
	add	esp, 48					; 00000030H
	mov	eax, esi

; 315  : }

	pop	esi
	ret	0
??$copy_backward@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ENDP ; stlp_std::copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.c
_TEXT	ENDS
;	COMDAT ?_M_reallocate_map@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI_N@Z
_TEXT	SEGMENT
___new_num_nodes$ = -12					; size = 4
___new_map_size$121805 = -8				; size = 4
___new_map$121807 = -4					; size = 4
___nodes_to_add$ = 8					; size = 4
?_M_reallocate_map@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI_N@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reallocate_map, COMDAT
; _this$ = esi
; ___add_at_front$ = eax

; 765  :                                           bool __add_at_front) {

	sub	esp, 12					; 0000000cH

; 766  :   size_type __old_num_nodes = this->_M_finish._M_node - this->_M_start._M_node + 1;

	mov	ecx, DWORD PTR [esi+28]
	push	ebx
	push	ebp
	push	edi
	mov	bl, al
	mov	eax, DWORD PTR [esi+12]
	mov	edi, ecx
	sub	edi, eax

; 767  :   size_type __new_num_nodes = __old_num_nodes + __nodes_to_add;

	mov	eax, DWORD PTR ___nodes_to_add$[esp+20]
	sar	edi, 2
	add	edi, 1
	lea	edx, DWORD PTR [edi+eax]

; 768  : 
; 769  :   _Map_pointer __new_nstart;
; 770  :   if (this->_M_map_size._M_data > 2 * __new_num_nodes) {

	mov	eax, DWORD PTR [esi+36]
	lea	ebp, DWORD PTR [esi+36]
	mov	DWORD PTR ___new_num_nodes$[esp+24], edx
	add	edx, edx
	cmp	eax, edx
	jbe	SHORT $LN4@M_realloca

; 771  :     __new_nstart = this->_M_map._M_data + (this->_M_map_size._M_data - __new_num_nodes) / 2
; 772  :                      + (__add_at_front ? __nodes_to_add : 0);

	sub	eax, DWORD PTR ___new_num_nodes$[esp+24]
	mov	edx, DWORD PTR [esi+32]
	shr	eax, 1
	neg	bl
	sbb	ebx, ebx
	and	ebx, DWORD PTR ___nodes_to_add$[esp+20]
	add	eax, ebx
	lea	ebx, DWORD PTR [edx+eax*4]

; 773  :     if (__new_nstart < this->_M_start._M_node)

	mov	eax, DWORD PTR [esi+12]

; 774  :       copy(this->_M_start._M_node, this->_M_finish._M_node + 1, __new_nstart);

	sub	ecx, eax
	cmp	ebx, eax
	jae	SHORT $LN3@M_realloca
	add	ecx, 4
	je	$LN1@M_realloca
	push	ecx
	push	eax
	push	ebx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH

; 775  :     else

	jmp	$LN1@M_realloca
$LN3@M_realloca:

; 776  :       copy_backward(this->_M_start._M_node, this->_M_finish._M_node + 1,
; 777  :                     __new_nstart + __old_num_nodes);

	add	ecx, 4
	test	ecx, ecx
	jle	$LN1@M_realloca
	push	ecx
	push	eax
	lea	eax, DWORD PTR [edi*4]
	sub	eax, ecx
	add	eax, ebx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH

; 778  :   }
; 779  :   else {

	jmp	$LN1@M_realloca
$LN4@M_realloca:

; 780  :     size_type __new_map_size =
; 781  :       this->_M_map_size._M_data + (max)((size_t)this->_M_map_size._M_data, __nodes_to_add) + 2;

	lea	ecx, DWORD PTR ___nodes_to_add$[esp+20]
	push	ecx
	push	ebp
	call	??$max@I@stlp_std@@YAABIABI0@Z		; stlp_std::max<unsigned int>
	mov	edx, DWORD PTR [ebp]
	mov	eax, DWORD PTR [eax]
	lea	eax, DWORD PTR [edx+eax+2]

; 782  : 
; 783  :     _Map_pointer __new_map = this->_M_map.allocate(__new_map_size);

	lea	ecx, DWORD PTR [eax*4]
	add	esp, 8
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	DWORD PTR ___new_map_size$121805[esp+28], eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 784  :     __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
; 785  :                          + (__add_at_front ? __nodes_to_add : 0);

	mov	edx, DWORD PTR ___new_map_size$121805[esp+24]
	sub	edx, DWORD PTR ___new_num_nodes$[esp+24]

; 786  :     copy(this->_M_start._M_node, this->_M_finish._M_node + 1, __new_nstart);

	mov	ecx, DWORD PTR [esi+12]
	shr	edx, 1
	neg	bl
	mov	DWORD PTR ___new_map$121807[esp+24], eax
	sbb	ebx, ebx
	and	ebx, DWORD PTR ___nodes_to_add$[esp+20]
	add	edx, ebx
	lea	ebx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [esi+28]
	sub	eax, ecx
	add	eax, 4
	je	SHORT $LN63@M_realloca
	push	eax
	push	ecx
	push	ebx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
$LN63@M_realloca:

; 787  :     this->_M_map.deallocate(this->_M_map._M_data, this->_M_map_size._M_data);

	mov	eax, DWORD PTR [esi+32]
	test	eax, eax
	je	SHORT $LN67@M_realloca
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN67@M_realloca:

; 788  : 
; 789  :     this->_M_map._M_data = __new_map;

	mov	eax, DWORD PTR ___new_map$121807[esp+24]

; 790  :     this->_M_map_size._M_data = __new_map_size;

	mov	ecx, DWORD PTR ___new_map_size$121805[esp+24]
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [ebp], ecx
$LN1@M_realloca:

; 791  :   }
; 792  : 
; 793  :   this->_M_start._M_set_node(__new_nstart);

	mov	DWORD PTR [esi+12], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [esi+4], eax
	add	eax, 120				; 00000078H
	mov	DWORD PTR [esi+8], eax

; 794  :   this->_M_finish._M_set_node(__new_nstart + __old_num_nodes - 1);

	lea	eax, DWORD PTR [ebx+edi*4-4]
	mov	DWORD PTR [esi+28], eax
	mov	eax, DWORD PTR [eax]
	pop	edi
	mov	DWORD PTR [esi+20], eax
	add	eax, 120				; 00000078H
	pop	ebp
	mov	DWORD PTR [esi+24], eax
	pop	ebx

; 795  : }

	add	esp, 12					; 0000000cH
	ret	4
?_M_reallocate_map@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI_N@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reallocate_map
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_pop_front_aux@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXXZ
_TEXT	SEGMENT
?_M_pop_front_aux@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXXZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_pop_front_aux, COMDAT
; _this$ = esi

; 445  :   if (this->_M_start._M_cur != this->_M_start._M_last - 1)

	mov	ecx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [esi]
	sub	ecx, 12					; 0000000cH
	cmp	eax, ecx
	je	SHORT $LN2@M_pop_fron@2

; 446  :     ++this->_M_start._M_cur;

	add	eax, 12					; 0000000cH
	mov	DWORD PTR [esi], eax

; 451  :   }
; 452  : }

	ret	0
$LN2@M_pop_fron@2:

; 447  :   else {
; 448  :     this->_M_map_size.deallocate(this->_M_start._M_first, this->buffer_size());

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN9@M_pop_fron@2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN9@M_pop_fron@2:

; 449  :     this->_M_start._M_set_node(this->_M_start._M_node + 1);

	mov	eax, DWORD PTR [esi+12]
	add	eax, 4
	mov	DWORD PTR [esi+12], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi+4], eax

; 450  :     this->_M_start._M_cur = this->_M_start._M_first;

	mov	edx, DWORD PTR [esi+4]
	add	eax, 120				; 00000078H
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi], edx

; 451  :   }
; 452  : }

	ret	0
?_M_pop_front_aux@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXXZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_pop_front_aux
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_pop_back_aux@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXXZ
_TEXT	SEGMENT
?_M_pop_back_aux@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXXZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_pop_back_aux, COMDAT
; _this$ = esi

; 435  :   this->_M_map_size.deallocate(this->_M_finish._M_first, this->buffer_size());

	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN7@M_pop_back
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN7@M_pop_back:

; 436  :   this->_M_finish._M_set_node(this->_M_finish._M_node - 1);

	mov	eax, DWORD PTR [esi+28]
	sub	eax, 4
	mov	DWORD PTR [esi+28], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi+20], eax
	add	eax, 120				; 00000078H
	mov	DWORD PTR [esi+24], eax

; 437  :   this->_M_finish._M_cur = this->_M_finish._M_last - 1;

	sub	eax, 12					; 0000000cH
	mov	DWORD PTR [esi+16], eax

; 438  : }

	ret	0
?_M_pop_back_aux@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXXZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_pop_back_aux
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_destroy_nodes@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXPAPAUSMarker@CStatGraph@@0@Z
_TEXT	SEGMENT
?_M_destroy_nodes@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXPAPAUSMarker@CStatGraph@@0@Z PROC ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_destroy_nodes, COMDAT
; ___nstart$ = eax
; ___nfinish$ = edi

; 81   :                                                _Tp** __nfinish) {

	push	esi
	mov	esi, eax

; 82   :   for (_Tp** __n = __nstart; __n < __nfinish; ++__n)

	cmp	esi, edi
	jae	SHORT $LN1@M_destroy_
	push	ebx
	mov	ebx, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	npad	2
$LL3@M_destroy_:

; 83   :     _M_map_size.deallocate(*__n, this->buffer_size());

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@M_destroy_
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebx
$LN2@M_destroy_:
	add	esi, 4
	cmp	esi, edi
	jb	SHORT $LL3@M_destroy_
	pop	ebx
$LN1@M_destroy_:
	pop	esi

; 84   : }

	ret	0
?_M_destroy_nodes@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXPAPAUSMarker@CStatGraph@@0@Z ENDP ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_destroy_nodes
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_create_nodes@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXPAPAUSMarker@CStatGraph@@0@Z
_TEXT	SEGMENT
?_M_create_nodes@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXPAPAUSMarker@CStatGraph@@0@Z PROC ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_create_nodes, COMDAT
; ___nstart$ = eax
; ___nfinish$ = edi

; 70   :                                               _Tp** __nfinish) {

	push	esi
	mov	esi, eax

; 71   :   _Tp** __cur = __nstart;
; 72   :   _STLP_TRY {
; 73   :     for (; __cur < __nfinish; ++__cur)

	cmp	esi, edi
	jae	SHORT $LN1@M_create_n
	push	ebx
	mov	ebx, DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	npad	2
$LL3@M_create_n:

; 74   :       *__cur = _M_map_size.allocate(this->buffer_size());

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	120					; 00000078H
	call	ebx
	mov	DWORD PTR [esi], eax
	add	esi, 4
	cmp	esi, edi
	jb	SHORT $LL3@M_create_n
	pop	ebx
$LN1@M_create_n:
	pop	esi

; 75   :   }
; 76   :   _STLP_UNWIND(_M_destroy_nodes(__nstart, __cur))
; 77   : }

	ret	0
?_M_create_nodes@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXPAPAUSMarker@CStatGraph@@0@Z ENDP ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_create_nodes
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_reallocate_map@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI_N@Z
_TEXT	SEGMENT
___new_num_nodes$ = -12					; size = 4
___new_map_size$121610 = -8				; size = 4
___new_map$121612 = -4					; size = 4
___nodes_to_add$ = 8					; size = 4
?_M_reallocate_map@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI_N@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reallocate_map, COMDAT
; _this$ = esi
; ___add_at_front$ = eax

; 765  :                                           bool __add_at_front) {

	sub	esp, 12					; 0000000cH

; 766  :   size_type __old_num_nodes = this->_M_finish._M_node - this->_M_start._M_node + 1;

	mov	ecx, DWORD PTR [esi+28]
	push	ebx
	push	ebp
	push	edi
	mov	bl, al
	mov	eax, DWORD PTR [esi+12]
	mov	edi, ecx
	sub	edi, eax

; 767  :   size_type __new_num_nodes = __old_num_nodes + __nodes_to_add;

	mov	eax, DWORD PTR ___nodes_to_add$[esp+20]
	sar	edi, 2
	add	edi, 1
	lea	edx, DWORD PTR [edi+eax]

; 768  : 
; 769  :   _Map_pointer __new_nstart;
; 770  :   if (this->_M_map_size._M_data > 2 * __new_num_nodes) {

	mov	eax, DWORD PTR [esi+36]
	lea	ebp, DWORD PTR [esi+36]
	mov	DWORD PTR ___new_num_nodes$[esp+24], edx
	add	edx, edx
	cmp	eax, edx
	jbe	SHORT $LN4@M_realloca@2

; 771  :     __new_nstart = this->_M_map._M_data + (this->_M_map_size._M_data - __new_num_nodes) / 2
; 772  :                      + (__add_at_front ? __nodes_to_add : 0);

	sub	eax, DWORD PTR ___new_num_nodes$[esp+24]
	mov	edx, DWORD PTR [esi+32]
	shr	eax, 1
	neg	bl
	sbb	ebx, ebx
	and	ebx, DWORD PTR ___nodes_to_add$[esp+20]
	add	eax, ebx
	lea	ebx, DWORD PTR [edx+eax*4]

; 773  :     if (__new_nstart < this->_M_start._M_node)

	mov	eax, DWORD PTR [esi+12]

; 774  :       copy(this->_M_start._M_node, this->_M_finish._M_node + 1, __new_nstart);

	sub	ecx, eax
	cmp	ebx, eax
	jae	SHORT $LN3@M_realloca@2
	add	ecx, 4
	je	$LN1@M_realloca@2
	push	ecx
	push	eax
	push	ebx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH

; 775  :     else

	jmp	$LN1@M_realloca@2
$LN3@M_realloca@2:

; 776  :       copy_backward(this->_M_start._M_node, this->_M_finish._M_node + 1,
; 777  :                     __new_nstart + __old_num_nodes);

	add	ecx, 4
	test	ecx, ecx
	jle	$LN1@M_realloca@2
	push	ecx
	push	eax
	lea	eax, DWORD PTR [edi*4]
	sub	eax, ecx
	add	eax, ebx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH

; 778  :   }
; 779  :   else {

	jmp	$LN1@M_realloca@2
$LN4@M_realloca@2:

; 780  :     size_type __new_map_size =
; 781  :       this->_M_map_size._M_data + (max)((size_t)this->_M_map_size._M_data, __nodes_to_add) + 2;

	lea	ecx, DWORD PTR ___nodes_to_add$[esp+20]
	push	ecx
	push	ebp
	call	??$max@I@stlp_std@@YAABIABI0@Z		; stlp_std::max<unsigned int>
	mov	edx, DWORD PTR [ebp]
	mov	eax, DWORD PTR [eax]
	lea	eax, DWORD PTR [edx+eax+2]

; 782  : 
; 783  :     _Map_pointer __new_map = this->_M_map.allocate(__new_map_size);

	lea	ecx, DWORD PTR [eax*4]
	add	esp, 8
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	DWORD PTR ___new_map_size$121610[esp+28], eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 784  :     __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
; 785  :                          + (__add_at_front ? __nodes_to_add : 0);

	mov	edx, DWORD PTR ___new_map_size$121610[esp+24]
	sub	edx, DWORD PTR ___new_num_nodes$[esp+24]

; 786  :     copy(this->_M_start._M_node, this->_M_finish._M_node + 1, __new_nstart);

	mov	ecx, DWORD PTR [esi+12]
	shr	edx, 1
	neg	bl
	mov	DWORD PTR ___new_map$121612[esp+24], eax
	sbb	ebx, ebx
	and	ebx, DWORD PTR ___nodes_to_add$[esp+20]
	add	edx, ebx
	lea	ebx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR [esi+28]
	sub	eax, ecx
	add	eax, 4
	je	SHORT $LN63@M_realloca@2
	push	eax
	push	ecx
	push	ebx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
$LN63@M_realloca@2:

; 787  :     this->_M_map.deallocate(this->_M_map._M_data, this->_M_map_size._M_data);

	mov	eax, DWORD PTR [esi+32]
	test	eax, eax
	je	SHORT $LN67@M_realloca@2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN67@M_realloca@2:

; 788  : 
; 789  :     this->_M_map._M_data = __new_map;

	mov	eax, DWORD PTR ___new_map$121612[esp+24]

; 790  :     this->_M_map_size._M_data = __new_map_size;

	mov	ecx, DWORD PTR ___new_map_size$121610[esp+24]
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [ebp], ecx
$LN1@M_realloca@2:

; 791  :   }
; 792  : 
; 793  :   this->_M_start._M_set_node(__new_nstart);

	mov	DWORD PTR [esi+12], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [esi+4], eax
	add	eax, 128				; 00000080H
	mov	DWORD PTR [esi+8], eax

; 794  :   this->_M_finish._M_set_node(__new_nstart + __old_num_nodes - 1);

	lea	eax, DWORD PTR [ebx+edi*4-4]
	mov	DWORD PTR [esi+28], eax
	mov	eax, DWORD PTR [eax]
	pop	edi
	mov	DWORD PTR [esi+20], eax
	add	eax, 128				; 00000080H
	pop	ebp
	mov	DWORD PTR [esi+24], eax
	pop	ebx

; 795  : }

	add	esp, 12					; 0000000cH
	ret	4
?_M_reallocate_map@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI_N@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reallocate_map
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_destroy_nodes@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXPAPAUSElement@CStatGraph@@0@Z
_TEXT	SEGMENT
?_M_destroy_nodes@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXPAPAUSElement@CStatGraph@@0@Z PROC ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_destroy_nodes, COMDAT
; ___nstart$ = eax
; ___nfinish$ = edi

; 81   :                                                _Tp** __nfinish) {

	push	esi
	mov	esi, eax

; 82   :   for (_Tp** __n = __nstart; __n < __nfinish; ++__n)

	cmp	esi, edi
	jae	SHORT $LN1@M_destroy_@2
	push	ebx
	mov	ebx, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	npad	2
$LL3@M_destroy_@2:

; 83   :     _M_map_size.deallocate(*__n, this->buffer_size());

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@M_destroy_@2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebx
$LN2@M_destroy_@2:
	add	esi, 4
	cmp	esi, edi
	jb	SHORT $LL3@M_destroy_@2
	pop	ebx
$LN1@M_destroy_@2:
	pop	esi

; 84   : }

	ret	0
?_M_destroy_nodes@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXPAPAUSElement@CStatGraph@@0@Z ENDP ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_destroy_nodes
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_create_nodes@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXPAPAUSElement@CStatGraph@@0@Z
_TEXT	SEGMENT
?_M_create_nodes@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXPAPAUSElement@CStatGraph@@0@Z PROC ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_create_nodes, COMDAT
; ___nstart$ = eax
; ___nfinish$ = edi

; 70   :                                               _Tp** __nfinish) {

	push	esi
	mov	esi, eax

; 71   :   _Tp** __cur = __nstart;
; 72   :   _STLP_TRY {
; 73   :     for (; __cur < __nfinish; ++__cur)

	cmp	esi, edi
	jae	SHORT $LN1@M_create_n@2
	push	ebx
	mov	ebx, DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	npad	2
$LL3@M_create_n@2:

; 74   :       *__cur = _M_map_size.allocate(this->buffer_size());

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	128					; 00000080H
	call	ebx
	mov	DWORD PTR [esi], eax
	add	esi, 4
	cmp	esi, edi
	jb	SHORT $LL3@M_create_n@2
	pop	ebx
$LN1@M_create_n@2:
	pop	esi

; 75   :   }
; 76   :   _STLP_UNWIND(_M_destroy_nodes(__nstart, __cur))
; 77   : }

	ret	0
?_M_create_nodes@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXPAPAUSElement@CStatGraph@@0@Z ENDP ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_create_nodes
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ?get_allocator@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QBE?AV?$xalloc@USElement@CStatGraph@@@@XZ
_TEXT	SEGMENT
?get_allocator@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QBE?AV?$xalloc@USElement@CStatGraph@@@@XZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::get_allocator, COMDAT
; ___$ReturnUdt$ = eax

; 477  :   allocator_type get_allocator() const { return this->_M_map_size; }

	ret	0
?get_allocator@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QBE?AV?$xalloc@USElement@CStatGraph@@@@XZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::get_allocator
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QBE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@23@XZ
_TEXT	SEGMENT
?end@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QBE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@23@XZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::end, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 438  :   const_iterator end() const { return const_iterator(this->_M_finish); }

	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+24]
	mov	ecx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ecx
	ret	0
?end@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QBE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@23@XZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QBE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@23@XZ
_TEXT	SEGMENT
?begin@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QBE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@23@XZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::begin, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 437  :   const_iterator begin() const { return const_iterator(this->_M_start); }

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ecx
	ret	0
?begin@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QBE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@23@XZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::begin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Y?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z
_TEXT	SEGMENT
??Y?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::operator+=, COMDAT
; _this$ = eax
; ___n$ = ebx

; 208  :   _Self& operator+=(difference_type __n) { this->_M_advance(__n); return *this; }

	push	esi
	mov	esi, eax
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
	mov	eax, esi
	pop	esi
	ret	0
??Y?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_increment@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?_M_increment@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXXZ PROC ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_increment, COMDAT
; _this$ = eax

; 126  :     if (++_M_cur == _M_last) {

	add	DWORD PTR [eax], 12			; 0000000cH
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@M_incremen@2

; 127  :       _M_set_node(_M_node + 1);

	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 4
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	add	ecx, 120				; 00000078H
	mov	DWORD PTR [eax+8], ecx

; 128  :       _M_cur = _M_first;

	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [eax], ecx
$LN1@M_incremen@2:

; 129  :     }
; 130  :   }

	ret	0
?_M_increment@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXXZ ENDP ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_increment
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??H?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z
_TEXT	SEGMENT
___tmp$ = -20						; size = 16
??H?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::operator+, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = edi
; ___n$ = ebx

; 209  :   _Self operator+(difference_type __n) const {

	sub	esp, 24					; 00000018H

; 210  :     _Self __tmp = *this;

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ___tmp$[esp+24], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR ___tmp$[esp+28], edx
	mov	edx, DWORD PTR [eax+12]
	push	esi

; 211  :     return __tmp += __n;

	lea	esi, DWORD PTR ___tmp$[esp+28]
	mov	DWORD PTR ___tmp$[esp+36], ecx
	mov	DWORD PTR ___tmp$[esp+40], edx
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
	mov	eax, DWORD PTR ___tmp$[esp+28]
	mov	ecx, DWORD PTR ___tmp$[esp+32]
	mov	edx, DWORD PTR ___tmp$[esp+36]
	mov	DWORD PTR [edi], eax
	mov	eax, DWORD PTR ___tmp$[esp+40]
	mov	DWORD PTR [edi+4], ecx
	mov	DWORD PTR [edi+8], edx
	mov	DWORD PTR [edi+12], eax
	mov	eax, edi

; 212  :   }

	pop	esi
	add	esp, 24					; 00000018H
	ret	0
??H?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::operator+
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??E?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ
_TEXT	SEGMENT
??E?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator++, COMDAT
; _this$ = eax

; 194  :   _Self& operator++() { this->_M_increment(); return *this; }

	add	DWORD PTR [eax], 12			; 0000000cH
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@operator@19
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 4
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	add	ecx, 120				; 00000078H
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [eax], ecx
$LN3@operator@19:
	ret	0
??E?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator++
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_reserve_map_at_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z
_TEXT	SEGMENT
?_M_reserve_map_at_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reserve_map_at_back, COMDAT
; _this$ = ecx
; ___nodes_to_add$ = eax

; 1042 :   void _M_reserve_map_at_back (size_type __nodes_to_add = 1) {

	push	esi
	mov	esi, ecx

; 1043 :     if (__nodes_to_add + 1 > this->_M_map_size._M_data - (this->_M_finish._M_node - this->_M_map._M_data))

	mov	ecx, DWORD PTR [esi+28]
	sub	ecx, DWORD PTR [esi+32]
	mov	edx, DWORD PTR [esi+36]
	sar	ecx, 2
	sub	edx, ecx
	lea	ecx, DWORD PTR [eax+1]
	cmp	ecx, edx
	jbe	SHORT $LN1@M_reserve_

; 1044 :       _M_reallocate_map(__nodes_to_add, false);

	push	eax
	xor	al, al
	call	?_M_reallocate_map@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI_N@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reallocate_map
$LN1@M_reserve_:
	pop	esi

; 1045 :   }

	ret	0
?_M_reserve_map_at_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reserve_map_at_back
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?pop_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?pop_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXXZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::pop_front, COMDAT
; _this$ = esi

; 717  :     _STLP_STD::_Destroy(this->_M_start._M_cur);
; 718  :     _M_pop_front_aux();

	mov	ecx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [esi]
	sub	ecx, 12					; 0000000cH
	cmp	eax, ecx
	je	SHORT $LN4@pop_front@3
	add	eax, 12					; 0000000cH
	mov	DWORD PTR [esi], eax

; 719  :   }

	ret	0

; 717  :     _STLP_STD::_Destroy(this->_M_start._M_cur);
; 718  :     _M_pop_front_aux();

$LN4@pop_front@3:
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN11@pop_front@3
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN11@pop_front@3:
	mov	eax, DWORD PTR [esi+12]
	add	eax, 4
	mov	DWORD PTR [esi+12], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi+4], eax
	mov	edx, DWORD PTR [esi+4]
	add	eax, 120				; 00000078H
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi], edx

; 719  :   }

	ret	0
?pop_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXXZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::pop_front
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?pop_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXXZ
_TEXT	SEGMENT
?pop_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXXZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::pop_back, COMDAT
; _this$ = esi

; 706  :     if (this->_M_finish._M_cur != this->_M_finish._M_first) {

	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [esi+20]
	cmp	eax, ecx
	je	SHORT $LN2@pop_back

; 707  :       --this->_M_finish._M_cur;

	add	eax, -12				; fffffff4H

; 708  :       _STLP_STD::_Destroy(this->_M_finish._M_cur);
; 709  :     }
; 710  :     else {
; 711  :       _M_pop_back_aux();

	mov	DWORD PTR [esi+16], eax

; 712  :       _STLP_STD::_Destroy(this->_M_finish._M_cur);
; 713  :     }
; 714  :   }

	ret	0
$LN2@pop_back:

; 708  :       _STLP_STD::_Destroy(this->_M_finish._M_cur);
; 709  :     }
; 710  :     else {
; 711  :       _M_pop_back_aux();

	test	ecx, ecx
	je	SHORT $LN11@pop_back
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN11@pop_back:
	mov	eax, DWORD PTR [esi+28]
	sub	eax, 4
	mov	DWORD PTR [esi+28], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi+20], eax
	add	eax, 120				; 00000078H
	mov	DWORD PTR [esi+24], eax
	sub	eax, 12					; 0000000cH
	mov	DWORD PTR [esi+16], eax

; 712  :       _STLP_STD::_Destroy(this->_M_finish._M_cur);
; 713  :     }
; 714  :   }

	ret	0
?pop_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXXZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::pop_back
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_reserve_map_at_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z
_TEXT	SEGMENT
?_M_reserve_map_at_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reserve_map_at_back, COMDAT
; _this$ = ecx
; ___nodes_to_add$ = eax

; 1042 :   void _M_reserve_map_at_back (size_type __nodes_to_add = 1) {

	push	esi
	mov	esi, ecx

; 1043 :     if (__nodes_to_add + 1 > this->_M_map_size._M_data - (this->_M_finish._M_node - this->_M_map._M_data))

	mov	ecx, DWORD PTR [esi+28]
	sub	ecx, DWORD PTR [esi+32]
	mov	edx, DWORD PTR [esi+36]
	sar	ecx, 2
	sub	edx, ecx
	lea	ecx, DWORD PTR [eax+1]
	cmp	ecx, edx
	jbe	SHORT $LN1@M_reserve_@2

; 1044 :       _M_reallocate_map(__nodes_to_add, false);

	push	eax
	xor	al, al
	call	?_M_reallocate_map@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI_N@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reallocate_map
$LN1@M_reserve_@2:
	pop	esi

; 1045 :   }

	ret	0
?_M_reserve_map_at_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reserve_map_at_back
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$_Copy_Construct@USMarker@CStatGraph@@@stlp_std@@YAXPAUSMarker@CStatGraph@@ABU12@@Z
_TEXT	SEGMENT
??$_Copy_Construct@USMarker@CStatGraph@@@stlp_std@@YAXPAUSMarker@CStatGraph@@ABU12@@Z PROC ; stlp_std::_Copy_Construct<CStatGraph::SMarker>, COMDAT
; ___p$ = eax
; ___val$ = ecx

; 110  : #if defined (_STLP_DEBUG_UNINITIALIZED)
; 111  :   memset((char*)__p, _STLP_SHRED_BYTE, sizeof(_Tp));
; 112  : #endif
; 113  :   _STLP_PLACEMENT_NEW (__p) _Tp(__val);

	test	eax, eax
	je	SHORT $LN3@Copy_Const@2
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx
$LN3@Copy_Const@2:

; 114  : }

	ret	0
??$_Copy_Construct@USMarker@CStatGraph@@@stlp_std@@YAXPAUSMarker@CStatGraph@@ABU12@@Z ENDP ; stlp_std::_Copy_Construct<CStatGraph::SMarker>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Copy_Construct@USElement@CStatGraph@@@stlp_std@@YAXPAUSElement@CStatGraph@@ABU12@@Z
_TEXT	SEGMENT
??$_Copy_Construct@USElement@CStatGraph@@@stlp_std@@YAXPAUSElement@CStatGraph@@ABU12@@Z PROC ; stlp_std::_Copy_Construct<CStatGraph::SElement>, COMDAT
; ___p$ = eax
; ___val$ = ecx

; 110  : #if defined (_STLP_DEBUG_UNINITIALIZED)
; 111  :   memset((char*)__p, _STLP_SHRED_BYTE, sizeof(_Tp));
; 112  : #endif
; 113  :   _STLP_PLACEMENT_NEW (__p) _Tp(__val);

	test	eax, eax
	je	SHORT $LN3@Copy_Const@3
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN3@Copy_Const@3:

; 114  : }

	ret	0
??$_Copy_Construct@USElement@CStatGraph@@@stlp_std@@YAXPAUSElement@CStatGraph@@ABU12@@Z ENDP ; stlp_std::_Copy_Construct<CStatGraph::SElement>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy_Range@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
??$_Destroy_Range@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0@Z PROC ; stlp_std::_Destroy_Range<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >, COMDAT

; 181  :   __destroy_range(__first, __last, _STLP_VALUE_TYPE(__first, _ForwardIterator));
; 182  : }

	ret	0
??$_Destroy_Range@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0@Z ENDP ; stlp_std::_Destroy_Range<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Destroy_Range@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
??$_Destroy_Range@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0@Z PROC ; stlp_std::_Destroy_Range<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >, COMDAT

; 181  :   __destroy_range(__first, __last, _STLP_VALUE_TYPE(__first, _ForwardIterator));
; 182  : }

	ret	0
??$_Destroy_Range@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0@Z ENDP ; stlp_std::_Destroy_Range<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.c
_TEXT	ENDS
;	COMDAT ?_M_push_back_aux_v@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXABUSMarker@CStatGraph@@@Z
_TEXT	SEGMENT
?_M_push_back_aux_v@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXABUSMarker@CStatGraph@@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_push_back_aux_v, COMDAT
; _this$ = eax
; ___t$ = edi

; 373  : void deque<_Tp,_Alloc>::_M_push_back_aux_v(const value_type& __t) {

	push	esi
	mov	esi, eax

; 374  :   _M_reserve_map_at_back();

	mov	eax, DWORD PTR [esi+28]
	sub	eax, DWORD PTR [esi+32]
	mov	ecx, DWORD PTR [esi+36]
	sar	eax, 2
	sub	ecx, eax
	cmp	ecx, 2
	jae	SHORT $LN3@M_push_bac
	push	1
	xor	al, al
	call	?_M_reallocate_map@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI_N@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reallocate_map
$LN3@M_push_bac:

; 375  :   *(this->_M_finish._M_node + 1) = this->_M_map_size.allocate(this->buffer_size());

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	120					; 00000078H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR [edx+4], eax

; 376  :   _STLP_TRY {
; 377  :     _Copy_Construct(this->_M_finish._M_cur, __t);

	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN16@M_push_bac
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [edi+8]
	mov	DWORD PTR [eax+8], ecx
$LN16@M_push_bac:

; 378  :     this->_M_finish._M_set_node(this->_M_finish._M_node + 1);

	mov	eax, DWORD PTR [esi+28]
	add	eax, 4
	mov	DWORD PTR [esi+28], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi+20], eax
	add	eax, 120				; 00000078H
	mov	DWORD PTR [esi+24], eax

; 379  :     this->_M_finish._M_cur = this->_M_finish._M_first;

	mov	edx, DWORD PTR [esi+20]
	mov	DWORD PTR [esi+16], edx
	pop	esi

; 380  :   }
; 381  :   _STLP_UNWIND(this->_M_map_size.deallocate(*(this->_M_finish._M_node + 1),
; 382  :                                             this->buffer_size()))
; 383  : }

	ret	0
?_M_push_back_aux_v@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXABUSMarker@CStatGraph@@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_push_back_aux_v
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_initialize_map@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z
_TEXT	SEGMENT
___nfinish$ = -8					; size = 4
$T231604 = -8						; size = 4
$T231605 = -4						; size = 4
___num_elements$ = 8					; size = 4
?_M_initialize_map@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z PROC ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_initialize_map, COMDAT
; _this$ = esi

; 48   : void _Deque_base<_Tp,_Alloc>::_M_initialize_map(size_t __num_elements) {

	sub	esp, 8

; 49   :   size_t __num_nodes = __num_elements / this->buffer_size() + 1 ;

	mov	eax, -858993459				; cccccccdH
	mul	DWORD PTR ___num_elements$[esp+4]
	push	ebx
	push	ebp
	push	edi
	mov	edi, edx
	shr	edi, 3

; 50   : 
; 51   :   _M_map_size._M_data = (max)((size_t) _S_initial_map_size, __num_nodes + 2);

	lea	ecx, DWORD PTR $T231604[esp+20]
	lea	ebp, DWORD PTR [edi+1]
	push	ecx
	lea	edx, DWORD PTR $T231605[esp+24]
	lea	eax, DWORD PTR [ebp+2]
	push	edx
	mov	DWORD PTR $T231604[esp+28], eax
	mov	DWORD PTR $T231605[esp+28], 8
	call	??$max@I@stlp_std@@YAABIABI0@Z		; stlp_std::max<unsigned int>
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi+36], eax

; 52   :   _M_map._M_data = _M_map.allocate(_M_map_size._M_data);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	add	eax, eax
	add	esp, 8
	add	eax, eax
	push	eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 53   : 
; 54   :   _Tp** __nstart = _M_map._M_data + (_M_map_size._M_data - __num_nodes) / 2;

	mov	ecx, DWORD PTR [esi+36]
	sub	ecx, ebp
	shr	ecx, 1
	lea	ebx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR [esi+32], eax

; 55   :   _Tp** __nfinish = __nstart + __num_nodes;

	lea	eax, DWORD PTR [ebx+ebp*4]

; 56   : 
; 57   :   _STLP_TRY {
; 58   :     _M_create_nodes(__nstart, __nfinish);

	cmp	ebx, eax
	mov	DWORD PTR ___nfinish$[esp+20], eax
	mov	ebp, ebx
	jae	SHORT $LN15@M_initiali
	npad	8
$LL17@M_initiali:
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	120					; 00000078H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	mov	DWORD PTR [ebp], eax
	add	ebp, 4
	cmp	ebp, DWORD PTR ___nfinish$[esp+20]
	jb	SHORT $LL17@M_initiali
	mov	eax, DWORD PTR ___nfinish$[esp+20]
$LN15@M_initiali:

; 59   :   }
; 60   :   _STLP_UNWIND((_M_map.deallocate(_M_map._M_data, _M_map_size._M_data),
; 61   :                 _M_map._M_data = 0, _M_map_size._M_data = 0))
; 62   :   _M_start._M_set_node(__nstart);

	mov	DWORD PTR [esi+12], ebx
	mov	ebx, DWORD PTR [ebx]
	mov	DWORD PTR [esi+4], ebx

; 63   :   this->_M_finish._M_set_node(__nfinish - 1);

	add	eax, -4					; fffffffcH
	add	ebx, 120				; 00000078H
	mov	DWORD PTR [esi+8], ebx
	mov	DWORD PTR [esi+28], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi+20], eax
	add	eax, 120				; 00000078H
	mov	DWORD PTR [esi+24], eax

; 64   :   _M_start._M_cur = _M_start._M_first;

	mov	edx, DWORD PTR [esi+4]

; 65   :   this->_M_finish._M_cur = this->_M_finish._M_first + __num_elements % this->buffer_size();

	lea	eax, DWORD PTR [edi+edi*4]
	add	eax, eax
	mov	ecx, eax
	mov	eax, DWORD PTR ___num_elements$[esp+16]
	sub	eax, ecx
	mov	DWORD PTR [esi], edx
	lea	edx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR [esi+20]
	pop	edi
	lea	ecx, DWORD PTR [eax+edx*4]
	pop	ebp
	mov	DWORD PTR [esi+16], ecx
	pop	ebx

; 66   : }

	add	esp, 8
	ret	4
?_M_initialize_map@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ENDP ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_initialize_map
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@XZ PROC ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::~_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >, COMDAT
; _this$ = ebx

; 41   :   if (_M_map._M_data) {

	cmp	DWORD PTR [ebx+32], 0
	je	SHORT $LN18@Deque_base
	push	ebp

; 42   :     _M_destroy_nodes(_M_start._M_node, this->_M_finish._M_node + 1);

	mov	ebp, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	push	esi
	mov	esi, DWORD PTR [ebx+12]
	push	edi
	mov	edi, DWORD PTR [ebx+28]
	add	edi, 4
	cmp	esi, edi
	jae	SHORT $LN4@Deque_base
	npad	4
$LL23@Deque_base:
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN5@Deque_base
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebp
$LN5@Deque_base:
	add	esi, 4
	cmp	esi, edi
	jb	SHORT $LL23@Deque_base
$LN4@Deque_base:

; 43   :     _M_map.deallocate(_M_map._M_data, _M_map_size._M_data);

	mov	eax, DWORD PTR [ebx+32]
	test	eax, eax
	je	SHORT $LN24@Deque_base
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebp
$LN24@Deque_base:
	pop	edi
	pop	esi
	pop	ebp
$LN18@Deque_base:

; 44   :   }
; 45   : }

	ret	0
??1?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ENDP ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::~_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_push_back_aux_v@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXABUSElement@CStatGraph@@@Z
_TEXT	SEGMENT
?_M_push_back_aux_v@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXABUSElement@CStatGraph@@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_push_back_aux_v, COMDAT
; _this$ = eax
; ___t$ = edi

; 373  : void deque<_Tp,_Alloc>::_M_push_back_aux_v(const value_type& __t) {

	push	esi
	mov	esi, eax

; 374  :   _M_reserve_map_at_back();

	mov	eax, DWORD PTR [esi+28]
	sub	eax, DWORD PTR [esi+32]
	mov	ecx, DWORD PTR [esi+36]
	sar	eax, 2
	sub	ecx, eax
	cmp	ecx, 2
	jae	SHORT $LN3@M_push_bac@2
	push	1
	xor	al, al
	call	?_M_reallocate_map@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI_N@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reallocate_map
$LN3@M_push_bac@2:

; 375  :   *(this->_M_finish._M_node + 1) = this->_M_map_size.allocate(this->buffer_size());

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	128					; 00000080H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR [edx+4], eax

; 376  :   _STLP_TRY {
; 377  :     _Copy_Construct(this->_M_finish._M_cur, __t);

	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN16@M_push_bac@2
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], edx
$LN16@M_push_bac@2:

; 378  :     this->_M_finish._M_set_node(this->_M_finish._M_node + 1);

	mov	eax, DWORD PTR [esi+28]
	add	eax, 4
	mov	DWORD PTR [esi+28], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi+20], eax
	add	eax, 128				; 00000080H
	mov	DWORD PTR [esi+24], eax

; 379  :     this->_M_finish._M_cur = this->_M_finish._M_first;

	mov	eax, DWORD PTR [esi+20]
	mov	DWORD PTR [esi+16], eax
	pop	esi

; 380  :   }
; 381  :   _STLP_UNWIND(this->_M_map_size.deallocate(*(this->_M_finish._M_node + 1),
; 382  :                                             this->buffer_size()))
; 383  : }

	ret	0
?_M_push_back_aux_v@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXABUSElement@CStatGraph@@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_push_back_aux_v
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_initialize_map@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z
_TEXT	SEGMENT
$T231773 = -8						; size = 4
$T231774 = -4						; size = 4
___num_elements$ = 8					; size = 4
?_M_initialize_map@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z PROC ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_initialize_map, COMDAT
; _this$ = esi

; 48   : void _Deque_base<_Tp,_Alloc>::_M_initialize_map(size_t __num_elements) {

	sub	esp, 8
	push	ebx
	push	ebp
	push	edi

; 49   :   size_t __num_nodes = __num_elements / this->buffer_size() + 1 ;

	mov	edi, DWORD PTR ___num_elements$[esp+16]
	shr	edi, 4

; 50   : 
; 51   :   _M_map_size._M_data = (max)((size_t) _S_initial_map_size, __num_nodes + 2);

	lea	ecx, DWORD PTR $T231773[esp+20]
	add	edi, 1
	push	ecx
	lea	edx, DWORD PTR $T231774[esp+24]
	lea	eax, DWORD PTR [edi+2]
	push	edx
	mov	DWORD PTR $T231773[esp+28], eax
	mov	DWORD PTR $T231774[esp+28], 8
	call	??$max@I@stlp_std@@YAABIABI0@Z		; stlp_std::max<unsigned int>
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi+36], eax

; 52   :   _M_map._M_data = _M_map.allocate(_M_map_size._M_data);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	add	eax, eax
	add	esp, 8
	add	eax, eax
	push	eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 53   : 
; 54   :   _Tp** __nstart = _M_map._M_data + (_M_map_size._M_data - __num_nodes) / 2;

	mov	ecx, DWORD PTR [esi+36]
	sub	ecx, edi
	shr	ecx, 1
	lea	ebx, DWORD PTR [eax+ecx*4]

; 55   :   _Tp** __nfinish = __nstart + __num_nodes;

	lea	ebp, DWORD PTR [ebx+edi*4]

; 56   : 
; 57   :   _STLP_TRY {
; 58   :     _M_create_nodes(__nstart, __nfinish);

	cmp	ebx, ebp
	mov	DWORD PTR [esi+32], eax
	mov	edi, ebx
	jae	SHORT $LN15@M_initiali@2
	npad	3
$LL17@M_initiali@2:
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	128					; 00000080H
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	mov	DWORD PTR [edi], eax
	add	edi, 4
	cmp	edi, ebp
	jb	SHORT $LL17@M_initiali@2
$LN15@M_initiali@2:

; 59   :   }
; 60   :   _STLP_UNWIND((_M_map.deallocate(_M_map._M_data, _M_map_size._M_data),
; 61   :                 _M_map._M_data = 0, _M_map_size._M_data = 0))
; 62   :   _M_start._M_set_node(__nstart);
; 63   :   this->_M_finish._M_set_node(__nfinish - 1);
; 64   :   _M_start._M_cur = _M_start._M_first;
; 65   :   this->_M_finish._M_cur = this->_M_finish._M_first + __num_elements % this->buffer_size();

	mov	eax, DWORD PTR ___num_elements$[esp+16]
	mov	DWORD PTR [esi+12], ebx
	mov	ebx, DWORD PTR [ebx]
	mov	DWORD PTR [esi+4], ebx
	add	ebp, -4					; fffffffcH
	add	ebx, 128				; 00000080H
	mov	DWORD PTR [esi+8], ebx
	mov	DWORD PTR [esi+28], ebp
	mov	ebp, DWORD PTR [ebp]
	mov	DWORD PTR [esi+20], ebp
	add	ebp, 128				; 00000080H
	mov	DWORD PTR [esi+24], ebp
	mov	edx, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+20]
	pop	edi
	and	eax, 15					; 0000000fH
	mov	DWORD PTR [esi], edx
	lea	edx, DWORD PTR [ecx+eax*8]
	pop	ebp
	mov	DWORD PTR [esi+16], edx
	pop	ebx

; 66   : }

	add	esp, 8
	ret	4
?_M_initialize_map@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ENDP ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_initialize_map
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@XZ PROC ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >, COMDAT
; _this$ = ebx

; 41   :   if (_M_map._M_data) {

	cmp	DWORD PTR [ebx+32], 0
	je	SHORT $LN18@Deque_base@2
	push	ebp

; 42   :     _M_destroy_nodes(_M_start._M_node, this->_M_finish._M_node + 1);

	mov	ebp, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	push	esi
	mov	esi, DWORD PTR [ebx+12]
	push	edi
	mov	edi, DWORD PTR [ebx+28]
	add	edi, 4
	cmp	esi, edi
	jae	SHORT $LN4@Deque_base@2
	npad	4
$LL23@Deque_base@2:
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN5@Deque_base@2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebp
$LN5@Deque_base@2:
	add	esi, 4
	cmp	esi, edi
	jb	SHORT $LL23@Deque_base@2
$LN4@Deque_base@2:

; 43   :     _M_map.deallocate(_M_map._M_data, _M_map_size._M_data);

	mov	eax, DWORD PTR [ebx+32]
	test	eax, eax
	je	SHORT $LN24@Deque_base@2
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebp
$LN24@Deque_base@2:
	pop	edi
	pop	esi
	pop	ebp
$LN18@Deque_base@2:

; 44   :   }
; 45   : }

	ret	0
??1?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ENDP ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_alloc.h
_TEXT	ENDS
;	COMDAT ??0?$_STLP_alloc_proxy@IUSMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@I@Z
_TEXT	SEGMENT
??0?$_STLP_alloc_proxy@IUSMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@I@Z PROC ; stlp_std::priv::_STLP_alloc_proxy<unsigned int,CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_STLP_alloc_proxy<unsigned int,CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >, COMDAT
; _this$ = eax

; 571  :     _MaybeReboundAlloc(__a), _M_data(__p) {}

	mov	DWORD PTR [eax], 0
	ret	0
??0?$_STLP_alloc_proxy@IUSMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@I@Z ENDP ; stlp_std::priv::_STLP_alloc_proxy<unsigned int,CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_STLP_alloc_proxy<unsigned int,CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_STLP_alloc_proxy@PAUSSubGraph@CStatGraph@@U12@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USSubGraph@CStatGraph@@@@PAUSSubGraph@CStatGraph@@@Z
_TEXT	SEGMENT
??0?$_STLP_alloc_proxy@PAUSSubGraph@CStatGraph@@U12@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USSubGraph@CStatGraph@@@@PAUSSubGraph@CStatGraph@@@Z PROC ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_STLP_alloc_proxy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >, COMDAT
; _this$ = eax

; 571  :     _MaybeReboundAlloc(__a), _M_data(__p) {}

	mov	DWORD PTR [eax], 0
	ret	0
??0?$_STLP_alloc_proxy@PAUSSubGraph@CStatGraph@@U12@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USSubGraph@CStatGraph@@@@PAUSSubGraph@CStatGraph@@@Z ENDP ; stlp_std::priv::_STLP_alloc_proxy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_STLP_alloc_proxy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ??0?$_Vector_base@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USSubGraph@CStatGraph@@@@@Z
_TEXT	SEGMENT
??0?$_Vector_base@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USSubGraph@CStatGraph@@@@@Z PROC ; stlp_std::priv::_Vector_base<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_Vector_base<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >, COMDAT
; _this$ = eax

; 67   :     : _M_start(0), _M_finish(0), _M_end_of_storage(__a, 0) {}

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$_Vector_base@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USSubGraph@CStatGraph@@@@@Z ENDP ; stlp_std::priv::_Vector_base<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_Vector_base<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??A?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEAAUSMarker@CStatGraph@@H@Z
_TEXT	SEGMENT
___tmp$231939 = -16					; size = 16
??A?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEAAUSMarker@CStatGraph@@H@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator[], COMDAT
; _this$ = eax
; ___n$ = ebx

; 220  :   reference operator[](difference_type __n) const { return *(*this + __n); }

	sub	esp, 16					; 00000010H
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ___tmp$231939[esp+16], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR ___tmp$231939[esp+20], edx
	mov	edx, DWORD PTR [eax+12]
	push	esi
	lea	esi, DWORD PTR ___tmp$231939[esp+20]
	mov	DWORD PTR ___tmp$231939[esp+28], ecx
	mov	DWORD PTR ___tmp$231939[esp+32], edx
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
	mov	eax, DWORD PTR ___tmp$231939[esp+20]
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
??A?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBEAAUSMarker@CStatGraph@@H@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator[]
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@I@Z
_TEXT	SEGMENT
___num_elements$ = 8					; size = 4
??0?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@I@Z PROC ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >, COMDAT
; _this$ = eax

; 359  :   { _M_initialize_map(__num_elements); }

	push	esi
	mov	esi, eax
	xor	eax, eax
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], eax
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], eax
	mov	eax, DWORD PTR ___num_elements$[esp]
	push	eax
	call	?_M_initialize_map@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_initialize_map
	mov	eax, esi
	pop	esi
	ret	4
??0?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@I@Z ENDP ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ??0?$_Vector_base@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@IABV?$xalloc@USSubGraph@CStatGraph@@@@@Z
_TEXT	SEGMENT
??0?$_Vector_base@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@IABV?$xalloc@USSubGraph@CStatGraph@@@@@Z PROC ; stlp_std::priv::_Vector_base<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_Vector_base<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >, COMDAT
; _this$ = esi
; ___n$ = ecx

; 70   :     : _M_start(0), _M_finish(0), _M_end_of_storage(__a, 0) {

	push	edi

; 71   :     _M_start = _M_end_of_storage.allocate(__n, __n);

	mov	edi, ecx
	imul	edi, 44					; 0000002cH
	xor	eax, eax
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 72   :     _M_finish = _M_start;
; 73   :     _M_end_of_storage._M_data = _M_start + __n;

	add	edi, eax
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], edi

; 74   :     _STLP_MPWFIX_TRY _STLP_MPWFIX_CATCH
; 75   :   }

	mov	eax, esi
	pop	edi
	ret	0
??0?$_Vector_base@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@IABV?$xalloc@USSubGraph@CStatGraph@@@@@Z ENDP ; stlp_std::priv::_Vector_base<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_Vector_base<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USSubGraph@CStatGraph@@@@@Z
_TEXT	SEGMENT
??0?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USSubGraph@CStatGraph@@@@@Z PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >, COMDAT
; _this$ = eax

; 208  :     : _STLP_PRIV _Vector_base<_Tp, _Alloc>(__a) {}

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USSubGraph@CStatGraph@@@@@Z ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??0?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@I@Z
_TEXT	SEGMENT
___num_elements$ = 8					; size = 4
??0?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@I@Z PROC ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >, COMDAT
; _this$ = eax

; 359  :   { _M_initialize_map(__num_elements); }

	push	esi
	mov	esi, eax
	xor	eax, eax
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], eax
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], eax
	mov	eax, DWORD PTR ___num_elements$[esp]
	push	eax
	call	?_M_initialize_map@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_initialize_map
	mov	eax, esi
	pop	esi
	ret	4
??0?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@I@Z ENDP ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_deque.h
_TEXT	ENDS
;	COMDAT ?to_storage_type_ite@?$_DequeIteCast@USMarker@CStatGraph@@U12@@priv@stlp_std@@SA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@ABU423@@Z
_TEXT	SEGMENT
?to_storage_type_ite@?$_DequeIteCast@USMarker@CStatGraph@@U12@@priv@stlp_std@@SA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@ABU423@@Z PROC ; stlp_std::priv::_DequeIteCast<CStatGraph::SMarker,CStatGraph::SMarker>::to_storage_type_ite, COMDAT
; ___$ReturnUdt$ = eax
; ___ite$ = ecx

; 50   :     storage_iterator tmp;
; 51   :     tmp._M_cur = cast_traits::to_storage_type_ptr(__ite._M_cur);

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 52   :     tmp._M_first = cast_traits::to_storage_type_ptr(__ite._M_first);

	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 53   :     tmp._M_last = cast_traits::to_storage_type_ptr(__ite._M_last);

	mov	edx, DWORD PTR [ecx+8]

; 54   :     tmp._M_node = cast_traits::to_storage_type_pptr(__ite._M_node);

	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ecx

; 55   :     return tmp;
; 56   :   }

	ret	0
?to_storage_type_ite@?$_DequeIteCast@USMarker@CStatGraph@@U12@@priv@stlp_std@@SA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@ABU423@@Z ENDP ; stlp_std::priv::_DequeIteCast<CStatGraph::SMarker,CStatGraph::SMarker>::to_storage_type_ite
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?to_value_type_ite@?$_DequeIteCast@USMarker@CStatGraph@@U12@@priv@stlp_std@@SA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@ABU423@@Z
_TEXT	SEGMENT
?to_value_type_ite@?$_DequeIteCast@USMarker@CStatGraph@@U12@@priv@stlp_std@@SA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@ABU423@@Z PROC ; stlp_std::priv::_DequeIteCast<CStatGraph::SMarker,CStatGraph::SMarker>::to_value_type_ite, COMDAT
; ___$ReturnUdt$ = eax
; ___ite$ = ecx

; 42   :     iterator tmp;
; 43   :     tmp._M_cur = cast_traits::to_value_type_ptr(__ite._M_cur);

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 44   :     tmp._M_first = cast_traits::to_value_type_ptr(__ite._M_first);

	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 45   :     tmp._M_last = cast_traits::to_value_type_ptr(__ite._M_last);

	mov	edx, DWORD PTR [ecx+8]

; 46   :     tmp._M_node = cast_traits::to_value_type_pptr(__ite._M_node);

	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ecx

; 47   :     return tmp;
; 48   :   }

	ret	0
?to_value_type_ite@?$_DequeIteCast@USMarker@CStatGraph@@U12@@priv@stlp_std@@SA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@ABU423@@Z ENDP ; stlp_std::priv::_DequeIteCast<CStatGraph::SMarker,CStatGraph::SMarker>::to_value_type_ite
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ?push_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXABUSMarker@CStatGraph@@@Z
_TEXT	SEGMENT
?push_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXABUSMarker@CStatGraph@@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::push_back, COMDAT
; _this$ = eax
; ___t$ = ecx

; 665  : #endif /*!_STLP_DONT_SUP_DFLT_PARAM && !_STLP_NO_ANACHRONISMS*/
; 666  :     if (this->_M_finish._M_cur != this->_M_finish._M_last - 1) {

	mov	edx, DWORD PTR [eax+24]
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [eax+16]
	sub	edx, 12					; 0000000cH
	cmp	ecx, edx
	je	SHORT $LN2@push_back

; 667  :       _Copy_Construct(this->_M_finish._M_cur, __t);

	test	ecx, ecx
	je	SHORT $LN7@push_back
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [edi+8]
	mov	DWORD PTR [ecx+8], edx
$LN7@push_back:

; 668  :       ++this->_M_finish._M_cur;

	add	DWORD PTR [eax+16], 12			; 0000000cH
	pop	edi

; 672  :   }

	ret	0
$LN2@push_back:

; 669  :     }
; 670  :     else
; 671  :       _M_push_back_aux_v(__t);

	call	?_M_push_back_aux_v@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXABUSMarker@CStatGraph@@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_push_back_aux_v
	pop	edi

; 672  :   }

	ret	0
?push_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXABUSMarker@CStatGraph@@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::push_back
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@@Z
_TEXT	SEGMENT
??0?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >, COMDAT
; _this$ = eax

; 487  :     : _STLP_PRIV _Deque_base<_Tp, _Alloc>(__a, 0) {}

	push	esi
	mov	esi, eax
	xor	eax, eax
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], eax
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	push	eax
	mov	DWORD PTR [esi+36], eax
	call	?_M_initialize_map@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_initialize_map
	mov	eax, esi
	pop	esi
	ret	0
??0?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??A?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEAAUSMarker@CStatGraph@@I@Z
_TEXT	SEGMENT
___tmp$232263 = -16					; size = 16
??A?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEAAUSMarker@CStatGraph@@I@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::operator[], COMDAT
; _this$ = eax
; ___n$ = ebx

; 448  :     { return this->_M_start[difference_type(__n)]; }

	sub	esp, 16					; 00000010H
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ___tmp$232263[esp+16], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR ___tmp$232263[esp+20], edx
	mov	edx, DWORD PTR [eax+12]
	push	esi
	lea	esi, DWORD PTR ___tmp$232263[esp+20]
	mov	DWORD PTR ___tmp$232263[esp+28], ecx
	mov	DWORD PTR ___tmp$232263[esp+32], edx
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
	mov	eax, DWORD PTR ___tmp$232263[esp+20]
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
??A?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEAAUSMarker@CStatGraph@@I@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::operator[]
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?rend@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@3@XZ
_TEXT	SEGMENT
?rend@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@3@XZ PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::rend, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 177  :   reverse_iterator rend()                { return reverse_iterator(begin()); }

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	ret	0
?rend@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@3@XZ ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::rend
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?rbegin@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@3@XZ
_TEXT	SEGMENT
?rbegin@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@3@XZ PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::rbegin, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 175  :   reverse_iterator rbegin()              { return reverse_iterator(end()); }

	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
	ret	0
?rbegin@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE?AV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@3@XZ ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::rbegin
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ?push_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEXABUSElement@CStatGraph@@@Z
_TEXT	SEGMENT
?push_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEXABUSElement@CStatGraph@@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::push_back, COMDAT
; _this$ = eax
; ___t$ = ecx

; 665  : #endif /*!_STLP_DONT_SUP_DFLT_PARAM && !_STLP_NO_ANACHRONISMS*/
; 666  :     if (this->_M_finish._M_cur != this->_M_finish._M_last - 1) {

	mov	edx, DWORD PTR [eax+24]
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [eax+16]
	sub	edx, 8
	cmp	ecx, edx
	je	SHORT $LN2@push_back@2

; 667  :       _Copy_Construct(this->_M_finish._M_cur, __t);

	test	ecx, ecx
	je	SHORT $LN7@push_back@2
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [ecx+4], edx
$LN7@push_back@2:

; 668  :       ++this->_M_finish._M_cur;

	add	DWORD PTR [eax+16], 8
	pop	edi

; 672  :   }

	ret	0
$LN2@push_back@2:

; 669  :     }
; 670  :     else
; 671  :       _M_push_back_aux_v(__t);

	call	?_M_push_back_aux_v@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXABUSElement@CStatGraph@@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_push_back_aux_v
	pop	edi

; 672  :   }

	ret	0
?push_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEXABUSElement@CStatGraph@@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::push_back
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@@Z
_TEXT	SEGMENT
??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >, COMDAT
; _this$ = eax

; 487  :     : _STLP_PRIV _Deque_base<_Tp, _Alloc>(__a, 0) {}

	push	esi
	mov	esi, eax
	xor	eax, eax
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], eax
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	push	eax
	mov	DWORD PTR [esi+36], eax
	call	?_M_initialize_map@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_initialize_map
	mov	eax, esi
	pop	esi
	ret	0
??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@XZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::~_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >, COMDAT
; _this$ = ebx

; 564  :   { _STLP_STD::_Destroy_Range(this->_M_start, this->_M_finish); }

	jmp	??1?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::~_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
??1?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::~_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_deque.h
_TEXT	ENDS
;	COMDAT ?push_back@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAEXABUSMarker@CStatGraph@@@Z
_TEXT	SEGMENT
?push_back@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAEXABUSMarker@CStatGraph@@@Z PROC ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::push_back, COMDAT
; _this$ = eax
; ___t$ = ecx

; 263  :   { _M_impl.push_back(cast_traits::to_storage_type_cref(__t)); }

	mov	edx, DWORD PTR [eax+24]
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [eax+16]
	sub	edx, 12					; 0000000cH
	cmp	ecx, edx
	je	SHORT $LN6@push_back@3
	test	ecx, ecx
	je	SHORT $LN11@push_back@3
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [edi+8]
	mov	DWORD PTR [ecx+8], edx
$LN11@push_back@3:
	add	DWORD PTR [eax+16], 12			; 0000000cH
	pop	edi
	ret	0
$LN6@push_back@3:
	call	?_M_push_back_aux_v@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXABUSMarker@CStatGraph@@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_push_back_aux_v
	pop	edi
	ret	0
?push_back@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAEXABUSMarker@CStatGraph@@@Z ENDP ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::push_back
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@@Z
_TEXT	SEGMENT
??0?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@@Z PROC ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >, COMDAT
; _this$ = eax

; 156  :   explicit deque(const allocator_type& __a = allocator_type())

	push	esi
	mov	esi, eax
	xor	eax, eax
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], eax
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	push	eax
	mov	DWORD PTR [esi+36], eax
	call	?_M_initialize_map@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_initialize_map
	mov	eax, esi
	pop	esi
	ret	0
??0?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE@ABV?$xalloc@USMarker@CStatGraph@@@@@Z ENDP ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??A?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAEAAUSMarker@CStatGraph@@I@Z
_TEXT	SEGMENT
___tmp$232625 = -16					; size = 16
??A?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAEAAUSMarker@CStatGraph@@I@Z PROC ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::operator[], COMDAT
; _this$ = eax
; ___n$ = ebx

; 137  :   { return cast_traits::to_value_type_ref(_M_impl[__n]); }

	sub	esp, 16					; 00000010H
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ___tmp$232625[esp+16], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR ___tmp$232625[esp+20], edx
	mov	edx, DWORD PTR [eax+12]
	push	esi
	lea	esi, DWORD PTR ___tmp$232625[esp+20]
	mov	DWORD PTR ___tmp$232625[esp+28], ecx
	mov	DWORD PTR ___tmp$232625[esp+32], edx
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
	mov	eax, DWORD PTR ___tmp$232625[esp+20]
	pop	esi
	add	esp, 16					; 00000010H
	ret	0
??A?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAEAAUSMarker@CStatGraph@@I@Z ENDP ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::operator[]
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@2@XZ
_TEXT	SEGMENT
?begin@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@2@XZ PROC ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::begin, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax

; 124  :   iterator begin() { return ite_cast_traits::to_value_type_ite(_M_impl.begin()); }

	mov	edx, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR [ecx+4]
	push	edi
	mov	edi, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edi
	pop	edi
	mov	DWORD PTR [eax+4], esi
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+12], ecx
	pop	esi
	ret	0
?begin@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@2@XZ ENDP ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::begin
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??1?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@XZ PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >, COMDAT
; _this$ = ebx

; 564  :   { _STLP_STD::_Destroy_Range(this->_M_start, this->_M_finish); }

	jmp	??1?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
??1?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_deque.h
_TEXT	ENDS
;	COMDAT ?push_back@?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAEXABUSElement@CStatGraph@@@Z
_TEXT	SEGMENT
?push_back@?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAEXABUSElement@CStatGraph@@@Z PROC ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::push_back, COMDAT
; _this$ = eax
; ___t$ = ecx

; 263  :   { _M_impl.push_back(cast_traits::to_storage_type_cref(__t)); }

	mov	edx, DWORD PTR [eax+24]
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [eax+16]
	sub	edx, 8
	cmp	ecx, edx
	je	SHORT $LN6@push_back@4
	test	ecx, ecx
	je	SHORT $LN11@push_back@4
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [ecx+4], edx
$LN11@push_back@4:
	add	DWORD PTR [eax+16], 8
	pop	edi
	ret	0
$LN6@push_back@4:
	call	?_M_push_back_aux_v@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXABUSElement@CStatGraph@@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_push_back_aux_v
	pop	edi
	ret	0
?push_back@?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAEXABUSElement@CStatGraph@@@Z ENDP ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::push_back
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@@Z
_TEXT	SEGMENT
??0?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@@Z PROC ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >, COMDAT
; _this$ = eax

; 156  :   explicit deque(const allocator_type& __a = allocator_type())

	push	esi
	mov	esi, eax
	xor	eax, eax
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], eax
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	push	eax
	mov	DWORD PTR [esi+36], eax
	call	?_M_initialize_map@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_initialize_map
	mov	eax, esi
	pop	esi
	ret	0
??0?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAE@ABV?$xalloc@USElement@CStatGraph@@@@@Z ENDP ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??1?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE@XZ PROC ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::~deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >, COMDAT
; _this$ = ebx
	jmp	??1?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::~_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
??1?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE@XZ ENDP ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::~deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??1?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAE@XZ PROC ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >, COMDAT
; _this$ = ebx
	jmp	??1?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
??1?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAE@XZ ENDP ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QAE@XZ
_TEXT	SEGMENT
??1?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QAE@XZ PROC ; xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::~xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >, COMDAT
; _this$ = ebx
	jmp	??1?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::~_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
??1?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QAE@XZ ENDP ; xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::~xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QAE@XZ
_TEXT	SEGMENT
??1?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QAE@XZ PROC ; xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >, COMDAT
; _this$ = ebx
	jmp	??1?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
??1?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QAE@XZ ENDP ; xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QAE@XZ PROC ; xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >, COMDAT
; _this$ = eax
	push	esi
	mov	esi, eax
	xor	eax, eax
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], eax
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	push	eax
	mov	DWORD PTR [esi+36], eax
	call	?_M_initialize_map@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_initialize_map
	mov	eax, esi
	pop	esi
	ret	0
??0?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QAE@XZ ENDP ; xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
_TEXT	ENDS
PUBLIC	?UpdateMarkerPos@CStatGraph@@QAEXIM@Z		; CStatGraph::UpdateMarkerPos
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\statgraph.h
;	COMDAT ?UpdateMarkerPos@CStatGraph@@QAEXIM@Z
_TEXT	SEGMENT
___tmp$233599 = -16					; size = 16
$T233517 = -16						; size = 16
_ID$ = 8						; size = 4
_NewPos$ = 12						; size = 4
?UpdateMarkerPos@CStatGraph@@QAEXIM@Z PROC		; CStatGraph::UpdateMarkerPos, COMDAT
; _this$ = ecx

; 150  : 	{

	sub	esp, 16					; 00000010H

; 151  : 		if (ID >= m_Markers.size()) return;

	mov	eax, DWORD PTR [ecx+84]
	mov	edx, DWORD PTR [ecx+96]
	sub	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR $T233517[esp+20], eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	mov	eax, DWORD PTR [ecx+108]
	push	ebx
	mov	ebx, DWORD PTR [ecx+92]
	sub	eax, ebx
	sar	edx, 1
	push	ebp
	sar	eax, 2
	mov	ebp, edx
	sub	eax, 1
	push	esi
	mov	esi, DWORD PTR [ecx+88]
	shr	ebp, 31					; 0000001fH
	add	ebp, edx
	lea	edx, DWORD PTR [eax+eax*4]
	push	edi
	mov	edi, DWORD PTR [ecx+80]
	lea	ebx, DWORD PTR [ebp+edx*2]
	sub	esi, edi
	mov	eax, 715827883				; 2aaaaaabH
	imul	esi
	sar	edx, 1
	mov	eax, edx
	add	ebx, edx
	shr	eax, 31					; 0000001fH
	add	eax, ebx
	mov	ebx, DWORD PTR _ID$[esp+28]
	cmp	ebx, eax
	jae	SHORT $LN2@UpdateMark

; 152  : 		SMarker &pMarker = m_Markers[ID];

	mov	eax, DWORD PTR [ecx+84]
	mov	edx, edi
	mov	DWORD PTR ___tmp$233599[esp+32], edx
	mov	edx, DWORD PTR [ecx+88]
	mov	DWORD PTR ___tmp$233599[esp+36], eax
	mov	eax, DWORD PTR [ecx+92]
	lea	esi, DWORD PTR ___tmp$233599[esp+32]
	mov	DWORD PTR ___tmp$233599[esp+40], edx
	mov	DWORD PTR ___tmp$233599[esp+44], eax
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance

; 153  : 		pMarker.m_fPos = NewPos;

	mov	ecx, DWORD PTR ___tmp$233599[esp+32]
	movss	xmm0, DWORD PTR _NewPos$[esp+28]
	movss	DWORD PTR [ecx+4], xmm0
$LN2@UpdateMark:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : 	};

	add	esp, 16					; 00000010H
	ret	8
?UpdateMarkerPos@CStatGraph@@QAEXIM@Z ENDP		; CStatGraph::UpdateMarkerPos
_TEXT	ENDS
PUBLIC	?Marker@CStatGraph@@QAEABUSMarker@1@I@Z		; CStatGraph::Marker
; Function compile flags: /Ogtpy
;	COMDAT ?Marker@CStatGraph@@QAEABUSMarker@1@I@Z
_TEXT	SEGMENT
___tmp$233681 = -16					; size = 16
_ID$ = 8						; size = 4
?Marker@CStatGraph@@QAEABUSMarker@1@I@Z PROC		; CStatGraph::Marker, COMDAT
; _this$ = ecx

; 144  : 	{

	sub	esp, 16					; 00000010H

; 145  : 		VERIFY(ID<m_Markers.size());
; 146  : 		return m_Markers[ID];

	mov	eax, DWORD PTR [ecx+80]
	mov	edx, DWORD PTR [ecx+84]
	push	ebx
	mov	ebx, DWORD PTR _ID$[esp+16]
	mov	DWORD PTR ___tmp$233681[esp+20], eax
	mov	eax, DWORD PTR [ecx+88]
	mov	ecx, DWORD PTR [ecx+92]
	push	esi
	lea	esi, DWORD PTR ___tmp$233681[esp+24]
	mov	DWORD PTR ___tmp$233681[esp+28], edx
	mov	DWORD PTR ___tmp$233681[esp+32], eax
	mov	DWORD PTR ___tmp$233681[esp+36], ecx
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
	mov	eax, DWORD PTR ___tmp$233681[esp+24]
	pop	esi
	pop	ebx

; 147  : 	};

	add	esp, 16					; 00000010H
	ret	4
?Marker@CStatGraph@@QAEABUSMarker@1@I@Z ENDP		; CStatGraph::Marker
_TEXT	ENDS
PUBLIC	?AddMarker@CStatGraph@@QAEXW4EStyle@1@MI@Z	; CStatGraph::AddMarker
; Function compile flags: /Ogtpy
;	COMDAT ?AddMarker@CStatGraph@@QAEXW4EStyle@1@MI@Z
_TEXT	SEGMENT
_NewMarker$ = -12					; size = 12
_Style$ = 8						; size = 4
_pos$ = 12						; size = 4
_Color$ = 16						; size = 4
?AddMarker@CStatGraph@@QAEXW4EStyle@1@MI@Z PROC		; CStatGraph::AddMarker, COMDAT
; _this$ = ecx

; 134  : 	{

	sub	esp, 12					; 0000000cH

; 135  : 		SMarker NewMarker;
; 136  : 		NewMarker.m_dwColor = Color;

	mov	edx, DWORD PTR _Color$[esp+8]

; 137  : 		NewMarker.m_eStyle = Style;
; 138  : 		NewMarker.m_fPos = pos;

	movss	xmm0, DWORD PTR _pos$[esp+8]
	push	esi
	mov	esi, DWORD PTR _Style$[esp+12]

; 139  : 
; 140  : 		m_Markers.push_back(NewMarker);

	lea	eax, DWORD PTR [ecx+80]
	mov	ecx, DWORD PTR [eax+16]
	push	edi
	mov	edi, DWORD PTR [eax+24]
	sub	edi, 12					; 0000000cH
	cmp	ecx, edi
	mov	DWORD PTR _NewMarker$[esp+28], edx
	mov	DWORD PTR _NewMarker$[esp+20], esi
	movss	DWORD PTR _NewMarker$[esp+24], xmm0
	je	SHORT $LN8@AddMarker
	test	ecx, ecx
	je	SHORT $LN13@AddMarker
	mov	DWORD PTR [ecx], esi
	mov	esi, DWORD PTR _NewMarker$[esp+24]
	mov	DWORD PTR [ecx+4], esi
	mov	DWORD PTR [ecx+8], edx
$LN13@AddMarker:
	add	DWORD PTR [eax+16], 12			; 0000000cH
	pop	edi
	pop	esi

; 141  : 	};

	add	esp, 12					; 0000000cH
	ret	12					; 0000000cH

; 139  : 
; 140  : 		m_Markers.push_back(NewMarker);

$LN8@AddMarker:
	lea	edi, DWORD PTR _NewMarker$[esp+20]
	call	?_M_push_back_aux_v@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXABUSMarker@CStatGraph@@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_push_back_aux_v
	pop	edi
	pop	esi

; 141  : 	};

	add	esp, 12					; 0000000cH
	ret	12					; 0000000cH
?AddMarker@CStatGraph@@QAEXW4EStyle@1@MI@Z ENDP		; CStatGraph::AddMarker
_TEXT	ENDS
PUBLIC	?AppendItem@CStatGraph@@QAEXMII@Z		; CStatGraph::AppendItem
; Function compile flags: /Ogtpy
;	COMDAT ?AppendItem@CStatGraph@@QAEXMII@Z
_TEXT	SEGMENT
$T233872 = -16						; size = 16
$T233742 = -16						; size = 8
_d$ = 8							; size = 4
_clr$ = 12						; size = 4
_SubGraphID$ = 16					; size = 4
?AppendItem@CStatGraph@@QAEXMII@Z PROC			; CStatGraph::AppendItem, COMDAT
; _this$ = ecx

; 118  :     {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 20					; 00000014H
	push	ebx
	mov	ebx, ecx

; 119  : 		if (SubGraphID>=subgraphs.size()) return;

	mov	ecx, DWORD PTR [ebx+8]
	sub	ecx, DWORD PTR [ebx+4]
	mov	eax, 780903145				; 2e8ba2e9H
	imul	ecx
	mov	eax, DWORD PTR _SubGraphID$[ebp]
	sar	edx, 3
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	cmp	eax, ecx
	push	esi
	push	edi
	jae	$LN1@AppendItem

; 120  : 
; 121  :     	clamp		(d,mn,mx);

	movss	xmm1, DWORD PTR [ebx+16]
	movss	xmm0, DWORD PTR _d$[ebp]
	comiss	xmm1, xmm0
	ja	SHORT $LN70@AppendItem
	movss	xmm1, DWORD PTR [ebx+20]
	comiss	xmm0, xmm1
	jbe	SHORT $LN12@AppendItem
$LN70@AppendItem:
	movaps	xmm0, xmm1
$LN12@AppendItem:

; 122  : 		
; 123  : 		SubGraphVecIt it = subgraphs.begin() + SubGraphID;
; 124  :         it->elements.push_back(SElement(d,clr));

	mov	ecx, DWORD PTR _clr$[ebp]
	imul	eax, 44					; 0000002cH
	add	eax, DWORD PTR [ebx+4]
	mov	edx, DWORD PTR [eax+28]
	lea	esi, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [esi+16]
	sub	edx, 8
	cmp	eax, edx
	mov	DWORD PTR $T233742[esp+32], ecx
	movss	DWORD PTR $T233742[esp+36], xmm0
	je	SHORT $LN30@AppendItem
	test	eax, eax
	je	SHORT $LN35@AppendItem
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR $T233742[esp+36]
	mov	DWORD PTR [eax+4], ecx
$LN35@AppendItem:
	add	DWORD PTR [esi+16], 8
	jmp	SHORT $LN68@AppendItem
$LN30@AppendItem:
	lea	edi, DWORD PTR $T233742[esp+32]
	mov	eax, esi
	call	?_M_push_back_aux_v@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXABUSElement@CStatGraph@@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_push_back_aux_v
$LN68@AppendItem:

; 125  :         while(it->elements.size()>max_item_count) it->elements.pop_front();

	mov	edx, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+12]
	mov	edi, DWORD PTR [esi+28]
	mov	eax, DWORD PTR [esi+8]
	sub	eax, DWORD PTR [esi]
	mov	DWORD PTR $T233872[esp+36], edx
	mov	edx, DWORD PTR [esi+16]
	sub	edx, DWORD PTR [esi+20]
	sub	edi, ecx
	sar	edi, 2
	sub	edi, 1
	sar	edx, 3
	shl	edi, 4
	add	edx, edi
	sar	eax, 3
	add	edx, eax
	cmp	edx, DWORD PTR [ebx+24]
	jbe	SHORT $LN1@AppendItem
$LN2@AppendItem:
	mov	ecx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [esi]
	sub	ecx, 8
	cmp	eax, ecx
	je	SHORT $LN56@AppendItem
	add	eax, 8
	mov	DWORD PTR [esi], eax
	jmp	SHORT $LN55@AppendItem
$LN56@AppendItem:
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN63@AppendItem
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN63@AppendItem:
	mov	eax, DWORD PTR [esi+12]
	add	eax, 4
	mov	DWORD PTR [esi+12], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi+4], eax
	mov	edx, DWORD PTR [esi+4]
	add	eax, 128				; 00000080H
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi], edx
$LN55@AppendItem:
	mov	edx, DWORD PTR [esi+12]
	mov	edi, DWORD PTR [esi+28]
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR $T233872[esp+44], edx
	sub	edi, DWORD PTR $T233872[esp+44]
	mov	edx, DWORD PTR [esi+16]
	sub	edx, DWORD PTR [esi+20]
	sar	edi, 2
	mov	DWORD PTR $T233872[esp+36], eax
	mov	eax, DWORD PTR [esi+8]
	sub	edi, 1
	sar	edx, 3
	shl	edi, 4
	sub	eax, ecx
	add	edx, edi
	sar	eax, 3
	add	edx, eax
	cmp	edx, DWORD PTR [ebx+24]
	ja	SHORT $LN2@AppendItem
$LN1@AppendItem:

; 126  :     };

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?AppendItem@CStatGraph@@QAEXMII@Z ENDP			; CStatGraph::AppendItem
_TEXT	ENDS
PUBLIC	?SetGrid@CStatGraph@@QAEXHMHMII@Z		; CStatGraph::SetGrid
; Function compile flags: /Ogtpy
;	COMDAT ?SetGrid@CStatGraph@@QAEXHMHMII@Z
_TEXT	SEGMENT
_w_div$ = 8						; size = 4
_w_step$ = 12						; size = 4
_h_div$ = 16						; size = 4
_h_step$ = 20						; size = 4
_grid_clr$ = 24						; size = 4
_base_clr$ = 28						; size = 4
?SetGrid@CStatGraph@@QAEXHMHMII@Z PROC			; CStatGraph::SetGrid, COMDAT
; _this$ = ecx

; 102  :         grid.set	(w_div,h_div);

	mov	eax, DWORD PTR _h_div$[esp-4]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR _w_div$[esp]
	push	eax
	push	ecx
	lea	ecx, DWORD PTR [esi+44]
	call	?set@?$_vector2@H@@QAEAAU1@HH@Z		; _vector2<int>::set

; 103  : 		grid_step.set (w_step, h_step);

	fld	DWORD PTR _h_step$[esp]
	sub	esp, 8
	fstp	DWORD PTR [esp+4]
	lea	ecx, DWORD PTR [esi+52]
	fld	DWORD PTR _w_step$[esp+8]
	fstp	DWORD PTR [esp]
	call	?set@?$_vector2@M@@QAEAAU1@MM@Z		; _vector2<float>::set

; 104  :         grid_color 	= grid_clr;

	mov	edx, DWORD PTR _grid_clr$[esp]

; 105  : 		base_color	= base_clr;

	mov	eax, DWORD PTR _base_clr$[esp]
	mov	DWORD PTR [esi+60], edx
	mov	DWORD PTR [esi+64], eax
	pop	esi

; 106  :     }

	ret	24					; 00000018H
?SetGrid@CStatGraph@@QAEXHMHMII@Z ENDP			; CStatGraph::SetGrid
_TEXT	ENDS
PUBLIC	?SetRect@CStatGraph@@QAEXHHHHII@Z		; CStatGraph::SetRect
; Function compile flags: /Ogtpy
;	COMDAT ?SetRect@CStatGraph@@QAEXHHHHII@Z
_TEXT	SEGMENT
_l$ = 8							; size = 4
_t$ = 12						; size = 4
_w$ = 16						; size = 4
_h$ = 20						; size = 4
_rect_clr$ = 24						; size = 4
_back_clr$ = 28						; size = 4
?SetRect@CStatGraph@@QAEXHHHHII@Z PROC			; CStatGraph::SetRect, COMDAT
; _this$ = ecx

; 94   :     {

	push	ebx

; 95   :         lt.set		(l,t);

	mov	ebx, DWORD PTR _l$[esp]
	push	esi
	push	edi
	mov	edi, DWORD PTR _t$[esp+8]
	mov	esi, ecx
	push	edi
	push	ebx
	lea	ecx, DWORD PTR [esi+28]
	call	?set@?$_vector2@H@@QAEAAU1@HH@Z		; _vector2<int>::set

; 96   :         rb.set		(l+w,t+h);

	mov	eax, DWORD PTR _h$[esp+8]
	mov	ecx, DWORD PTR _w$[esp+8]
	add	edi, eax
	add	ebx, ecx
	push	edi
	push	ebx
	lea	ecx, DWORD PTR [esi+36]
	call	?set@?$_vector2@H@@QAEAAU1@HH@Z		; _vector2<int>::set

; 97   :         rect_color	= rect_clr;

	mov	edx, DWORD PTR _rect_clr$[esp+8]

; 98   : 		back_color	= back_clr;

	mov	eax, DWORD PTR _back_clr$[esp+8]
	pop	edi
	mov	DWORD PTR [esi+68], edx
	mov	DWORD PTR [esi+72], eax
	pop	esi
	pop	ebx

; 99   :     }

	ret	24					; 00000018H
?SetRect@CStatGraph@@QAEXHHHHII@Z ENDP			; CStatGraph::SetRect
_TEXT	ENDS
PUBLIC	?SetStyle@CStatGraph@@QAEXW4EStyle@1@I@Z	; CStatGraph::SetStyle
; Function compile flags: /Ogtpy
;	COMDAT ?SetStyle@CStatGraph@@QAEXW4EStyle@1@I@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_SubGraphID$ = 12					; size = 4
?SetStyle@CStatGraph@@QAEXW4EStyle@1@I@Z PROC		; CStatGraph::SetStyle, COMDAT
; _this$ = ecx

; 88   : 		if (SubGraphID >= subgraphs.size()) return;

	mov	edx, DWORD PTR [ecx+8]
	sub	edx, DWORD PTR [ecx+4]
	mov	eax, 780903145				; 2e8ba2e9H
	imul	edx
	mov	eax, DWORD PTR _SubGraphID$[esp-4]
	push	esi
	sar	edx, 3
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	cmp	eax, esi
	pop	esi
	jae	SHORT $LN16@SetStyle

; 89   : 		SubGraphVecIt it = subgraphs.begin() + SubGraphID;
; 90   : 		it->SetStyle(s);

	mov	ecx, DWORD PTR [ecx+4]
	imul	eax, 44					; 0000002cH
	mov	edx, DWORD PTR _s$[esp-4]
	mov	DWORD PTR [eax+ecx], edx
$LN16@SetStyle:

; 91   :     }

	ret	8
?SetStyle@CStatGraph@@QAEXW4EStyle@1@I@Z ENDP		; CStatGraph::SetStyle
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0SSubGraph@CStatGraph@@QAE@W4EStyle@1@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
??0SSubGraph@CStatGraph@@QAE@W4EStyle@1@@Z PROC		; CStatGraph::SSubGraph::SSubGraph, COMDAT
; _this$ = edi

; 36   : 					SSubGraph(EStyle s)

	xor	eax, eax
	mov	DWORD PTR [edi+4], eax
	mov	DWORD PTR [edi+8], eax
	mov	DWORD PTR [edi+12], eax
	mov	DWORD PTR [edi+16], eax
	push	esi
	lea	esi, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], eax
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	push	eax
	mov	DWORD PTR [esi+36], eax
	call	?_M_initialize_map@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_initialize_map

; 37   : 		{
; 38   : 			style = s;

	mov	eax, DWORD PTR _s$[esp]
	mov	DWORD PTR [edi], eax

; 39   : 		};

	mov	eax, edi
	pop	esi
	ret	4
??0SSubGraph@CStatGraph@@QAE@W4EStyle@1@@Z ENDP		; CStatGraph::SSubGraph::SSubGraph
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
;	COMDAT ??$__ucopy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$__ucopy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>, COMDAT
; ___$ReturnUdt$ = eax

; 84   :   _OutputIter __cur = __result;

	mov	ecx, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+8]
	push	ebx
	push	ebp
	mov	DWORD PTR [eax+8], ecx

; 85   :   _STLP_TRY {
; 86   :     for (_Distance __n = __last - __first; __n > 0; --__n) {

	mov	ecx, DWORD PTR ___last$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+4]
	sub	edx, DWORD PTR ___last$[esp+8]
	push	esi
	mov	esi, DWORD PTR ___first$[esp+8]
	push	edi
	mov	edi, DWORD PTR ___first$[esp+24]
	sub	ecx, edi
	sar	ecx, 2
	sar	edx, 3
	shl	ecx, 4
	add	ecx, edx
	mov	edx, DWORD PTR ___first$[esp+20]
	sub	edx, esi
	sar	edx, 3
	lea	ebp, DWORD PTR [ecx+edx-16]
	test	ebp, ebp
	jle	SHORT $LN1@ucopy@6
	mov	ebx, DWORD PTR [eax+8]
$LN3@ucopy@6:

; 87   :       _Param_Construct(&*__cur, *__first);

	mov	edx, DWORD PTR [eax]
	test	edx, edx
	je	SHORT $LN20@ucopy@6
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [edx+4], ecx
$LN20@ucopy@6:

; 88   :       ++__first;

	add	esi, 8
	cmp	esi, DWORD PTR ___first$[esp+20]
	jne	SHORT $LN26@ucopy@6
	mov	ecx, DWORD PTR [edi+4]
	add	edi, 4
	lea	esi, DWORD PTR [ecx+128]
	mov	DWORD PTR ___first$[esp+20], esi
	mov	esi, ecx
$LN26@ucopy@6:

; 89   :       ++__cur;

	lea	ecx, DWORD PTR [edx+8]
	cmp	ecx, ebx
	mov	DWORD PTR [eax], ecx
	jne	SHORT $LN2@ucopy@6
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 4
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	lea	ebx, DWORD PTR [ecx+128]
	mov	DWORD PTR [eax], ecx
$LN2@ucopy@6:
	sub	ebp, 1
	test	ebp, ebp
	jg	SHORT $LN3@ucopy@6
	mov	DWORD PTR [eax+8], ebx
$LN1@ucopy@6:

; 90   :     }
; 91   :     return __cur;
; 92   :   }
; 93   :   _STLP_UNWIND(_STLP_STD::_Destroy_Range(__result, __cur))
; 94   :   _STLP_RET_AFTER_THROW(__cur)
; 95   : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
??$__ucopy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator_base.h
_TEXT	ENDS
;	COMDAT ??$__advance@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@H@stlp_std@@YAXAAU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@HABUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
??$__advance@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@H@stlp_std@@YAXAAU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@HABUrandom_access_iterator_tag@0@@Z PROC ; stlp_std::__advance<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,int>, COMDAT
; ___i$ = esi
; ___n$ = edx

; 522  :   __i += __n;

	jmp	?_M_advance@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_advance
??$__advance@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@H@stlp_std@@YAXAAU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@HABUrandom_access_iterator_tag@0@@Z ENDP ; stlp_std::__advance<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,int>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__ucopy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$__ucopy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z PROC ; stlp_std::priv::__ucopy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >, COMDAT
; ___$ReturnUdt$ = esi

; 133  :                                const __false_type& /*BothPtrType*/) {

	push	ecx

; 134  :   return __ucopy(__first, __last, __result,
; 135  :                  _STLP_ITERATOR_CATEGORY(__first, _InputIter),
; 136  :                  _STLP_DISTANCE_TYPE(__first, _InputIter));

	mov	ecx, DWORD PTR ___result$[esp]
	mov	edx, DWORD PTR ___result$[esp+4]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	eax, esi
	call	??$__ucopy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>
	add	esp, 48					; 00000030H
	mov	eax, esi
	pop	ecx

; 137  : }

	ret	0
??$__ucopy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z ENDP ; stlp_std::priv::__ucopy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator_base.h
_TEXT	ENDS
;	COMDAT ??$advance@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@H@stlp_std@@YAXAAU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@H@Z
_TEXT	SEGMENT
??$advance@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@H@stlp_std@@YAXAAU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@H@Z PROC ; stlp_std::advance<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,int>, COMDAT
; ___i$ = esi
; ___n$ = edx

; 527  :   __advance(__i, __n, _STLP_ITERATOR_CATEGORY(__i, _InputIterator));

	jmp	?_M_advance@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_advance
??$advance@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@H@stlp_std@@YAXAAU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@H@Z ENDP ; stlp_std::advance<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,int>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$uninitialized_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$uninitialized_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z PROC ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >, COMDAT
; ___$ReturnUdt$ = eax

; 144  : { return _STLP_PRIV __ucopy_aux(__first, __last, __result, _BothPtrType< _InputIter, _ForwardIter>::_Answer()); }

	mov	ecx, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	push	esi
	mov	esi, eax
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	call	??$__ucopy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z ; stlp_std::priv::__ucopy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
	add	esp, 48					; 00000030H
	mov	eax, esi
	pop	esi
	ret	0
??$uninitialized_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ENDP ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__ucopy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$__ucopy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z PROC ; stlp_std::priv::__ucopy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >, COMDAT
; ___$ReturnUdt$ = esi

; 134  :   return __ucopy(__first, __last, __result,
; 135  :                  _STLP_ITERATOR_CATEGORY(__first, _InputIter),
; 136  :                  _STLP_DISTANCE_TYPE(__first, _InputIter));

	mov	ecx, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+20]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+12]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+16]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+36]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+28]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+32]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+52]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	eax, esi
	call	??$__ucopy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>
	add	esp, 48					; 00000030H
	mov	eax, esi

; 137  : }

	ret	0
??$__ucopy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z ENDP ; stlp_std::priv::__ucopy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator_base.h
_TEXT	ENDS
;	COMDAT ??$__distance@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAHABU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0ABUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
??$__distance@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAHABU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0ABUrandom_access_iterator_tag@0@@Z PROC ; stlp_std::__distance<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >, COMDAT
; ___first$ = ecx
; ___last$ = eax

; 372  :   return __last - __first;

	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+12]
	push	esi
	mov	esi, DWORD PTR [eax]
	sub	esi, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx]
	sar	edx, 2
	sar	esi, 3
	shl	edx, 4
	add	edx, esi
	sar	eax, 3
	lea	eax, DWORD PTR [edx+eax-16]
	pop	esi

; 373  : }

	ret	0
??$__distance@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAHABU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0ABUrandom_access_iterator_tag@0@@Z ENDP ; stlp_std::__distance<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ?_M_reserve_map_at_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z
_TEXT	SEGMENT
?_M_reserve_map_at_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reserve_map_at_front, COMDAT
; _this$ = ecx
; ___nodes_to_add$ = eax

; 1047 :   void _M_reserve_map_at_front (size_type __nodes_to_add = 1) {

	push	esi
	mov	esi, ecx

; 1048 :     if (__nodes_to_add > size_type(this->_M_start._M_node - this->_M_map._M_data))

	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, DWORD PTR [esi+32]
	sar	ecx, 2
	cmp	eax, ecx
	jbe	SHORT $LN1@M_reserve_@3

; 1049 :       _M_reallocate_map(__nodes_to_add, true);

	push	eax
	mov	al, 1
	call	?_M_reallocate_map@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI_N@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reallocate_map
$LN1@M_reserve_@3:
	pop	esi

; 1050 :   }

	ret	0
?_M_reserve_map_at_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reserve_map_at_front
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$uninitialized_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@20@0U120@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$uninitialized_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@20@0U120@@Z PROC ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >, COMDAT
; ___$ReturnUdt$ = eax

; 144  : { return _STLP_PRIV __ucopy_aux(__first, __last, __result, _BothPtrType< _InputIter, _ForwardIter>::_Answer()); }

	mov	ecx, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	push	esi
	mov	esi, eax
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	call	??$__ucopy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z ; stlp_std::priv::__ucopy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
	add	esp, 48					; 00000030H
	mov	eax, esi
	pop	esi
	ret	0
??$uninitialized_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@20@0U120@@Z ENDP ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator_base.h
_TEXT	ENDS
;	COMDAT ??$distance@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAHU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
??$distance@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAHU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0@Z PROC ; stlp_std::distance<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >, COMDAT

; 378  :   return __distance(__first, __last, _STLP_ITERATOR_CATEGORY(__first, _InputIterator));

	mov	eax, DWORD PTR ___last$[esp+8]
	sub	eax, DWORD PTR ___first$[esp+8]
	mov	ecx, DWORD PTR ___first$[esp+4]
	sub	ecx, DWORD PTR ___first$[esp-4]
	mov	edx, DWORD PTR ___last$[esp-4]
	sub	edx, DWORD PTR ___last$[esp]
	sar	eax, 2
	shl	eax, 4
	sar	ecx, 3
	add	eax, ecx
	sar	edx, 3
	lea	eax, DWORD PTR [eax+edx-16]

; 379  : }

	ret	0
??$distance@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAHU?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@0@Z ENDP ; stlp_std::distance<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.c
_TEXT	ENDS
;	COMDAT ?_M_new_elements_at_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z
_TEXT	SEGMENT
?_M_new_elements_at_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_new_elements_at_back, COMDAT
; _this$ = eax
; ___new_elems$ = ecx

; 750  : void deque<_Tp,_Alloc>::_M_new_elements_at_back(size_type __new_elems) {

	push	ebx
	push	esi
	mov	esi, eax

; 751  :   size_type __new_nodes
; 752  :       = (__new_elems + this->buffer_size() - 1) / this->buffer_size();
; 753  :   _M_reserve_map_at_back(__new_nodes);

	mov	eax, DWORD PTR [esi+28]
	sub	eax, DWORD PTR [esi+32]
	mov	ebx, ecx
	mov	ecx, DWORD PTR [esi+36]
	add	ebx, 15					; 0000000fH
	shr	ebx, 4
	sar	eax, 2
	sub	ecx, eax
	lea	edx, DWORD PTR [ebx+1]
	cmp	edx, ecx
	push	edi
	jbe	SHORT $LN10@M_new_elem
	push	ebx
	xor	al, al
	call	?_M_reallocate_map@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI_N@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reallocate_map
$LN10@M_new_elem:

; 754  :   size_type __i = 1;

	mov	edi, 1

; 755  :   _STLP_TRY {
; 756  :     for (; __i <= __new_nodes; ++__i)

	cmp	ebx, edi
	jb	SHORT $LN1@M_new_elem
	push	ebp
	mov	ebp, DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	npad	6
$LL3@M_new_elem:

; 757  :       *(this->_M_finish._M_node + __i) = this->_M_map_size.allocate(this->buffer_size());

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	128					; 00000080H
	call	ebp
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR [ecx+edi*4], eax
	add	edi, 1
	cmp	edi, ebx
	jbe	SHORT $LL3@M_new_elem
	pop	ebp
$LN1@M_new_elem:
	pop	edi
	pop	esi
	pop	ebx

; 758  :   }
; 759  :   _STLP_UNWIND(for (size_type __j = 1; __j < __i; ++__j)
; 760  :                  this->_M_map_size.deallocate(*(this->_M_finish._M_node + __j), this->buffer_size()))
; 761  : }

	ret	0
?_M_new_elements_at_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_new_elements_at_back
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_new_elements_at_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z
_TEXT	SEGMENT
?_M_new_elements_at_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_new_elements_at_front, COMDAT
; _this$ = eax
; ___new_elems$ = ecx

; 736  : void deque<_Tp,_Alloc>::_M_new_elements_at_front(size_type __new_elems) {

	push	ebx
	push	esi
	mov	esi, eax

; 737  :   size_type __new_nodes
; 738  :       = (__new_elems + this->buffer_size() - 1) / this->buffer_size();
; 739  :   _M_reserve_map_at_front(__new_nodes);

	mov	eax, DWORD PTR [esi+12]
	sub	eax, DWORD PTR [esi+32]
	mov	ebx, ecx
	add	ebx, 15					; 0000000fH
	shr	ebx, 4
	sar	eax, 2
	cmp	ebx, eax
	jbe	SHORT $LN10@M_new_elem@2
	push	ebx
	mov	al, 1
	call	?_M_reallocate_map@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI_N@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reallocate_map
$LN10@M_new_elem@2:

; 740  :   size_type __i = 1;
; 741  :   _STLP_TRY {
; 742  :     for (; __i <= __new_nodes; ++__i)

	cmp	ebx, 1
	jb	SHORT $LN1@M_new_elem@2
	push	ebp
	mov	ebp, DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	push	edi
	mov	edi, 4
$LL3@M_new_elem@2:

; 743  :       *(this->_M_start._M_node - __i) = this->_M_map_size.allocate(this->buffer_size());

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	128					; 00000080H
	call	ebp
	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, edi
	add	edi, 4
	sub	ebx, 1
	mov	DWORD PTR [ecx], eax
	jne	SHORT $LL3@M_new_elem@2
	pop	edi
	pop	ebp
$LN1@M_new_elem@2:
	pop	esi
	pop	ebx

; 744  :   }
; 745  :   _STLP_UNWIND(for (size_type __j = 1; __j < __i; ++__j)
; 746  :                  this->_M_map_size.deallocate(*(this->_M_start._M_node - __j), this->buffer_size()))
; 747  : }

	ret	0
?_M_new_elements_at_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_new_elements_at_front
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___n$126183 = 12					; size = 4
___first$ = 12						; size = 16
___last$ = 28						; size = 16
___result$ = 44						; size = 16
??$__copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>, COMDAT

; 201  :   for (_Distance __n = __last - __first; __n > 0; --__n) {

	mov	ecx, DWORD PTR ___last$[esp+8]
	mov	edx, DWORD PTR ___first$[esp-4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR ___first$[esp+12]
	push	ebp
	mov	ebp, DWORD PTR ___first$[esp+12]
	push	esi
	sub	ecx, ebx
	sar	ecx, 2
	mov	esi, ebp
	sub	esi, edx
	sar	esi, 3
	shl	ecx, 4
	add	ecx, esi
	mov	esi, DWORD PTR ___last$[esp+8]
	sub	esi, DWORD PTR ___last$[esp+12]
	push	edi
	mov	edi, DWORD PTR ___result$[esp+16]
	sar	esi, 3
	lea	ecx, DWORD PTR [ecx+esi-16]
	mov	esi, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR ___n$126183[esp+12], ecx
	test	ecx, ecx
	mov	ecx, DWORD PTR ___result$[esp+12]
	jle	SHORT $LN1@copy@11
	npad	4
$LL3@copy@11:

; 202  :     *__result = *__first;

	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]

; 203  :     ++__first;

	add	edx, 8
	cmp	edx, ebp
	mov	DWORD PTR [ecx+4], eax
	jne	SHORT $LN18@copy@11
	mov	edx, DWORD PTR [ebx+4]
	add	ebx, 4
	lea	ebp, DWORD PTR [edx+128]
$LN18@copy@11:

; 204  :     ++__result;

	add	ecx, 8
	cmp	ecx, DWORD PTR ___result$[esp+20]
	jne	SHORT $LN2@copy@11
	mov	edi, DWORD PTR [esi+4]
	add	esi, 4
	lea	ecx, DWORD PTR [edi+128]
	mov	DWORD PTR ___result$[esp+20], ecx
	mov	ecx, edi
$LN2@copy@11:
	mov	eax, DWORD PTR ___n$126183[esp+12]
	sub	eax, 1
	test	eax, eax
	mov	DWORD PTR ___n$126183[esp+12], eax
	jg	SHORT $LL3@copy@11

; 201  :   for (_Distance __n = __last - __first; __n > 0; --__n) {

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+12]
$LN1@copy@11:

; 205  :   }
; 206  :   return __result;

	mov	edx, DWORD PTR ___result$[esp+20]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edi

; 207  : }

	pop	edi
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], esi
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
??$__copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__ucopy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
tv139 = 40						; size = 4
___result$ = 40						; size = 16
??$__ucopy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>, COMDAT
; ___$ReturnUdt$ = ecx

; 84   :   _OutputIter __cur = __result;

	mov	eax, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR ___result$[esp+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR ___result$[esp+8]
	mov	DWORD PTR [ecx+8], eax

; 85   :   _STLP_TRY {
; 86   :     for (_Distance __n = __last - __first; __n > 0; --__n) {

	mov	eax, DWORD PTR ___last$[esp+8]
	push	ebx
	push	ebp
	push	esi
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR ___last$[esp+8]
	sub	edx, DWORD PTR ___last$[esp+12]
	mov	ebx, DWORD PTR ___first$[esp+16]
	push	edi
	mov	edi, DWORD PTR ___first$[esp+24]
	sub	eax, edi
	sar	eax, 2
	lea	esi, DWORD PTR [eax+eax*4]
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	ebp, DWORD PTR [eax+esi*2]
	mov	esi, DWORD PTR ___first$[esp+12]
	mov	edx, ebx
	sub	edx, esi
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	ebp, edx
	lea	edx, DWORD PTR [eax+ebp-10]
	test	edx, edx
	jle	SHORT $LN40@ucopy@7
	mov	ebp, DWORD PTR [ecx+8]
	mov	DWORD PTR tv139[esp+12], ebp
$LL3@ucopy@7:

; 87   :       _Param_Construct(&*__cur, *__first);

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN20@ucopy@7
	mov	ebp, DWORD PTR [esi]
	mov	DWORD PTR [eax], ebp
	mov	ebp, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], ebp
	mov	ebp, DWORD PTR [esi+8]
	mov	DWORD PTR [eax+8], ebp
	mov	ebp, DWORD PTR tv139[esp+12]
$LN20@ucopy@7:

; 88   :       ++__first;

	add	esi, 12					; 0000000cH
	cmp	esi, ebx
	jne	SHORT $LN26@ucopy@7
	mov	esi, DWORD PTR [edi+4]
	add	edi, 4
	lea	ebx, DWORD PTR [esi+120]
$LN26@ucopy@7:

; 89   :       ++__cur;

	add	eax, 12					; 0000000cH
	cmp	eax, ebp
	mov	DWORD PTR [ecx], eax
	jne	SHORT $LN2@ucopy@7
	mov	eax, DWORD PTR [ecx+12]
	add	eax, 4
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR [eax]
	lea	ebp, DWORD PTR [eax+120]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR tv139[esp+12], ebp
	mov	DWORD PTR [ecx], eax
$LN2@ucopy@7:
	sub	edx, 1
	test	edx, edx
	jg	SHORT $LL3@ucopy@7
	mov	DWORD PTR [ecx+8], ebp
$LN40@ucopy@7:

; 90   :     }
; 91   :     return __cur;
; 92   :   }
; 93   :   _STLP_UNWIND(_STLP_STD::_Destroy_Range(__result, __cur))
; 94   :   _STLP_RET_AFTER_THROW(__cur)
; 95   : }

	pop	edi
	pop	esi
	pop	ebp
	mov	eax, ecx
	pop	ebx
	ret	0
??$__ucopy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___n$126106 = 12					; size = 4
___first$ = 12						; size = 16
___last$ = 28						; size = 16
___result$ = 44						; size = 16
??$__copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>, COMDAT

; 201  :   for (_Distance __n = __last - __first; __n > 0; --__n) {

	mov	ecx, DWORD PTR ___last$[esp+8]
	mov	edx, DWORD PTR ___first$[esp-4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR ___first$[esp+12]
	push	ebp
	mov	ebp, DWORD PTR ___first$[esp+12]
	push	esi
	sub	ecx, ebx
	sar	ecx, 2
	mov	esi, ebp
	sub	esi, edx
	sar	esi, 3
	shl	ecx, 4
	add	ecx, esi
	mov	esi, DWORD PTR ___last$[esp+8]
	sub	esi, DWORD PTR ___last$[esp+12]
	push	edi
	mov	edi, DWORD PTR ___result$[esp+16]
	sar	esi, 3
	lea	ecx, DWORD PTR [ecx+esi-16]
	mov	esi, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR ___n$126106[esp+12], ecx
	test	ecx, ecx
	mov	ecx, DWORD PTR ___result$[esp+12]
	jle	SHORT $LN1@copy@12
	npad	4
$LL3@copy@12:

; 202  :     *__result = *__first;

	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]

; 203  :     ++__first;

	add	edx, 8
	cmp	edx, ebp
	mov	DWORD PTR [ecx+4], eax
	jne	SHORT $LN16@copy@12
	mov	edx, DWORD PTR [ebx+4]
	add	ebx, 4
	lea	ebp, DWORD PTR [edx+128]
$LN16@copy@12:

; 204  :     ++__result;

	add	ecx, 8
	cmp	ecx, DWORD PTR ___result$[esp+20]
	jne	SHORT $LN2@copy@12
	mov	edi, DWORD PTR [esi+4]
	add	esi, 4
	lea	ecx, DWORD PTR [edi+128]
	mov	DWORD PTR ___result$[esp+20], ecx
	mov	ecx, edi
$LN2@copy@12:
	mov	eax, DWORD PTR ___n$126106[esp+12]
	sub	eax, 1
	test	eax, eax
	mov	DWORD PTR ___n$126106[esp+12], eax
	jg	SHORT $LL3@copy@12

; 201  :   for (_Distance __n = __last - __first; __n > 0; --__n) {

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+12]
$LN1@copy@12:

; 205  :   }
; 206  :   return __result;

	mov	edx, DWORD PTR ___result$[esp+20]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edi
	pop	edi
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], esi
	pop	esi
	pop	ebp
	pop	ebx

; 207  : }

	ret	0
??$__copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__copy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$__copy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z PROC ; stlp_std::priv::__copy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >, COMDAT
; ___$ReturnUdt$ = esi

; 270  :                               const __false_type& /*BothPtrType*/) {

	push	ecx

; 271  :   return __copy(__first, __last, __result,
; 272  :                 _STLP_ITERATOR_CATEGORY(__first, _InputIter),
; 273  :                 _STLP_DISTANCE_TYPE(__first, _InputIter));

	mov	ecx, DWORD PTR ___result$[esp]
	mov	edx, DWORD PTR ___result$[esp+4]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	push	esi
	mov	DWORD PTR [eax+12], edx
	call	??$__copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>
	add	esp, 52					; 00000034H
	mov	eax, esi
	pop	ecx

; 274  : }

	ret	0
??$__copy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z ENDP ; stlp_std::priv::__copy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator_base.h
_TEXT	ENDS
;	COMDAT ??$__advance@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@H@stlp_std@@YAXAAU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@HABUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
??$__advance@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@H@stlp_std@@YAXAAU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@HABUrandom_access_iterator_tag@0@@Z PROC ; stlp_std::__advance<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,int>, COMDAT
; ___i$ = esi
; ___n$ = ebx

; 522  :   __i += __n;

	jmp	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
??$__advance@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@H@stlp_std@@YAXAAU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@HABUrandom_access_iterator_tag@0@@Z ENDP ; stlp_std::__advance<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,int>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__ucopy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$__ucopy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z PROC ; stlp_std::priv::__ucopy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >, COMDAT
; ___$ReturnUdt$ = esi

; 133  :                                const __false_type& /*BothPtrType*/) {

	push	ecx

; 134  :   return __ucopy(__first, __last, __result,
; 135  :                  _STLP_ITERATOR_CATEGORY(__first, _InputIter),
; 136  :                  _STLP_DISTANCE_TYPE(__first, _InputIter));

	mov	ecx, DWORD PTR ___result$[esp]
	mov	edx, DWORD PTR ___result$[esp+4]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, esi
	mov	DWORD PTR [eax+12], edx
	call	??$__ucopy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>
	add	esp, 48					; 00000030H
	mov	eax, esi
	pop	ecx

; 137  : }

	ret	0
??$__ucopy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z ENDP ; stlp_std::priv::__ucopy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$__copy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z PROC ; stlp_std::priv::__copy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >, COMDAT
; ___$ReturnUdt$ = esi

; 271  :   return __copy(__first, __last, __result,
; 272  :                 _STLP_ITERATOR_CATEGORY(__first, _InputIter),
; 273  :                 _STLP_DISTANCE_TYPE(__first, _InputIter));

	mov	ecx, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+20]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+12]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+16]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+36]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+28]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+32]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+52]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+8], ecx
	push	esi
	mov	DWORD PTR [eax+12], edx
	call	??$__copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,int>
	add	esp, 52					; 00000034H
	mov	eax, esi

; 274  : }

	ret	0
??$__copy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z ENDP ; stlp_std::priv::__copy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z PROC ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >, COMDAT
; ___$ReturnUdt$ = eax

; 280  :   _STLP_DEBUG_CHECK(_STLP_PRIV __check_range(__first, __last))
; 281  :   return _STLP_PRIV __copy_aux(__first, __last, __result, _BothPtrType< _InputIter, _OutputIter>::_Answer());

	mov	ecx, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	push	esi
	mov	esi, eax
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	call	??$__copy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z ; stlp_std::priv::__copy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
	add	esp, 48					; 00000030H
	mov	eax, esi

; 282  : }

	pop	esi
	ret	0
??$copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ENDP ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator_base.h
_TEXT	ENDS
;	COMDAT ??$advance@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@H@stlp_std@@YAXAAU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@H@Z
_TEXT	SEGMENT
??$advance@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@H@stlp_std@@YAXAAU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@H@Z PROC ; stlp_std::advance<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,int>, COMDAT
; ___i$ = esi
; ___n$ = ebx

; 527  :   __advance(__i, __n, _STLP_ITERATOR_CATEGORY(__i, _InputIterator));

	jmp	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
??$advance@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@H@stlp_std@@YAXAAU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@H@Z ENDP ; stlp_std::advance<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,int>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$uninitialized_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$uninitialized_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z PROC ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >, COMDAT
; ___$ReturnUdt$ = eax

; 144  : { return _STLP_PRIV __ucopy_aux(__first, __last, __result, _BothPtrType< _InputIter, _ForwardIter>::_Answer()); }

	mov	ecx, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	push	esi
	mov	esi, eax
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	call	??$__ucopy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z ; stlp_std::priv::__ucopy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
	add	esp, 48					; 00000030H
	mov	eax, esi
	pop	esi
	ret	0
??$uninitialized_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ENDP ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator_base.h
_TEXT	ENDS
;	COMDAT ??$__distance@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAHABU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0ABUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
??$__distance@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAHABU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0ABUrandom_access_iterator_tag@0@@Z PROC ; stlp_std::__distance<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >, COMDAT
; ___first$ = esi
; ___last$ = edx

; 372  :   return __last - __first;

	mov	eax, DWORD PTR [edx+12]
	sub	eax, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR [edx]
	sub	ecx, DWORD PTR [edx+4]
	sar	eax, 2
	push	edi
	lea	edi, DWORD PTR [eax+eax*4]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, DWORD PTR [esi]
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	edi, DWORD PTR [eax+edi*2]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	ecx, edx
	add	edi, edx
	shr	ecx, 31					; 0000001fH
	lea	eax, DWORD PTR [ecx+edi-10]
	pop	edi

; 373  : }

	ret	0
??$__distance@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAHABU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0ABUrandom_access_iterator_tag@0@@Z ENDP ; stlp_std::__distance<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??Y?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z
_TEXT	SEGMENT
??Y?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator+=, COMDAT
; _this$ = eax
; ___n$ = edx

; 208  :   _Self& operator+=(difference_type __n) { this->_M_advance(__n); return *this; }

	push	esi
	mov	esi, eax
	call	?_M_advance@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_advance
	mov	eax, esi
	pop	esi
	ret	0
??Y?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_reserve_map_at_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z
_TEXT	SEGMENT
?_M_reserve_map_at_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reserve_map_at_front, COMDAT
; _this$ = ecx
; ___nodes_to_add$ = eax

; 1047 :   void _M_reserve_map_at_front (size_type __nodes_to_add = 1) {

	push	esi
	mov	esi, ecx

; 1048 :     if (__nodes_to_add > size_type(this->_M_start._M_node - this->_M_map._M_data))

	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, DWORD PTR [esi+32]
	sar	ecx, 2
	cmp	eax, ecx
	jbe	SHORT $LN1@M_reserve_@4

; 1049 :       _M_reallocate_map(__nodes_to_add, true);

	push	eax
	mov	al, 1
	call	?_M_reallocate_map@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI_N@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reallocate_map
$LN1@M_reserve_@4:
	pop	esi

; 1050 :   }

	ret	0
?_M_reserve_map_at_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reserve_map_at_front
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??H?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z
_TEXT	SEGMENT
___tmp$ = -16						; size = 16
___n$ = 8						; size = 4
??H?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator+, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = edi

; 209  :   _Self operator+(difference_type __n) const {

	sub	esp, 20					; 00000014H

; 210  :     _Self __tmp = *this;

	mov	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR ___tmp$[esp+24], edx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR ___tmp$[esp+20], ecx
	mov	ecx, DWORD PTR [eax+8]
	push	esi
	mov	DWORD PTR ___tmp$[esp+36], edx

; 211  :     return __tmp += __n;

	mov	edx, DWORD PTR ___n$[esp+20]
	lea	esi, DWORD PTR ___tmp$[esp+24]
	mov	DWORD PTR ___tmp$[esp+32], ecx
	call	?_M_advance@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_advance
	mov	eax, DWORD PTR ___tmp$[esp+24]
	mov	ecx, DWORD PTR ___tmp$[esp+28]
	mov	edx, DWORD PTR ___tmp$[esp+32]
	mov	DWORD PTR [edi], eax
	mov	eax, DWORD PTR ___tmp$[esp+36]
	mov	DWORD PTR [edi+4], ecx
	mov	DWORD PTR [edi+8], edx
	mov	DWORD PTR [edi+12], eax
	mov	eax, edi

; 212  :   }

	pop	esi
	add	esp, 20					; 00000014H
	ret	4
??H?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator+
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@20@0U120@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@20@0U120@@Z PROC ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >, COMDAT
; ___$ReturnUdt$ = eax

; 280  :   _STLP_DEBUG_CHECK(_STLP_PRIV __check_range(__first, __last))
; 281  :   return _STLP_PRIV __copy_aux(__first, __last, __result, _BothPtrType< _InputIter, _OutputIter>::_Answer());

	mov	ecx, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	push	esi
	mov	esi, eax
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	call	??$__copy_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z ; stlp_std::priv::__copy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
	add	esp, 48					; 00000030H
	mov	eax, esi

; 282  : }

	pop	esi
	ret	0
??$copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@20@0U120@@Z ENDP ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_iterator_base.h
_TEXT	ENDS
;	COMDAT ??$distance@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAHU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
??$distance@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAHU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0@Z PROC ; stlp_std::distance<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >, COMDAT

; 378  :   return __distance(__first, __last, _STLP_ITERATOR_CATEGORY(__first, _InputIterator));

	mov	eax, DWORD PTR ___last$[esp+8]
	sub	eax, DWORD PTR ___first$[esp+8]
	mov	ecx, DWORD PTR ___first$[esp+4]
	sub	ecx, DWORD PTR ___first$[esp-4]
	sar	eax, 2
	push	esi
	lea	esi, DWORD PTR [eax+eax*4]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	mov	ecx, DWORD PTR ___last$[esp]
	sub	ecx, DWORD PTR ___last$[esp+4]
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	esi, DWORD PTR [eax+esi*2]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	ecx, edx
	add	esi, edx
	shr	ecx, 31					; 0000001fH
	lea	eax, DWORD PTR [ecx+esi-10]
	pop	esi

; 379  : }

	ret	0
??$distance@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@stlp_std@@YAHU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@0@Z ENDP ; stlp_std::distance<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.c
_TEXT	ENDS
;	COMDAT ?_M_new_elements_at_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z
_TEXT	SEGMENT
?_M_new_elements_at_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_new_elements_at_back, COMDAT
; _this$ = ecx
; ___new_elems$ = eax

; 750  : void deque<_Tp,_Alloc>::_M_new_elements_at_back(size_type __new_elems) {

	push	ebx
	push	esi
	mov	esi, ecx

; 751  :   size_type __new_nodes
; 752  :       = (__new_elems + this->buffer_size() - 1) / this->buffer_size();

	lea	ecx, DWORD PTR [eax+9]
	mov	eax, -858993459				; cccccccdH
	mul	ecx

; 753  :   _M_reserve_map_at_back(__new_nodes);

	mov	eax, DWORD PTR [esi+36]
	mov	ebx, edx
	mov	edx, DWORD PTR [esi+28]
	sub	edx, DWORD PTR [esi+32]
	shr	ebx, 3
	sar	edx, 2
	sub	eax, edx
	lea	ecx, DWORD PTR [ebx+1]
	cmp	ecx, eax
	push	edi
	jbe	SHORT $LN10@M_new_elem@3
	push	ebx
	xor	al, al
	call	?_M_reallocate_map@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI_N@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reallocate_map
$LN10@M_new_elem@3:

; 754  :   size_type __i = 1;

	mov	edi, 1

; 755  :   _STLP_TRY {
; 756  :     for (; __i <= __new_nodes; ++__i)

	cmp	ebx, edi
	jb	SHORT $LN1@M_new_elem@3
	push	ebp
	mov	ebp, DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
$LL3@M_new_elem@3:

; 757  :       *(this->_M_finish._M_node + __i) = this->_M_map_size.allocate(this->buffer_size());

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	120					; 00000078H
	call	ebp
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR [edx+edi*4], eax
	add	edi, 1
	cmp	edi, ebx
	jbe	SHORT $LL3@M_new_elem@3
	pop	ebp
$LN1@M_new_elem@3:
	pop	edi
	pop	esi
	pop	ebx

; 758  :   }
; 759  :   _STLP_UNWIND(for (size_type __j = 1; __j < __i; ++__j)
; 760  :                  this->_M_map_size.deallocate(*(this->_M_finish._M_node + __j), this->buffer_size()))
; 761  : }

	ret	0
?_M_new_elements_at_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_new_elements_at_back
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_new_elements_at_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z
_TEXT	SEGMENT
?_M_new_elements_at_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_new_elements_at_front, COMDAT
; _this$ = ecx
; ___new_elems$ = eax

; 736  : void deque<_Tp,_Alloc>::_M_new_elements_at_front(size_type __new_elems) {

	push	ebx
	push	esi
	mov	esi, ecx

; 737  :   size_type __new_nodes
; 738  :       = (__new_elems + this->buffer_size() - 1) / this->buffer_size();

	lea	ecx, DWORD PTR [eax+9]
	mov	eax, -858993459				; cccccccdH
	mul	ecx
	mov	ebx, edx

; 739  :   _M_reserve_map_at_front(__new_nodes);

	mov	edx, DWORD PTR [esi+12]
	sub	edx, DWORD PTR [esi+32]
	shr	ebx, 3
	sar	edx, 2
	cmp	ebx, edx
	jbe	SHORT $LN10@M_new_elem@4
	push	ebx
	mov	al, 1
	call	?_M_reallocate_map@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI_N@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reallocate_map
$LN10@M_new_elem@4:

; 740  :   size_type __i = 1;
; 741  :   _STLP_TRY {
; 742  :     for (; __i <= __new_nodes; ++__i)

	cmp	ebx, 1
	jb	SHORT $LN1@M_new_elem@4
	push	ebp
	mov	ebp, DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	push	edi
	mov	edi, 4
	npad	6
$LL3@M_new_elem@4:

; 743  :       *(this->_M_start._M_node - __i) = this->_M_map_size.allocate(this->buffer_size());

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	120					; 00000078H
	call	ebp
	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, edi
	add	edi, 4
	sub	ebx, 1
	mov	DWORD PTR [ecx], eax
	jne	SHORT $LL3@M_new_elem@4
	pop	edi
	pop	ebp
$LN1@M_new_elem@4:
	pop	esi
	pop	ebx

; 744  :   }
; 745  :   _STLP_UNWIND(for (size_type __j = 1; __j < __i; ++__j)
; 746  :                  this->_M_map_size.deallocate(*(this->_M_start._M_node - __j), this->buffer_size()))
; 747  : }

	ret	0
?_M_new_elements_at_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_new_elements_at_front
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ?_M_reserve_elements_at_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@I@Z
_TEXT	SEGMENT
___tmp$284049 = -20					; size = 16
?_M_reserve_elements_at_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@I@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reserve_elements_at_back, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = edi
; ___n$ = eax

; 1026 :   iterator _M_reserve_elements_at_back(size_type __n) {

	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	mov	esi, ecx

; 1027 :     size_type __vacancies = (this->_M_finish._M_last - this->_M_finish._M_cur) - 1;

	mov	ecx, DWORD PTR [esi+24]
	sub	ecx, DWORD PTR [esi+16]
	mov	ebx, eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR [edx+eax-1]

; 1028 :     if (__n > __vacancies)

	cmp	ebx, ecx
	jbe	SHORT $LN1@M_reserve_@5

; 1029 :       _M_new_elements_at_back(__n - __vacancies);

	mov	eax, ebx
	sub	eax, ecx
	mov	ecx, esi
	call	?_M_new_elements_at_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_new_elements_at_back
$LN1@M_reserve_@5:

; 1030 :     return this->_M_finish + difference_type(__n);

	mov	ecx, DWORD PTR [esi+16]
	mov	edx, DWORD PTR [esi+20]
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR ___tmp$284049[esp+28], ecx
	mov	ecx, DWORD PTR [esi+28]
	lea	esi, DWORD PTR ___tmp$284049[esp+28]
	mov	DWORD PTR ___tmp$284049[esp+32], edx
	mov	DWORD PTR ___tmp$284049[esp+36], eax
	mov	DWORD PTR ___tmp$284049[esp+40], ecx
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
	mov	edx, DWORD PTR ___tmp$284049[esp+28]
	mov	eax, DWORD PTR ___tmp$284049[esp+32]
	mov	ecx, DWORD PTR ___tmp$284049[esp+36]
	mov	DWORD PTR [edi], edx
	mov	edx, DWORD PTR ___tmp$284049[esp+40]
	mov	DWORD PTR [edi+4], eax

; 1031 :   }

	pop	esi
	mov	DWORD PTR [edi+8], ecx
	mov	DWORD PTR [edi+12], edx
	mov	eax, edi
	pop	ebx
	add	esp, 20					; 00000014H
	ret	0
?_M_reserve_elements_at_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@I@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reserve_elements_at_back
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_reserve_elements_at_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@I@Z
_TEXT	SEGMENT
___tmp$284069 = -20					; size = 16
?_M_reserve_elements_at_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@I@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reserve_elements_at_front, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = edi
; ___n$ = eax

; 1019 :   iterator _M_reserve_elements_at_front(size_type __n) {

	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	mov	esi, ecx

; 1020 :     size_type __vacancies = this->_M_start._M_cur - this->_M_start._M_first;

	mov	ecx, DWORD PTR [esi]
	sub	ecx, DWORD PTR [esi+4]
	mov	ebx, eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx

; 1021 :     if (__n > __vacancies)

	cmp	ebx, ecx
	jbe	SHORT $LN1@M_reserve_@6

; 1022 :       _M_new_elements_at_front(__n - __vacancies);

	mov	eax, ebx
	sub	eax, ecx
	mov	ecx, esi
	call	?_M_new_elements_at_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_new_elements_at_front
$LN1@M_reserve_@6:

; 1023 :     return this->_M_start - difference_type(__n);

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi+8]
	mov	DWORD PTR ___tmp$284069[esp+28], eax
	mov	eax, DWORD PTR [esi+12]
	neg	ebx
	lea	esi, DWORD PTR ___tmp$284069[esp+28]
	mov	DWORD PTR ___tmp$284069[esp+32], ecx
	mov	DWORD PTR ___tmp$284069[esp+36], edx
	mov	DWORD PTR ___tmp$284069[esp+40], eax
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
	mov	ecx, DWORD PTR ___tmp$284069[esp+28]
	mov	edx, DWORD PTR ___tmp$284069[esp+32]
	mov	eax, DWORD PTR ___tmp$284069[esp+36]
	mov	DWORD PTR [edi], ecx
	mov	ecx, DWORD PTR ___tmp$284069[esp+40]
	mov	DWORD PTR [edi+4], edx
	mov	DWORD PTR [edi+8], eax

; 1024 :   }

	pop	esi
	mov	DWORD PTR [edi+12], ecx
	mov	eax, edi
	pop	ebx
	add	esp, 20					; 00000014H
	ret	0
?_M_reserve_elements_at_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@I@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reserve_elements_at_front
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___first$ = 12						; size = 16
___last$ = 28						; size = 16
___result$ = 44						; size = 16
??$__copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>, COMDAT

; 201  :   for (_Distance __n = __last - __first; __n > 0; --__n) {

	mov	eax, DWORD PTR ___last$[esp+8]
	mov	ecx, DWORD PTR ___first$[esp+4]
	push	ebx
	push	ebp
	push	esi
	mov	esi, DWORD PTR ___first$[esp+8]
	push	edi
	mov	edi, DWORD PTR ___first$[esp+24]
	sub	eax, edi
	sar	eax, 2
	lea	ebx, DWORD PTR [eax+eax*4]
	sub	ecx, esi
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	mov	ecx, DWORD PTR ___last$[esp+12]
	sub	ecx, DWORD PTR ___last$[esp+16]
	sar	edx, 1
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp+12]
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	ebx, DWORD PTR [eax+ebx*2]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	mov	eax, DWORD PTR ___result$[esp+12]
	sar	edx, 1
	mov	ecx, edx
	add	ebx, edx
	mov	edx, DWORD PTR ___result$[esp+24]
	shr	ecx, 31					; 0000001fH
	lea	ecx, DWORD PTR [ecx+ebx-10]
	test	ecx, ecx
	mov	ebx, DWORD PTR ___result$[esp+16]
	jle	SHORT $LN1@copy@13
$LL3@copy@13:

; 202  :     *__result = *__first;

	mov	ebp, DWORD PTR [esi]
	mov	DWORD PTR [eax], ebp
	mov	ebp, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], ebp
	mov	ebp, DWORD PTR [esi+8]

; 203  :     ++__first;

	add	esi, 12					; 0000000cH
	cmp	esi, DWORD PTR ___first$[esp+20]
	mov	DWORD PTR [eax+8], ebp
	jne	SHORT $LN18@copy@13
	mov	esi, DWORD PTR [edi+4]
	add	edi, 4
	lea	ebp, DWORD PTR [esi+120]
	mov	DWORD PTR ___first$[esp+20], ebp
$LN18@copy@13:

; 204  :     ++__result;

	add	eax, 12					; 0000000cH
	cmp	eax, DWORD PTR ___result$[esp+20]
	jne	SHORT $LN2@copy@13
	mov	ebx, DWORD PTR [edx+4]
	add	edx, 4
	lea	eax, DWORD PTR [ebx+120]
	mov	DWORD PTR ___result$[esp+20], eax
	mov	eax, ebx
$LN2@copy@13:
	sub	ecx, 1
	test	ecx, ecx
	jg	SHORT $LL3@copy@13

; 201  :   for (_Distance __n = __last - __first; __n > 0; --__n) {

	mov	ebp, DWORD PTR ___$ReturnUdt$[esp+12]
$LN1@copy@13:

; 205  :   }
; 206  :   return __result;

	mov	ecx, DWORD PTR ___result$[esp+20]
	mov	DWORD PTR [ebp], eax
	mov	DWORD PTR [ebp+4], ebx

; 207  : }

	pop	edi
	mov	DWORD PTR [ebp+8], ecx
	pop	esi
	mov	DWORD PTR [ebp+12], edx
	mov	eax, ebp
	pop	ebp
	pop	ebx
	ret	0
??$__copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__copy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$__copy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z PROC ; stlp_std::priv::__copy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >, COMDAT
; ___$ReturnUdt$ = esi

; 270  :                               const __false_type& /*BothPtrType*/) {

	push	ecx

; 271  :   return __copy(__first, __last, __result,
; 272  :                 _STLP_ITERATOR_CATEGORY(__first, _InputIter),
; 273  :                 _STLP_DISTANCE_TYPE(__first, _InputIter));

	mov	ecx, DWORD PTR ___result$[esp]
	mov	edx, DWORD PTR ___result$[esp+4]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	push	esi
	mov	DWORD PTR [eax+12], edx
	call	??$__copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>
	add	esp, 52					; 00000034H
	mov	eax, esi
	pop	ecx

; 274  : }

	ret	0
??$__copy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z ENDP ; stlp_std::priv::__copy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??E?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ
_TEXT	SEGMENT
??E?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::operator++, COMDAT
; _this$ = eax

; 194  :   _Self& operator++() { this->_M_increment(); return *this; }

	add	DWORD PTR [eax], 12			; 0000000cH
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@operator@41
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 4
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], ecx
	add	ecx, 120				; 00000078H
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [eax], ecx
$LN3@operator@41:
	ret	0
??E?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@XZ ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::operator++
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__ucopy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
tv138 = 40						; size = 4
___result$ = 40						; size = 16
??$__ucopy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>, COMDAT
; ___$ReturnUdt$ = ecx

; 84   :   _OutputIter __cur = __result;

	mov	eax, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR ___result$[esp+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR ___result$[esp+8]
	mov	DWORD PTR [ecx+8], eax

; 85   :   _STLP_TRY {
; 86   :     for (_Distance __n = __last - __first; __n > 0; --__n) {

	mov	eax, DWORD PTR ___last$[esp+8]
	push	ebx
	push	ebp
	push	esi
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR ___last$[esp+8]
	sub	edx, DWORD PTR ___last$[esp+12]
	mov	ebx, DWORD PTR ___first$[esp+16]
	push	edi
	mov	edi, DWORD PTR ___first$[esp+24]
	sub	eax, edi
	sar	eax, 2
	lea	esi, DWORD PTR [eax+eax*4]
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	ebp, DWORD PTR [eax+esi*2]
	mov	esi, DWORD PTR ___first$[esp+12]
	mov	edx, ebx
	sub	edx, esi
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	ebp, edx
	lea	edx, DWORD PTR [eax+ebp-10]
	test	edx, edx
	jle	SHORT $LN38@ucopy@8
	mov	ebp, DWORD PTR [ecx+8]
	mov	DWORD PTR tv138[esp+12], ebp
$LL3@ucopy@8:

; 87   :       _Param_Construct(&*__cur, *__first);

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN18@ucopy@8
	mov	ebp, DWORD PTR [esi]
	mov	DWORD PTR [eax], ebp
	mov	ebp, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], ebp
	mov	ebp, DWORD PTR [esi+8]
	mov	DWORD PTR [eax+8], ebp
	mov	ebp, DWORD PTR tv138[esp+12]
$LN18@ucopy@8:

; 88   :       ++__first;

	add	esi, 12					; 0000000cH
	cmp	esi, ebx
	jne	SHORT $LN24@ucopy@8
	mov	esi, DWORD PTR [edi+4]
	add	edi, 4
	lea	ebx, DWORD PTR [esi+120]
$LN24@ucopy@8:

; 89   :       ++__cur;

	add	eax, 12					; 0000000cH
	cmp	eax, ebp
	mov	DWORD PTR [ecx], eax
	jne	SHORT $LN2@ucopy@8
	mov	eax, DWORD PTR [ecx+12]
	add	eax, 4
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR [eax]
	lea	ebp, DWORD PTR [eax+120]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR tv138[esp+12], ebp
	mov	DWORD PTR [ecx], eax
$LN2@ucopy@8:
	sub	edx, 1
	test	edx, edx
	jg	SHORT $LL3@ucopy@8
	mov	DWORD PTR [ecx+8], ebp
$LN38@ucopy@8:
	pop	edi
	pop	esi
	pop	ebp

; 90   :     }
; 91   :     return __cur;

	mov	eax, ecx
	pop	ebx

; 92   :   }
; 93   :   _STLP_UNWIND(_STLP_STD::_Destroy_Range(__result, __cur))
; 94   :   _STLP_RET_AFTER_THROW(__cur)
; 95   : }

	ret	0
??$__ucopy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z PROC ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >, COMDAT
; ___$ReturnUdt$ = eax

; 280  :   _STLP_DEBUG_CHECK(_STLP_PRIV __check_range(__first, __last))
; 281  :   return _STLP_PRIV __copy_aux(__first, __last, __result, _BothPtrType< _InputIter, _OutputIter>::_Answer());

	mov	ecx, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	push	esi
	mov	esi, eax
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	call	??$__copy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@00ABU__false_type@1@@Z ; stlp_std::priv::__copy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
	add	esp, 48					; 00000030H
	mov	eax, esi

; 282  : }

	pop	esi
	ret	0
??$copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ENDP ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.c
_TEXT	ENDS
;	COMDAT ?_M_erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@0ABU__false_type@3@@Z
_TEXT	SEGMENT
___elems_before$ = -28					; size = 4
tv144 = -24						; size = 4
tv77 = -24						; size = 4
$T284329 = -20						; size = 16
$T284278 = -20						; size = 16
___n$ = 8						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
___first$ = 16						; size = 16
___tmp$284590 = 32					; size = 16
___tmp$284366 = 32					; size = 16
___new_finish$121754 = 32				; size = 16
$T284288 = 32						; size = 16
$T284282 = 32						; size = 16
___last$ = 32						; size = 16
?_M_erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@0ABU__false_type@3@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_erase, COMDAT

; 316  :                                          const __false_type& /*_Movable*/) {

	sub	esp, 28					; 0000001cH

; 317  :   difference_type __n = __last - __first;

	mov	eax, DWORD PTR ___last$[esp+36]
	mov	ecx, DWORD PTR ___last$[esp+24]
	sub	ecx, DWORD PTR ___last$[esp+28]
	push	ebx
	mov	ebx, DWORD PTR ___first$[esp+40]
	sub	eax, ebx
	sar	eax, 2
	push	ebp
	push	esi
	lea	esi, DWORD PTR [eax+eax*4]
	mov	ebp, DWORD PTR _this$[esp+36]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	mov	ecx, DWORD PTR ___first$[esp+44]
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	esi, DWORD PTR [eax+esi*2]
	push	edi
	mov	edi, DWORD PTR ___first$[esp+40]
	sub	ecx, edi
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx

; 318  :   difference_type __elems_before = __first - this->_M_start;

	mov	eax, DWORD PTR [ebp+4]
	sar	edx, 1
	add	esi, edx
	mov	DWORD PTR $T284278[esp+48], eax
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+esi-10]
	mov	DWORD PTR ___n$[esp+40], edx
	mov	edx, DWORD PTR [ebp+12]
	mov	ecx, DWORD PTR [ebp+8]
	sub	ecx, DWORD PTR [ebp]
	mov	eax, ebx
	sub	eax, edx
	sar	eax, 2
	lea	esi, DWORD PTR [eax+eax*4]
	mov	edx, edi
	sub	edx, DWORD PTR ___first$[esp+44]
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	esi, DWORD PTR [eax+esi*2]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx

; 319  :   if (__elems_before <= difference_type(this->size() - __n) / 2) {

	mov	eax, DWORD PTR [ebp+4]
	sar	edx, 1
	mov	ecx, edx
	add	esi, edx
	shr	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+esi-10]
	mov	DWORD PTR ___elems_before$[esp+44], edx
	mov	edx, DWORD PTR [ebp+12]
	mov	DWORD PTR $T284329[esp+48], eax
	mov	DWORD PTR $T284329[esp+56], edx
	mov	edx, DWORD PTR [ebp+16]
	sub	edx, DWORD PTR [ebp+20]
	lea	esi, DWORD PTR [ebp+16]
	mov	ecx, DWORD PTR [ebp+8]
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sub	ecx, DWORD PTR [ebp]
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, eax
	mov	eax, DWORD PTR [esi+12]
	sub	eax, DWORD PTR $T284329[esp+56]
	sar	eax, 2
	lea	eax, DWORD PTR [eax+eax*4]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	DWORD PTR tv77[esp+44], eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	mov	ecx, DWORD PTR tv77[esp+44]
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	ecx, edx
	add	eax, ecx
	sub	eax, DWORD PTR ___n$[esp+40]

; 320  :     copy_backward(this->_M_start, __first, __last);

	sub	esp, 16					; 00000010H
	sub	eax, 10					; 0000000aH
	cdq
	sub	eax, edx
	sar	eax, 1
	cmp	DWORD PTR ___elems_before$[esp+60], eax
	mov	eax, esp
	jg	$LN2@M_erase@23
	mov	ecx, DWORD PTR ___last$[esp+56]
	mov	edx, DWORD PTR ___last$[esp+60]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+64]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+68]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+60]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+64]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ebx
	mov	ecx, DWORD PTR [ebp]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [ebp+12]
	mov	DWORD PTR [eax+12], edx
	lea	eax, DWORD PTR $T284282[esp+88]
	call	??$copy_backward@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >

; 321  :     iterator __new_start = this->_M_start + __n;

	mov	eax, DWORD PTR [ebp]
	mov	ecx, DWORD PTR [ebp+4]
	mov	edx, DWORD PTR [ebp+8]
	mov	ebx, DWORD PTR ___n$[esp+88]
	mov	DWORD PTR ___tmp$284366[esp+88], eax
	mov	eax, DWORD PTR [ebp+12]
	add	esp, 48					; 00000030H
	lea	esi, DWORD PTR ___tmp$284366[esp+40]
	mov	DWORD PTR ___tmp$284366[esp+44], ecx
	mov	DWORD PTR ___tmp$284366[esp+48], edx
	mov	DWORD PTR ___tmp$284366[esp+52], eax
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance

; 322  :     _STLP_STD::_Destroy_Range(this->_M_start, __new_start);
; 323  :     this->_M_destroy_nodes(this->_M_start._M_node, __new_start._M_node);

	mov	esi, DWORD PTR [ebp+12]
	mov	edi, DWORD PTR ___tmp$284366[esp+52]
	cmp	esi, edi
	jae	SHORT $LN57@M_erase@23
	mov	ebx, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	npad	4
$LL59@M_erase@23:
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN58@M_erase@23
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebx
$LN58@M_erase@23:
	add	esi, 4
	cmp	esi, edi
	jb	SHORT $LL59@M_erase@23
$LN57@M_erase@23:

; 324  :     this->_M_start = __new_start;

	mov	ecx, DWORD PTR ___tmp$284366[esp+40]
	mov	edx, DWORD PTR ___tmp$284366[esp+44]
	mov	eax, DWORD PTR ___tmp$284366[esp+48]
	mov	DWORD PTR [ebp], ecx
	mov	DWORD PTR [ebp+4], edx
	mov	DWORD PTR [ebp+8], eax
	mov	DWORD PTR [ebp+12], edi

; 325  :   }
; 326  :   else {

	jmp	$LN1@M_erase@23
$LN2@M_erase@23:

; 327  :     copy(__last, this->_M_finish, __first);

	mov	ecx, DWORD PTR ___first$[esp+60]
	mov	edx, DWORD PTR ___first$[esp+64]
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ebx
	mov	ecx, DWORD PTR [esi]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR ___last$[esp+72]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+76]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+96]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+100]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	lea	eax, DWORD PTR $T284288[esp+88]
	call	??$copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >

; 328  :     iterator __new_finish = this->_M_finish - __n;

	mov	eax, DWORD PTR ___n$[esp+88]
	add	esp, 48					; 00000030H
	push	eax
	lea	edi, DWORD PTR ___new_finish$121754[esp+44]
	mov	eax, esi
	call	??G?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator-

; 329  :     _STLP_STD::_Destroy_Range(__new_finish, this->_M_finish);
; 330  :     this->_M_destroy_nodes(__new_finish._M_node + 1, this->_M_finish._M_node + 1);

	mov	edi, DWORD PTR [ebp+28]
	mov	ebx, DWORD PTR ___new_finish$121754[esp+52]
	add	edi, 4
	add	ebx, 4
	cmp	ebx, edi
	jae	SHORT $LN93@M_erase@23
$LL95@M_erase@23:
	mov	eax, DWORD PTR [ebx]
	test	eax, eax
	je	SHORT $LN94@M_erase@23
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN94@M_erase@23:
	add	ebx, 4
	cmp	ebx, edi
	jb	SHORT $LL95@M_erase@23
$LN93@M_erase@23:

; 331  :     this->_M_finish = __new_finish;

	mov	ecx, DWORD PTR ___new_finish$121754[esp+40]
	mov	edx, DWORD PTR ___new_finish$121754[esp+44]
	mov	eax, DWORD PTR ___new_finish$121754[esp+48]
	mov	DWORD PTR [esi], ecx
	mov	ecx, DWORD PTR ___new_finish$121754[esp+52]
	mov	DWORD PTR [esi+4], edx
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], ecx
$LN1@M_erase@23:

; 332  :   }
; 333  :   return this->_M_start + __elems_before;

	mov	edx, DWORD PTR [ebp]
	mov	eax, DWORD PTR [ebp+4]
	mov	ecx, DWORD PTR [ebp+8]
	mov	ebx, DWORD PTR ___elems_before$[esp+44]
	mov	DWORD PTR ___tmp$284590[esp+40], edx
	mov	edx, DWORD PTR [ebp+12]
	lea	esi, DWORD PTR ___tmp$284590[esp+40]
	mov	DWORD PTR ___tmp$284590[esp+44], eax
	mov	DWORD PTR ___tmp$284590[esp+48], ecx
	mov	DWORD PTR ___tmp$284590[esp+52], edx
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+40]
	mov	ecx, DWORD PTR ___tmp$284590[esp+40]
	mov	edx, DWORD PTR ___tmp$284590[esp+44]

; 334  : }

	pop	edi
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___tmp$284590[esp+44]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___tmp$284590[esp+48]
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	pop	ebx
	add	esp, 28					; 0000001cH
	ret	40					; 00000028H
?_M_erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@0ABU__false_type@3@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_erase
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z
_TEXT	SEGMENT
$T284626 = -16						; size = 16
$T284609 = -16						; size = 16
??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >, COMDAT
; _this$ = edi
; ___x$ = ebx

; 491  :   { _STLP_PRIV __ucopy(__x.begin(), __x.end(), this->_M_start); }

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR [ebx+4]
	mov	edx, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [ebx+8]
	push	esi
	mov	esi, DWORD PTR [ebx+28]
	mov	DWORD PTR $T284626[esp+28], eax
	mov	eax, DWORD PTR [ebx+12]
	mov	DWORD PTR $T284626[esp+36], eax
	mov	eax, DWORD PTR [ebx+16]
	sub	eax, DWORD PTR [ebx+20]
	sub	esi, DWORD PTR $T284626[esp+36]
	sar	eax, 3
	sar	esi, 2
	sub	esi, 1
	sub	ecx, edx
	shl	esi, 4
	add	eax, esi
	sar	ecx, 3
	add	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [edi], ecx
	mov	DWORD PTR [edi+4], ecx
	mov	DWORD PTR [edi+8], ecx
	mov	DWORD PTR [edi+12], ecx
	mov	DWORD PTR [edi+16], ecx
	mov	DWORD PTR [edi+20], ecx
	mov	DWORD PTR [edi+24], ecx
	mov	DWORD PTR [edi+28], ecx
	mov	DWORD PTR [edi+32], ecx
	push	eax
	mov	esi, edi
	mov	DWORD PTR [edi+36], ecx
	call	?_M_initialize_map@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_initialize_map
	mov	ecx, DWORD PTR [edi]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [edi+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [edi+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [ebx+16]
	mov	edx, DWORD PTR [ebx+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [ebx+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ebx+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [ebx]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR [ebx+4]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [ebx+8]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ebx+12]
	mov	DWORD PTR [eax+8], ecx
	lea	esi, DWORD PTR $T284609[esp+72]
	mov	DWORD PTR [eax+12], edx
	call	??$__ucopy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@@Z ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
	add	esp, 48					; 00000030H
	mov	eax, edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@0@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
?erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@0@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::erase, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = esi

; 830  :     if (__first == this->_M_start && __last == this->_M_finish) {

	mov	ecx, DWORD PTR ___first$[esp-4]
	mov	edx, DWORD PTR ___last$[esp-4]
	push	edi
	mov	edi, eax
	cmp	ecx, DWORD PTR [edi]
	jne	SHORT $LN3@erase@33
	cmp	edx, DWORD PTR [edi+16]
	jne	SHORT $LN3@erase@33

; 831  :       clear();

	call	?clear@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::clear

; 832  :       return this->_M_finish;

	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR [esi+4], ecx
	mov	edx, DWORD PTR [edi+24]
	mov	DWORD PTR [esi+8], edx
	mov	eax, DWORD PTR [edi+28]
	mov	DWORD PTR [esi+12], eax

; 837  :       return _M_erase(__first, __last, _Movable());

	mov	eax, esi

; 838  :     }
; 839  :   }

	pop	edi
	ret	32					; 00000020H
$LN3@erase@33:

; 833  :     }
; 834  :     else {
; 835  :       if (__first == __last)

	cmp	ecx, edx
	jne	SHORT $LN1@erase@33

; 836  :         return __first;

	mov	edx, DWORD PTR ___first$[esp+8]
	mov	eax, DWORD PTR ___first$[esp+12]
	mov	DWORD PTR [esi], ecx
	mov	ecx, DWORD PTR ___first$[esp+4]
	mov	DWORD PTR [esi+4], ecx
	mov	DWORD PTR [esi+8], edx
	mov	DWORD PTR [esi+12], eax

; 837  :       return _M_erase(__first, __last, _Movable());

	mov	eax, esi

; 838  :     }
; 839  :   }

	pop	edi
	ret	32					; 00000020H
$LN1@erase@33:

; 837  :       return _M_erase(__first, __last, _Movable());

	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ___last$[esp+20]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+24]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR ___last$[esp+28]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+24]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+36]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___first$[esp+44]
	push	esi
	mov	DWORD PTR [eax+8], edx
	push	edi
	mov	DWORD PTR [eax+12], ecx
	call	?_M_erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@0ABU__false_type@3@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_erase
	mov	eax, esi

; 838  :     }
; 839  :   }

	pop	edi
	ret	32					; 00000020H
?erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@0@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::erase
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_deque.h
_TEXT	ENDS
;	COMDAT ??0?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAE@ABV01@@Z PROC ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >, COMDAT
; _this$ = eax
; ___x$ = ebx

; 159  :   deque(const _Self& __x) : _M_impl(__x._M_impl) {}

	push	edi
	mov	edi, eax
	call	??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
	mov	eax, edi
	pop	edi
	ret	0
??0?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAE@ABV01@@Z ENDP ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
??0?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QAE@ABV0@@Z PROC ; xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >, COMDAT
; _this$ = eax
; ___that$ = ebx
	push	edi
	mov	edi, eax
	call	??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
	mov	eax, edi
	pop	edi
	ret	0
??0?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QAE@ABV0@@Z ENDP ; xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0SSubGraph@CStatGraph@@QAE@ABU01@@Z
_TEXT	SEGMENT
??0SSubGraph@CStatGraph@@QAE@ABU01@@Z PROC		; CStatGraph::SSubGraph::SSubGraph, COMDAT
; _this$ = esi
; ___that$ = eax
	mov	ecx, DWORD PTR [eax]
	push	ebx
	push	edi
	lea	ebx, DWORD PTR [eax+4]
	lea	edi, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], ecx
	call	??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
	pop	edi
	mov	eax, esi
	pop	ebx
	ret	0
??0SSubGraph@CStatGraph@@QAE@ABU01@@Z ENDP		; CStatGraph::SSubGraph::SSubGraph
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__ucopy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$__ucopy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@@Z PROC ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >, COMDAT
; ___$ReturnUdt$ = esi

; 100  : { return __ucopy(__first, __last, __result, random_access_iterator_tag(), (ptrdiff_t*)0); }

	mov	ecx, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+20]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+12]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+16]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+36]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+28]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+32]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+52]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, esi
	mov	DWORD PTR [eax+12], edx
	call	??$__ucopy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>
	add	esp, 48					; 00000030H
	mov	eax, esi
	ret	0
??$__ucopy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@@Z ENDP ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$_Copy_Construct@USSubGraph@CStatGraph@@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@ABU12@@Z
_TEXT	SEGMENT
??$_Copy_Construct@USSubGraph@CStatGraph@@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@ABU12@@Z PROC ; stlp_std::_Copy_Construct<CStatGraph::SSubGraph>, COMDAT
; ___p$ = eax
; ___val$ = ecx

; 110  : #if defined (_STLP_DEBUG_UNINITIALIZED)
; 111  :   memset((char*)__p, _STLP_SHRED_BYTE, sizeof(_Tp));
; 112  : #endif
; 113  :   _STLP_PLACEMENT_NEW (__p) _Tp(__val);

	test	eax, eax
	je	SHORT $LN3@Copy_Const@22
	mov	edx, DWORD PTR [ecx]
	push	ebx
	push	edi
	lea	ebx, DWORD PTR [ecx+4]
	lea	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [eax], edx
	call	??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
	pop	edi
	pop	ebx
$LN3@Copy_Const@22:

; 114  : }

	ret	0
??$_Copy_Construct@USSubGraph@CStatGraph@@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@ABU12@@Z ENDP ; stlp_std::_Copy_Construct<CStatGraph::SSubGraph>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.c
_TEXT	ENDS
;	COMDAT ?_M_erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@ABU__false_type@3@@Z
_TEXT	SEGMENT
tv354 = -40						; size = 4
___index$ = -36						; size = 4
___next$ = -32						; size = 16
$T284866 = -16						; size = 16
$T284810 = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
___tmp$285011 = 12					; size = 16
$T284818 = 12						; size = 16
$T284814 = 12						; size = 16
___pos$ = 12						; size = 16
?_M_erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@ABU__false_type@3@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_erase, COMDAT
; _this$ = eax

; 235  :                                          const __false_type& /*_Movable*/) {

	sub	esp, 40					; 00000028H

; 236  :   iterator __next = __pos;

	mov	ecx, DWORD PTR ___pos$[esp+44]
	push	ebx
	mov	ebx, DWORD PTR ___pos$[esp+44]
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR ___pos$[esp+52]

; 237  :   ++__next;

	lea	edx, DWORD PTR [edi+12]
	cmp	edx, ecx
	mov	esi, eax
	mov	eax, DWORD PTR ___pos$[esp+64]
	mov	DWORD PTR ___next$[esp+56], edi
	mov	DWORD PTR ___next$[esp+60], ebx
	mov	DWORD PTR ___next$[esp+64], ecx
	mov	DWORD PTR ___next$[esp+68], eax
	mov	DWORD PTR ___next$[esp+56], edx
	jne	SHORT $LN9@M_erase@24
	lea	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR ___next$[esp+68], ecx
	mov	ecx, DWORD PTR [ecx]
	lea	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR ___next$[esp+60], ecx
	mov	DWORD PTR ___next$[esp+64], edx
	mov	DWORD PTR ___next$[esp+56], ecx
$LN9@M_erase@24:

; 238  :   difference_type __index = __pos - this->_M_start;

	mov	edx, DWORD PTR [esi+12]
	sub	eax, edx
	sar	eax, 2
	lea	ebp, DWORD PTR [eax+eax*4]
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, edi
	sub	edx, ebx
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	ebp, DWORD PTR [eax+ebp*2]
	mov	DWORD PTR $T284810[esp+60], ecx
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, DWORD PTR [esi]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx

; 239  :   if (size_type(__index) < this->size() >> 1) {

	mov	eax, DWORD PTR [esi+4]
	sar	edx, 1
	add	ebp, edx
	mov	ecx, edx
	mov	DWORD PTR $T284866[esp+60], eax
	shr	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR [ecx+ebp-10]
	mov	DWORD PTR ___index$[esp+56], edx
	mov	edx, DWORD PTR [esi+16]
	sub	edx, DWORD PTR [esi+20]
	mov	ebp, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR [esi+8]
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sub	ecx, DWORD PTR [esi]
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	DWORD PTR tv354[esp+56], eax
	mov	eax, DWORD PTR [esi+28]
	sub	eax, ebp
	sar	eax, 2
	sub	eax, 1
	lea	edx, DWORD PTR [eax+eax*4]
	mov	eax, DWORD PTR tv354[esp+56]
	lea	ebp, DWORD PTR [eax+edx*2]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	ebp, edx
	add	eax, ebp
	mov	ebp, DWORD PTR ___index$[esp+56]
	shr	eax, 1

; 240  :     copy_backward(this->_M_start, __pos, __next);

	sub	esp, 16					; 00000010H
	cmp	ebp, eax
	mov	eax, esp
	jae	$LN2@M_erase@24
	mov	ecx, DWORD PTR ___next$[esp+72]
	mov	edx, DWORD PTR ___next$[esp+76]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___next$[esp+80]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___next$[esp+84]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___pos$[esp+76]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___pos$[esp+80]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [esi]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [esi+12]
	mov	DWORD PTR [eax+12], edx
	lea	eax, DWORD PTR $T284814[esp+100]
	call	??$copy_backward@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >

; 241  :     pop_front();

	mov	ecx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [esi]
	sub	ecx, 12					; 0000000cH
	add	esp, 48					; 00000030H
	cmp	eax, ecx
	je	SHORT $LN37@M_erase@24
	add	eax, 12					; 0000000cH
	mov	DWORD PTR [esi], eax
	jmp	$LN55@M_erase@24
$LN37@M_erase@24:
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN44@M_erase@24
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN44@M_erase@24:
	mov	eax, DWORD PTR [esi+12]
	add	eax, 4
	mov	DWORD PTR [esi+12], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi+4], eax
	mov	edx, DWORD PTR [esi+4]
	add	eax, 120				; 00000078H
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi], edx

; 242  :   }
; 243  :   else {

	jmp	$LN55@M_erase@24
$LN2@M_erase@24:

; 244  :     copy(__next, this->_M_finish, __pos);

	mov	ecx, DWORD PTR ___pos$[esp+76]
	mov	edx, DWORD PTR ___pos$[esp+80]
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [esi+16]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [esi+20]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [esi+28]
	mov	ecx, DWORD PTR ___next$[esp+88]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___next$[esp+92]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___next$[esp+112]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___next$[esp+116]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	lea	eax, DWORD PTR $T284818[esp+100]
	call	??$copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >

; 245  :     pop_back();

	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [esi+20]
	add	esp, 48					; 00000030H
	cmp	eax, ecx
	je	SHORT $LN56@M_erase@24
	add	eax, -12				; fffffff4H
	jmp	SHORT $LN78@M_erase@24
$LN56@M_erase@24:
	test	ecx, ecx
	je	SHORT $LN65@M_erase@24
	push	ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN65@M_erase@24:
	mov	eax, DWORD PTR [esi+28]
	sub	eax, 4
	mov	DWORD PTR [esi+28], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi+20], eax
	add	eax, 120				; 00000078H
	mov	DWORD PTR [esi+24], eax
	sub	eax, 12					; 0000000cH
$LN78@M_erase@24:
	mov	DWORD PTR [esi+16], eax
$LN55@M_erase@24:

; 246  :   }
; 247  :   return this->_M_start + __index;

	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR ___tmp$285011[esp+52], ecx
	mov	ecx, DWORD PTR [esi+12]
	mov	ebx, ebp
	lea	esi, DWORD PTR ___tmp$285011[esp+52]
	mov	DWORD PTR ___tmp$285011[esp+56], edx
	mov	DWORD PTR ___tmp$285011[esp+60], eax
	mov	DWORD PTR ___tmp$285011[esp+64], ecx
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+52]
	mov	edx, DWORD PTR ___tmp$285011[esp+52]
	mov	ecx, DWORD PTR ___tmp$285011[esp+56]

; 248  : }

	pop	edi
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ___tmp$285011[esp+56]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___tmp$285011[esp+60]
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ecx
	pop	ebx
	add	esp, 40					; 00000028H
	ret	20					; 00000014H
?_M_erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@ABU__false_type@3@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_erase
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ?erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___pos$ = 12						; size = 16
?erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::erase, COMDAT
; ___$ReturnUdt$ = esi

; 827  :     return _M_erase(__pos, _Movable());

	mov	ecx, DWORD PTR ___pos$[esp-4]
	mov	edx, DWORD PTR ___pos$[esp]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___pos$[esp+20]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___pos$[esp+24]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[esp+12]
	push	esi
	call	?_M_erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@ABU__false_type@3@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_erase
	mov	eax, esi

; 828  :   }

	ret	20					; 00000014H
?erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z
_TEXT	SEGMENT
tv139 = -20						; size = 4
tv65 = -20						; size = 4
$T285046 = -16						; size = 16
$T285029 = -16						; size = 16
??0?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >, COMDAT
; _this$ = edi
; ___x$ = ebx

; 491  :   { _STLP_PRIV __ucopy(__x.begin(), __x.end(), this->_M_start); }

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 20					; 00000014H
	mov	edx, DWORD PTR [ebx+12]
	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR $T285046[esp+24], eax
	mov	DWORD PTR $T285046[esp+32], edx
	mov	edx, DWORD PTR [ebx+16]
	sub	edx, DWORD PTR [ebx+20]
	mov	ecx, DWORD PTR [ebx+8]
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, eax
	mov	eax, DWORD PTR [ebx+28]
	sub	eax, DWORD PTR $T285046[esp+32]
	sar	eax, 2
	sub	eax, 1
	lea	eax, DWORD PTR [eax+eax*4]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	DWORD PTR tv65[esp+20], eax
	push	esi
	mov	esi, DWORD PTR [ebx]
	sub	ecx, esi
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	mov	ecx, DWORD PTR tv65[esp+24]
	sar	edx, 1
	mov	eax, edx
	add	ecx, edx
	shr	eax, 31					; 0000001fH
	add	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [edi], ecx
	mov	DWORD PTR [edi+4], ecx
	mov	DWORD PTR [edi+8], ecx
	mov	DWORD PTR [edi+12], ecx
	mov	DWORD PTR [edi+16], ecx
	mov	DWORD PTR [edi+20], ecx
	mov	DWORD PTR [edi+24], ecx
	mov	DWORD PTR [edi+28], ecx
	mov	DWORD PTR [edi+32], ecx
	push	eax
	mov	esi, edi
	mov	DWORD PTR [edi+36], ecx
	call	?_M_initialize_map@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_initialize_map
	mov	ecx, DWORD PTR [edi]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [edi+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [edi+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [ebx+16]
	mov	edx, DWORD PTR [ebx+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [ebx+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ebx+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [ebx]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR [ebx+4]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [ebx+8]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ebx+12]
	mov	DWORD PTR [eax+8], ecx
	lea	esi, DWORD PTR $T285029[esp+72]
	mov	DWORD PTR [eax+12], edx
	call	??$__ucopy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@@Z ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
	add	esp, 48					; 00000030H
	mov	eax, edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_deque.h
_TEXT	ENDS
;	COMDAT ?erase@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@2@U342@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
$T285146 = 12						; size = 16
___pos$ = 12						; size = 16
?erase@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@2@U342@@Z PROC ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::erase, COMDAT
; ___$ReturnUdt$ = esi

; 355  :   { return ite_cast_traits::to_value_type_ite(_M_impl.erase(ite_cast_traits::to_storage_type_ite(__pos))); }

	mov	ecx, DWORD PTR ___pos$[esp-4]
	mov	edx, DWORD PTR ___pos$[esp]
	push	ebx
	mov	ebx, DWORD PTR ___pos$[esp+12]
	push	edi
	mov	edi, DWORD PTR ___pos$[esp+12]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], edi
	mov	DWORD PTR [eax+12], ebx
	lea	eax, DWORD PTR $T285146[esp+20]
	push	eax
	mov	eax, DWORD PTR _this$[esp+24]
	call	?_M_erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@ABU__false_type@3@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_erase
	mov	ecx, DWORD PTR $T285146[esp+4]
	mov	eax, DWORD PTR $T285146[esp+12]
	mov	edx, DWORD PTR $T285146[esp+8]
	mov	DWORD PTR [esi], ecx
	mov	ecx, DWORD PTR $T285146[esp+16]
	pop	edi
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+4], edx
	mov	DWORD PTR [esi+12], ecx
	mov	eax, esi
	pop	ebx
	ret	20					; 00000014H
?erase@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@2@U342@@Z ENDP ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE@ABV01@@Z PROC ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >, COMDAT
; _this$ = eax
; ___x$ = ebx

; 159  :   deque(const _Self& __x) : _M_impl(__x._M_impl) {}

	push	edi
	mov	edi, eax
	call	??0?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
	mov	eax, edi
	pop	edi
	ret	0
??0?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE@ABV01@@Z ENDP ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QAE@XZ PROC ; xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >, COMDAT
; _this$ = eax
	push	esi
	mov	esi, eax
	xor	eax, eax
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], eax
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	push	eax
	mov	DWORD PTR [esi+36], eax
	call	?_M_initialize_map@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_initialize_map
	mov	eax, esi
	pop	esi
	ret	0
??0?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QAE@XZ ENDP ; xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
??0?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QAE@ABV0@@Z PROC ; xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >, COMDAT
; _this$ = eax
; ___that$ = ebx
	push	edi
	mov	edi, eax
	call	??0?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
	mov	eax, edi
	pop	edi
	ret	0
??0?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QAE@ABV0@@Z ENDP ; xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1SSubGraph@CStatGraph@@QAE@XZ
_TEXT	SEGMENT
??1SSubGraph@CStatGraph@@QAE@XZ PROC			; CStatGraph::SSubGraph::~SSubGraph, COMDAT
; _this$ = eax
	push	ebx
	mov	ebx, eax
	add	ebx, 4
	call	??1?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
	pop	ebx
	ret	0
??1SSubGraph@CStatGraph@@QAE@XZ ENDP			; CStatGraph::SSubGraph::~SSubGraph
_TEXT	ENDS
PUBLIC	?RemoveMarker@CStatGraph@@QAEXI@Z		; CStatGraph::RemoveMarker
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\statgraph.h
;	COMDAT ?RemoveMarker@CStatGraph@@QAEXI@Z
_TEXT	SEGMENT
tv150 = -20						; size = 4
$T285681 = -20						; size = 4
___tmp$285673 = -16					; size = 16
$T285582 = -16						; size = 16
$T285540 = -16						; size = 16
_ID$ = 8						; size = 4
?RemoveMarker@CStatGraph@@QAEXI@Z PROC			; CStatGraph::RemoveMarker, COMDAT
; _this$ = ecx

; 161  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 20					; 00000014H

; 162  : 		if (ID >= m_Markers.size()) return;

	mov	eax, DWORD PTR [ecx+84]
	mov	edx, DWORD PTR [ecx+96]
	sub	edx, DWORD PTR [ecx+100]
	push	ebx
	mov	DWORD PTR $T285582[esp+28], eax
	mov	ebx, DWORD PTR [ecx+92]
	push	esi
	push	edi
	lea	edi, DWORD PTR [ecx+80]
	mov	esi, DWORD PTR [edi]
	mov	ecx, DWORD PTR [edi+8]
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	DWORD PTR tv150[esp+32], eax
	mov	eax, DWORD PTR [edi+28]
	sub	eax, ebx
	sar	eax, 2
	sub	eax, 1
	lea	edx, DWORD PTR [eax+eax*4]
	mov	eax, DWORD PTR tv150[esp+32]
	lea	ebx, DWORD PTR [eax+edx*2]
	sub	ecx, esi
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	eax, edx
	add	ebx, edx
	shr	eax, 31					; 0000001fH
	add	eax, ebx
	mov	ebx, DWORD PTR _ID$[ebp]
	cmp	ebx, eax
	jae	SHORT $LN2@RemoveMark

; 163  : 		m_Markers.erase(m_Markers.begin()+ID);

	mov	ecx, DWORD PTR [edi+4]
	mov	edx, DWORD PTR [edi+8]
	mov	eax, esi
	mov	esi, DWORD PTR [edi+12]
	sub	esp, 16					; 00000010H
	mov	DWORD PTR ___tmp$285673[esp+60], esi
	lea	esi, DWORD PTR ___tmp$285673[esp+48]
	mov	DWORD PTR $T285681[esp+48], esp
	mov	DWORD PTR ___tmp$285673[esp+48], eax
	mov	DWORD PTR ___tmp$285673[esp+52], ecx
	mov	DWORD PTR ___tmp$285673[esp+56], edx
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
	mov	eax, DWORD PTR $T285681[esp+48]
	mov	ecx, DWORD PTR ___tmp$285673[esp+48]
	mov	edx, DWORD PTR ___tmp$285673[esp+52]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___tmp$285673[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___tmp$285673[esp+60]
	mov	DWORD PTR [eax+8], ecx
	push	edi
	lea	esi, DWORD PTR $T285540[esp+52]
	mov	DWORD PTR [eax+12], edx
	call	?erase@?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@2@U342@@Z ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::erase
$LN2@RemoveMark:

; 164  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveMarker@CStatGraph@@QAEXI@Z ENDP			; CStatGraph::RemoveMarker
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
;	COMDAT ??$__uninitialized_copy_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@U423@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@11@Z
_TEXT	SEGMENT
___first1$ = 8						; size = 16
___last1$ = 24						; size = 16
___first2$ = 40						; size = 16
___last2$ = 56						; size = 16
___result$ = 72						; size = 16
??$__uninitialized_copy_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@U423@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@11@Z PROC ; stlp_std::priv::__uninitialized_copy_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >, COMDAT
; ___$ReturnUdt$ = esi

; 376  : { return uninitialized_copy(__first2, __last2, uninitialized_copy(__first1, __last1, __result)); }

	push	ecx
	mov	edx, DWORD PTR ___result$[esp]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR ___result$[esp+36]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR ___result$[esp+40]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR ___result$[esp+44]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR ___last1$[esp+32]
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR ___last1$[esp+52]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR ___last1$[esp+56]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR ___last1$[esp+60]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR ___first1$[esp+48]
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR ___first1$[esp+68]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR ___first1$[esp+72]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR ___first1$[esp+76]
	mov	DWORD PTR [ecx+12], edx
	call	??$uninitialized_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@20@0U120@@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
	mov	ecx, DWORD PTR ___last2$[esp+64]
	mov	edx, DWORD PTR ___last2$[esp+68]
	add	esp, 32					; 00000020H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last2$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last2$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first2$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first2$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first2$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first2$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	eax, esi
	call	??$uninitialized_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
	add	esp, 48					; 00000030H
	mov	eax, esi
	pop	ecx
	ret	0
??$__uninitialized_copy_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@U423@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@11@Z ENDP ; stlp_std::priv::__uninitialized_copy_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__uninitialized_copy_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@23@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@0U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@10@Z
_TEXT	SEGMENT
___first1$ = 8						; size = 16
___last1$ = 24						; size = 16
___first2$ = 40						; size = 16
___last2$ = 56						; size = 16
___result$ = 72						; size = 16
??$__uninitialized_copy_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@23@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@0U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@10@Z PROC ; stlp_std::priv::__uninitialized_copy_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >, COMDAT
; ___$ReturnUdt$ = esi

; 376  : { return uninitialized_copy(__first2, __last2, uninitialized_copy(__first1, __last1, __result)); }

	push	ecx
	mov	edx, DWORD PTR ___result$[esp]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR ___result$[esp+36]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR ___result$[esp+40]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR ___result$[esp+44]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR ___last1$[esp+32]
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR ___last1$[esp+52]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR ___last1$[esp+56]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR ___last1$[esp+60]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR ___first1$[esp+48]
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR ___first1$[esp+68]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR ___first1$[esp+72]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR ___first1$[esp+76]
	mov	DWORD PTR [ecx+12], edx
	call	??$uninitialized_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
	mov	ecx, DWORD PTR ___last2$[esp+64]
	mov	edx, DWORD PTR ___last2$[esp+68]
	add	esp, 32					; 00000020H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last2$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last2$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first2$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first2$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first2$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first2$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	eax, esi
	call	??$uninitialized_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@20@0U120@@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
	add	esp, 48					; 00000030H
	mov	eax, esi
	pop	ecx
	ret	0
??$__uninitialized_copy_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@23@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@0U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@10@Z ENDP ; stlp_std::priv::__uninitialized_copy_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ?_M_reserve_elements_at_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@I@Z
_TEXT	SEGMENT
___tmp$359061 = -20					; size = 16
?_M_reserve_elements_at_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@I@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reserve_elements_at_back, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = edi
; ___n$ = ebx

; 1026 :   iterator _M_reserve_elements_at_back(size_type __n) {

	sub	esp, 24					; 00000018H
	push	esi
	mov	esi, eax

; 1027 :     size_type __vacancies = (this->_M_finish._M_last - this->_M_finish._M_cur) - 1;

	mov	eax, DWORD PTR [esi+24]
	sub	eax, DWORD PTR [esi+16]
	sar	eax, 3
	sub	eax, 1

; 1028 :     if (__n > __vacancies)

	cmp	ebx, eax
	jbe	SHORT $LN1@M_reserve_@7

; 1029 :       _M_new_elements_at_back(__n - __vacancies);

	mov	ecx, ebx
	sub	ecx, eax
	mov	eax, esi
	call	?_M_new_elements_at_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_new_elements_at_back
$LN1@M_reserve_@7:

; 1030 :     return this->_M_finish + difference_type(__n);

	mov	eax, DWORD PTR [esi+16]
	mov	edx, DWORD PTR [esi+24]
	mov	ecx, DWORD PTR [esi+20]
	mov	DWORD PTR ___tmp$359061[esp+28], eax
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR ___tmp$359061[esp+36], edx
	mov	edx, ebx
	lea	esi, DWORD PTR ___tmp$359061[esp+28]
	mov	DWORD PTR ___tmp$359061[esp+32], ecx
	mov	DWORD PTR ___tmp$359061[esp+40], eax
	call	?_M_advance@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_advance
	mov	ecx, DWORD PTR ___tmp$359061[esp+28]
	mov	edx, DWORD PTR ___tmp$359061[esp+32]
	mov	eax, DWORD PTR ___tmp$359061[esp+36]
	mov	DWORD PTR [edi], ecx
	mov	ecx, DWORD PTR ___tmp$359061[esp+40]
	mov	DWORD PTR [edi+4], edx
	mov	DWORD PTR [edi+8], eax
	mov	DWORD PTR [edi+12], ecx
	mov	eax, edi

; 1031 :   }

	pop	esi
	add	esp, 24					; 00000018H
	ret	0
?_M_reserve_elements_at_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@I@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reserve_elements_at_back
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__ucopy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$__ucopy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z PROC ; stlp_std::priv::__ucopy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >, COMDAT
; ___$ReturnUdt$ = esi

; 134  :   return __ucopy(__first, __last, __result,
; 135  :                  _STLP_ITERATOR_CATEGORY(__first, _InputIter),
; 136  :                  _STLP_DISTANCE_TYPE(__first, _InputIter));

	mov	ecx, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+20]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+12]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+16]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+36]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+28]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+32]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+52]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, esi
	mov	DWORD PTR [eax+12], edx
	call	??$__ucopy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>
	add	esp, 48					; 00000030H
	mov	eax, esi

; 137  : }

	ret	0
??$__ucopy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z ENDP ; stlp_std::priv::__ucopy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??Z?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z
_TEXT	SEGMENT
??Z?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator-=, COMDAT
; _this$ = eax
; ___n$ = edx

; 214  :   _Self& operator-=(difference_type __n) { return *this += -__n; }

	push	esi
	mov	esi, eax
	neg	edx
	call	?_M_advance@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_advance
	mov	eax, esi
	pop	esi
	ret	0
??Z?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QAEAAU012@H@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator-=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??G?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z
_TEXT	SEGMENT
___tmp$ = -16						; size = 16
___n$ = 8						; size = 4
??G?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z PROC ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator-, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = edi

; 215  :   _Self operator-(difference_type __n) const {

	sub	esp, 20					; 00000014H

; 216  :     _Self __tmp = *this;

	mov	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR ___tmp$[esp+24], edx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR ___tmp$[esp+32], edx

; 217  :     return __tmp -= __n;

	mov	edx, DWORD PTR ___n$[esp+16]
	mov	DWORD PTR ___tmp$[esp+20], ecx
	mov	ecx, DWORD PTR [eax+8]
	push	esi
	neg	edx
	lea	esi, DWORD PTR ___tmp$[esp+24]
	mov	DWORD PTR ___tmp$[esp+32], ecx
	call	?_M_advance@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_advance
	mov	eax, DWORD PTR ___tmp$[esp+24]
	mov	ecx, DWORD PTR ___tmp$[esp+28]
	mov	edx, DWORD PTR ___tmp$[esp+32]
	mov	DWORD PTR [edi], eax
	mov	eax, DWORD PTR ___tmp$[esp+36]
	mov	DWORD PTR [edi+4], ecx
	mov	DWORD PTR [edi+8], edx
	mov	DWORD PTR [edi+12], eax
	mov	eax, edi

; 218  :   }

	pop	esi
	add	esp, 20					; 00000014H
	ret	4
??G?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ENDP ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator-
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.c
_TEXT	ENDS
;	COMDAT ?_M_erase@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@U423@0ABU__false_type@3@@Z
_TEXT	SEGMENT
___n$ = -24						; size = 4
___elems_before$ = -20					; size = 4
$T359149 = -16						; size = 16
$T359098 = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
___first$ = 12						; size = 16
___tmp$359391 = 28					; size = 16
___new_finish$125632 = 28				; size = 16
$T359108 = 28						; size = 16
___new_start$125616 = 28				; size = 16
$T359102 = 28						; size = 16
___last$ = 28						; size = 16
?_M_erase@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@U423@0ABU__false_type@3@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_erase, COMDAT
; _this$ = eax

; 316  :                                          const __false_type& /*_Movable*/) {

	sub	esp, 24					; 00000018H

; 317  :   difference_type __n = __last - __first;

	mov	ecx, DWORD PTR ___last$[esp+20]
	sub	ecx, DWORD PTR ___last$[esp+24]
	mov	edx, DWORD PTR ___first$[esp+28]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR ___first$[esp+28]
	sub	edx, ebp
	push	esi
	mov	esi, eax
	mov	eax, DWORD PTR ___last$[esp+44]
	sar	edx, 3
	sar	ecx, 3
	push	edi
	mov	edi, DWORD PTR ___first$[esp+48]
	sub	eax, edi
	sar	eax, 2
	shl	eax, 4
	add	eax, ecx

; 318  :   difference_type __elems_before = __first - this->_M_start;

	mov	ecx, DWORD PTR [esi+4]
	lea	eax, DWORD PTR [eax+edx-16]
	mov	DWORD PTR ___n$[esp+40], eax
	mov	eax, DWORD PTR [esi+8]
	sub	eax, DWORD PTR [esi]
	mov	DWORD PTR $T359098[esp+44], ecx
	mov	ecx, DWORD PTR [esi+12]
	sar	eax, 3
	mov	edx, edi
	sub	edx, ecx
	sar	edx, 2
	shl	edx, 4
	mov	ecx, ebp
	sub	ecx, DWORD PTR ___first$[esp+40]

; 319  :   if (__elems_before <= difference_type(this->size() - __n) / 2) {

	lea	ebx, DWORD PTR [esi+16]
	sar	ecx, 3
	add	edx, ecx
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, DWORD PTR [esi]
	lea	edx, DWORD PTR [edx+eax-16]
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR ___elems_before$[esp+40], edx
	mov	edx, DWORD PTR [esi+12]
	mov	DWORD PTR $T359149[esp+44], eax
	mov	eax, DWORD PTR [ebx]
	sub	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR $T359149[esp+52], edx
	mov	edx, DWORD PTR [ebx+12]
	sub	edx, DWORD PTR $T359149[esp+52]
	sar	eax, 3
	sar	edx, 2
	shl	edx, 4
	add	eax, edx
	sar	ecx, 3
	add	eax, ecx
	sub	eax, DWORD PTR ___n$[esp+40]

; 320  :     copy_backward(this->_M_start, __first, __last);

	sub	esp, 16					; 00000010H
	sub	eax, 16					; 00000010H
	cdq
	sub	eax, edx
	sar	eax, 1
	cmp	DWORD PTR ___elems_before$[esp+56], eax
	mov	eax, esp
	jg	$LN2@M_erase@31
	mov	ecx, DWORD PTR ___last$[esp+52]
	mov	edx, DWORD PTR ___last$[esp+56]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+60]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+64]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+60]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ebp
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], edi
	mov	ecx, DWORD PTR [esi]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [esi+12]
	mov	DWORD PTR [eax+12], edx
	lea	eax, DWORD PTR $T359102[esp+84]
	call	??$copy_backward@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >

; 321  :     iterator __new_start = this->_M_start + __n;

	mov	eax, DWORD PTR ___n$[esp+88]
	add	esp, 48					; 00000030H
	push	eax
	lea	edi, DWORD PTR ___new_start$125616[esp+40]
	mov	eax, esi
	call	??H?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator+

; 322  :     _STLP_STD::_Destroy_Range(this->_M_start, __new_start);
; 323  :     this->_M_destroy_nodes(this->_M_start._M_node, __new_start._M_node);

	mov	edi, DWORD PTR [esi+12]
	mov	ebx, DWORD PTR ___new_start$125616[esp+48]
	cmp	edi, ebx
	jae	SHORT $LN49@M_erase@31
	mov	ebp, DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LL51@M_erase@31:
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN50@M_erase@31
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	ebp
$LN50@M_erase@31:
	add	edi, 4
	cmp	edi, ebx
	jb	SHORT $LL51@M_erase@31
$LN49@M_erase@31:

; 324  :     this->_M_start = __new_start;

	mov	ecx, DWORD PTR ___new_start$125616[esp+36]
	mov	edx, DWORD PTR ___new_start$125616[esp+40]
	mov	eax, DWORD PTR ___new_start$125616[esp+44]
	mov	DWORD PTR [esi], ecx
	mov	DWORD PTR [esi+4], edx
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], ebx

; 325  :   }
; 326  :   else {

	jmp	$LN1@M_erase@31
$LN2@M_erase@31:

; 327  :     copy(__last, this->_M_finish, __first);

	mov	ecx, DWORD PTR ___first$[esp+56]
	mov	edx, DWORD PTR ___first$[esp+60]
	mov	DWORD PTR [eax], ebp
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], edi
	mov	ecx, DWORD PTR [ebx]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [ebx+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ebx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [ebx+12]
	mov	ecx, DWORD PTR ___last$[esp+68]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+72]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+92]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+96]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	lea	eax, DWORD PTR $T359108[esp+84]
	call	??$copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >

; 328  :     iterator __new_finish = this->_M_finish - __n;

	mov	eax, DWORD PTR ___n$[esp+88]
	add	esp, 48					; 00000030H
	push	eax
	lea	edi, DWORD PTR ___new_finish$125632[esp+40]
	mov	eax, ebx
	call	??G?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator-

; 329  :     _STLP_STD::_Destroy_Range(__new_finish, this->_M_finish);
; 330  :     this->_M_destroy_nodes(__new_finish._M_node + 1, this->_M_finish._M_node + 1);

	mov	edi, DWORD PTR [esi+28]
	mov	ebp, DWORD PTR ___new_finish$125632[esp+48]
	add	edi, 4
	add	ebp, 4
	cmp	ebp, edi
	jae	SHORT $LN85@M_erase@31
	npad	1
$LL87@M_erase@31:
	mov	eax, DWORD PTR [ebp]
	test	eax, eax
	je	SHORT $LN86@M_erase@31
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN86@M_erase@31:
	add	ebp, 4
	cmp	ebp, edi
	jb	SHORT $LL87@M_erase@31
$LN85@M_erase@31:

; 331  :     this->_M_finish = __new_finish;

	mov	ecx, DWORD PTR ___new_finish$125632[esp+36]
	mov	edx, DWORD PTR ___new_finish$125632[esp+40]
	mov	eax, DWORD PTR ___new_finish$125632[esp+44]
	mov	DWORD PTR [ebx], ecx
	mov	ecx, DWORD PTR ___new_finish$125632[esp+48]
	mov	DWORD PTR [ebx+4], edx
	mov	DWORD PTR [ebx+8], eax
	mov	DWORD PTR [ebx+12], ecx
$LN1@M_erase@31:

; 332  :   }
; 333  :   return this->_M_start + __elems_before;

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR ___tmp$359391[esp+36], edx
	mov	edx, DWORD PTR [esi+12]
	mov	DWORD PTR ___tmp$359391[esp+48], edx
	mov	edx, DWORD PTR ___elems_before$[esp+40]
	lea	esi, DWORD PTR ___tmp$359391[esp+36]
	mov	DWORD PTR ___tmp$359391[esp+40], eax
	mov	DWORD PTR ___tmp$359391[esp+44], ecx
	call	?_M_advance@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_advance
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+36]
	mov	ecx, DWORD PTR ___tmp$359391[esp+36]
	mov	edx, DWORD PTR ___tmp$359391[esp+40]

; 334  : }

	pop	edi
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___tmp$359391[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___tmp$359391[esp+44]
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	pop	ebx
	add	esp, 24					; 00000018H
	ret	36					; 00000024H
?_M_erase@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@U423@0ABU__false_type@3@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_erase
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$uninitialized_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@20@0U120@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$uninitialized_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@20@0U120@@Z PROC ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >, COMDAT
; ___$ReturnUdt$ = eax

; 144  : { return _STLP_PRIV __ucopy_aux(__first, __last, __result, _BothPtrType< _InputIter, _ForwardIter>::_Answer()); }

	mov	ecx, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	push	esi
	mov	esi, eax
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	call	??$__ucopy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z ; stlp_std::priv::__ucopy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
	add	esp, 48					; 00000030H
	mov	eax, esi
	pop	esi
	ret	0
??$uninitialized_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@20@0U120@@Z ENDP ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ?erase@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@U423@0@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
?erase@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@U423@0@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::erase, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = esi

; 830  :     if (__first == this->_M_start && __last == this->_M_finish) {

	mov	ecx, DWORD PTR ___first$[esp-4]
	mov	edx, DWORD PTR ___last$[esp-4]
	push	edi
	mov	edi, eax
	cmp	ecx, DWORD PTR [edi]
	jne	SHORT $LN3@erase@48
	cmp	edx, DWORD PTR [edi+16]
	jne	SHORT $LN3@erase@48

; 831  :       clear();

	call	?clear@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::clear

; 832  :       return this->_M_finish;

	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR [esi+4], ecx
	mov	edx, DWORD PTR [edi+24]
	mov	DWORD PTR [esi+8], edx
	mov	eax, DWORD PTR [edi+28]
	mov	DWORD PTR [esi+12], eax

; 837  :       return _M_erase(__first, __last, _Movable());

	mov	eax, esi

; 838  :     }
; 839  :   }

	pop	edi
	ret	32					; 00000020H
$LN3@erase@48:

; 833  :     }
; 834  :     else {
; 835  :       if (__first == __last)

	cmp	ecx, edx
	jne	SHORT $LN1@erase@48

; 836  :         return __first;

	mov	edx, DWORD PTR ___first$[esp+8]
	mov	eax, DWORD PTR ___first$[esp+12]
	mov	DWORD PTR [esi], ecx
	mov	ecx, DWORD PTR ___first$[esp+4]
	mov	DWORD PTR [esi+4], ecx
	mov	DWORD PTR [esi+8], edx
	mov	DWORD PTR [esi+12], eax

; 837  :       return _M_erase(__first, __last, _Movable());

	mov	eax, esi

; 838  :     }
; 839  :   }

	pop	edi
	ret	32					; 00000020H
$LN1@erase@48:

; 837  :       return _M_erase(__first, __last, _Movable());

	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ___last$[esp+20]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+24]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR ___last$[esp+28]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+24]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+36]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___first$[esp+44]
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ecx
	push	esi
	mov	eax, edi
	call	?_M_erase@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@U423@0ABU__false_type@3@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_erase
	mov	eax, esi

; 838  :     }
; 839  :   }

	pop	edi
	ret	32					; 00000020H
?erase@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@U423@0@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GSSubGraph@CStatGraph@@QAEPAXI@Z
_TEXT	SEGMENT
??_GSSubGraph@CStatGraph@@QAEPAXI@Z PROC		; CStatGraph::SSubGraph::`scalar deleting destructor', COMDAT
; _this$ = esi
	push	ebx
	lea	ebx, DWORD PTR [esi+4]
	call	??1?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
	mov	eax, esi
	pop	ebx
	ret	0
??_GSSubGraph@CStatGraph@@QAEPAXI@Z ENDP		; CStatGraph::SSubGraph::`scalar deleting destructor'
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$__destroy_aux@USSubGraph@CStatGraph@@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z
_TEXT	SEGMENT
??$__destroy_aux@USSubGraph@CStatGraph@@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z PROC ; stlp_std::__destroy_aux<CStatGraph::SSubGraph>, COMDAT
; ___pointer$ = eax

; 53   : { __pointer->~_Tp(); }

	push	ebx
	mov	ebx, eax
	add	ebx, 4
	call	??1?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
	pop	ebx
	ret	0
??$__destroy_aux@USSubGraph@CStatGraph@@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z ENDP ; stlp_std::__destroy_aux<CStatGraph::SSubGraph>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___first$ = 12						; size = 16
___last$ = 28						; size = 16
___result$ = 44						; size = 16
??$__copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>, COMDAT

; 201  :   for (_Distance __n = __last - __first; __n > 0; --__n) {

	mov	eax, DWORD PTR ___last$[esp+8]
	mov	ecx, DWORD PTR ___first$[esp+4]
	push	ebx
	push	ebp
	push	esi
	mov	esi, DWORD PTR ___first$[esp+8]
	push	edi
	mov	edi, DWORD PTR ___first$[esp+24]
	sub	eax, edi
	sar	eax, 2
	lea	ebx, DWORD PTR [eax+eax*4]
	sub	ecx, esi
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	mov	ecx, DWORD PTR ___last$[esp+12]
	sub	ecx, DWORD PTR ___last$[esp+16]
	sar	edx, 1
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp+12]
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	ebx, DWORD PTR [eax+ebx*2]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	mov	eax, DWORD PTR ___result$[esp+12]
	sar	edx, 1
	mov	ecx, edx
	add	ebx, edx
	mov	edx, DWORD PTR ___result$[esp+24]
	shr	ecx, 31					; 0000001fH
	lea	ecx, DWORD PTR [ecx+ebx-10]
	test	ecx, ecx
	mov	ebx, DWORD PTR ___result$[esp+16]
	jle	SHORT $LN1@copy@18
$LL3@copy@18:

; 202  :     *__result = *__first;

	mov	ebp, DWORD PTR [esi]
	mov	DWORD PTR [eax], ebp
	mov	ebp, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], ebp
	mov	ebp, DWORD PTR [esi+8]

; 203  :     ++__first;

	add	esi, 12					; 0000000cH
	cmp	esi, DWORD PTR ___first$[esp+20]
	mov	DWORD PTR [eax+8], ebp
	jne	SHORT $LN16@copy@18
	mov	esi, DWORD PTR [edi+4]
	add	edi, 4
	lea	ebp, DWORD PTR [esi+120]
	mov	DWORD PTR ___first$[esp+20], ebp
$LN16@copy@18:

; 204  :     ++__result;

	add	eax, 12					; 0000000cH
	cmp	eax, DWORD PTR ___result$[esp+20]
	jne	SHORT $LN2@copy@18
	mov	ebx, DWORD PTR [edx+4]
	add	edx, 4
	lea	eax, DWORD PTR [ebx+120]
	mov	DWORD PTR ___result$[esp+20], eax
	mov	eax, ebx
$LN2@copy@18:
	sub	ecx, 1
	test	ecx, ecx
	jg	SHORT $LL3@copy@18

; 201  :   for (_Distance __n = __last - __first; __n > 0; --__n) {

	mov	ebp, DWORD PTR ___$ReturnUdt$[esp+12]
$LN1@copy@18:

; 205  :   }
; 206  :   return __result;

	mov	ecx, DWORD PTR ___result$[esp+20]
	mov	DWORD PTR [ebp], eax
	mov	DWORD PTR [ebp+4], ebx
	pop	edi
	mov	DWORD PTR [ebp+8], ecx
	pop	esi
	mov	DWORD PTR [ebp+12], edx
	mov	eax, ebp
	pop	ebp
	pop	ebx

; 207  : }

	ret	0
??$__copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$__destroy_range_aux@PAUSSubGraph@CStatGraph@@U12@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@00ABU__false_type@0@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 4
___last$ = 12						; size = 4
??$__destroy_range_aux@PAUSSubGraph@CStatGraph@@U12@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@00ABU__false_type@0@@Z PROC ; stlp_std::__destroy_range_aux<CStatGraph::SSubGraph *,CStatGraph::SSubGraph>, COMDAT

; 151  : __destroy_range_aux(_ForwardIterator __first, _ForwardIterator __last, _Tp*, const __false_type& /*_Trivial_destructor*/) {

	push	ebx
	push	ebp
	mov	ebp, DWORD PTR ___first$[esp+4]

; 152  :   for ( ; __first != __last; ++__first) {

	cmp	ebp, DWORD PTR ___last$[esp+4]
	push	esi
	push	edi
	je	SHORT $LN1@destroy_ra@26
	lea	ebx, DWORD PTR [ebp+32]
$LL3@destroy_ra@26:

; 153  :     __destroy_aux(&(*__first), __false_type());

	cmp	DWORD PTR [ebx+4], 0
	je	SHORT $LN54@destroy_ra@26
	mov	edi, DWORD PTR [ebx]
	mov	esi, DWORD PTR [ebx-16]
	add	edi, 4
	cmp	esi, edi
	jae	SHORT $LN40@destroy_ra@26
$LN42@destroy_ra@26:
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN41@destroy_ra@26
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN41@destroy_ra@26:
	add	esi, 4
	cmp	esi, edi
	jb	SHORT $LN42@destroy_ra@26
$LN40@destroy_ra@26:
	mov	eax, DWORD PTR [ebx+4]
	test	eax, eax
	je	SHORT $LN54@destroy_ra@26
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN54@destroy_ra@26:
	add	ebp, 44					; 0000002cH
	add	ebx, 44					; 0000002cH
	cmp	ebp, DWORD PTR ___last$[esp+12]
	jne	SHORT $LL3@destroy_ra@26
$LN1@destroy_ra@26:

; 154  : #if defined (_STLP_DEBUG_UNINITIALIZED)
; 155  :     memset((char*)&(*__first), _STLP_SHRED_BYTE, sizeof(_Tp));
; 156  : #endif
; 157  :   }
; 158  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
??$__destroy_range_aux@PAUSSubGraph@CStatGraph@@U12@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@00ABU__false_type@0@@Z ENDP ; stlp_std::__destroy_range_aux<CStatGraph::SSubGraph *,CStatGraph::SSubGraph>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Param_Construct@USSubGraph@CStatGraph@@U12@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@ABU12@@Z
_TEXT	SEGMENT
??$_Param_Construct@USSubGraph@CStatGraph@@U12@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@ABU12@@Z PROC ; stlp_std::_Param_Construct<CStatGraph::SSubGraph,CStatGraph::SSubGraph>, COMDAT
; ___p$ = eax
; ___val$ = ecx

; 118  : #if defined (_STLP_DEBUG_UNINITIALIZED)
; 119  :   memset((char*)__p, _STLP_SHRED_BYTE, sizeof(_T1));
; 120  : #endif
; 121  :   _STLP_PLACEMENT_NEW (__p) _T1(__val);

	test	eax, eax
	je	SHORT $LN3@Param_Cons@17
	mov	edx, DWORD PTR [ecx]
	push	ebx
	push	edi
	lea	ebx, DWORD PTR [ecx+4]
	lea	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [eax], edx
	call	??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
	pop	edi
	pop	ebx
$LN3@Param_Cons@17:

; 122  : }

	ret	0
??$_Param_Construct@USSubGraph@CStatGraph@@U12@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@ABU12@@Z ENDP ; stlp_std::_Param_Construct<CStatGraph::SSubGraph,CStatGraph::SSubGraph>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__destroy_range_aux@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 4
___last$ = 12						; size = 4
??$__destroy_range_aux@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z PROC ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>, COMDAT

; 151  : __destroy_range_aux(_ForwardIterator __first, _ForwardIterator __last, _Tp*, const __false_type& /*_Trivial_destructor*/) {

	push	ebx
	push	ebp

; 152  :   for ( ; __first != __last; ++__first) {

	mov	ebp, DWORD PTR ___first$[esp+4]
	cmp	ebp, DWORD PTR ___last$[esp+4]
	push	esi
	push	edi
	je	SHORT $LN1@destroy_ra@27
	lea	ebx, DWORD PTR [ebp-12]
$LL6@destroy_ra@27:

; 153  :     __destroy_aux(&(*__first), __false_type());

	cmp	DWORD PTR [ebx+4], 0
	je	SHORT $LN66@destroy_ra@27
	mov	edi, DWORD PTR [ebx]
	mov	esi, DWORD PTR [ebx-16]
	add	edi, 4
	cmp	esi, edi
	jae	SHORT $LN52@destroy_ra@27
$LN54@destroy_ra@27:
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN53@destroy_ra@27
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN53@destroy_ra@27:
	add	esi, 4
	cmp	esi, edi
	jb	SHORT $LN54@destroy_ra@27
$LN52@destroy_ra@27:
	mov	eax, DWORD PTR [ebx+4]
	test	eax, eax
	je	SHORT $LN66@destroy_ra@27
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN66@destroy_ra@27:
	sub	ebp, 44					; 0000002cH
	sub	ebx, 44					; 0000002cH
	cmp	ebp, DWORD PTR ___last$[esp+12]
	jne	SHORT $LL6@destroy_ra@27
$LN1@destroy_ra@27:

; 154  : #if defined (_STLP_DEBUG_UNINITIALIZED)
; 155  :     memset((char*)&(*__first), _STLP_SHRED_BYTE, sizeof(_Tp));
; 156  : #endif
; 157  :   }
; 158  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
??$__destroy_range_aux@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z ENDP ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$__copy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z PROC ; stlp_std::priv::__copy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >, COMDAT
; ___$ReturnUdt$ = esi

; 271  :   return __copy(__first, __last, __result,
; 272  :                 _STLP_ITERATOR_CATEGORY(__first, _InputIter),
; 273  :                 _STLP_DISTANCE_TYPE(__first, _InputIter));

	mov	ecx, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+20]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+12]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+16]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+36]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+28]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+32]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+52]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+8], ecx
	push	esi
	mov	DWORD PTR [eax+12], edx
	call	??$__copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@H@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,int>
	add	esp, 52					; 00000034H
	mov	eax, esi

; 274  : }

	ret	0
??$__copy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z ENDP ; stlp_std::priv::__copy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$__destroy_range@PAUSSubGraph@CStatGraph@@U12@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@00@Z
_TEXT	SEGMENT
??$__destroy_range@PAUSSubGraph@CStatGraph@@U12@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@00@Z PROC ; stlp_std::__destroy_range<CStatGraph::SSubGraph *,CStatGraph::SSubGraph>, COMDAT
; ___first$ = ecx
; ___last$ = eax

; 175  :   typedef typename __type_traits<_Tp>::has_trivial_destructor _Trivial_destructor;
; 176  :   __destroy_range_aux(__first, __last, __ptr, _Trivial_destructor());

	push	eax
	push	ecx
	call	??$__destroy_range_aux@PAUSSubGraph@CStatGraph@@U12@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@00ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<CStatGraph::SSubGraph *,CStatGraph::SSubGraph>
	add	esp, 8

; 177  : }

	ret	0
??$__destroy_range@PAUSSubGraph@CStatGraph@@U12@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@00@Z ENDP ; stlp_std::__destroy_range<CStatGraph::SSubGraph *,CStatGraph::SSubGraph>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__ufill@PAUSSubGraph@CStatGraph@@U12@H@priv@stlp_std@@YAXPAUSSubGraph@CStatGraph@@0ABU23@ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
___first$ = 8						; size = 4
___x$ = 12						; size = 4
??$__ufill@PAUSSubGraph@CStatGraph@@U12@H@priv@stlp_std@@YAXPAUSSubGraph@CStatGraph@@0ABU23@ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__ufill<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,int>, COMDAT
; ___last$ = eax

; 246  :                     const _Tp& __x, const random_access_iterator_tag &, _Distance*) {

	push	ebp
	mov	ebp, DWORD PTR ___first$[esp]

; 247  :   _ForwardIter __cur = __first;
; 248  :   _STLP_TRY {
; 249  :     for (_Distance __n = __last - __first; __n > 0; --__n, ++__cur)

	sub	eax, ebp
	mov	ecx, eax
	mov	eax, 780903145				; 2e8ba2e9H
	imul	ecx
	sar	edx, 3
	push	esi
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	test	esi, esi
	jle	SHORT $LN1@ufill@12
	push	ebx
	push	edi
$LL3@ufill@12:

; 250  :       _Param_Construct(&*__cur, __x);

	test	ebp, ebp
	je	SHORT $LN2@ufill@12
	mov	eax, DWORD PTR ___x$[esp+12]
	mov	ecx, DWORD PTR [eax]
	lea	ebx, DWORD PTR [eax+4]
	lea	edi, DWORD PTR [ebp+4]
	mov	DWORD PTR [ebp], ecx
	call	??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
$LN2@ufill@12:
	sub	esi, 1
	add	ebp, 44					; 0000002cH
	test	esi, esi
	jg	SHORT $LL3@ufill@12
	pop	edi
	pop	ebx
$LN1@ufill@12:
	pop	esi
	pop	ebp

; 251  :   }
; 252  :   _STLP_UNWIND(_STLP_STD::_Destroy_Range(__first, __cur))
; 253  : }

	ret	0
??$__ufill@PAUSSubGraph@CStatGraph@@U12@H@priv@stlp_std@@YAXPAUSSubGraph@CStatGraph@@0ABU23@ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__ufill<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__ucopy@PBUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
___first$ = 8						; size = 4
___result$ = 12						; size = 4
??$__ucopy@PBUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__ucopy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *,int>, COMDAT
; ___last$ = eax

; 84   :   _OutputIter __cur = __result;
; 85   :   _STLP_TRY {
; 86   :     for (_Distance __n = __last - __first; __n > 0; --__n) {

	mov	ecx, DWORD PTR ___first$[esp-4]
	sub	eax, ecx
	mov	edx, eax
	mov	eax, 780903145				; 2e8ba2e9H
	imul	edx
	push	ebp
	mov	ebp, DWORD PTR ___result$[esp]
	sar	edx, 3
	push	esi
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	test	esi, esi
	jle	SHORT $LN20@ucopy@14
	push	ebx
	push	edi
$LL3@ucopy@14:

; 87   :       _Param_Construct(&*__cur, *__first);

	test	ebp, ebp
	je	SHORT $LN8@ucopy@14
	mov	eax, DWORD PTR [ecx]
	lea	ebx, DWORD PTR [ecx+4]
	lea	edi, DWORD PTR [ebp+4]
	mov	DWORD PTR [ebp], eax
	call	??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
	mov	ecx, DWORD PTR ___first$[esp+12]
$LN8@ucopy@14:

; 88   :       ++__first;

	add	ecx, 44					; 0000002cH
	sub	esi, 1

; 89   :       ++__cur;

	add	ebp, 44					; 0000002cH
	test	esi, esi
	mov	DWORD PTR ___first$[esp+12], ecx
	jg	SHORT $LL3@ucopy@14
	pop	edi
	pop	ebx
$LN20@ucopy@14:
	pop	esi

; 90   :     }
; 91   :     return __cur;

	mov	eax, ebp
	pop	ebp

; 92   :   }
; 93   :   _STLP_UNWIND(_STLP_STD::_Destroy_Range(__result, __cur))
; 94   :   _STLP_RET_AFTER_THROW(__cur)
; 95   : }

	ret	0
??$__ucopy@PBUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__ucopy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *,int>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$__destroy_range@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 4
___last$ = 12						; size = 4
??$__destroy_range@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@@Z PROC ; stlp_std::__destroy_range<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>, COMDAT

; 175  :   typedef typename __type_traits<_Tp>::has_trivial_destructor _Trivial_destructor;
; 176  :   __destroy_range_aux(__first, __last, __ptr, _Trivial_destructor());

	mov	edx, DWORD PTR ___first$[esp-4]
	push	ecx
	mov	ecx, DWORD PTR ___last$[esp]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	call	??$__destroy_range_aux@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>
	add	esp, 8

; 177  : }

	ret	0
??$__destroy_range@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@@Z ENDP ; stlp_std::__destroy_range<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@20@0U120@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 16
___last$ = 24						; size = 16
___result$ = 40						; size = 16
??$copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@20@0U120@@Z PROC ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >, COMDAT
; ___$ReturnUdt$ = eax

; 280  :   _STLP_DEBUG_CHECK(_STLP_PRIV __check_range(__first, __last))
; 281  :   return _STLP_PRIV __copy_aux(__first, __last, __result, _BothPtrType< _InputIter, _OutputIter>::_Answer());

	mov	ecx, DWORD PTR ___result$[esp-4]
	mov	edx, DWORD PTR ___result$[esp]
	push	esi
	mov	esi, eax
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___result$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___result$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	call	??$__copy_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@ABU__false_type@1@@Z ; stlp_std::priv::__copy_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
	add	esp, 48					; 00000030H
	mov	eax, esi

; 282  : }

	pop	esi
	ret	0
??$copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@20@0U120@@Z ENDP ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$_Destroy_Range@PAUSSubGraph@CStatGraph@@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@0@Z
_TEXT	SEGMENT
??$_Destroy_Range@PAUSSubGraph@CStatGraph@@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@0@Z PROC ; stlp_std::_Destroy_Range<CStatGraph::SSubGraph *>, COMDAT
; ___first$ = ecx
; ___last$ = eax

; 181  :   __destroy_range(__first, __last, _STLP_VALUE_TYPE(__first, _ForwardIterator));

	push	eax
	push	ecx
	call	??$__destroy_range_aux@PAUSSubGraph@CStatGraph@@U12@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@00ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<CStatGraph::SSubGraph *,CStatGraph::SSubGraph>
	add	esp, 8

; 182  : }

	ret	0
??$_Destroy_Range@PAUSSubGraph@CStatGraph@@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@0@Z ENDP ; stlp_std::_Destroy_Range<CStatGraph::SSubGraph *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__uninitialized_fill_n@PAUSSubGraph@CStatGraph@@IU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@IABU23@@Z
_TEXT	SEGMENT
___x$ = 8						; size = 4
??$__uninitialized_fill_n@PAUSSubGraph@CStatGraph@@IU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@IABU23@@Z PROC ; stlp_std::priv::__uninitialized_fill_n<CStatGraph::SSubGraph *,unsigned int,CStatGraph::SSubGraph>, COMDAT
; ___first$ = ecx
; ___n$ = eax

; 314  :   _ForwardIter __last = __first + __n;

	imul	eax, 44					; 0000002cH
	add	eax, ecx
	push	esi
	mov	esi, eax

; 315  :   __ufill(__first, __last, __x, random_access_iterator_tag(), (ptrdiff_t*)0);

	mov	eax, DWORD PTR ___x$[esp]
	push	eax
	push	ecx
	mov	eax, esi
	call	??$__ufill@PAUSSubGraph@CStatGraph@@U12@H@priv@stlp_std@@YAXPAUSSubGraph@CStatGraph@@0ABU23@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ufill<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,int>
	add	esp, 8

; 316  :   return __last;

	mov	eax, esi
	pop	esi

; 317  : }

	ret	0
??$__uninitialized_fill_n@PAUSSubGraph@CStatGraph@@IU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@IABU23@@Z ENDP ; stlp_std::priv::__uninitialized_fill_n<CStatGraph::SSubGraph *,unsigned int,CStatGraph::SSubGraph>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__ucopy_ptrs@PBUSSubGraph@CStatGraph@@PAU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABU__false_type@1@@Z
_TEXT	SEGMENT
___last$ = 8						; size = 4
??$__ucopy_ptrs@PBUSSubGraph@CStatGraph@@PAU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABU__false_type@1@@Z PROC ; stlp_std::priv::__ucopy_ptrs<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *>, COMDAT
; ___first$ = ecx
; ___result$ = eax

; 113  : { return __ucopy(__first, __last, __result, random_access_iterator_tag(), (ptrdiff_t*)0); }

	push	eax
	mov	eax, DWORD PTR ___last$[esp]
	push	ecx
	call	??$__ucopy@PBUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *,int>
	add	esp, 8
	ret	0
??$__ucopy_ptrs@PBUSSubGraph@CStatGraph@@PAU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABU__false_type@1@@Z ENDP ; stlp_std::priv::__ucopy_ptrs<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$_Destroy_Range@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0@Z
_TEXT	SEGMENT
___first$ = 8						; size = 4
___last$ = 12						; size = 4
??$_Destroy_Range@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0@Z PROC ; stlp_std::_Destroy_Range<stlp_std::reverse_iterator<CStatGraph::SSubGraph *> >, COMDAT

; 181  :   __destroy_range(__first, __last, _STLP_VALUE_TYPE(__first, _ForwardIterator));

	mov	edx, DWORD PTR ___first$[esp-4]
	push	ecx
	mov	ecx, DWORD PTR ___last$[esp]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	call	??$__destroy_range_aux@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>
	add	esp, 8

; 182  : }

	ret	0
??$_Destroy_Range@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0@Z ENDP ; stlp_std::_Destroy_Range<stlp_std::reverse_iterator<CStatGraph::SSubGraph *> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ??0?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z
_TEXT	SEGMENT
??0?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >, COMDAT
; _this$ = esi
; ___x$ = eax

; 236  :   { this->_M_finish = _STLP_PRIV __ucopy_ptrs(__x.begin(), __x.end(), this->_M_start, _TrivialUCopy()); }

	push	ebx
	mov	ebx, eax
	mov	ecx, DWORD PTR [ebx+4]
	sub	ecx, DWORD PTR [ebx]
	mov	eax, 780903145				; 2e8ba2e9H
	imul	ecx
	sar	edx, 3
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	push	edi
	add	eax, edx
	mov	edi, eax
	imul	edi, 44					; 0000002cH
	xor	ecx, ecx
	mov	DWORD PTR [esi], ecx
	mov	DWORD PTR [esi+4], ecx
	mov	DWORD PTR [esi+8], ecx
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	edi
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	add	edi, eax
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], edi
	mov	ecx, DWORD PTR [ebx+4]
	mov	ebx, DWORD PTR [ebx]
	push	eax
	push	ebx
	mov	eax, ecx
	call	??$__ucopy@PBUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *,int>
	add	esp, 8
	pop	edi
	mov	DWORD PTR [esi+4], eax
	mov	eax, esi
	pop	ebx
	ret	0
??0?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@XZ PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::~_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >, COMDAT
; _this$ = eax

; 286  :   ~vector() { _STLP_STD::_Destroy_Range(rbegin(), rend()); }

	push	esi
	mov	esi, eax
	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range_aux@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>
	mov	esi, DWORD PTR [esi]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN32@Impl_vecto@45
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN32@Impl_vecto@45:
	pop	esi
	ret	0
??1?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::~_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ??0?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAE@ABV01@@Z PROC ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >, COMDAT
; _this$ = ecx
; ___x$ = eax

; 123  :   vector(const _Self& __x)

	push	esi
	mov	esi, ecx
	call	??0?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
	mov	eax, esi
	pop	esi
	ret	0
??0?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAE@ABV01@@Z ENDP ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAE@XZ PROC ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::~vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >, COMDAT
; _this$ = eax
	push	esi
	mov	esi, eax
	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range_aux@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>
	mov	esi, DWORD PTR [esi]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN34@vector@67
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN34@vector@67:
	pop	esi
	ret	0
??1?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAE@XZ ENDP ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::~vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QAE@XZ
_TEXT	SEGMENT
??1?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QAE@XZ PROC ; xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::~xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >, COMDAT
; _this$ = eax
	push	esi
	mov	esi, eax
	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range_aux@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>
	mov	esi, DWORD PTR [esi]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN36@xr_vector@42
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN36@xr_vector@42:
	pop	esi
	ret	0
??1?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QAE@XZ ENDP ; xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::~xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
??0?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QAE@ABV0@@Z PROC ; xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >, COMDAT
; _this$ = ecx
; ___that$ = eax
	push	esi
	mov	esi, ecx
	call	??0?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
	mov	eax, esi
	pop	esi
	ret	0
??0?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QAE@ABV0@@Z ENDP ; xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
_TEXT	ENDS
PUBLIC	??0CStatGraph@@QAE@ABV0@@Z			; CStatGraph::CStatGraph
; Function compile flags: /Ogtpy
;	COMDAT ??0CStatGraph@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0CStatGraph@@QAE@ABV0@@Z PROC				; CStatGraph::CStatGraph, COMDAT
; _this$ = ecx
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[esp+12]
	mov	ebp, ecx
	lea	eax, DWORD PTR [edi+4]
	lea	esi, DWORD PTR [ebp+4]
	mov	DWORD PTR [ebp], OFFSET ??_7CStatGraph@@6B@
	call	??0?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
	fld	DWORD PTR [edi+16]
	fstp	DWORD PTR [ebp+16]
	fld	DWORD PTR [edi+20]
	fstp	DWORD PTR [ebp+20]
	mov	eax, DWORD PTR [edi+24]
	mov	DWORD PTR [ebp+24], eax
	mov	ecx, DWORD PTR [edi+28]
	mov	DWORD PTR [ebp+28], ecx
	mov	edx, DWORD PTR [edi+32]
	mov	DWORD PTR [ebp+32], edx
	mov	eax, DWORD PTR [edi+36]
	mov	DWORD PTR [ebp+36], eax
	mov	ecx, DWORD PTR [edi+40]
	mov	DWORD PTR [ebp+40], ecx
	mov	edx, DWORD PTR [edi+44]
	mov	DWORD PTR [ebp+44], edx
	mov	eax, DWORD PTR [edi+48]
	mov	DWORD PTR [ebp+48], eax
	mov	ecx, DWORD PTR [edi+52]
	mov	DWORD PTR [ebp+52], ecx
	mov	edx, DWORD PTR [edi+56]
	mov	DWORD PTR [ebp+56], edx
	mov	eax, DWORD PTR [edi+60]
	mov	DWORD PTR [ebp+60], eax
	mov	ecx, DWORD PTR [edi+64]
	mov	DWORD PTR [ebp+64], ecx
	mov	edx, DWORD PTR [edi+68]
	mov	ecx, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	DWORD PTR [ebp+68], edx
	mov	eax, DWORD PTR [edi+72]
	mov	DWORD PTR [ebp+72], eax
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	mov	DWORD PTR [ebp+76], eax
	mov	ecx, DWORD PTR [edi+76]
	mov	edx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx+4]
	push	ecx
	mov	ecx, eax
	call	edx
	lea	ebx, DWORD PTR [edi+80]
	lea	edi, DWORD PTR [ebp+80]
	call	??0?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	pop	ebx
	ret	4
??0CStatGraph@@QAE@ABV0@@Z ENDP				; CStatGraph::CStatGraph
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
;	COMDAT ?_M_reserve_elements_at_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@I@Z
_TEXT	SEGMENT
___tmp$416007 = -20					; size = 16
?_M_reserve_elements_at_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@I@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reserve_elements_at_front, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = edi
; ___n$ = ebx

; 1019 :   iterator _M_reserve_elements_at_front(size_type __n) {

	sub	esp, 24					; 00000018H
	push	esi
	mov	esi, eax

; 1020 :     size_type __vacancies = this->_M_start._M_cur - this->_M_start._M_first;

	mov	eax, DWORD PTR [esi]
	sub	eax, DWORD PTR [esi+4]
	sar	eax, 3

; 1021 :     if (__n > __vacancies)

	cmp	ebx, eax
	jbe	SHORT $LN1@M_reserve_@8

; 1022 :       _M_new_elements_at_front(__n - __vacancies);

	mov	ecx, ebx
	sub	ecx, eax
	mov	eax, esi
	call	?_M_new_elements_at_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_new_elements_at_front
$LN1@M_reserve_@8:

; 1023 :     return this->_M_start - difference_type(__n);

	mov	edx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR ___tmp$416007[esp+36], edx
	mov	DWORD PTR ___tmp$416007[esp+28], eax
	mov	eax, DWORD PTR [esi+12]
	mov	edx, ebx
	neg	edx
	lea	esi, DWORD PTR ___tmp$416007[esp+28]
	mov	DWORD PTR ___tmp$416007[esp+32], ecx
	mov	DWORD PTR ___tmp$416007[esp+40], eax
	call	?_M_advance@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_advance
	mov	ecx, DWORD PTR ___tmp$416007[esp+28]
	mov	edx, DWORD PTR ___tmp$416007[esp+32]
	mov	eax, DWORD PTR ___tmp$416007[esp+36]
	mov	DWORD PTR [edi], ecx
	mov	ecx, DWORD PTR ___tmp$416007[esp+40]
	mov	DWORD PTR [edi+4], edx
	mov	DWORD PTR [edi+8], eax
	mov	DWORD PTR [edi+12], ecx
	mov	eax, edi

; 1024 :   }

	pop	esi
	add	esp, 24					; 00000018H
	ret	0
?_M_reserve_elements_at_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@I@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reserve_elements_at_front
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__uninitialized_copy_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@11@Z
_TEXT	SEGMENT
___first1$ = 8						; size = 16
___last1$ = 24						; size = 16
___first2$ = 40						; size = 16
___last2$ = 56						; size = 16
___result$ = 72						; size = 16
??$__uninitialized_copy_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@11@Z PROC ; stlp_std::priv::__uninitialized_copy_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >, COMDAT
; ___$ReturnUdt$ = esi

; 376  : { return uninitialized_copy(__first2, __last2, uninitialized_copy(__first1, __last1, __result)); }

	push	ecx
	mov	edx, DWORD PTR ___result$[esp]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR ___result$[esp+36]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR ___result$[esp+40]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR ___result$[esp+44]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR ___last1$[esp+32]
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR ___last1$[esp+52]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR ___last1$[esp+56]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR ___last1$[esp+60]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR ___first1$[esp+48]
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR ___first1$[esp+68]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR ___first1$[esp+72]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR ___first1$[esp+76]
	mov	DWORD PTR [ecx+12], edx
	call	??$uninitialized_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@20@0U120@@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
	mov	ecx, DWORD PTR ___last2$[esp+64]
	mov	edx, DWORD PTR ___last2$[esp+68]
	add	esp, 32					; 00000020H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last2$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last2$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first2$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first2$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first2$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first2$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	eax, esi
	call	??$uninitialized_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
	add	esp, 48					; 00000030H
	mov	eax, esi
	pop	ecx
	ret	0
??$__uninitialized_copy_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@11@Z ENDP ; stlp_std::priv::__uninitialized_copy_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__uninitialized_copy_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@23@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@0U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@10@Z
_TEXT	SEGMENT
___first1$ = 8						; size = 16
___last1$ = 24						; size = 16
___first2$ = 40						; size = 16
___last2$ = 56						; size = 16
___result$ = 72						; size = 16
??$__uninitialized_copy_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@23@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@0U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@10@Z PROC ; stlp_std::priv::__uninitialized_copy_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >, COMDAT
; ___$ReturnUdt$ = esi

; 376  : { return uninitialized_copy(__first2, __last2, uninitialized_copy(__first1, __last1, __result)); }

	push	ecx
	mov	edx, DWORD PTR ___result$[esp]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR ___result$[esp+36]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR ___result$[esp+40]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR ___result$[esp+44]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR ___last1$[esp+32]
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR ___last1$[esp+52]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR ___last1$[esp+56]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR ___last1$[esp+60]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR ___first1$[esp+48]
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR ___first1$[esp+68]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR ___first1$[esp+72]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR ___first1$[esp+76]
	mov	DWORD PTR [ecx+12], edx
	call	??$uninitialized_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
	mov	ecx, DWORD PTR ___last2$[esp+64]
	mov	edx, DWORD PTR ___last2$[esp+68]
	add	esp, 32					; 00000020H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last2$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last2$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first2$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first2$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first2$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first2$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	eax, esi
	call	??$uninitialized_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@20@0U120@@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
	add	esp, 48					; 00000030H
	mov	eax, esi
	pop	ecx
	ret	0
??$__uninitialized_copy_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@23@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@0U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@10@Z ENDP ; stlp_std::priv::__uninitialized_copy_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??$_M_insert_range_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1IABU__false_type@2@@Z
_TEXT	SEGMENT
tv985 = -92						; size = 4
tv983 = -92						; size = 4
tv555 = -88						; size = 4
___tmp$416139 = -84					; size = 16
___finish_n$125555 = -68				; size = 16
___new_start$125499 = -68				; size = 16
___mid$125568 = -52					; size = 16
___old_finish$125551 = -52				; size = 16
___old_start$125501 = -52				; size = 16
$T416111 = -36						; size = 16
___new_finish$125549 = -36				; size = 16
___start_n$125504 = -36					; size = 16
$T416049 = -36						; size = 16
$T416071 = -20						; size = 16
$T416067 = -20						; size = 16
$T416058 = -20						; size = 16
$T416054 = -20						; size = 16
___elemsbefore$ = 8					; size = 4
_this$ = 8						; size = 4
___n$ = 12						; size = 4
$T416075 = 16						; size = 16
___mid$125525 = 16					; size = 16
___pos$ = 16						; size = 16
$T416083 = 32						; size = 16
$T416064 = 32						; size = 16
___first$ = 32						; size = 16
$T416081 = 48						; size = 16
___last$ = 48						; size = 16
??$_M_insert_range_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1IABU__false_type@2@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_insert_range_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >, COMDAT

; 966  :   void _M_insert_range_aux(iterator __pos,

	sub	esp, 92					; 0000005cH
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+96]

; 967  :                            _ForwardIterator __first, _ForwardIterator __last,
; 968  :                            size_type __n, const __false_type& /*_Movable*/) {
; 969  :     const difference_type __elemsbefore = __pos - this->_M_start;

	mov	eax, DWORD PTR [ebp+4]
	mov	edx, DWORD PTR [ebp+12]
	mov	DWORD PTR $T416049[esp+104], eax
	mov	eax, DWORD PTR ___pos$[esp+108]
	sub	eax, edx
	mov	edx, DWORD PTR ___pos$[esp+96]
	sub	edx, DWORD PTR ___pos$[esp+100]
	sar	eax, 2
	mov	ecx, DWORD PTR [ebp+8]
	push	esi
	mov	esi, DWORD PTR [ebp]
	push	edi
	lea	edi, DWORD PTR [eax+eax*4]
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	edi, DWORD PTR [eax+edi*2]
	sub	ecx, esi
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx

; 970  :     size_type __length = size();

	mov	eax, DWORD PTR [ebp+12]
	sar	edx, 1
	mov	DWORD PTR $T416111[esp+120], eax
	add	edi, edx
	mov	ecx, edx
	mov	edx, DWORD PTR [ebp+4]
	mov	DWORD PTR $T416111[esp+112], edx
	mov	edx, DWORD PTR [ebp+16]
	sub	edx, DWORD PTR [ebp+20]
	mov	ebx, esi
	lea	esi, DWORD PTR [ebp+16]
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	DWORD PTR tv983[esp+108], eax
	mov	eax, DWORD PTR [esi+12]
	sub	eax, DWORD PTR $T416111[esp+120]
	shr	ecx, 31					; 0000001fH
	sar	eax, 2
	sub	eax, 1
	lea	edx, DWORD PTR [eax+eax*4]
	mov	eax, DWORD PTR tv983[esp+108]
	lea	eax, DWORD PTR [eax+edx*2]
	lea	edi, DWORD PTR [ecx+edi-10]
	mov	ecx, DWORD PTR [ebp+8]
	mov	DWORD PTR tv985[esp+108], eax
	sub	ecx, ebx
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	mov	eax, DWORD PTR tv985[esp+108]
	sar	edx, 1
	add	eax, edx
	mov	ebx, edx
	shr	ebx, 31					; 0000001fH
	add	ebx, eax

; 971  :     if (__elemsbefore <= difference_type(__length / 2)) {

	mov	eax, ebx
	shr	eax, 1
	cmp	edi, eax

; 972  :       iterator __new_start = _M_reserve_elements_at_front(__n);

	mov	eax, DWORD PTR ___n$[esp+104]
	mov	DWORD PTR ___elemsbefore$[esp+104], edi
	mov	DWORD PTR tv555[esp+108], esi
	mov	ecx, ebp
	jg	$LN6@M_insert_r
	lea	edi, DWORD PTR ___new_start$125499[esp+108]
	call	?_M_reserve_elements_at_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@I@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reserve_elements_at_front

; 973  :       iterator __old_start = this->_M_start;

	mov	ecx, DWORD PTR [ebp]
	mov	edx, DWORD PTR [ebp+4]
	mov	eax, DWORD PTR [ebp+8]

; 974  :       __pos = this->_M_start + __elemsbefore;

	mov	ebx, DWORD PTR ___elemsbefore$[esp+104]
	mov	DWORD PTR ___old_start$125501[esp+108], ecx
	mov	ecx, DWORD PTR [ebp+12]
	mov	DWORD PTR ___old_start$125501[esp+112], edx
	mov	edx, DWORD PTR [ebp]
	mov	DWORD PTR ___old_start$125501[esp+116], eax
	mov	eax, DWORD PTR [ebp+4]
	mov	DWORD PTR ___old_start$125501[esp+120], ecx
	mov	ecx, DWORD PTR [ebp+8]
	mov	DWORD PTR ___tmp$416139[esp+108], edx
	mov	edx, DWORD PTR [ebp+12]
	lea	esi, DWORD PTR ___tmp$416139[esp+108]
	mov	DWORD PTR ___tmp$416139[esp+112], eax
	mov	DWORD PTR ___tmp$416139[esp+116], ecx
	mov	DWORD PTR ___tmp$416139[esp+120], edx
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance
	mov	eax, DWORD PTR ___tmp$416139[esp+108]
	mov	ecx, DWORD PTR ___tmp$416139[esp+112]
	mov	edx, DWORD PTR ___tmp$416139[esp+116]
	mov	DWORD PTR ___pos$[esp+104], eax
	mov	eax, DWORD PTR ___tmp$416139[esp+120]
	mov	DWORD PTR ___pos$[esp+116], eax

; 975  :       _STLP_TRY {
; 976  :         if (__elemsbefore >= difference_type(__n)) {

	mov	eax, ebx
	mov	ebx, DWORD PTR ___n$[esp+104]
	cmp	eax, ebx
	mov	DWORD PTR ___pos$[esp+108], ecx
	mov	DWORD PTR ___pos$[esp+112], edx
	jl	$LN5@M_insert_r

; 977  :           iterator __start_n = this->_M_start + difference_type(__n);

	lea	edi, DWORD PTR ___start_n$125504[esp+108]
	mov	eax, ebp
	call	??H?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator+

; 978  :           uninitialized_copy(this->_M_start, __start_n, __new_start);

	mov	edi, DWORD PTR ___new_start$125499[esp+108]
	mov	esi, DWORD PTR ___new_start$125499[esp+112]
	mov	ecx, DWORD PTR ___new_start$125499[esp+116]
	mov	edx, DWORD PTR ___new_start$125499[esp+120]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], esi
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___start_n$125504[esp+124]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___start_n$125504[esp+128]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___start_n$125504[esp+148]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___start_n$125504[esp+152]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [ebp]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [ebp+12]
	mov	DWORD PTR [eax+12], edx
	lea	eax, DWORD PTR $T416054[esp+156]
	call	??$uninitialized_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >

; 979  :           this->_M_start = __new_start;

	mov	eax, DWORD PTR ___new_start$125499[esp+164]
	mov	ecx, DWORD PTR ___new_start$125499[esp+168]

; 980  :           copy(__start_n, __pos, __old_start);

	mov	edx, DWORD PTR ___old_start$125501[esp+156]
	mov	DWORD PTR [ebp], edi
	mov	DWORD PTR [ebp+4], esi
	mov	DWORD PTR [ebp+8], eax
	mov	DWORD PTR [ebp+12], ecx
	mov	ecx, DWORD PTR ___old_start$125501[esp+160]
	add	esp, 32					; 00000020H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ___old_start$125501[esp+132]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___old_start$125501[esp+136]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR ___tmp$416139[esp+124]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR ___tmp$416139[esp+128]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ___tmp$416139[esp+148]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___tmp$416139[esp+152]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR ___start_n$125504[esp+140]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR ___start_n$125504[esp+144]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ___start_n$125504[esp+164]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___start_n$125504[esp+168]
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ecx
	lea	eax, DWORD PTR $T416058[esp+156]
	call	??$copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >

; 981  :           copy(__first, __last, __pos - difference_type(__n));

	add	esp, 32					; 00000020H
	mov	edi, esp
	push	ebx
	lea	eax, DWORD PTR ___pos$[esp+124]
	call	??G?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator-
	mov	edx, DWORD PTR ___last$[esp+120]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR ___last$[esp+140]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ___last$[esp+144]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___last$[esp+148]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR ___first$[esp+136]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR ___first$[esp+140]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ___first$[esp+160]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___first$[esp+164]
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ecx

; 982  :         }
; 983  :         else {

	jmp	$LN89@M_insert_r
$LN5@M_insert_r:

; 984  :           _ForwardIterator __mid = __first;

	mov	edx, DWORD PTR ___first$[esp+108]
	mov	ecx, DWORD PTR ___first$[esp+112]
	mov	edi, DWORD PTR ___first$[esp+104]
	mov	DWORD PTR ___mid$125525[esp+108], edx
	mov	edx, DWORD PTR ___first$[esp+116]

; 985  :           advance(__mid, difference_type(__n) - __elemsbefore);

	sub	ebx, eax
	lea	esi, DWORD PTR ___mid$125525[esp+104]
	mov	DWORD PTR ___mid$125525[esp+104], edi
	mov	DWORD PTR ___mid$125525[esp+112], ecx
	mov	DWORD PTR ___mid$125525[esp+116], edx
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance

; 986  :           _STLP_PRIV __uninitialized_copy_copy(this->_M_start, __pos, __first, __mid, __new_start);

	mov	ebx, DWORD PTR ___new_start$125499[esp+108]
	mov	ecx, DWORD PTR ___new_start$125499[esp+112]
	mov	edx, DWORD PTR ___new_start$125499[esp+116]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___new_start$125499[esp+136]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR ___mid$125525[esp+120]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR ___mid$125525[esp+124]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ___mid$125525[esp+144]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___mid$125525[esp+148]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR ___first$[esp+140]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR ___first$[esp+144]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+164]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___tmp$416139[esp+156]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___tmp$416139[esp+160]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___tmp$416139[esp+180]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___tmp$416139[esp+184]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [ebp]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [ebp+12]
	lea	esi, DWORD PTR $T416064[esp+184]
	mov	DWORD PTR [eax+12], edx
	call	??$__uninitialized_copy_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@23@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U201@0U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@10@Z ; stlp_std::priv::__uninitialized_copy_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >

; 987  :           this->_M_start = __new_start;

	mov	eax, DWORD PTR ___new_start$125499[esp+192]
	mov	ecx, DWORD PTR ___new_start$125499[esp+196]
	mov	edx, DWORD PTR ___new_start$125499[esp+200]
	mov	DWORD PTR [ebp], ebx
	mov	DWORD PTR [ebp+4], eax
	mov	DWORD PTR [ebp+8], ecx

; 988  :           copy(__mid, __last, __old_start);

	mov	ecx, DWORD PTR ___old_start$125501[esp+188]
	mov	DWORD PTR [ebp+12], edx
	mov	edx, DWORD PTR ___old_start$125501[esp+192]
	add	esp, 64					; 00000040H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___old_start$125501[esp+132]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___old_start$125501[esp+136]
	mov	DWORD PTR [eax+8], ecx
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [eax+12], edx
	mov	eax, esp
	mov	ecx, DWORD PTR ___last$[esp+136]
	mov	edx, DWORD PTR ___last$[esp+140]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+144]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+148]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___mid$125525[esp+136]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___mid$125525[esp+140]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___mid$125525[esp+160]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___mid$125525[esp+164]

; 989  :         }
; 990  :       }
; 991  :       _STLP_UNWIND(this->_M_destroy_nodes(__new_start._M_node, this->_M_start._M_node))
; 992  :     }
; 993  :     else {

	jmp	$LN90@M_insert_r
$LN6@M_insert_r:

; 994  :       iterator __new_finish = _M_reserve_elements_at_back(__n);

	lea	edi, DWORD PTR ___new_finish$125549[esp+108]
	call	?_M_reserve_elements_at_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@I@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reserve_elements_at_back

; 995  :       iterator __old_finish = this->_M_finish;

	mov	eax, DWORD PTR [esi]

; 996  :       const difference_type __elemsafter = difference_type(__length) - __elemsbefore;

	sub	ebx, DWORD PTR ___elemsbefore$[esp+104]
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi+8]
	mov	DWORD PTR ___old_finish$125551[esp+108], eax
	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR ___old_finish$125551[esp+120], eax

; 997  :       __pos = this->_M_finish - __elemsafter;

	push	ebx
	lea	edi, DWORD PTR $T416067[esp+112]
	mov	eax, esi
	mov	DWORD PTR ___old_finish$125551[esp+116], ecx
	mov	DWORD PTR ___old_finish$125551[esp+120], edx
	call	??G?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator-
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax+8]
	mov	ebp, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR ___pos$[esp+116], eax

; 998  :       _STLP_TRY {
; 999  :         if (__elemsafter > difference_type(__n)) {

	mov	eax, DWORD PTR ___n$[esp+104]
	cmp	ebx, eax
	mov	DWORD PTR ___pos$[esp+108], ecx
	mov	DWORD PTR ___pos$[esp+112], edx
	jle	$LN2@M_insert_r

; 1000 :           iterator __finish_n = this->_M_finish - difference_type(__n);

	push	eax
	lea	edi, DWORD PTR ___finish_n$125555[esp+112]
	mov	eax, esi
	call	??G?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >::operator-

; 1001 :           uninitialized_copy(__finish_n, this->_M_finish, this->_M_finish);

	mov	ecx, DWORD PTR [esi]
	mov	edi, DWORD PTR ___finish_n$125555[esp+108]
	mov	ebx, DWORD PTR ___finish_n$125555[esp+112]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [esi+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [esi]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [esi+12]
	mov	ecx, DWORD PTR ___finish_n$125555[esp+148]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___finish_n$125555[esp+152]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	lea	eax, DWORD PTR $T416071[esp+156]
	call	??$uninitialized_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >

; 1002 :           this->_M_finish = __new_finish;

	mov	eax, DWORD PTR ___new_finish$125549[esp+156]
	mov	ecx, DWORD PTR ___new_finish$125549[esp+160]
	mov	edx, DWORD PTR ___new_finish$125549[esp+164]
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR ___new_finish$125549[esp+168]
	mov	DWORD PTR [esi+4], ecx

; 1003 :           copy_backward(__pos, __finish_n, __old_finish);

	mov	ecx, DWORD PTR ___old_finish$125551[esp+156]
	mov	DWORD PTR [esi+8], edx
	mov	edx, DWORD PTR ___old_finish$125551[esp+160]
	mov	DWORD PTR [esi+12], eax
	mov	esi, DWORD PTR ___pos$[esp+156]
	add	esp, 32					; 00000020H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___old_finish$125551[esp+132]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___old_finish$125551[esp+136]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___finish_n$125555[esp+132]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___finish_n$125555[esp+136]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edi
	mov	edi, DWORD PTR ___pos$[esp+144]
	mov	DWORD PTR [eax+4], ebx
	mov	ebx, DWORD PTR ___pos$[esp+148]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ebp
	mov	DWORD PTR [eax+4], esi
	mov	DWORD PTR [eax+8], edi
	mov	DWORD PTR [eax+12], ebx
	lea	eax, DWORD PTR $T416075[esp+152]
	call	??$copy_backward@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >

; 1004 :           copy(__first, __last, __pos);

	add	esp, 32					; 00000020H
	mov	eax, esp
	mov	DWORD PTR [eax], ebp
	mov	DWORD PTR [eax+4], esi
	mov	DWORD PTR [eax+8], edi
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [eax+12], ebx
	mov	eax, esp
	mov	ecx, DWORD PTR ___last$[esp+136]
	mov	edx, DWORD PTR ___last$[esp+140]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+144]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+148]

; 1005 :         }
; 1006 :         else {

	jmp	$LN91@M_insert_r
$LN2@M_insert_r:

; 1007 :           _ForwardIterator __mid = __first;

	mov	eax, DWORD PTR ___first$[esp+104]
	mov	ecx, DWORD PTR ___first$[esp+108]
	mov	edx, DWORD PTR ___first$[esp+112]
	mov	DWORD PTR ___mid$125568[esp+108], eax
	mov	eax, DWORD PTR ___first$[esp+116]

; 1008 :           advance(__mid, __elemsafter);

	lea	esi, DWORD PTR ___mid$125568[esp+108]
	mov	DWORD PTR ___mid$125568[esp+112], ecx
	mov	DWORD PTR ___mid$125568[esp+116], edx
	mov	DWORD PTR ___mid$125568[esp+120], eax
	call	?_M_advance@?$_Deque_iterator_base@USMarker@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SMarker>::_M_advance

; 1009 :           _STLP_PRIV __uninitialized_copy_copy(__mid, __last, __pos, this->_M_finish, this->_M_finish);

	mov	edi, DWORD PTR tv555[esp+108]
	mov	ecx, DWORD PTR [edi]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [edi+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [edi+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [edi]
	mov	ebx, DWORD PTR ___mid$125568[esp+124]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [edi+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [edi+12]
	mov	ecx, DWORD PTR ___pos$[esp+140]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___pos$[esp+144]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ebp
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___pos$[esp+164]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR ___last$[esp+152]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR ___last$[esp+156]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ___last$[esp+176]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___last$[esp+180]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR ___mid$125568[esp+176]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR ___mid$125568[esp+180]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___mid$125568[esp+200]
	mov	DWORD PTR [eax+8], ecx
	lea	esi, DWORD PTR $T416081[esp+184]
	mov	DWORD PTR [eax+12], edx
	call	??$__uninitialized_copy_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@@priv@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@01@0U201@11@Z ; stlp_std::priv::__uninitialized_copy_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >

; 1010 :           this->_M_finish = __new_finish;

	mov	eax, DWORD PTR ___new_finish$125549[esp+188]
	mov	ecx, DWORD PTR ___new_finish$125549[esp+192]
	mov	edx, DWORD PTR ___new_finish$125549[esp+196]
	mov	DWORD PTR [edi], eax
	mov	eax, DWORD PTR ___new_finish$125549[esp+200]
	mov	DWORD PTR [edi+4], ecx

; 1011 :           copy(__first, __mid, __pos);

	mov	ecx, DWORD PTR ___pos$[esp+188]
	mov	DWORD PTR [edi+8], edx
	mov	edx, DWORD PTR ___pos$[esp+192]
	mov	DWORD PTR [edi+12], eax
	add	esp, 64					; 00000040H
	mov	eax, esp
	mov	DWORD PTR [eax], ebp
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___pos$[esp+132]
	mov	DWORD PTR [eax+8], edx
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [eax+12], ecx
	mov	eax, esp
	mov	edx, DWORD PTR ___mid$125568[esp+144]
	mov	ecx, DWORD PTR ___mid$125568[esp+148]
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___mid$125568[esp+152]
$LN91@M_insert_r:
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+136]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+140]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+160]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+164]
$LN90@M_insert_r:
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
$LN89@M_insert_r:
	lea	eax, DWORD PTR $T416083[esp+152]
	call	??$copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@20@0U120@@Z ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
	add	esp, 48					; 00000030H

; 1012 :         }
; 1013 :       }
; 1014 :       _STLP_UNWIND(this->_M_destroy_nodes(this->_M_finish._M_node + 1, __new_finish._M_node + 1))
; 1015 :     }
; 1016 :   }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 92					; 0000005cH
	ret	56					; 00000038H
??$_M_insert_range_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1IABU__false_type@2@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_insert_range_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_M_insert@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1ABUforward_iterator_tag@2@@Z
_TEXT	SEGMENT
tv325 = -8						; size = 4
tv323 = -8						; size = 4
___new_finish$125246 = 8				; size = 16
___new_start$125233 = 8					; size = 16
___pos$ = 8						; size = 16
$T416270 = 24						; size = 16
$T416268 = 24						; size = 16
___first$ = 24						; size = 16
___last$ = 40						; size = 16
??$_M_insert@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1ABUforward_iterator_tag@2@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_insert<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >, COMDAT
; _this$ = esi

; 902  :   void  _M_insert(iterator __pos,

	sub	esp, 8
	push	ebx

; 903  :                   _ForwardIterator __first, _ForwardIterator __last,
; 904  :                   const forward_iterator_tag &) {
; 905  :     size_type __n = distance(__first, __last);

	mov	ebx, DWORD PTR ___last$[esp+20]
	push	ebp
	mov	ebp, DWORD PTR ___first$[esp+24]
	mov	eax, ebx
	sub	eax, ebp
	sar	eax, 2
	sub	eax, 1
	lea	eax, DWORD PTR [eax+eax*4]
	mov	DWORD PTR tv323[esp+16], eax
	push	edi
	mov	edi, DWORD PTR ___last$[esp+16]
	mov	ecx, edi
	sub	ecx, DWORD PTR ___last$[esp+20]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	mov	ecx, DWORD PTR tv323[esp+20]
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	eax, DWORD PTR [eax+ecx*2]
	mov	ecx, DWORD PTR ___first$[esp+24]
	sub	ecx, DWORD PTR ___first$[esp+16]
	mov	DWORD PTR tv325[esp+20], eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	mov	ecx, DWORD PTR tv325[esp+20]
	sar	edx, 1
	mov	eax, edx
	add	ecx, edx

; 906  :     if (__pos._M_cur == this->_M_start._M_cur) {

	mov	edx, DWORD PTR ___pos$[esp+16]
	shr	eax, 31					; 0000001fH
	add	eax, ecx
	cmp	edx, DWORD PTR [esi]
	jne	$LN4@M_insert@6

; 907  :       iterator __new_start = _M_reserve_elements_at_front(__n);

	lea	edi, DWORD PTR ___new_start$125233[esp+16]
	mov	ecx, esi
	call	?_M_reserve_elements_at_front@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@I@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reserve_elements_at_front

; 908  :       _STLP_TRY {
; 909  :         uninitialized_copy(__first, __last, __new_start);

	mov	edi, DWORD PTR ___new_start$125233[esp+16]
	mov	ecx, DWORD PTR ___new_start$125233[esp+20]
	mov	edx, DWORD PTR ___new_start$125233[esp+24]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___new_start$125233[esp+44]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR ___last$[esp+32]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR ___last$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ___last$[esp+56]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___first$[esp+48]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR ___first$[esp+52]
	mov	DWORD PTR [eax+12], ebx
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+72]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ebp
	lea	eax, DWORD PTR $T416268[esp+64]
	call	??$uninitialized_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@20@0U120@@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >

; 910  :         this->_M_start = __new_start;

	mov	edx, DWORD PTR ___new_start$125233[esp+68]
	mov	eax, DWORD PTR ___new_start$125233[esp+72]
	mov	ecx, DWORD PTR ___new_start$125233[esp+76]
	mov	DWORD PTR [esi], edi
	mov	DWORD PTR [esi+4], edx
	mov	DWORD PTR [esi+8], eax
	add	esp, 48					; 00000030H
	mov	DWORD PTR [esi+12], ecx

; 924  :   }

	pop	edi
	pop	ebp
	pop	ebx
	add	esp, 8
	ret	48					; 00000030H
$LN4@M_insert@6:

; 911  :       }
; 912  :       _STLP_UNWIND(this->_M_destroy_nodes(__new_start._M_node, this->_M_start._M_node))
; 913  :     }
; 914  :     else if (__pos._M_cur == this->_M_finish._M_cur) {

	cmp	edx, DWORD PTR [esi+16]
	jne	$LN2@M_insert@6

; 915  :       iterator __new_finish = _M_reserve_elements_at_back(__n);

	lea	edi, DWORD PTR ___new_finish$125246[esp+16]
	mov	ecx, esi
	call	?_M_reserve_elements_at_back@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@I@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_reserve_elements_at_back

; 916  :       _STLP_TRY {
; 917  :         uninitialized_copy(__first, __last, this->_M_finish);

	mov	edx, DWORD PTR [esi+16]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [esi+20]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [esi+28]
	mov	edx, DWORD PTR ___last$[esp+32]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR ___last$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ___last$[esp+56]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___first$[esp+48]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR ___first$[esp+52]
	mov	DWORD PTR [eax+12], ebx
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+72]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ebp
	lea	eax, DWORD PTR $T416270[esp+64]
	call	??$uninitialized_copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@20@0U120@@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >

; 918  :         this->_M_finish = __new_finish;

	mov	edx, DWORD PTR ___new_finish$125246[esp+64]
	mov	eax, DWORD PTR ___new_finish$125246[esp+68]
	mov	ecx, DWORD PTR ___new_finish$125246[esp+72]
	mov	DWORD PTR [esi+16], edx
	mov	edx, DWORD PTR ___new_finish$125246[esp+76]
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+24], ecx
	add	esp, 48					; 00000030H
	mov	DWORD PTR [esi+28], edx

; 924  :   }

	pop	edi
	pop	ebp
	pop	ebx
	add	esp, 8
	ret	48					; 00000030H
$LN2@M_insert@6:

; 919  :       }
; 920  :       _STLP_UNWIND(this->_M_destroy_nodes(this->_M_finish._M_node + 1, __new_finish._M_node + 1))
; 921  :     }
; 922  :     else
; 923  :       _M_insert_range_aux(__pos, __first, __last, __n, _Movable());

	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edi
	mov	edi, DWORD PTR ___last$[esp+36]
	mov	DWORD PTR [ecx+4], edi
	mov	edi, DWORD PTR ___last$[esp+40]
	mov	DWORD PTR [ecx+8], edi
	mov	edi, DWORD PTR ___first$[esp+32]
	mov	DWORD PTR [ecx+12], ebx
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edi
	mov	edi, DWORD PTR ___first$[esp+52]
	mov	DWORD PTR [ecx+4], edi
	mov	edi, DWORD PTR ___first$[esp+56]
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [ecx+8], edi
	mov	DWORD PTR [ecx+12], ebp
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR ___pos$[esp+68]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR ___pos$[esp+72]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR ___pos$[esp+76]
	push	eax
	push	esi
	mov	DWORD PTR [ecx+12], edx
	call	??$_M_insert_range_aux@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1IABU__false_type@2@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_insert_range_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >

; 924  :   }

	pop	edi
	pop	ebp
	pop	ebx
	add	esp, 8
	ret	48					; 00000030H
??$_M_insert@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1ABUforward_iterator_tag@2@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_insert<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__ucopy_aux@PBUSSubGraph@CStatGraph@@PAU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABU__true_type@1@@Z
_TEXT	SEGMENT
___last$ = 8						; size = 4
??$__ucopy_aux@PBUSSubGraph@CStatGraph@@PAU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABU__true_type@1@@Z PROC ; stlp_std::priv::__ucopy_aux<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *>, COMDAT
; ___first$ = ecx
; ___result$ = eax

; 126  :   return __ucopy_ptrs(__first, __last, __result,
; 127  :                       _UseTrivialUCopy(_STLP_VALUE_TYPE(__first, _InputIter),
; 128  :                                        _STLP_VALUE_TYPE(__result, _OutputIter))._Answer());

	push	eax
	mov	eax, DWORD PTR ___last$[esp]
	push	ecx
	call	??$__ucopy@PBUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *,int>
	add	esp, 8

; 129  : }

	ret	0
??$__ucopy_aux@PBUSSubGraph@CStatGraph@@PAU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABU__true_type@1@@Z ENDP ; stlp_std::priv::__ucopy_aux<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__ucopy@PAUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@00ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
___first$ = 8						; size = 4
___result$ = 12						; size = 4
??$__ucopy@PAUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@00ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__ucopy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph *,int>, COMDAT
; ___last$ = eax

; 84   :   _OutputIter __cur = __result;
; 85   :   _STLP_TRY {
; 86   :     for (_Distance __n = __last - __first; __n > 0; --__n) {

	mov	ecx, DWORD PTR ___first$[esp-4]
	sub	eax, ecx
	mov	edx, eax
	mov	eax, 780903145				; 2e8ba2e9H
	imul	edx
	push	ebp
	mov	ebp, DWORD PTR ___result$[esp]
	sar	edx, 3
	push	esi
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	test	esi, esi
	jle	SHORT $LN20@ucopy@20
	push	ebx
	push	edi
$LL3@ucopy@20:

; 87   :       _Param_Construct(&*__cur, *__first);

	test	ebp, ebp
	je	SHORT $LN8@ucopy@20
	mov	eax, DWORD PTR [ecx]
	lea	ebx, DWORD PTR [ecx+4]
	lea	edi, DWORD PTR [ebp+4]
	mov	DWORD PTR [ebp], eax
	call	??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
	mov	ecx, DWORD PTR ___first$[esp+12]
$LN8@ucopy@20:

; 88   :       ++__first;

	add	ecx, 44					; 0000002cH
	sub	esi, 1

; 89   :       ++__cur;

	add	ebp, 44					; 0000002cH
	test	esi, esi
	mov	DWORD PTR ___first$[esp+12], ecx
	jg	SHORT $LL3@ucopy@20
	pop	edi
	pop	ebx
$LN20@ucopy@20:
	pop	esi

; 90   :     }
; 91   :     return __cur;

	mov	eax, ebp
	pop	ebp

; 92   :   }
; 93   :   _STLP_UNWIND(_STLP_STD::_Destroy_Range(__result, __cur))
; 94   :   _STLP_RET_AFTER_THROW(__cur)
; 95   : }

	ret	0
??$__ucopy@PAUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@00ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__ucopy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph *,int>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$__destroy_mv_srcs@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@@Z
_TEXT	SEGMENT
___first$ = 8						; size = 4
___last$ = 12						; size = 4
??$__destroy_mv_srcs@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@@Z PROC ; stlp_std::__destroy_mv_srcs<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>, COMDAT

; 193  :   typedef typename __move_traits<_Tp>::complete _CompleteMove;
; 194  :   __destroy_range_aux(__first, __last, __ptr, _CompleteMove());

	mov	edx, DWORD PTR ___first$[esp-4]
	push	ecx
	mov	ecx, DWORD PTR ___last$[esp]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	call	??$__destroy_range_aux@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>
	add	esp, 8

; 195  : }

	ret	0
??$__destroy_mv_srcs@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@@Z ENDP ; stlp_std::__destroy_mv_srcs<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??$_M_insert_dispatch@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1ABU__false_type@2@@Z
_TEXT	SEGMENT
___pos$ = 8						; size = 16
___first$ = 24						; size = 16
___last$ = 40						; size = 16
??$_M_insert_dispatch@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1ABU__false_type@2@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_insert_dispatch<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >, COMDAT
; _this$ = esi

; 765  :   void _M_insert_dispatch(iterator __pos,

	push	ecx

; 766  :                           _InputIterator __first, _InputIterator __last,
; 767  :                           const __false_type& /*_IsIntegral*/) {
; 768  :     _M_insert(__pos, __first, __last, _STLP_ITERATOR_CATEGORY(__first, _InputIterator));

	mov	ecx, DWORD PTR ___last$[esp]
	mov	edx, DWORD PTR ___last$[esp+4]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___pos$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___pos$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___pos$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___pos$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	call	??$_M_insert@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1ABUforward_iterator_tag@2@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_insert<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >
	pop	ecx

; 769  :   }

	ret	48					; 00000030H
??$_M_insert_dispatch@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1ABU__false_type@2@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_insert_dispatch<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$uninitialized_copy@PBUSSubGraph@CStatGraph@@PAU12@@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU12@0PAU12@@Z
_TEXT	SEGMENT
___last$ = 8						; size = 4
??$uninitialized_copy@PBUSSubGraph@CStatGraph@@PAU12@@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU12@0PAU12@@Z PROC ; stlp_std::uninitialized_copy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *>, COMDAT
; ___first$ = ecx
; ___result$ = eax

; 144  : { return _STLP_PRIV __ucopy_aux(__first, __last, __result, _BothPtrType< _InputIter, _ForwardIter>::_Answer()); }

	push	eax
	mov	eax, DWORD PTR ___last$[esp]
	push	ecx
	call	??$__ucopy@PBUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *,int>
	add	esp, 8
	ret	0
??$uninitialized_copy@PBUSSubGraph@CStatGraph@@PAU12@@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU12@0PAU12@@Z ENDP ; stlp_std::uninitialized_copy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__ucopy_ptrs@PAUSSubGraph@CStatGraph@@PAU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@00ABU__false_type@1@@Z
_TEXT	SEGMENT
___last$ = 8						; size = 4
??$__ucopy_ptrs@PAUSSubGraph@CStatGraph@@PAU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@00ABU__false_type@1@@Z PROC ; stlp_std::priv::__ucopy_ptrs<CStatGraph::SSubGraph *,CStatGraph::SSubGraph *>, COMDAT
; ___first$ = ecx
; ___result$ = eax

; 113  : { return __ucopy(__first, __last, __result, random_access_iterator_tag(), (ptrdiff_t*)0); }

	push	eax
	mov	eax, DWORD PTR ___last$[esp]
	push	ecx
	call	??$__ucopy@PAUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph *,int>
	add	esp, 8
	ret	0
??$__ucopy_ptrs@PAUSSubGraph@CStatGraph@@PAU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@00ABU__false_type@1@@Z ENDP ; stlp_std::priv::__ucopy_ptrs<CStatGraph::SSubGraph *,CStatGraph::SSubGraph *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_construct.h
_TEXT	ENDS
;	COMDAT ??$_Destroy_Moved_Range@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0@Z
_TEXT	SEGMENT
___first$ = 8						; size = 4
___last$ = 12						; size = 4
??$_Destroy_Moved_Range@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0@Z PROC ; stlp_std::_Destroy_Moved_Range<stlp_std::reverse_iterator<CStatGraph::SSubGraph *> >, COMDAT

; 199  :   __destroy_mv_srcs(__first, __last, _STLP_VALUE_TYPE(__first, _ForwardIterator));

	mov	edx, DWORD PTR ___first$[esp-4]
	push	ecx
	mov	ecx, DWORD PTR ___last$[esp]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	call	??$__destroy_range_aux@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>
	add	esp, 8

; 200  : }

	ret	0
??$_Destroy_Moved_Range@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0@Z ENDP ; stlp_std::_Destroy_Moved_Range<stlp_std::reverse_iterator<CStatGraph::SSubGraph *> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
_TEXT	ENDS
;	COMDAT ??$insert@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1@Z
_TEXT	SEGMENT
___pos$ = 8						; size = 16
___first$ = 24						; size = 16
___last$ = 40						; size = 16
??$insert@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::insert<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >, COMDAT
; _this$ = esi

; 774  :   void insert(iterator __pos, _InputIterator __first, _InputIterator __last) {

	push	ecx

; 775  :     typedef typename _IsIntegral<_InputIterator>::_Ret _Integral;
; 776  :     _M_insert_dispatch(__pos, __first, __last, _Integral());

	mov	ecx, DWORD PTR ___last$[esp]
	mov	edx, DWORD PTR ___last$[esp+4]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___pos$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___pos$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___pos$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___pos$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	call	??$_M_insert_dispatch@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1ABU__false_type@2@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_insert_dispatch<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >
	pop	ecx

; 777  :   }

	ret	48					; 00000030H
??$insert@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::insert<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ??$_M_allocate_and_copy@PBUSSubGraph@CStatGraph@@@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEPAUSSubGraph@CStatGraph@@AAIPBU34@1@Z
_TEXT	SEGMENT
___first$ = 8						; size = 4
___last$ = 12						; size = 4
??$_M_allocate_and_copy@PBUSSubGraph@CStatGraph@@@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEPAUSSubGraph@CStatGraph@@AAIPBU34@1@Z PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_allocate_and_copy<CStatGraph::SSubGraph const *>, COMDAT
; ___n$ = eax

; 634  :                                _ForwardIterator __first, _ForwardIterator __last)
; 635  : #else /* _STLP_MEMBER_TEMPLATES */
; 636  :   pointer _M_allocate_and_copy(size_type& __n,
; 637  :                                const_pointer __first, const_pointer __last)
; 638  : #endif /* _STLP_MEMBER_TEMPLATES */
; 639  :   {
; 640  :     pointer __result = this->_M_end_of_storage.allocate(__n, __n);

	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	imul	eax, 44					; 0000002cH
	push	esi
	push	eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z

; 641  :     _STLP_TRY {
; 642  :       uninitialized_copy(__first, __last, __result);

	mov	ecx, DWORD PTR ___first$[esp]
	mov	esi, eax
	mov	eax, DWORD PTR ___last$[esp]
	push	esi
	push	ecx
	call	??$__ucopy@PBUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *,int>
	add	esp, 8

; 643  :       return __result;

	mov	eax, esi
	pop	esi

; 644  :     }
; 645  :     _STLP_UNWIND(this->_M_end_of_storage.deallocate(__result, __n))
; 646  :     _STLP_RET_AFTER_THROW(__result)
; 647  :   }

	ret	8
??$_M_allocate_and_copy@PBUSSubGraph@CStatGraph@@@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEPAUSSubGraph@CStatGraph@@AAIPBU34@1@Z ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_allocate_and_copy<CStatGraph::SSubGraph const *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_uninitialized.h
_TEXT	ENDS
;	COMDAT ??$__uninitialized_move@PAUSSubGraph@CStatGraph@@PAU12@U__false_type@stlp_std@@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@00U__false_type@1@ABU41@@Z
_TEXT	SEGMENT
___last$ = 8						; size = 4
___trivial_ucpy$ = 12					; size = 1
??$__uninitialized_move@PAUSSubGraph@CStatGraph@@PAU12@U__false_type@stlp_std@@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@00U__false_type@1@ABU41@@Z PROC ; stlp_std::priv::__uninitialized_move<CStatGraph::SSubGraph *,CStatGraph::SSubGraph *,stlp_std::__false_type>, COMDAT
; ___first$ = ecx
; ___result$ = eax

; 414  : { return __ucopy_ptrs(__first, __last, __result, __trivial_ucpy); }

	push	eax
	mov	eax, DWORD PTR ___last$[esp]
	push	ecx
	call	??$__ucopy@PAUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph *,int>
	add	esp, 8
	ret	0
??$__uninitialized_move@PAUSSubGraph@CStatGraph@@PAU12@U__false_type@stlp_std@@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@00U__false_type@1@ABU41@@Z ENDP ; stlp_std::priv::__uninitialized_move<CStatGraph::SSubGraph *,CStatGraph::SSubGraph *,stlp_std::__false_type>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?_M_clear_after_move@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXXZ
_TEXT	SEGMENT
?_M_clear_after_move@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXXZ PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_clear_after_move, COMDAT
; _this$ = eax

; 620  :   void _M_clear_after_move() {

	push	esi
	mov	esi, eax

; 621  :     _STLP_STD::_Destroy_Moved_Range(rbegin(), rend());

	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range_aux@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>

; 622  :     this->_M_end_of_storage.deallocate(this->_M_start, this->_M_end_of_storage._M_data - this->_M_start);

	mov	esi, DWORD PTR [esi]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN29@M_clear_af@5
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN29@M_clear_af@5:

; 623  :   }

	pop	esi
	ret	0
?_M_clear_after_move@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXXZ ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_clear_after_move
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_M_clear@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXXZ
_TEXT	SEGMENT
?_M_clear@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXXZ PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_clear, COMDAT
; _this$ = eax

; 615  :   void _M_clear() {

	push	esi
	mov	esi, eax

; 616  :     _STLP_STD::_Destroy_Range(rbegin(), rend());

	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range_aux@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>

; 617  :     this->_M_end_of_storage.deallocate(this->_M_start, this->_M_end_of_storage._M_data - this->_M_start);

	mov	esi, DWORD PTR [esi]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN29@M_clear@31
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN29@M_clear@31:

; 618  :   }

	pop	esi
	ret	0
?_M_clear@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXXZ ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_clear
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.c
_TEXT	ENDS
;	COMDAT ??4?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
tv353 = -36						; size = 4
tv351 = -36						; size = 4
___mid$120093 = -32					; size = 16
$T416823 = -16						; size = 16
$T416805 = -16						; size = 16
$T416802 = -16						; size = 16
$T416801 = -16						; size = 16
_this$ = 8						; size = 4
??4?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::operator=, COMDAT
; ___x$ = eax

; 107  : deque<_Tp, _Alloc >::operator= (const deque<_Tp, _Alloc >& __x) {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	mov	esi, eax
	push	edi

; 108  :   const size_type __len = size();

	mov	edi, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edi+12]
	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR $T416823[esp+52], eax
	mov	DWORD PTR $T416823[esp+60], edx
	mov	edx, DWORD PTR [edi+16]
	sub	edx, DWORD PTR [edi+20]
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	mov	ebx, DWORD PTR [edi]
	mov	ecx, DWORD PTR [edi+8]
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, eax
	mov	eax, DWORD PTR [edi+28]
	sub	eax, DWORD PTR $T416823[esp+60]
	sar	eax, 2
	sub	eax, 1
	lea	eax, DWORD PTR [eax+eax*4]
	lea	eax, DWORD PTR [edx+eax*2]
	sub	ecx, ebx
	mov	DWORD PTR tv353[esp+48], eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	mov	eax, DWORD PTR tv353[esp+48]
	sar	edx, 1
	mov	ebx, edx
	shr	ebx, 31					; 0000001fH
	add	eax, edx
	add	ebx, eax

; 109  :   if (&__x != this) {

	cmp	esi, edi
	je	$LN42@operator@108

; 110  :     if (__len >= __x.size())

	mov	ecx, esi
	call	?size@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QBEIXZ ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::size
	cmp	ebx, eax
	jb	$LN2@operator@108

; 111  :       erase(copy(__x.begin(), __x.end(), this->_M_start), this->_M_finish);

	mov	ecx, DWORD PTR [edi+16]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [edi+20]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [edi+24]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [edi+28]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR [edi]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [edi+8]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR [edi+12]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR [esi+16]
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [esi+20]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [esi+24]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR [esi]
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [esi+8]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR [esi+12]
	mov	DWORD PTR [ecx+12], edx
	call	??$copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@20@0U120@@Z ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >
	add	esp, 48					; 00000030H
	lea	esi, DWORD PTR $T416801[esp+80]
	mov	eax, edi
	call	?erase@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@U423@0@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::erase

; 116  :     }
; 117  :   }
; 118  :   return *this;

	mov	eax, edi

; 119  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN2@operator@108:

; 112  :     else {
; 113  :       const_iterator __mid = __x.begin() + difference_type(__len);

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi+8]
	mov	DWORD PTR $T416802[esp+48], eax
	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR $T416802[esp+60], eax
	lea	edi, DWORD PTR ___mid$120093[esp+48]
	lea	eax, DWORD PTR $T416802[esp+48]
	mov	DWORD PTR $T416802[esp+52], ecx
	mov	DWORD PTR $T416802[esp+56], edx
	call	??H?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >::operator+

; 114  :       copy(__x.begin(), __mid, this->_M_start);

	mov	edi, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edi]
	mov	ebx, DWORD PTR ___mid$120093[esp+48]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [edi+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [edi+12]
	mov	ecx, DWORD PTR ___mid$120093[esp+68]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___mid$120093[esp+72]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___mid$120093[esp+92]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [esi+4]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [esi+8]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ecx
	lea	eax, DWORD PTR $T416805[esp+96]
	call	??$copy@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@20@0U120@@Z ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> >,stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Nonconst_traits<CStatGraph::SMarker> > >

; 115  :       insert(this->_M_finish, __mid, __x.end());

	mov	edx, DWORD PTR [esi+16]
	lea	eax, DWORD PTR [esi+16]
	add	esp, 32					; 00000020H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR ___mid$120093[esp+72]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, DWORD PTR ___mid$120093[esp+68]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___mid$120093[esp+92]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [edi+16]
	mov	DWORD PTR [eax+12], ecx
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [edi+24]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [edi+28]
	mov	esi, edi
	mov	DWORD PTR [eax+12], ecx
	call	??$insert@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXU?$_Deque_iterator@USMarker@CStatGraph@@U?$_Nonconst_traits@USMarker@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USMarker@CStatGraph@@U?$_Const_traits@USMarker@CStatGraph@@@stlp_std@@@12@1@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::insert<stlp_std::priv::_Deque_iterator<CStatGraph::SMarker,stlp_std::_Const_traits<CStatGraph::SMarker> > >
$LN42@operator@108:

; 116  :     }
; 117  :   }
; 118  :   return *this;

	mov	eax, edi

; 119  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::operator=
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.c
_TEXT	ENDS
;	COMDAT ?_M_insert_overflow_aux@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXPAUSSubGraph@CStatGraph@@ABU45@ABU__false_type@3@I_N@Z
_TEXT	SEGMENT
___old_size$ = -12					; size = 4
___fill_len$ = -8					; size = 4
___new_start$ = -4					; size = 4
___last$416993 = 8					; size = 4
___new_finish$ = 8					; size = 4
_this$ = 8						; size = 4
___pos$ = 12						; size = 4
___x$ = 16						; size = 4
?_M_insert_overflow_aux@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXPAUSSubGraph@CStatGraph@@ABU45@ABU__false_type@3@I_N@Z PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_insert_overflow_aux, COMDAT

; 84   :                                                  size_type __fill_len, bool __atend ) {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _this$[esp+16]

; 85   :   const size_type __old_size = size();

	mov	ecx, DWORD PTR [ebp+4]
	sub	ecx, DWORD PTR [ebp]
	mov	eax, 780903145				; 2e8ba2e9H
	imul	ecx
	sar	edx, 3
	mov	eax, edx
	push	esi
	shr	eax, 31					; 0000001fH
	push	edi
	add	eax, edx

; 86   :   size_type __len = __old_size + (max)(__old_size, __fill_len);

	lea	ecx, DWORD PTR ___fill_len$[esp+28]
	push	ecx
	lea	edx, DWORD PTR ___old_size$[esp+32]
	push	edx
	mov	DWORD PTR ___fill_len$[esp+36], 1
	mov	DWORD PTR ___old_size$[esp+36], eax
	call	??$max@I@stlp_std@@YAABIABI0@Z		; stlp_std::max<unsigned int>
	mov	esi, DWORD PTR [eax]
	add	esi, DWORD PTR ___old_size$[esp+36]

; 87   : 
; 88   :   pointer __new_start = this->_M_end_of_storage.allocate(__len, __len);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	imul	esi, 44					; 0000002cH
	add	esp, 8
	push	esi
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	mov	ebx, eax

; 89   :   pointer __new_finish = __new_start;
; 90   :   _STLP_TRY {
; 91   :     __new_finish = _STLP_PRIV __uninitialized_move(this->_M_start, __pos, __new_start, _TrivialUCopy(), _Movable());

	mov	eax, DWORD PTR [ebp]
	push	ebx
	push	eax
	mov	eax, DWORD PTR ___pos$[esp+32]
	mov	DWORD PTR ___new_start$[esp+36], ebx
	call	??$__ucopy@PAUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PAU23@00ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<CStatGraph::SSubGraph *,CStatGraph::SSubGraph *,int>
	mov	edi, eax

; 92   :     // handle insertion
; 93   :     if (__fill_len == 1) {

	mov	eax, DWORD PTR ___fill_len$[esp+36]
	add	esp, 8
	cmp	eax, 1
	mov	DWORD PTR ___new_finish$[esp+24], edi
	jne	SHORT $LN3@M_insert_o@25

; 94   :       _Copy_Construct(__new_finish, __x);

	test	edi, edi
	je	SHORT $LN28@M_insert_o@25
	mov	eax, DWORD PTR ___x$[esp+24]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edi], ecx
	add	edi, 4
	lea	ebx, DWORD PTR [eax+4]
	call	??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
	mov	edi, DWORD PTR ___new_finish$[esp+24]
	mov	ebx, DWORD PTR ___new_start$[esp+28]
$LN28@M_insert_o@25:

; 95   :       ++__new_finish;

	add	edi, 44					; 0000002cH

; 96   :     } else

	jmp	SHORT $LN1@M_insert_o@25
$LN3@M_insert_o@25:

; 97   :       __new_finish = _STLP_PRIV __uninitialized_fill_n(__new_finish, __fill_len, __x);

	mov	edx, DWORD PTR ___x$[esp+24]
	imul	eax, 44					; 0000002cH
	push	edx
	add	eax, edi
	push	edi
	mov	DWORD PTR ___last$416993[esp+32], eax
	call	??$__ufill@PAUSSubGraph@CStatGraph@@U12@H@priv@stlp_std@@YAXPAUSSubGraph@CStatGraph@@0ABU23@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ufill<CStatGraph::SSubGraph *,CStatGraph::SSubGraph,int>
	mov	eax, DWORD PTR ___last$416993[esp+32]
	add	esp, 8
	mov	edi, eax
$LN1@M_insert_o@25:

; 98   :     if (!__atend)
; 99   :       __new_finish = _STLP_PRIV __uninitialized_move(__pos, this->_M_finish, __new_finish, _TrivialUCopy(), _Movable()); // copy remainder
; 100  :   }
; 101  :   _STLP_UNWIND((_STLP_STD::_Destroy_Range(__new_start,__new_finish),
; 102  :                this->_M_end_of_storage.deallocate(__new_start,__len)))
; 103  :   _M_clear_after_move();

	mov	ecx, DWORD PTR [ebp+4]
	mov	eax, DWORD PTR [ebp]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range_aux@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>
	mov	eax, DWORD PTR [ebp]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN72@M_insert_o@25
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN72@M_insert_o@25:

; 104  :   _M_set(__new_start, __new_finish, __new_start + __len);

	add	esi, ebx
	mov	DWORD PTR [ebp+4], edi

; 105  : }

	pop	edi
	mov	DWORD PTR [ebp+8], esi
	pop	esi
	mov	DWORD PTR [ebp], ebx
	pop	ebp
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	12					; 0000000cH
?_M_insert_overflow_aux@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXPAUSSubGraph@CStatGraph@@ABU45@ABU__false_type@3@I_N@Z ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_insert_overflow_aux
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.h
_TEXT	ENDS
;	COMDAT ?_M_insert_overflow@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXPAUSSubGraph@CStatGraph@@ABU45@ABU__false_type@3@I_N@Z
_TEXT	SEGMENT
?_M_insert_overflow@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXPAUSSubGraph@CStatGraph@@ABU45@ABU__false_type@3@I_N@Z PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_insert_overflow, COMDAT
; _this$ = edx
; ___pos$ = ecx
; ___x$ = eax

; 161  :   { _M_insert_overflow_aux(__pos, __x, _Movable(), __fill_len, __atend); }

	push	eax
	push	ecx
	push	edx
	call	?_M_insert_overflow_aux@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXPAUSSubGraph@CStatGraph@@ABU45@ABU__false_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_insert_overflow_aux
	ret	0
?_M_insert_overflow@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXPAUSSubGraph@CStatGraph@@ABU45@ABU__false_type@3@I_N@Z ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_insert_overflow
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?push_back@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEXABUSSubGraph@CStatGraph@@@Z
_TEXT	SEGMENT
?push_back@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEXABUSSubGraph@CStatGraph@@@Z PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::push_back, COMDAT
; _this$ = esi
; ___x$ = ecx

; 361  : #endif /*!_STLP_DONT_SUP_DFLT_PARAM && !_STLP_NO_ANACHRONISMS*/
; 362  :     if (this->_M_finish != this->_M_end_of_storage._M_data) {

	mov	eax, DWORD PTR [esi+4]
	cmp	eax, DWORD PTR [esi+8]
	je	SHORT $LN2@push_back@35

; 363  :       _Copy_Construct(this->_M_finish, __x);

	test	eax, eax
	je	SHORT $LN7@push_back@35
	mov	edx, DWORD PTR [ecx]
	push	ebx
	push	edi
	lea	ebx, DWORD PTR [ecx+4]
	lea	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [eax], edx
	call	??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
	pop	edi
	pop	ebx
$LN7@push_back@35:

; 364  :       ++this->_M_finish;

	add	DWORD PTR [esi+4], 44			; 0000002cH

; 368  :   }

	ret	0
$LN2@push_back@35:

; 365  :     }
; 366  :     else
; 367  :       _M_insert_overflow(this->_M_finish, __x, _TrivialCopy(), 1UL, true);

	push	ecx
	push	eax
	push	esi
	call	?_M_insert_overflow_aux@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXPAUSSubGraph@CStatGraph@@ABU45@ABU__false_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_insert_overflow_aux

; 368  :   }

	ret	0
?push_back@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEXABUSSubGraph@CStatGraph@@@Z ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::push_back
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ??0?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAE@ABV?$xalloc@USSubGraph@CStatGraph@@@@@Z
_TEXT	SEGMENT
??0?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAE@ABV?$xalloc@USSubGraph@CStatGraph@@@@@Z PROC ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >, COMDAT
; _this$ = eax

; 106  :   explicit vector(const allocator_type& __a = allocator_type())

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAE@ABV?$xalloc@USSubGraph@CStatGraph@@@@@Z ENDP ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_deque.h
_TEXT	ENDS
;	COMDAT ??4?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
??4?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAEAAV01@ABV01@@Z PROC ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::operator=, COMDAT
; _this$ = esi
; ___x$ = eax

; 215  :   _Self& operator= (const _Self& __x) { _M_impl = __x._M_impl; return *this; }

	push	esi
	call	??4?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::operator=
	mov	eax, esi
	ret	0
??4?$deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@stlp_std@@QAEAAV01@ABV01@@Z ENDP ; stlp_std::deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::operator=
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAEXABUSSubGraph@CStatGraph@@@Z
_TEXT	SEGMENT
?push_back@?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAEXABUSSubGraph@CStatGraph@@@Z PROC ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::push_back, COMDAT
; _this$ = esi
; ___x$ = ecx

; 171  :   { _M_impl.push_back(cast_traits::to_storage_type_cref(__x)); }

	mov	eax, DWORD PTR [esi+4]
	cmp	eax, DWORD PTR [esi+8]
	je	SHORT $LN6@push_back@36
	test	eax, eax
	je	SHORT $LN11@push_back@36
	mov	edx, DWORD PTR [ecx]
	push	ebx
	push	edi
	lea	ebx, DWORD PTR [ecx+4]
	lea	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [eax], edx
	call	??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
	pop	edi
	pop	ebx
$LN11@push_back@36:
	add	DWORD PTR [esi+4], 44			; 0000002cH
	ret	0
$LN6@push_back@36:
	push	ecx
	push	eax
	push	esi
	call	?_M_insert_overflow_aux@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXPAUSSubGraph@CStatGraph@@ABU45@ABU__false_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_insert_overflow_aux
	ret	0
?push_back@?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAEXABUSSubGraph@CStatGraph@@@Z ENDP ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::push_back
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\_stl_extensions.h
_TEXT	ENDS
;	COMDAT ??0?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QAE@XZ
_TEXT	SEGMENT
??0?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QAE@XZ PROC ; xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >, COMDAT
; _this$ = eax

; 123  : 			xr_vector			()									: inherited	()					{}

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QAE@XZ ENDP ; xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >
_TEXT	ENDS
PUBLIC	??1CStatGraph@@QAE@XZ				; CStatGraph::~CStatGraph
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\statgraph.cpp
;	COMDAT ??1CStatGraph@@QAE@XZ
_TEXT	SEGMENT
??1CStatGraph@@QAE@XZ PROC				; CStatGraph::~CStatGraph, COMDAT
; _this$ = ecx

; 25   : {

	push	ebx
	push	esi
	mov	esi, ecx
	push	edi

; 26   : 	Device.seqRender.Remove		(this);

	mov	ebx, esi
	mov	eax, OFFSET ?Device@@3VCRenderDevice@@A+648
	mov	DWORD PTR [esi], OFFSET ??_7CStatGraph@@6B@
	call	?Remove@?$CRegistrator@VpureRender@@@@QAEXPAVpureRender@@@Z ; CRegistrator<pureRender>::Remove

; 27   : 	OnDeviceDestroy();

	mov	ecx, DWORD PTR [esi+76]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	call	edx

; 28   : 	m_Markers.clear();

	lea	edi, DWORD PTR [esi+80]
	call	?clear@?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEXXZ ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::clear

; 29   : }

	mov	ebx, edi
	call	??1?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::~_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >
	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [esi+76]
	mov	edx, DWORD PTR [edx+20]
	push	eax
	call	edx
	mov	DWORD PTR [esi+76], 0
	mov	ecx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [esi+4]
	push	ecx
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range_aux@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>
	mov	esi, DWORD PTR [esi+4]
	add	esp, 8
	test	esi, esi
	je	SHORT $LN72@CStatGraph
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	esi
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN72@CStatGraph:
	pop	edi
	pop	esi
	pop	ebx
	ret	0
??1CStatGraph@@QAE@XZ ENDP				; CStatGraph::~CStatGraph
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??4?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
??4?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QAEAAV0@ABV0@@Z PROC ; xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::operator=, COMDAT
; _this$ = esi
; ___that$ = eax
	push	esi
	call	??4?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::operator=
	mov	eax, esi
	ret	0
??4?$xr_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@@QAEAAV0@ABV0@@Z ENDP ; xr_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::operator=
_TEXT	ENDS
PUBLIC	?AppendSubGraph@CStatGraph@@QAEIW4EStyle@1@@Z	; CStatGraph::AppendSubGraph
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\statgraph.h
;	COMDAT ?AppendSubGraph@CStatGraph@@QAEIW4EStyle@1@@Z
_TEXT	SEGMENT
$T417780 = -44						; size = 44
_S$ = 8							; size = 4
?AppendSubGraph@CStatGraph@@QAEIW4EStyle@1@@Z PROC	; CStatGraph::AppendSubGraph, COMDAT
; _this$ = ecx

; 128  : 	{

	sub	esp, 44					; 0000002cH
	push	ebx
	push	esi
	push	edi

; 129  : 		subgraphs.push_back(SSubGraph(S));

	xor	edi, edi
	push	edi
	lea	esi, DWORD PTR $T417780[esp+64]
	mov	ebx, ecx
	mov	DWORD PTR $T417780[esp+64], edi
	mov	DWORD PTR $T417780[esp+68], edi
	mov	DWORD PTR $T417780[esp+72], edi
	mov	DWORD PTR $T417780[esp+76], edi
	mov	DWORD PTR $T417780[esp+80], edi
	mov	DWORD PTR $T417780[esp+84], edi
	mov	DWORD PTR $T417780[esp+88], edi
	mov	DWORD PTR $T417780[esp+92], edi
	mov	DWORD PTR $T417780[esp+96], edi
	mov	DWORD PTR $T417780[esp+100], edi
	call	?_M_initialize_map@?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_initialize_map
	mov	eax, DWORD PTR [ebx+8]
	cmp	eax, DWORD PTR [ebx+12]
	mov	ecx, DWORD PTR _S$[esp+52]
	lea	esi, DWORD PTR [ebx+4]
	mov	DWORD PTR $T417780[esp+56], ecx
	je	SHORT $LN38@AppendSubG@2
	cmp	eax, edi
	je	SHORT $LN43@AppendSubG@2
	lea	edi, DWORD PTR [eax+4]
	lea	ebx, DWORD PTR $T417780[esp+60]
	mov	DWORD PTR [eax], ecx
	call	??0?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >
$LN43@AppendSubG@2:
	add	DWORD PTR [esi+4], 44			; 0000002cH
	jmp	SHORT $LN53@AppendSubG@2
$LN38@AppendSubG@2:
	lea	ecx, DWORD PTR $T417780[esp+56]
	push	ecx
	push	eax
	push	esi
	call	?_M_insert_overflow_aux@?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@AAEXPAUSSubGraph@CStatGraph@@ABU45@ABU__false_type@3@I_N@Z ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::_M_insert_overflow_aux
$LN53@AppendSubG@2:
	lea	ebx, DWORD PTR $T417780[esp+60]
	call	??1?$_Deque_base@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE@XZ ; stlp_std::priv::_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::~_Deque_base<CStatGraph::SElement,xalloc<CStatGraph::SElement> >

; 130  : 		return subgraphs.size()-1;

	mov	ecx, DWORD PTR [esi+4]
	sub	ecx, DWORD PTR [esi]
	mov	eax, 780903145				; 2e8ba2e9H
	imul	ecx
	sar	edx, 3

; 131  : 	};

	pop	edi
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	pop	esi
	lea	eax, DWORD PTR [edx+eax-1]
	pop	ebx
	add	esp, 44					; 0000002cH
	ret	4
?AppendSubGraph@CStatGraph@@QAEIW4EStyle@1@@Z ENDP	; CStatGraph::AppendSubGraph
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.h
;	COMDAT ??$_M_insert_range_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1IABU__false_type@2@@Z
_TEXT	SEGMENT
___elemsbefore$ = -72					; size = 4
___length$ = -68					; size = 4
___finish_n$126317 = -64				; size = 16
___new_start$126261 = -64				; size = 16
___mid$126330 = -48					; size = 16
___old_finish$126313 = -48				; size = 16
___mid$126287 = -48					; size = 16
___start_n$126266 = -48					; size = 16
$T482532 = -48						; size = 16
$T482593 = -32						; size = 16
___new_finish$126311 = -32				; size = 16
___old_start$126263 = -32				; size = 16
$T482531 = -32						; size = 16
$T482553 = -16						; size = 16
$T482549 = -16						; size = 16
$T482540 = -16						; size = 16
$T482536 = -16						; size = 16
_this$ = 8						; size = 4
$T482565 = 12						; size = 16
$T482557 = 12						; size = 16
$T482546 = 12						; size = 16
___pos$ = 12						; size = 16
___first$ = 28						; size = 16
$T482563 = 44						; size = 16
___last$ = 44						; size = 16
??$_M_insert_range_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1IABU__false_type@2@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_insert_range_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >, COMDAT
; ___n$ = eax

; 966  :   void _M_insert_range_aux(iterator __pos,

	sub	esp, 72					; 00000048H
	push	ebx
	mov	ebx, eax
	push	ebp
	push	esi

; 967  :                            _ForwardIterator __first, _ForwardIterator __last,
; 968  :                            size_type __n, const __false_type& /*_Movable*/) {
; 969  :     const difference_type __elemsbefore = __pos - this->_M_start;

	mov	esi, DWORD PTR _this$[esp+80]
	mov	edx, DWORD PTR [esi+12]
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR ___pos$[esp+96]
	sub	edi, edx
	mov	edx, DWORD PTR ___pos$[esp+84]
	sub	edx, DWORD PTR ___pos$[esp+88]
	mov	DWORD PTR $T482531[esp+92], eax
	mov	eax, DWORD PTR [esi+8]
	sub	eax, ecx

; 970  :     size_type __length = size();

	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, DWORD PTR [esi]
	sar	edi, 2
	sar	eax, 3
	shl	edi, 4
	sar	edx, 3
	add	edi, edx
	lea	edx, DWORD PTR [edi+eax-16]
	mov	eax, DWORD PTR [esi+4]
	mov	edi, DWORD PTR [esi+28]
	mov	DWORD PTR $T482593[esp+92], eax
	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR $T482593[esp+100], eax
	sub	edi, DWORD PTR $T482593[esp+100]
	mov	eax, DWORD PTR [esi+16]
	sub	eax, DWORD PTR [esi+20]
	lea	ebp, DWORD PTR [esi+16]
	sar	edi, 2
	sar	eax, 3
	sub	edi, 1
	shl	edi, 4
	add	eax, edi
	sar	ecx, 3
	add	eax, ecx
	mov	DWORD PTR ___length$[esp+88], eax

; 971  :     if (__elemsbefore <= difference_type(__length / 2)) {

	shr	eax, 1
	cmp	edx, eax
	mov	DWORD PTR ___elemsbefore$[esp+88], edx

; 972  :       iterator __new_start = _M_reserve_elements_at_front(__n);

	mov	eax, esi
	jg	$LN6@M_insert_r@2
	lea	edi, DWORD PTR ___new_start$126261[esp+88]
	call	?_M_reserve_elements_at_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@I@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reserve_elements_at_front

; 973  :       iterator __old_start = this->_M_start;

	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi+12]
	mov	edx, DWORD PTR [esi+8]
	mov	ebp, DWORD PTR [esi]
	mov	DWORD PTR ___old_start$126263[esp+92], ecx

; 974  :       __pos = this->_M_start + __elemsbefore;

	mov	ecx, DWORD PTR ___elemsbefore$[esp+88]
	mov	DWORD PTR ___old_start$126263[esp+100], eax
	push	ecx
	lea	edi, DWORD PTR $T482532[esp+92]
	mov	eax, esi
	mov	DWORD PTR ___old_start$126263[esp+100], edx
	call	??H?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator+
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR ___pos$[esp+84], edx
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR ___pos$[esp+96], eax

; 975  :       _STLP_TRY {
; 976  :         if (__elemsbefore >= difference_type(__n)) {

	mov	eax, DWORD PTR ___elemsbefore$[esp+88]
	cmp	eax, ebx
	mov	DWORD PTR ___pos$[esp+88], ecx
	mov	DWORD PTR ___pos$[esp+92], edx
	jl	$LN5@M_insert_r@2

; 977  :           iterator __start_n = this->_M_start + difference_type(__n);

	push	ebx
	lea	edi, DWORD PTR ___start_n$126266[esp+92]
	mov	eax, esi
	call	??H?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator+

; 978  :           uninitialized_copy(this->_M_start, __start_n, __new_start);

	mov	edi, DWORD PTR ___new_start$126261[esp+88]
	mov	ecx, DWORD PTR ___new_start$126261[esp+92]
	mov	edx, DWORD PTR ___new_start$126261[esp+96]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___new_start$126261[esp+116]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR ___start_n$126266[esp+104]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR ___start_n$126266[esp+108]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ___start_n$126266[esp+128]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___start_n$126266[esp+132]
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ecx
	mov	edx, DWORD PTR [esi]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [esi+8]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [eax+12], ecx
	lea	eax, DWORD PTR $T482536[esp+136]
	call	??$uninitialized_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >

; 979  :           this->_M_start = __new_start;

	mov	edx, DWORD PTR ___new_start$126261[esp+140]
	mov	eax, DWORD PTR ___new_start$126261[esp+144]
	mov	ecx, DWORD PTR ___new_start$126261[esp+148]
	mov	DWORD PTR [esi], edi
	mov	DWORD PTR [esi+4], edx

; 980  :           copy(__start_n, __pos, __old_start);

	mov	edx, DWORD PTR ___old_start$126263[esp+140]
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], ecx
	mov	ecx, DWORD PTR ___old_start$126263[esp+144]
	add	esp, 32					; 00000020H
	mov	eax, esp
	mov	DWORD PTR [eax], ebp
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___old_start$126263[esp+116]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___pos$[esp+100]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___pos$[esp+104]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___pos$[esp+124]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___pos$[esp+128]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___start_n$126266[esp+120]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___start_n$126266[esp+124]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___start_n$126266[esp+144]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___start_n$126266[esp+148]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	lea	eax, DWORD PTR $T482540[esp+136]
	call	??$copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >

; 981  :           copy(__first, __last, __pos - difference_type(__n));

	add	esp, 32					; 00000020H
	mov	edi, esp
	push	ebx
	lea	eax, DWORD PTR ___pos$[esp+104]
	call	??G?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator-
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR ___last$[esp+116]
	mov	edx, DWORD PTR ___last$[esp+120]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+124]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+128]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+116]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+120]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 982  :         }
; 983  :         else {

	jmp	$LN81@M_insert_r@2
$LN5@M_insert_r@2:

; 984  :           _ForwardIterator __mid = __first;

	mov	edx, DWORD PTR ___first$[esp+92]
	mov	ecx, DWORD PTR ___first$[esp+88]
	mov	edi, DWORD PTR ___first$[esp+84]
	mov	DWORD PTR ___mid$126287[esp+96], edx
	mov	DWORD PTR ___mid$126287[esp+92], ecx
	mov	ecx, DWORD PTR ___first$[esp+96]

; 985  :           advance(__mid, difference_type(__n) - __elemsbefore);

	mov	edx, ebx
	sub	edx, eax
	lea	esi, DWORD PTR ___mid$126287[esp+88]
	mov	DWORD PTR ___mid$126287[esp+88], edi
	mov	DWORD PTR ___mid$126287[esp+100], ecx
	call	?_M_advance@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_advance

; 986  :           _STLP_PRIV __uninitialized_copy_copy(this->_M_start, __pos, __first, __mid, __new_start);

	mov	ebx, DWORD PTR ___new_start$126261[esp+88]
	mov	edx, DWORD PTR ___new_start$126261[esp+92]
	mov	ecx, DWORD PTR ___new_start$126261[esp+96]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___new_start$126261[esp+116]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___mid$126287[esp+104]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___mid$126287[esp+108]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___mid$126287[esp+128]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___mid$126287[esp+132]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+120]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+124]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edi
	mov	edi, DWORD PTR _this$[esp+132]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___first$[esp+144]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR ___pos$[esp+132]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR ___pos$[esp+136]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ___pos$[esp+156]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___pos$[esp+160]
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ecx
	mov	edx, DWORD PTR [edi]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [edi+8]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [edi+12]
	lea	esi, DWORD PTR $T482546[esp+164]
	mov	DWORD PTR [eax+12], ecx
	call	??$__uninitialized_copy_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@23@U123@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U201@0U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@10@Z ; stlp_std::priv::__uninitialized_copy_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >

; 987  :           this->_M_start = __new_start;

	mov	edx, DWORD PTR ___new_start$126261[esp+172]
	mov	eax, DWORD PTR ___new_start$126261[esp+176]
	mov	ecx, DWORD PTR ___new_start$126261[esp+180]
	mov	DWORD PTR [edi], ebx
	mov	DWORD PTR [edi+4], edx

; 988  :           copy(__mid, __last, __old_start);

	mov	edx, DWORD PTR ___old_start$126263[esp+172]
	mov	DWORD PTR [edi+8], eax
	mov	DWORD PTR [edi+12], ecx
	mov	ecx, DWORD PTR ___old_start$126263[esp+176]
	add	esp, 64					; 00000040H
	mov	eax, esp
	mov	DWORD PTR [eax], ebp
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___old_start$126263[esp+116]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	sub	esp, 16					; 00000010H
	mov	ecx, DWORD PTR ___last$[esp+116]
	mov	edx, DWORD PTR ___last$[esp+120]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+124]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+128]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___mid$126287[esp+120]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___mid$126287[esp+124]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___mid$126287[esp+144]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___mid$126287[esp+148]

; 989  :         }
; 990  :       }
; 991  :       _STLP_UNWIND(this->_M_destroy_nodes(__new_start._M_node, this->_M_start._M_node))
; 992  :     }
; 993  :     else {

	jmp	$LN82@M_insert_r@2
$LN6@M_insert_r@2:

; 994  :       iterator __new_finish = _M_reserve_elements_at_back(__n);

	lea	edi, DWORD PTR ___new_finish$126311[esp+88]
	call	?_M_reserve_elements_at_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@I@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reserve_elements_at_back

; 995  :       iterator __old_finish = this->_M_finish;

	mov	eax, DWORD PTR [ebp]

; 996  :       const difference_type __elemsafter = difference_type(__length) - __elemsbefore;

	mov	esi, DWORD PTR ___length$[esp+88]
	sub	esi, DWORD PTR ___elemsbefore$[esp+88]
	mov	ecx, DWORD PTR [ebp+4]
	mov	edx, DWORD PTR [ebp+8]
	mov	DWORD PTR ___old_finish$126313[esp+88], eax
	mov	eax, DWORD PTR [ebp+12]
	mov	DWORD PTR ___old_finish$126313[esp+100], eax

; 997  :       __pos = this->_M_finish - __elemsafter;

	push	esi
	lea	edi, DWORD PTR $T482549[esp+92]
	mov	eax, ebp
	mov	DWORD PTR ___old_finish$126313[esp+96], ecx
	mov	DWORD PTR ___old_finish$126313[esp+100], edx
	call	??G?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator-

; 998  :       _STLP_TRY {
; 999  :         if (__elemsafter > difference_type(__n)) {

	cmp	esi, ebx
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ___pos$[esp+84], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR ___pos$[esp+88], edx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR ___pos$[esp+92], ecx
	mov	DWORD PTR ___pos$[esp+96], edx
	jle	$LN2@M_insert_r@2

; 1000 :           iterator __finish_n = this->_M_finish - difference_type(__n);

	push	ebx
	lea	edi, DWORD PTR ___finish_n$126317[esp+92]
	mov	eax, ebp
	call	??G?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >::operator-

; 1001 :           uninitialized_copy(__finish_n, this->_M_finish, this->_M_finish);

	mov	ecx, DWORD PTR [ebp]
	mov	esi, DWORD PTR ___finish_n$126317[esp+88]
	mov	edi, DWORD PTR ___finish_n$126317[esp+92]
	mov	ebx, DWORD PTR ___finish_n$126317[esp+96]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [ebp]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [ebp+12]
	mov	ecx, DWORD PTR ___finish_n$126317[esp+132]
	mov	DWORD PTR [eax+12], edx
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [eax+4], edi
	mov	DWORD PTR [eax+8], ebx
	mov	DWORD PTR [eax+12], ecx
	lea	eax, DWORD PTR $T482553[esp+136]
	call	??$uninitialized_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >

; 1002 :           this->_M_finish = __new_finish;

	mov	edx, DWORD PTR ___new_finish$126311[esp+136]
	mov	eax, DWORD PTR ___new_finish$126311[esp+140]
	mov	ecx, DWORD PTR ___new_finish$126311[esp+144]
	mov	DWORD PTR [ebp], edx
	mov	edx, DWORD PTR ___new_finish$126311[esp+148]
	mov	DWORD PTR [ebp+4], eax
	mov	DWORD PTR [ebp+8], ecx

; 1003 :           copy_backward(__pos, __finish_n, __old_finish);

	mov	ecx, DWORD PTR ___old_finish$126313[esp+136]
	mov	DWORD PTR [ebp+12], edx
	mov	edx, DWORD PTR ___old_finish$126313[esp+140]
	mov	ebp, DWORD PTR ___pos$[esp+144]
	add	esp, 32					; 00000020H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___old_finish$126313[esp+112]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___old_finish$126313[esp+116]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___finish_n$126317[esp+116]
	mov	DWORD PTR [eax+12], edx
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR ___pos$[esp+116]
	mov	DWORD PTR [eax+4], edi
	mov	edi, DWORD PTR ___pos$[esp+120]
	mov	DWORD PTR [eax+8], ebx
	mov	ebx, DWORD PTR ___pos$[esp+124]
	mov	DWORD PTR [eax+12], ecx
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [eax+4], edi
	mov	DWORD PTR [eax+8], ebx
	mov	DWORD PTR [eax+12], ebp
	lea	eax, DWORD PTR $T482557[esp+132]
	call	??$copy_backward@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U123@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U120@00@Z ; stlp_std::copy_backward<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >

; 1004 :           copy(__first, __last, __pos);

	add	esp, 32					; 00000020H
	mov	eax, esp
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [eax+4], edi
	mov	DWORD PTR [eax+8], ebx
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [eax+12], ebp
	mov	eax, esp
	mov	edx, DWORD PTR ___last$[esp+116]
	mov	ecx, DWORD PTR ___last$[esp+120]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ___last$[esp+124]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___last$[esp+128]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR ___first$[esp+116]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR ___first$[esp+120]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ___first$[esp+140]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___first$[esp+144]
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ecx

; 1005 :         }
; 1006 :         else {

	jmp	$LN83@M_insert_r@2
$LN2@M_insert_r@2:

; 1007 :           _ForwardIterator __mid = __first;

	mov	edx, DWORD PTR ___first$[esp+92]
	mov	eax, DWORD PTR ___first$[esp+96]
	mov	edi, DWORD PTR ___first$[esp+84]
	mov	ebx, DWORD PTR ___first$[esp+88]
	mov	DWORD PTR ___mid$126330[esp+96], edx

; 1008 :           advance(__mid, __elemsafter);

	mov	edx, esi
	lea	esi, DWORD PTR ___mid$126330[esp+88]
	mov	DWORD PTR ___mid$126330[esp+88], edi
	mov	DWORD PTR ___mid$126330[esp+92], ebx
	mov	DWORD PTR ___mid$126330[esp+100], eax
	call	?_M_advance@?$_Deque_iterator_base@USElement@CStatGraph@@@priv@stlp_std@@QAEXH@Z ; stlp_std::priv::_Deque_iterator_base<CStatGraph::SElement>::_M_advance

; 1009 :           _STLP_PRIV __uninitialized_copy_copy(__mid, __last, __pos, this->_M_finish, this->_M_finish);

	mov	ecx, DWORD PTR [ebp]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [ebp]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [ebp+12]
	mov	ecx, DWORD PTR ___pos$[esp+116]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___pos$[esp+120]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___pos$[esp+140]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___pos$[esp+144]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___last$[esp+132]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___last$[esp+136]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+156]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+160]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___mid$126330[esp+152]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___mid$126330[esp+156]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___mid$126330[esp+176]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___mid$126330[esp+180]
	mov	DWORD PTR [eax+8], ecx
	lea	esi, DWORD PTR $T482563[esp+164]
	mov	DWORD PTR [eax+12], edx
	call	??$__uninitialized_copy_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@U423@@priv@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@01@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@01@0U201@11@Z ; stlp_std::priv::__uninitialized_copy_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >

; 1010 :           this->_M_finish = __new_finish;

	mov	eax, DWORD PTR ___new_finish$126311[esp+168]
	mov	ecx, DWORD PTR ___new_finish$126311[esp+172]
	mov	edx, DWORD PTR ___new_finish$126311[esp+176]
	mov	DWORD PTR [ebp], eax
	mov	eax, DWORD PTR ___new_finish$126311[esp+180]
	mov	DWORD PTR [ebp+4], ecx

; 1011 :           copy(__first, __mid, __pos);

	mov	ecx, DWORD PTR ___pos$[esp+164]
	mov	DWORD PTR [ebp+8], edx
	mov	edx, DWORD PTR ___pos$[esp+168]
	mov	DWORD PTR [ebp+12], eax
	add	esp, 64					; 00000040H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___pos$[esp+108]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___pos$[esp+112]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR ___mid$126330[esp+104]
	mov	edx, DWORD PTR ___mid$126330[esp+108]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___mid$126330[esp+128]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___mid$126330[esp+132]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], ebx
$LN81@M_insert_r@2:
	mov	ecx, DWORD PTR ___first$[esp+140]
	mov	edx, DWORD PTR ___first$[esp+144]
$LN82@M_insert_r@2:
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
$LN83@M_insert_r@2:
	lea	eax, DWORD PTR $T482565[esp+132]
	call	??$copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@20@0U120@@Z ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
	add	esp, 48					; 00000030H

; 1012 :         }
; 1013 :       }
; 1014 :       _STLP_UNWIND(this->_M_destroy_nodes(this->_M_finish._M_node + 1, __new_finish._M_node + 1))
; 1015 :     }
; 1016 :   }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 72					; 00000048H
	ret	52					; 00000034H
??$_M_insert_range_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1IABU__false_type@2@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_insert_range_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_M_insert@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1ABUforward_iterator_tag@2@@Z
_TEXT	SEGMENT
___new_finish$126133 = 8				; size = 16
___new_start$126120 = 8					; size = 16
___pos$ = 8						; size = 16
$T482733 = 24						; size = 16
$T482731 = 24						; size = 16
___first$ = 24						; size = 16
___last$ = 40						; size = 16
??$_M_insert@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1ABUforward_iterator_tag@2@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_insert<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >, COMDAT
; _this$ = esi

; 903  :                   _ForwardIterator __first, _ForwardIterator __last,
; 904  :                   const forward_iterator_tag &) {
; 905  :     size_type __n = distance(__first, __last);

	mov	edx, DWORD PTR ___first$[esp+8]
	mov	ecx, DWORD PTR ___first$[esp+4]
	sub	ecx, DWORD PTR ___first$[esp-4]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR ___last$[esp+16]
	push	edi
	mov	edi, DWORD PTR ___last$[esp+8]
	mov	ebx, ebp
	sub	ebx, edx
	sar	ebx, 2
	sub	ebx, 1
	mov	eax, edi
	sub	eax, DWORD PTR ___last$[esp+12]
	shl	ebx, 4
	sar	eax, 3
	sar	ecx, 3
	add	ebx, eax
	add	ebx, ecx

; 906  :     if (__pos._M_cur == this->_M_start._M_cur) {

	mov	ecx, DWORD PTR ___pos$[esp+8]
	cmp	ecx, DWORD PTR [esi]
	jne	$LN4@M_insert@9

; 907  :       iterator __new_start = _M_reserve_elements_at_front(__n);

	lea	edi, DWORD PTR ___new_start$126120[esp+8]
	mov	eax, esi
	call	?_M_reserve_elements_at_front@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@I@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reserve_elements_at_front

; 908  :       _STLP_TRY {
; 909  :         uninitialized_copy(__first, __last, __new_start);

	mov	edi, DWORD PTR ___new_start$126120[esp+8]
	mov	ebx, DWORD PTR ___new_start$126120[esp+12]
	mov	edx, DWORD PTR ___new_start$126120[esp+16]
	mov	ecx, DWORD PTR ___new_start$126120[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR ___last$[esp+24]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR ___last$[esp+28]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ___last$[esp+48]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___first$[esp+40]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR ___first$[esp+44]
	mov	DWORD PTR [eax+12], ebp
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+64]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+68]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	lea	eax, DWORD PTR $T482731[esp+56]
	call	??$uninitialized_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@20@0U120@@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >

; 910  :         this->_M_start = __new_start;

	mov	eax, DWORD PTR ___new_start$126120[esp+64]
	mov	ecx, DWORD PTR ___new_start$126120[esp+68]
	mov	DWORD PTR [esi], edi
	mov	DWORD PTR [esi+4], ebx
	mov	DWORD PTR [esi+8], eax
	add	esp, 48					; 00000030H
	mov	DWORD PTR [esi+12], ecx

; 924  :   }

	pop	edi
	pop	ebp
	pop	ebx
	ret	48					; 00000030H
$LN4@M_insert@9:

; 911  :       }
; 912  :       _STLP_UNWIND(this->_M_destroy_nodes(__new_start._M_node, this->_M_start._M_node))
; 913  :     }
; 914  :     else if (__pos._M_cur == this->_M_finish._M_cur) {

	cmp	ecx, DWORD PTR [esi+16]
	jne	$LN2@M_insert@9

; 915  :       iterator __new_finish = _M_reserve_elements_at_back(__n);

	lea	edi, DWORD PTR ___new_finish$126133[esp+8]
	mov	eax, esi
	call	?_M_reserve_elements_at_back@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@I@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_reserve_elements_at_back

; 916  :       _STLP_TRY {
; 917  :         uninitialized_copy(__first, __last, this->_M_finish);

	mov	edx, DWORD PTR [esi+16]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [esi+20]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [esi+28]
	mov	edx, DWORD PTR ___last$[esp+24]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR ___last$[esp+28]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ___last$[esp+48]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___first$[esp+40]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR ___first$[esp+44]
	mov	DWORD PTR [eax+12], ebp
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+64]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+68]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	lea	eax, DWORD PTR $T482733[esp+56]
	call	??$uninitialized_copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@20@0U120@@Z ; stlp_std::uninitialized_copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >

; 918  :         this->_M_finish = __new_finish;

	mov	eax, DWORD PTR ___new_finish$126133[esp+56]
	mov	ecx, DWORD PTR ___new_finish$126133[esp+60]
	mov	edx, DWORD PTR ___new_finish$126133[esp+64]
	mov	DWORD PTR [esi+16], eax
	mov	eax, DWORD PTR ___new_finish$126133[esp+68]
	mov	DWORD PTR [esi+20], ecx
	mov	DWORD PTR [esi+24], edx
	add	esp, 48					; 00000030H
	mov	DWORD PTR [esi+28], eax

; 924  :   }

	pop	edi
	pop	ebp
	pop	ebx
	ret	48					; 00000030H
$LN2@M_insert@9:

; 919  :       }
; 920  :       _STLP_UNWIND(this->_M_destroy_nodes(this->_M_finish._M_node + 1, __new_finish._M_node + 1))
; 921  :     }
; 922  :     else
; 923  :       _M_insert_range_aux(__pos, __first, __last, __n, _Movable());

	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edi
	mov	edi, DWORD PTR ___last$[esp+28]
	mov	DWORD PTR [eax+4], edi
	mov	edi, DWORD PTR ___last$[esp+32]
	mov	DWORD PTR [eax+8], edi
	mov	edi, DWORD PTR ___first$[esp+24]
	mov	DWORD PTR [eax+12], ebp
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edi
	mov	edi, DWORD PTR ___first$[esp+44]
	mov	DWORD PTR [eax+4], edi
	mov	edi, DWORD PTR ___first$[esp+48]
	mov	DWORD PTR [eax+8], edi
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___pos$[esp+48]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___pos$[esp+60]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR ___pos$[esp+68]
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], ecx
	push	esi
	mov	eax, ebx
	call	??$_M_insert_range_aux@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1IABU__false_type@2@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_insert_range_aux<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >

; 924  :   }

	pop	edi
	pop	ebp
	pop	ebx
	ret	48					; 00000030H
??$_M_insert@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1ABUforward_iterator_tag@2@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_insert<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_M_insert_dispatch@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1ABU__false_type@2@@Z
_TEXT	SEGMENT
___pos$ = 8						; size = 16
___first$ = 24						; size = 16
___last$ = 40						; size = 16
??$_M_insert_dispatch@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1ABU__false_type@2@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_insert_dispatch<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >, COMDAT
; _this$ = esi

; 765  :   void _M_insert_dispatch(iterator __pos,

	push	ecx

; 766  :                           _InputIterator __first, _InputIterator __last,
; 767  :                           const __false_type& /*_IsIntegral*/) {
; 768  :     _M_insert(__pos, __first, __last, _STLP_ITERATOR_CATEGORY(__first, _InputIterator));

	mov	ecx, DWORD PTR ___last$[esp]
	mov	edx, DWORD PTR ___last$[esp+4]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___pos$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___pos$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___pos$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___pos$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	call	??$_M_insert@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1ABUforward_iterator_tag@2@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_insert<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >
	pop	ecx

; 769  :   }

	ret	48					; 00000030H
??$_M_insert_dispatch@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1ABU__false_type@2@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_insert_dispatch<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$insert@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1@Z
_TEXT	SEGMENT
___pos$ = 8						; size = 16
___first$ = 24						; size = 16
___last$ = 40						; size = 16
??$insert@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::insert<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >, COMDAT
; _this$ = esi

; 774  :   void insert(iterator __pos, _InputIterator __first, _InputIterator __last) {

	push	ecx

; 775  :     typedef typename _IsIntegral<_InputIterator>::_Ret _Integral;
; 776  :     _M_insert_dispatch(__pos, __first, __last, _Integral());

	mov	ecx, DWORD PTR ___last$[esp]
	mov	edx, DWORD PTR ___last$[esp+4]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___last$[esp+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___last$[esp+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___first$[esp+16]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___first$[esp+20]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___first$[esp+40]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___first$[esp+44]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___pos$[esp+32]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___pos$[esp+36]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ___pos$[esp+56]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR ___pos$[esp+60]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	call	??$_M_insert_dispatch@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@IAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1ABU__false_type@2@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::_M_insert_dispatch<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >
	pop	ecx

; 777  :   }

	ret	48					; 00000030H
??$insert@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::insert<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_deque.c
_TEXT	ENDS
;	COMDAT ??4?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
___mid$125334 = -36					; size = 16
$T482848 = -20						; size = 16
$T482825 = -20						; size = 16
$T482806 = -20						; size = 16
$T482803 = -20						; size = 16
$T482802 = -20						; size = 16
??4?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z PROC ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::operator=, COMDAT
; _this$ = ebx
; ___x$ = eax

; 107  : deque<_Tp, _Alloc >::operator= (const deque<_Tp, _Alloc >& __x) {

	sub	esp, 40					; 00000028H

; 108  :   const size_type __len = size();

	mov	edx, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [ebx+8]
	push	ebp
	mov	ebp, DWORD PTR [ebx+28]
	push	esi
	mov	esi, eax
	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR $T482825[esp+52], eax
	mov	eax, DWORD PTR [ebx+16]
	sub	eax, DWORD PTR [ebx+20]
	push	edi
	mov	edi, DWORD PTR [ebx+12]
	sub	ebp, edi
	sar	ebp, 2
	sub	ebp, 1
	sar	eax, 3
	shl	ebp, 4
	sub	ecx, edx
	add	eax, ebp
	sar	ecx, 3
	add	eax, ecx

; 109  :   if (&__x != this) {

	cmp	esi, ebx
	je	$LN50@operator@124

; 110  :     if (__len >= __x.size())

	mov	edi, DWORD PTR [esi+12]
	mov	ebp, DWORD PTR [esi+28]
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR $T482848[esp+64], edi
	sub	ebp, DWORD PTR $T482848[esp+64]
	mov	edi, DWORD PTR [esi+16]
	sub	edi, DWORD PTR [esi+20]
	sar	ebp, 2
	mov	DWORD PTR $T482848[esp+56], ecx
	mov	ecx, DWORD PTR [esi+8]
	sub	ebp, 1
	sar	edi, 3
	shl	ebp, 4
	sub	ecx, edx
	add	edi, ebp
	sar	ecx, 3
	add	edi, ecx
	cmp	eax, edi
	jb	$LN2@operator@124

; 111  :       erase(copy(__x.begin(), __x.end(), this->_M_start), this->_M_finish);

	mov	edx, DWORD PTR [ebx+16]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ebx+20]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [ebx+24]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ebx+28]
	mov	DWORD PTR [eax+12], ecx
	mov	edx, DWORD PTR [ebx]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [ebx+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [ebx+8]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR [ebx+12]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR [esi+16]
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [esi+20]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [esi+24]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR [esi]
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [esi+8]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR [esi+12]
	mov	DWORD PTR [ecx+12], edx
	call	??$copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@20@0U120@@Z ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >
	add	esp, 48					; 00000030H
	lea	esi, DWORD PTR $T482802[esp+84]
	mov	eax, ebx
	call	?erase@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAE?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@U423@0@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::erase

; 116  :     }
; 117  :   }
; 118  :   return *this;

	mov	eax, ebx

; 119  : }

	pop	edi
	pop	esi
	pop	ebp
	add	esp, 40					; 00000028H
	ret	0
$LN2@operator@124:

; 112  :     else {
; 113  :       const_iterator __mid = __x.begin() + difference_type(__len);

	mov	ecx, edx
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR $T482803[esp+52], ecx
	mov	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR $T482803[esp+56], edx
	mov	edx, DWORD PTR [esi+12]
	push	eax
	lea	edi, DWORD PTR ___mid$125334[esp+56]
	lea	eax, DWORD PTR $T482803[esp+56]
	mov	DWORD PTR $T482803[esp+64], ecx
	mov	DWORD PTR $T482803[esp+68], edx
	call	??H?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@QBE?AU012@H@Z ; stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >::operator+

; 114  :       copy(__x.begin(), __mid, this->_M_start);

	mov	ecx, DWORD PTR [ebx]
	mov	edi, DWORD PTR ___mid$125334[esp+52]
	mov	ebp, DWORD PTR ___mid$125334[esp+56]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [ebx+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ebx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [ebx+12]
	mov	ecx, DWORD PTR ___mid$125334[esp+76]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___mid$125334[esp+80]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], ebp
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR [esi+4]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [esi+12]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	lea	eax, DWORD PTR $T482806[esp+100]
	call	??$copy@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@23@@stlp_std@@YA?AU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@priv@0@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@20@0U120@@Z ; stlp_std::copy<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> >,stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Nonconst_traits<CStatGraph::SElement> > >

; 115  :       insert(this->_M_finish, __mid, __x.end());

	mov	ecx, DWORD PTR [esi+16]
	mov	edx, DWORD PTR [esi+20]
	add	esp, 32					; 00000020H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [esi+24]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ___mid$125334[esp+76]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR ___mid$125334[esp+80]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], ebp
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [ebx+16]
	mov	DWORD PTR [eax+12], edx
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [ebx+20]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ebx+24]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [ebx+28]
	mov	esi, ebx
	mov	DWORD PTR [eax+12], edx
	call	??$insert@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@priv@stlp_std@@@?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEXU?$_Deque_iterator@USElement@CStatGraph@@U?$_Nonconst_traits@USElement@CStatGraph@@@stlp_std@@@12@U?$_Deque_iterator@USElement@CStatGraph@@U?$_Const_traits@USElement@CStatGraph@@@stlp_std@@@12@1@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::insert<stlp_std::priv::_Deque_iterator<CStatGraph::SElement,stlp_std::_Const_traits<CStatGraph::SElement> > >
$LN50@operator@124:

; 119  : }

	pop	edi
	pop	esi
	mov	eax, ebx
	pop	ebp
	add	esp, 40					; 00000028H
	ret	0
??4?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z ENDP ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::operator=
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_deque.h
_TEXT	ENDS
;	COMDAT ??4?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
??4?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAEAAV01@ABV01@@Z PROC ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::operator=, COMDAT
; _this$ = ecx
; ___x$ = eax

; 215  :   _Self& operator= (const _Self& __x) { _M_impl = __x._M_impl; return *this; }

	push	ebx
	mov	ebx, ecx
	call	??4?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::operator=
	mov	eax, ebx
	pop	ebx
	ret	0
??4?$deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@stlp_std@@QAEAAV01@ABV01@@Z ENDP ; stlp_std::deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::operator=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??4?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
??4?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QAEAAV0@ABV0@@Z PROC ; xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::operator=, COMDAT
; _this$ = ecx
; ___that$ = eax
	push	ebx
	mov	ebx, ecx
	call	??4?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::operator=
	mov	eax, ebx
	pop	ebx
	ret	0
??4?$xr_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@@QAEAAV0@ABV0@@Z ENDP ; xr_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::operator=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??4SSubGraph@CStatGraph@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
??4SSubGraph@CStatGraph@@QAEAAU01@ABU01@@Z PROC		; CStatGraph::SSubGraph::operator=, COMDAT
; _this$ = esi
; ___that$ = eax
	mov	ecx, DWORD PTR [eax]
	push	ebx
	add	eax, 4
	lea	ebx, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], ecx
	call	??4?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::operator=
	mov	eax, esi
	pop	ebx
	ret	0
??4SSubGraph@CStatGraph@@QAEAAU01@ABU01@@Z ENDP		; CStatGraph::SSubGraph::operator=
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_algobase.h
_TEXT	ENDS
;	COMDAT ??$__copy@PBUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABUrandom_access_iterator_tag@1@PAH@Z
_TEXT	SEGMENT
___result$ = 8						; size = 4
??$__copy@PBUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABUrandom_access_iterator_tag@1@PAH@Z PROC ; stlp_std::priv::__copy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *,int>, COMDAT
; ___first$ = ecx
; ___last$ = eax

; 200  :        _OutputIter __result, const random_access_iterator_tag &, _Distance*) {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 201  :   for (_Distance __n = __last - __first; __n > 0; --__n) {

	sub	eax, edi
	mov	ecx, eax
	mov	eax, 780903145				; 2e8ba2e9H
	imul	ecx
	sar	edx, 3
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	test	esi, esi
	jle	SHORT $LN14@copy@29
$LL3@copy@29:

; 202  :     *__result = *__first;

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR ___result$[ebp]
	mov	DWORD PTR [ecx], eax
	lea	eax, DWORD PTR [edi+4]
	lea	ebx, DWORD PTR [ecx+4]
	call	??4?$_Impl_deque@USElement@CStatGraph@@V?$xalloc@USElement@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SElement,xalloc<CStatGraph::SElement> >::operator=

; 203  :     ++__first;
; 204  :     ++__result;

	add	DWORD PTR ___result$[ebp], 44		; 0000002cH
	sub	esi, 1
	add	edi, 44					; 0000002cH
	test	esi, esi
	jg	SHORT $LL3@copy@29
$LN14@copy@29:

; 205  :   }
; 206  :   return __result;

	mov	eax, DWORD PTR ___result$[ebp]

; 207  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$__copy@PBUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABUrandom_access_iterator_tag@1@PAH@Z ENDP ; stlp_std::priv::__copy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *,int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$__copy_ptrs@PBUSSubGraph@CStatGraph@@PAU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABU__false_type@1@@Z
_TEXT	SEGMENT
___last$ = 8						; size = 4
??$__copy_ptrs@PBUSSubGraph@CStatGraph@@PAU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABU__false_type@1@@Z PROC ; stlp_std::priv::__copy_ptrs<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *>, COMDAT
; ___first$ = ecx
; ___result$ = eax

; 250  :   return __copy(__first, __last, __result, random_access_iterator_tag(), (ptrdiff_t*)0);

	push	eax
	mov	eax, DWORD PTR ___last$[esp]
	call	??$__copy@PBUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__copy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *,int>
	add	esp, 4

; 251  : }

	ret	0
??$__copy_ptrs@PBUSSubGraph@CStatGraph@@PAU12@@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABU__false_type@1@@Z ENDP ; stlp_std::priv::__copy_ptrs<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *>
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\_vector.c
_TEXT	ENDS
;	COMDAT ??4?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
tv323 = -4						; size = 4
___result$483098 = 8					; size = 4
___x$ = 8						; size = 4
??4?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z PROC ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::operator=, COMDAT
; _this$ = esi

; 177  : vector<_Tp, _Alloc>& vector<_Tp, _Alloc>::operator = (const vector<_Tp, _Alloc>& __x) {

	push	ecx

; 178  :   if (&__x != this) {

	mov	eax, DWORD PTR ___x$[esp]
	cmp	eax, esi
	push	ebx
	push	ebp
	push	edi
	je	$LN83@operator@125

; 179  :     const size_type __xlen = __x.size();

	mov	ecx, DWORD PTR [eax+4]
	mov	ebx, DWORD PTR [eax]

; 180  :     if (__xlen > capacity()) {

	mov	ebp, DWORD PTR [esi]
	mov	DWORD PTR tv323[esp+16], ecx
	sub	ecx, ebx
	mov	eax, 780903145				; 2e8ba2e9H
	imul	ecx
	mov	ecx, DWORD PTR [esi+8]
	sar	edx, 3
	mov	edi, edx
	shr	edi, 31					; 0000001fH
	add	edi, edx
	sub	ecx, ebp
	mov	eax, 780903145				; 2e8ba2e9H
	imul	ecx
	sar	edx, 3
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	edi, eax
	jbe	SHORT $LN4@operator@125

; 181  :       size_type __len = __xlen;
; 182  :       pointer __tmp = _M_allocate_and_copy(__len, __CONST_CAST(const_pointer, __x._M_start) + 0,
; 183  :                                                   __CONST_CAST(const_pointer, __x._M_finish) + 0);

	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	mov	ebp, edi
	imul	ebp, 44					; 0000002cH
	push	ebp
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	push	eax
	mov	DWORD PTR ___result$483098[esp+16], eax
	mov	eax, DWORD PTR tv323[esp+20]
	push	ebx
	call	??$__ucopy@PBUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *,int>

; 184  :       _M_clear();

	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi]
	add	esp, 4
	mov	edx, esp
	mov	DWORD PTR [edx], eax
	push	ecx
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	call	??$__destroy_range_aux@V?$reverse_iterator@PAUSSubGraph@CStatGraph@@@stlp_std@@USSubGraph@CStatGraph@@@stlp_std@@YAXV?$reverse_iterator@PAUSSubGraph@CStatGraph@@@0@0PAUSSubGraph@CStatGraph@@ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<stlp_std::reverse_iterator<CStatGraph::SSubGraph *>,CStatGraph::SSubGraph>
	mov	eax, DWORD PTR [esi]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN64@operator@125
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN64@operator@125:

; 185  :       this->_M_start = __tmp;

	mov	eax, DWORD PTR ___result$483098[esp+12]

; 196  :     }
; 197  :     this->_M_finish = this->_M_start + __xlen;

	imul	edi, 44					; 0000002cH
	add	ebp, eax
	add	edi, eax
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+8], ebp
	mov	DWORD PTR [esi+4], edi

; 198  :   }
; 199  :   return *this;

	mov	eax, esi

; 200  : }

	pop	edi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	4
$LN4@operator@125:

; 186  :       this->_M_end_of_storage._M_data = this->_M_start + __len;
; 187  :     } else if (size() >= __xlen) {

	mov	ecx, DWORD PTR [esi+4]
	sub	ecx, ebp
	mov	eax, 780903145				; 2e8ba2e9H
	imul	ecx
	sar	edx, 3
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	eax, edi

; 188  :       pointer __i = _STLP_PRIV __copy_ptrs(__CONST_CAST(const_pointer, __x._M_start) + 0,
; 189  :                                            __CONST_CAST(const_pointer, __x._M_finish) + 0, this->_M_start, _TrivialCopy());

	push	ebp
	mov	ecx, ebx
	jb	SHORT $LN2@operator@125
	mov	eax, DWORD PTR tv323[esp+20]
	call	??$__copy@PBUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__copy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *,int>

; 190  :       _STLP_STD::_Destroy_Range(__i, this->_M_finish);

	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	push	eax
	call	??$__destroy_range_aux@PAUSSubGraph@CStatGraph@@U12@@stlp_std@@YAXPAUSSubGraph@CStatGraph@@00ABU__false_type@0@@Z ; stlp_std::__destroy_range_aux<CStatGraph::SSubGraph *,CStatGraph::SSubGraph>

; 196  :     }
; 197  :     this->_M_finish = this->_M_start + __xlen;

	imul	edi, 44					; 0000002cH
	add	esp, 12					; 0000000cH
	add	edi, DWORD PTR [esi]

; 198  :   }
; 199  :   return *this;

	mov	eax, esi
	mov	DWORD PTR [esi+4], edi

; 200  : }

	pop	edi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	4
$LN2@operator@125:

; 191  :     } else {
; 192  :       _STLP_PRIV __copy_ptrs(__CONST_CAST(const_pointer, __x._M_start),
; 193  :                              __CONST_CAST(const_pointer, __x._M_start) + size(), this->_M_start, _TrivialCopy());

	imul	eax, 44					; 0000002cH
	add	eax, ebx
	call	??$__copy@PBUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__copy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *,int>

; 194  :       _STLP_PRIV __ucopy_ptrs(__CONST_CAST(const_pointer, __x._M_start) + size(),
; 195  :                               __CONST_CAST(const_pointer, __x._M_finish) + 0, this->_M_finish, _TrivialUCopy());

	mov	eax, DWORD PTR [esi+4]
	push	eax
	sub	eax, DWORD PTR [esi]
	mov	ecx, eax
	mov	eax, 780903145				; 2e8ba2e9H
	imul	ecx
	sar	edx, 3
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	ecx, eax
	mov	eax, DWORD PTR ___x$[esp+20]
	imul	ecx, 44					; 0000002cH
	add	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	push	ecx
	call	??$__ucopy@PBUSSubGraph@CStatGraph@@PAU12@H@priv@stlp_std@@YAPAUSSubGraph@CStatGraph@@PBU23@0PAU23@ABUrandom_access_iterator_tag@1@PAH@Z ; stlp_std::priv::__ucopy<CStatGraph::SSubGraph const *,CStatGraph::SSubGraph *,int>

; 196  :     }
; 197  :     this->_M_finish = this->_M_start + __xlen;

	imul	edi, 44					; 0000002cH
	add	esp, 12					; 0000000cH
	add	edi, DWORD PTR [esi]
	mov	DWORD PTR [esi+4], edi
$LN83@operator@125:

; 200  : }

	pop	edi
	pop	ebp
	mov	eax, esi
	pop	ebx
	pop	ecx
	ret	4
??4?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z ENDP ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::operator=
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\sdk\include\stlport\stl\pointers\_vector.h
_TEXT	ENDS
;	COMDAT ??4?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
??4?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAEAAV01@ABV01@@Z PROC ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::operator=, COMDAT
; _this$ = ecx
; ___x$ = eax

; 149  :   _Self& operator=(const _Self& __x) { _M_impl = __x._M_impl; return *this; }

	push	esi
	mov	esi, ecx
	push	eax
	call	??4?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::operator=
	mov	eax, esi
	pop	esi
	ret	0
??4?$vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@stlp_std@@QAEAAV01@ABV01@@Z ENDP ; stlp_std::vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::operator=
_TEXT	ENDS
PUBLIC	??0CStatGraph@@QAE@XZ				; CStatGraph::CStatGraph
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\statgraph.cpp
;	COMDAT ??0CStatGraph@@QAE@XZ
_TEXT	SEGMENT
_I$483510 = -12						; size = 12
??0CStatGraph@@QAE@XZ PROC				; CStatGraph::CStatGraph, COMDAT
; _this$ = ecx

; 8    : {

	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR __imp_?RenderFactory@@3PAVIRenderFactory@@A
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR [edi], OFFSET ??_7CStatGraph@@6B@
	xor	ebx, ebx
	mov	DWORD PTR [edi+4], ebx
	mov	DWORD PTR [edi+8], ebx
	mov	DWORD PTR [edi+12], ebx
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	lea	esi, DWORD PTR [edi+80]
	mov	DWORD PTR [edi+76], eax
	mov	DWORD PTR [esi], ebx
	mov	DWORD PTR [esi+4], ebx
	mov	DWORD PTR [esi+8], ebx
	mov	DWORD PTR [esi+12], ebx
	mov	DWORD PTR [esi+16], ebx
	mov	DWORD PTR [esi+20], ebx
	mov	DWORD PTR [esi+24], ebx
	mov	DWORD PTR [esi+28], ebx
	mov	DWORD PTR [esi+32], ebx
	push	ebx
	mov	DWORD PTR [esi+36], ebx
	call	?_M_initialize_map@?$_Deque_base@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@IAEXI@Z ; stlp_std::priv::_Deque_base<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::_M_initialize_map

; 9    : 	Device.seqRender.Add		(this,REG_PRIORITY_LOW-1000);

	lea	ecx, DWORD PTR _I$483510[esp+24]
	push	ecx
	mov	ecx, OFFSET ?Device@@3VCRenderDevice@@A+648
	mov	DWORD PTR _I$483510[esp+28], edi
	mov	DWORD PTR _I$483510[esp+32], 286330153	; 11110d29H
	mov	DWORD PTR _I$483510[esp+36], ebx
	call	?push_back@?$vector@U_REG_INFO@@V?$xalloc@U_REG_INFO@@@@@stlp_std@@QAEXABU_REG_INFO@@@Z ; stlp_std::vector<_REG_INFO,xalloc<_REG_INFO> >::push_back
	test	BYTE PTR ?Device@@3VCRenderDevice@@A+660, 1
	je	SHORT $LN52@CStatGraph@2
	or	DWORD PTR ?Device@@3VCRenderDevice@@A+660, 2
	jmp	SHORT $LN51@CStatGraph@2
$LN52@CStatGraph@2:
	mov	esi, OFFSET ?Device@@3VCRenderDevice@@A+648
	call	?Resort@?$CRegistrator@VpureRender@@@@QAEXXZ ; CRegistrator<pureRender>::Resort
$LN51@CStatGraph@2:

; 10   : 	OnDeviceCreate();

	mov	ecx, DWORD PTR [edi+76]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 11   : 	mn					= 0;

	xorps	xmm0, xmm0

; 12   : 	mx					= 1;
; 13   : 	max_item_count		= 1;
; 14   : 	lt.set				(0,0);

	push	ebx
	movss	DWORD PTR [edi+16], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	push	ebx
	lea	ecx, DWORD PTR [edi+28]
	movss	DWORD PTR [edi+20], xmm0
	mov	DWORD PTR [edi+24], 1
	call	?set@?$_vector2@H@@QAEAAU1@HH@Z		; _vector2<int>::set

; 15   : 	rb.set				(200,200);

	push	200					; 000000c8H
	push	200					; 000000c8H
	lea	ecx, DWORD PTR [edi+36]
	call	?set@?$_vector2@H@@QAEAAU1@HH@Z		; _vector2<int>::set

; 16   : 	grid.set			(1,1);

	push	1
	push	1
	lea	ecx, DWORD PTR [edi+44]
	call	?set@?$_vector2@H@@QAEAAU1@HH@Z		; _vector2<int>::set

; 17   : 	grid_color			= 0xFF000000;
; 18   : 	rect_color			= 0xFF000000;
; 19   : 	grid_step.set		(1, 1);

	movss	xmm0, DWORD PTR __real@3f800000
	mov	eax, -16777216				; ff000000H
	mov	DWORD PTR [edi+60], eax
	mov	DWORD PTR [edi+68], eax

; 20   : 
; 21   : 	AppendSubGraph(stCurve);

	push	1
	mov	ecx, edi
	movss	DWORD PTR [edi+52], xmm0
	movss	DWORD PTR [edi+56], xmm0
	call	?AppendSubGraph@CStatGraph@@QAEIW4EStyle@1@@Z ; CStatGraph::AppendSubGraph

; 22   : }

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	0
??0CStatGraph@@QAE@XZ ENDP				; CStatGraph::CStatGraph
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??4?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
??4?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QAEAAV0@ABV0@@Z PROC ; xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::operator=, COMDAT
; _this$ = ecx
; ___that$ = eax
	push	esi
	mov	esi, ecx
	push	eax
	call	??4?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::operator=
	mov	eax, esi
	pop	esi
	ret	0
??4?$xr_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@@QAEAAV0@ABV0@@Z ENDP ; xr_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::operator=
_TEXT	ENDS
PUBLIC	??4CStatGraph@@QAEAAV0@ABV0@@Z			; CStatGraph::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4CStatGraph@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CStatGraph@@QAEAAV0@ABV0@@Z PROC			; CStatGraph::operator=, COMDAT
; _this$ = ecx
	push	ebx
	mov	ebx, DWORD PTR ___that$[esp]
	push	esi
	push	edi
	mov	edi, ecx
	lea	eax, DWORD PTR [ebx+4]
	push	eax
	lea	esi, DWORD PTR [edi+4]
	call	??4?$_Impl_vector@USSubGraph@CStatGraph@@V?$xalloc@USSubGraph@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z ; stlp_std::priv::_Impl_vector<CStatGraph::SSubGraph,xalloc<CStatGraph::SSubGraph> >::operator=
	fld	DWORD PTR [ebx+16]
	fstp	DWORD PTR [edi+16]
	fld	DWORD PTR [ebx+20]
	fstp	DWORD PTR [edi+20]
	mov	ecx, DWORD PTR [ebx+24]
	mov	DWORD PTR [edi+24], ecx
	mov	edx, DWORD PTR [ebx+28]
	mov	DWORD PTR [edi+28], edx
	mov	eax, DWORD PTR [ebx+32]
	mov	DWORD PTR [edi+32], eax
	mov	ecx, DWORD PTR [ebx+36]
	mov	DWORD PTR [edi+36], ecx
	mov	edx, DWORD PTR [ebx+40]
	mov	DWORD PTR [edi+40], edx
	mov	eax, DWORD PTR [ebx+44]
	mov	DWORD PTR [edi+44], eax
	mov	ecx, DWORD PTR [ebx+48]
	mov	DWORD PTR [edi+48], ecx
	mov	edx, DWORD PTR [ebx+52]
	mov	DWORD PTR [edi+52], edx
	mov	eax, DWORD PTR [ebx+56]
	mov	DWORD PTR [edi+56], eax
	mov	ecx, DWORD PTR [ebx+60]
	mov	DWORD PTR [edi+60], ecx
	mov	edx, DWORD PTR [ebx+64]
	mov	DWORD PTR [edi+64], edx
	mov	eax, DWORD PTR [ebx+68]
	mov	DWORD PTR [edi+68], eax
	mov	ecx, DWORD PTR [ebx+72]
	mov	DWORD PTR [edi+72], ecx
	mov	ecx, DWORD PTR [edi+76]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ebx+76]
	mov	edx, DWORD PTR [edx+4]
	push	eax
	call	edx
	lea	ecx, DWORD PTR [edi+80]
	lea	eax, DWORD PTR [ebx+80]
	push	ecx
	call	??4?$_Impl_deque@USMarker@CStatGraph@@V?$xalloc@USMarker@CStatGraph@@@@@priv@stlp_std@@QAEAAV012@ABV012@@Z ; stlp_std::priv::_Impl_deque<CStatGraph::SMarker,xalloc<CStatGraph::SMarker> >::operator=
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
	ret	4
??4CStatGraph@@QAEAAV0@ABV0@@Z ENDP			; CStatGraph::operator=
END
