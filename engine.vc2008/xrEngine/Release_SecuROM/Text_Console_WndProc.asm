; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\CLEARSKY\sources\engine\xrEngine\Text_Console_WndProc.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

EXTRN	__imp__DefWindowProcA@16:PROC
PUBLIC	?TextConsole_WndProc@@YGJPAUHWND__@@IIJ@Z	; TextConsole_WndProc
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrengine\text_console_wndproc.cpp
;	COMDAT ?TextConsole_WndProc@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?TextConsole_WndProc@@YGJPAUHWND__@@IIJ@Z PROC		; TextConsole_WndProc, COMDAT

; 6    : 	switch(uMsg)
; 7    : 	{
; 8    : 	case WM_PAINT:
; 9    : 		{			
; 10   : //			return 0;
; 11   : 		}break;
; 12   : 	case  WM_ERASEBKGND:
; 13   : 		{
; 14   : 			int x=0;
; 15   : 			x=x;
; 16   : //			CTextConsole* pTextConsole = (CTextConsole*)Console;
; 17   : //			pTextConsole->OnPaint();
; 18   : //			return 1;
; 19   : 		}break;
; 20   : 	case WM_NCPAINT :
; 21   : 		{
; 22   : //			CTextConsole* pTextConsole = (CTextConsole*)Console;
; 23   : //			pTextConsole->OnPaint();
; 24   : 			int x=0;
; 25   : 			x=x;
; 26   : //			return 0;
; 27   : 		}break;
; 28   : 	default:
; 29   : 		break;
; 30   : 	}
; 31   : 	return DefWindowProc(hWnd,uMsg,wParam,lParam);

	jmp	DWORD PTR __imp__DefWindowProcA@16
?TextConsole_WndProc@@YGJPAUHWND__@@IIJ@Z ENDP		; TextConsole_WndProc
PUBLIC	?TextConsole_LogWndProc@@YGJPAUHWND__@@IIJ@Z	; TextConsole_LogWndProc
; Function compile flags: /Ogtpy
;	COMDAT ?TextConsole_LogWndProc@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?TextConsole_LogWndProc@@YGJPAUHWND__@@IIJ@Z PROC	; TextConsole_LogWndProc, COMDAT

; 36   : 	switch(uMsg)

	mov	eax, DWORD PTR _uMsg$[esp-4]
	cmp	eax, 15					; 0000000fH
	je	SHORT $LN2@TextConsol
	cmp	eax, 20					; 00000014H
	je	SHORT $LN3@TextConsol

; 46   : 		}break;
; 47   : 	default:
; 48   : 		break;
; 49   : 	}
; 50   : 	return DefWindowProc(hWnd,uMsg,wParam,lParam);

	mov	DWORD PTR _uMsg$[esp-4], eax
	jmp	DWORD PTR __imp__DefWindowProcA@16
$LN3@TextConsol:

; 37   : 	{
; 38   : 	case WM_ERASEBKGND:
; 39   : 		return (LRESULT)1; // Say we handled it.

	mov	eax, 1

; 51   : }

	ret	16					; 00000010H
$LN2@TextConsol:

; 40   : 
; 41   : 	case WM_PAINT:
; 42   : 		{
; 43   : 			CTextConsole* pTextConsole = (CTextConsole*)Console;
; 44   : 			pTextConsole->OnPaint();

	mov	ecx, DWORD PTR ?Console@@3PAVCConsole@@A ; Console
	call	?OnPaint@CTextConsole@@QAEXXZ		; CTextConsole::OnPaint

; 45   : 			return (LRESULT)0; // Say we handled it.

	xor	eax, eax

; 51   : }

	ret	16					; 00000010H
?TextConsole_LogWndProc@@YGJPAUHWND__@@IIJ@Z ENDP	; TextConsole_LogWndProc
END
