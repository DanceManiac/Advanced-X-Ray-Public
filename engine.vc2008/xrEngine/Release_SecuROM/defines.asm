; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	D:\CLEARSKY\sources\engine\xrEngine\defines.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??$xr_free@X@@YAXAAPAX@Z			; xr_free<void>
PUBLIC	?psCurrentVidMode@@3PAIA			; psCurrentVidMode
PUBLIC	?psCurrentBPP@@3IA				; psCurrentBPP
PUBLIC	?psDeviceFlags@@3U?$_flags@I@@A			; psDeviceFlags
PUBLIC	?psTextureLOD@@3HA				; psTextureLOD
PUBLIC	?nParticleLevel@@3HA				; nParticleLevel
EXTRN	__imp_?mem_alloc@xrMemory@@QAEPAXI@Z:PROC
EXTRN	__imp_?mem_free@xrMemory@@QAEXPAX@Z:PROC
EXTRN	__imp_?Memory@@3VxrMemory@@A:BYTE
?nParticleLevel@@3HA DD 01H DUP (?)			; nParticleLevel
?psCurrentVidMode@@3PAIA DD 0400H			; psCurrentVidMode
	DD	0300H
?psCurrentBPP@@3IA DD 020H				; psCurrentBPP
?psDeviceFlags@@3U?$_flags@I@@A DD 01c6c1H		; psDeviceFlags
?psTextureLOD@@3HA DD 01H				; psTextureLOD
PUBLIC	??2@YAPAXI@Z					; operator new
; Function compile flags: /Ogtpy
; File d:\clearsky\sources\engine\xrcore\xrmemory.h
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
??2@YAPAXI@Z PROC					; operator new, COMDAT
; _size$ = eax

; 128  : 	IC void*	operator new		(size_t size)		{	return Memory.mem_alloc(size?size:1);				}

	test	eax, eax
	jne	SHORT $LN4@operator@8
	mov	eax, 1
$LN4@operator@8:
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_alloc@xrMemory@@QAEPAXI@Z
	ret	0
??2@YAPAXI@Z ENDP					; operator new
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$xr_free@X@@YAXAAPAX@Z
_TEXT	SEGMENT
??$xr_free@X@@YAXAAPAX@Z PROC				; xr_free<void>, COMDAT
; _P$ = esi

; 111  : 	IC void		xr_free		(T* &P)					{	if (P) { Memory.mem_free((void*)P); P=NULL;	};	}

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN1@xr_free@56
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
	mov	DWORD PTR [esi], 0
$LN1@xr_free@56:
	ret	0
??$xr_free@X@@YAXAAPAX@Z ENDP				; xr_free<void>
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
; Function compile flags: /Ogtpy
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3@YAXPAX@Z PROC					; operator delete, COMDAT

; 129  : 	IC void		operator delete		(void *p)			{	xr_free(p);											}

	mov	eax, DWORD PTR _p$[esp-4]
	test	eax, eax
	je	SHORT $LN3@operator@9
	mov	ecx, DWORD PTR __imp_?Memory@@3VxrMemory@@A
	push	eax
	call	DWORD PTR __imp_?mem_free@xrMemory@@QAEXPAX@Z
$LN3@operator@9:
	ret	0
??3@YAXPAX@Z ENDP					; operator delete
END
